setTimeout(()=>{
    var Kfe = Object.defineProperty;
    var Wfe = (zi, Ko, lt) =>
        Ko in zi
            ? Kfe(zi, Ko, {
                enumerable: !0,
                configurable: !0,
                writable: !0,
                value: lt,
            })
            : (zi[Ko] = lt);
    var w = (zi, Ko, lt) => (Wfe(zi, typeof Ko != "symbol" ? Ko + "" : Ko, lt), lt);
    (function () {
        "use strict";
        var et,
            V2,
            K2,
            W2,
            Y2,
            G2,
            X2,
            q2,
            Z2,
            Q2,
            J2,
            e_,
            t_,
            n_,
            r_,
            o_,
            i_,
            a_,
            s_,
            l_,
            c_,
            UM,
            HM,
            VM,
            KM,
            WM,
            YM,
            GM,
            XM,
            qM,
            ZM,
            QM;
        var zi = document.createElement("style");
        (zi.textContent = `@import"https://fonts.googleapis.com/css2?family=Inter:wght@400;500&display=swap";.tl-container{font-size:12px;--space-1: 2px;--space-2: 4px;--space-3: 8px;--space-4: 12px;--space-5: 16px;--space-6: 20px;--space-7: 28px;--space-8: 32px;--space-9: 64px;--space-10: 72px;--radius-0: 2px;--radius-1: 4px;--radius-2: 6px;--radius-3: 9px;--radius-4: 13px;--layer-background: 100;--layer-grid: 150;--layer-canvas: 200;--layer-shapes: 300;--layer-overlays: 400;--layer-following-indicator: 1000;--tl-zoom: 1;--tl-dpr-multiple: 100;--tl-dpr-multiple-px: calc(var(--tl-dpr-multiple) * 1px);--tl-cursor-none: none;--tl-cursor-default: url("data:image/svg+xml,<svg height='32' width='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' style='color: black;'><defs><filter id='shadow' y='-40%' x='-40%' width='180px' height='180%' color-interpolation-filters='sRGB'><feDropShadow dx='1' dy='1' stdDeviation='1.2' flood-opacity='.5'/></filter></defs><g fill='none' transform='rotate(0 16 16)' filter='url(%23shadow)'><path d='m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z' fill='white'/><path d='m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z' fill='white'/><path d='m19.751 24.4155-1.844.774-3.1-7.374 1.841-.775z' fill='black'/><path d='m13 10.814v11.188l2.969-2.866.428-.139h4.768z' fill='black'/></g></svg>") 12 8, default;--tl-cursor-pointer: url("data:image/svg+xml,<svg height='32' width='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' style='color: black;'><defs><filter id='shadow' y='-40%' x='-40%' width='180px' height='180%' color-interpolation-filters='sRGB'><feDropShadow dx='1' dy='1' stdDeviation='1.2' flood-opacity='.5'/></filter></defs><g fill='none' transform='rotate(0 16 16)' filter='url(%23shadow)'><path d='m13.3315 21.3799c-.284-.359-.629-1.093-1.243-1.984-.348-.504-1.211-1.453-1.468-1.935-.223-.426-.199-.617-.146-.97.094-.628.738-1.117 1.425-1.051.519.049.959.392 1.355.716.239.195.533.574.71.788.163.196.203.277.377.509.23.307.302.459.214.121-.071-.496-.187-1.343-.355-2.092-.128-.568-.159-.657-.281-1.093-.129-.464-.195-.789-.316-1.281-.084-.348-.235-1.059-.276-1.459-.057-.547-.087-1.439.264-1.849.275-.321.906-.418 1.297-.22.512.259.803 1.003.936 1.3.239.534.387 1.151.516 1.961.164 1.031.466 2.462.476 2.763.024-.369-.068-1.146-.004-1.5.058-.321.328-.694.666-.795.286-.085.621-.116.916-.055.313.064.643.288.766.499.362.624.369 1.899.384 1.831.086-.376.071-1.229.284-1.584.14-.234.497-.445.687-.479.294-.052.655-.068.964-.008.249.049.586.345.677.487.218.344.342 1.317.379 1.658.015.141.074-.392.293-.736.406-.639 1.843-.763 1.898.639.025.654.02.624.02 1.064 0 .517-.012.828-.04 1.202-.031.4-.117 1.304-.242 1.742-.086.301-.371.978-.652 1.384 0 0-1.074 1.25-1.191 1.813-.118.562-.079.566-.102.965-.023.398.121.922.121.922s-.802.104-1.234.035c-.391-.063-.875-.841-1-1.079-.172-.328-.539-.265-.682-.023-.225.383-.709 1.07-1.051 1.113-.668.084-2.054.031-3.139.02 0 0 .185-1.011-.227-1.358-.305-.259-.83-.784-1.144-1.06z' fill='white'/><g stroke='black' stroke-linecap='round' stroke-width='.75'><path d='m13.3315 21.3799c-.284-.359-.629-1.093-1.243-1.984-.348-.504-1.211-1.453-1.468-1.935-.223-.426-.199-.617-.146-.97.094-.628.738-1.117 1.425-1.051.519.049.959.392 1.355.716.239.195.533.574.71.788.163.196.203.277.377.509.23.307.302.459.214.121-.071-.496-.187-1.343-.355-2.092-.128-.568-.159-.657-.281-1.093-.129-.464-.195-.789-.316-1.281-.084-.348-.235-1.059-.276-1.459-.057-.547-.087-1.439.264-1.849.275-.321.906-.418 1.297-.22.512.259.803 1.003.936 1.3.239.534.387 1.151.516 1.961.164 1.031.466 2.462.476 2.763.024-.369-.068-1.146-.004-1.5.058-.321.328-.694.666-.795.286-.085.621-.116.916-.055.313.064.643.288.766.499.362.624.369 1.899.384 1.831.086-.376.071-1.229.284-1.584.14-.234.497-.445.687-.479.294-.052.655-.068.964-.008.249.049.586.345.677.487.218.344.342 1.317.379 1.658.015.141.074-.392.293-.736.406-.639 1.843-.763 1.898.639.025.654.02.624.02 1.064 0 .517-.012.828-.04 1.202-.031.4-.117 1.304-.242 1.742-.086.301-.371.978-.652 1.384 0 0-1.074 1.25-1.191 1.813-.118.562-.079.566-.102.965-.023.398.121.922.121.922s-.802.104-1.234.035c-.391-.063-.875-.841-1-1.079-.172-.328-.539-.265-.682-.023-.225.383-.709 1.07-1.051 1.113-.668.084-2.054.031-3.139.02 0 0 .185-1.011-.227-1.358-.305-.259-.83-.784-1.144-1.06z' stroke-linejoin='round'/><path d='m21.5664 21.7344v-3.459'/><path d='m19.5508 21.7461-.016-3.473'/><path d='m17.5547 18.3047.021 3.426'/></g></g></svg>") 14 10, pointer;--tl-cursor-cross: url("data:image/svg+xml,<svg height='32' width='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' style='color: black;'><defs><filter id='shadow' y='-40%' x='-40%' width='180px' height='180%' color-interpolation-filters='sRGB'><feDropShadow dx='1' dy='1' stdDeviation='1.2' flood-opacity='.5'/></filter></defs><g fill='none' transform='rotate(0 16 16)' filter='url(%23shadow)'><path d='m25 16h-6.01v-6h-2.98v6h-6.01v3h6.01v6h2.98v-6h6.01z' fill='white'/><path d='m23.9902 17.0103h-6v-6.01h-.98v6.01h-6v.98h6v6.01h.98v-6.01h6z' fill='%23231f1f'/></g></svg>") 16 16, crosshair;--tl-cursor-move: url("data:image/svg+xml,<svg height='32' width='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' style='color: black;'><defs><filter id='shadow' y='-40%' x='-40%' width='180px' height='180%' color-interpolation-filters='sRGB'><feDropShadow dx='1' dy='1' stdDeviation='1.2' flood-opacity='.5'/></filter></defs><g fill='none' transform='rotate(0 16 16)' filter='url(%23shadow)'><path d='m19 14h1v1h-1zm1 6h-1v-1h1zm-5-5h-1v-1h1zm0 5h-1v-1h1zm2-10.987-7.985 7.988 5.222 5.221 2.763 2.763 7.984-7.985z' fill='white'/><g fill='black'><path d='m23.5664 16.9971-2.557-2.809v1.829h-4.009-4.001v-1.829l-2.571 2.809 2.572 2.808-.001-1.808h4.001 4.009l-.001 1.808z'/><path d='m17.9873 17h.013v-4.001l1.807.001-2.807-2.571-2.809 2.57h1.809v4.001h.008v4.002l-1.828-.001 2.807 2.577 2.805-2.576h-1.805z'/></g></g></svg>") 16 16, move;--tl-cursor-grab: url("data:image/svg+xml,<svg height='32' width='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' style='color: black;'><defs><filter id='shadow' y='-40%' x='-40%' width='180px' height='180%' color-interpolation-filters='sRGB'><feDropShadow dx='1' dy='1' stdDeviation='1.2' flood-opacity='.5'/></filter></defs><g fill='none' transform='rotate(0 16 16)' filter='url(%23shadow)'><path d='m13.5557 17.5742c-.098-.375-.196-.847-.406-1.552-.167-.557-.342-.859-.47-1.233-.155-.455-.303-.721-.496-1.181-.139-.329-.364-1.048-.457-1.44-.119-.509.033-.924.244-1.206.253-.339.962-.49 1.357-.351.371.13.744.512.916.788.288.46.357.632.717 1.542.393.992.564 1.918.611 2.231l.085.452c-.001-.04-.043-1.122-.044-1.162-.035-1.029-.06-1.823-.038-2.939.002-.126.064-.587.084-.715.078-.5.305-.8.673-.979.412-.201.926-.215 1.401-.017.423.173.626.55.687 1.022.014.109.094.987.093 1.107-.013 1.025.006 1.641.015 2.174.004.231.003 1.625.017 1.469.061-.656.094-3.189.344-3.942.144-.433.405-.746.794-.929.431-.203 1.113-.07 1.404.243.285.305.446.692.482 1.153.032.405-.019.897-.02 1.245 0 .867-.021 1.324-.037 2.121-.001.038-.015.298.023.182.094-.28.188-.542.266-.745.049-.125.241-.614.359-.859.114-.234.211-.369.415-.688.2-.313.415-.448.668-.561.54-.235 1.109.112 1.301.591.086.215.009.713-.028 1.105-.061.647-.254 1.306-.352 1.648-.128.447-.274 1.235-.34 1.601-.072.394-.234 1.382-.359 1.82-.086.301-.371.978-.652 1.384 0 0-1.074 1.25-1.192 1.812-.117.563-.078.567-.101.965-.024.399.121.923.121.923s-.802.104-1.234.034c-.391-.062-.875-.841-1-1.078-.172-.328-.539-.265-.682-.023-.225.383-.709 1.07-1.051 1.113-.668.084-2.054.03-3.139.02 0 0 .185-1.011-.227-1.358-.305-.26-.83-.784-1.144-1.06l-.832-.921c-.284-.36-.629-1.093-1.243-1.985-.348-.504-1.027-1.085-1.284-1.579-.223-.425-.331-.954-.19-1.325.225-.594.675-.897 1.362-.832.519.05.848.206 1.238.537.225.19.573.534.75.748.163.195.203.276.377.509.23.307.302.459.214.121' fill='white'/><g stroke='black' stroke-linecap='round' stroke-width='.75'><path d='m13.5557 17.5742c-.098-.375-.196-.847-.406-1.552-.167-.557-.342-.859-.47-1.233-.155-.455-.303-.721-.496-1.181-.139-.329-.364-1.048-.457-1.44-.119-.509.033-.924.244-1.206.253-.339.962-.49 1.357-.351.371.13.744.512.916.788.288.46.357.632.717 1.542.393.992.564 1.918.611 2.231l.085.452c-.001-.04-.043-1.122-.044-1.162-.035-1.029-.06-1.823-.038-2.939.002-.126.064-.587.084-.715.078-.5.305-.8.673-.979.412-.201.926-.215 1.401-.017.423.173.626.55.687 1.022.014.109.094.987.093 1.107-.013 1.025.006 1.641.015 2.174.004.231.003 1.625.017 1.469.061-.656.094-3.189.344-3.942.144-.433.405-.746.794-.929.431-.203 1.113-.07 1.404.243.285.305.446.692.482 1.153.032.405-.019.897-.02 1.245 0 .867-.021 1.324-.037 2.121-.001.038-.015.298.023.182.094-.28.188-.542.266-.745.049-.125.241-.614.359-.859.114-.234.211-.369.415-.688.2-.313.415-.448.668-.561.54-.235 1.109.112 1.301.591.086.215.009.713-.028 1.105-.061.647-.254 1.306-.352 1.648-.128.447-.274 1.235-.34 1.601-.072.394-.234 1.382-.359 1.82-.086.301-.371.978-.652 1.384 0 0-1.074 1.25-1.192 1.812-.117.563-.078.567-.101.965-.024.399.121.923.121.923s-.802.104-1.234.034c-.391-.062-.875-.841-1-1.078-.172-.328-.539-.265-.682-.023-.225.383-.709 1.07-1.051 1.113-.668.084-2.054.03-3.139.02 0 0 .185-1.011-.227-1.358-.305-.26-.83-.784-1.144-1.06l-.832-.921c-.284-.36-.629-1.093-1.243-1.985-.348-.504-1.027-1.085-1.284-1.579-.223-.425-.331-.954-.19-1.325.225-.594.675-.897 1.362-.832.519.05.848.206 1.238.537.225.19.573.534.75.748.163.195.203.276.377.509.23.307.302.459.214.121' stroke-linejoin='round'/><path d='m20.5664 21.7344v-3.459'/><path d='m18.5508 21.7461-.016-3.473'/><path d='m16.5547 18.3047.021 3.426'/></g></g></svg>") 16 16, grab;--tl-cursor-grabbing: url("data:image/svg+xml,<svg height='32' width='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' style='color: black;'><defs><filter id='shadow' y='-40%' x='-40%' width='180px' height='180%' color-interpolation-filters='sRGB'><feDropShadow dx='1' dy='1' stdDeviation='1.2' flood-opacity='.5'/></filter></defs><g fill='none' transform='rotate(0 16 16)' filter='url(%23shadow)'><path d='m13.5732 12.0361c.48-.178 1.427-.069 1.677.473.213.462.396 1.241.406 1.075.024-.369-.024-1.167.137-1.584.117-.304.347-.59.686-.691.285-.086.62-.116.916-.055.313.064.642.287.765.499.362.623.368 1.899.385 1.831.064-.272.07-1.229.283-1.584.141-.235.497-.445.687-.479.294-.052.656-.068.964-.008.249.049.586.344.677.487.219.344.342 1.316.379 1.658.016.141.074-.393.293-.736.406-.639 1.844-.763 1.898.639.026.654.02.624.02 1.064 0 .516-.012.828-.04 1.202-.03.399-.116 1.304-.241 1.742-.086.301-.371.978-.653 1.384 0 0-1.074 1.25-1.191 1.812-.117.563-.078.567-.102.965-.023.399.121.923.121.923s-.801.104-1.234.034c-.391-.062-.875-.84-1-1.078-.172-.328-.539-.265-.682-.023-.224.383-.709 1.07-1.05 1.113-.669.084-2.055.03-3.14.02 0 0 .185-1.011-.227-1.358-.305-.26-.83-.784-1.144-1.06l-.832-.921c-.283-.36-1.002-.929-1.243-1.985-.213-.936-.192-1.395.037-1.77.232-.381.67-.589.854-.625.208-.042.692-.039.875.062.223.123.313.159.488.391.23.307.312.456.213.121-.076-.262-.322-.595-.434-.97-.109-.361-.401-.943-.38-1.526.008-.221.103-.771.832-1.042' fill='white'/><g stroke='black' stroke-width='.75'><path d='m13.5732 12.0361c.48-.178 1.427-.069 1.677.473.213.462.396 1.241.406 1.075.024-.369-.024-1.167.137-1.584.117-.304.347-.59.686-.691.285-.086.62-.116.916-.055.313.064.642.287.765.499.362.623.368 1.899.385 1.831.064-.272.07-1.229.283-1.584.141-.235.497-.445.687-.479.294-.052.656-.068.964-.008.249.049.586.344.677.487.219.344.342 1.316.379 1.658.016.141.074-.393.293-.736.406-.639 1.844-.763 1.898.639.026.654.02.624.02 1.064 0 .516-.012.828-.04 1.202-.03.399-.116 1.304-.241 1.742-.086.301-.371.978-.653 1.384 0 0-1.074 1.25-1.191 1.812-.117.563-.078.567-.102.965-.023.399.121.923.121.923s-.801.104-1.234.034c-.391-.062-.875-.84-1-1.078-.172-.328-.539-.265-.682-.023-.224.383-.709 1.07-1.05 1.113-.669.084-2.055.03-3.14.02 0 0 .185-1.011-.227-1.358-.305-.26-.83-.784-1.144-1.06l-.832-.921c-.283-.36-1.002-.929-1.243-1.985-.213-.936-.192-1.395.037-1.77.232-.381.67-.589.854-.625.208-.042.692-.039.875.062.223.123.313.159.488.391.23.307.312.456.213.121-.076-.262-.322-.595-.434-.97-.109-.361-.401-.943-.38-1.526.008-.221.103-.771.832-1.042z' stroke-linejoin='round'/><path d='m20.5664 19.7344v-3.459' stroke-linecap='round'/><path d='m18.5508 19.7461-.016-3.473' stroke-linecap='round'/><path d='m16.5547 16.3047.021 3.426' stroke-linecap='round'/></g></g></svg>") 16 16, grabbing;--tl-cursor-text: url("data:image/svg+xml,<svg height='32' width='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' style='color: black;'><defs><filter id='shadow' y='-40%' x='-40%' width='180px' height='180%' color-interpolation-filters='sRGB'><feDropShadow dx='1' dy='1' stdDeviation='1.2' flood-opacity='.5'/></filter></defs><g fill='none' transform='rotate(0 16 16)' filter='url(%23shadow)'><path fill='white' d='M7.94 0a5.25 5.25 0 0 0-3.47 1.17A5.27 5.27 0 0 0 1 0H0v3h1c1.41 0 1.85.7 2 1v3.94H2v3h1v3c-.13.3-.57 1-2 1H0v3h1a5.27 5.27 0 0 0 3.47-1.17c.98.8 2.21 1.21 3.47 1.17h1v-3h-1c-1.41 0-1.85-.7-2-1v-3H7v-3H6V4c.13-.3.57-1 2-1h1V0H7.94z'/><path fill='black' d='M7.94 2V1a4 4 0 0 0-3.47 1.64A4 4 0 0 0 1 1v1c1.3-.17 2.56.6 3 1.84v5.1H3v1h1v4.16c-.45 1.24-1.7 2-3 1.84v1a4.05 4.05 0 0 0 3.47-1.63 4.05 4.05 0 0 0 3.47 1.63v-1A2.82 2.82 0 0 1 5 14.1V9.93h1v-1H5V3.85A2.81 2.81 0 0 1 7.94 2z'/></g></svg>") 4 10, text;--tl-cursor-zoom-in: url("data:image/svg+xml,<svg height='32' width='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' style='color: black;'><defs><filter id='shadow' y='-40%' x='-40%' width='180px' height='180%' color-interpolation-filters='sRGB'><feDropShadow dx='1' dy='1' stdDeviation='1.2' flood-opacity='.5'/></filter></defs><g fill='none' transform='rotate(0 16 16)' filter='url(%23shadow)'><path d='m20.5 15c0 3.038-2.462 5.5-5.5 5.5s-5.5-2.462-5.5-5.5 2.462-5.5 5.5-5.5 5.5 2.462 5.5 5.5' fill='white'/><path d='m20.5 15c0 3.038-2.462 5.5-5.5 5.5s-5.5-2.462-5.5-5.5 2.462-5.5 5.5-5.5 5.5 2.462 5.5 5.5z' stroke='black'/><g fill='black'><path d='m18 14h-2v-2h-2v2h-2v1.98h2v2.02h2v-2.02h2z'/><path d='m23.5859 25 1.414-1.414-5.449-5.449-1.414 1.414z'/></g></g></svg>") 16 16, zoom-in;--tl-cursor-zoom-out: url("data:image/svg+xml,<svg height='32' width='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' style='color: black;'><defs><filter id='shadow' y='-40%' x='-40%' width='180px' height='180%' color-interpolation-filters='sRGB'><feDropShadow dx='1' dy='1' stdDeviation='1.2' flood-opacity='.5'/></filter></defs><g fill='none' transform='rotate(0 16 16)' filter='url(%23shadow)'><path d='m20.5 15c0 3.038-2.462 5.5-5.5 5.5s-5.5-2.462-5.5-5.5 2.462-5.5 5.5-5.5 5.5 2.462 5.5 5.5' fill='white'/><path d='m20.5 15c0 3.038-2.462 5.5-5.5 5.5s-5.5-2.462-5.5-5.5 2.462-5.5 5.5-5.5 5.5 2.462 5.5 5.5z' stroke='black'/><g fill='black'><path d='m18 16h-5.98v-1.98h5.98z'/><path d='m23.5859 25 1.414-1.414-5.449-5.449-1.414 1.414z'/></g></g></svg>") 16 16, zoom-out;--tl-cursor: var(--tl-cursor-default);--tl-cursor-resize-edge: ew-resize;--tl-cursor-resize-corner: nesw-resize;--tl-cursor-ew-resize: ew-resize;--tl-cursor-ns-resize: ns-resize;--tl-cursor-nesw-resize: nesw-resize;--tl-cursor-nwse-resize: nwse-resize;--tl-cursor-rotate: pointer;--tl-cursor-nwse-rotate: pointer;--tl-cursor-nesw-rotate: pointer;--tl-cursor-senw-rotate: pointer;--tl-cursor-swne-rotate: pointer;--tl-scale: calc(1 / var(--tl-zoom));--tl-font-draw: "tldraw_draw", sans-serif;--tl-font-sans: "tldraw_sans", sans-serif;--tl-font-serif: "tldraw_serif", serif;--tl-font-mono: "tldraw_mono", monospace;--a: calc(min(.5, 1 / var(--tl-zoom))*2px) ;--b: calc(min(.5, 1 / var(--tl-zoom))*-2px) ;--tl-text-outline: 0 var(--b) 0 var(--color-background), 0 var(--a) 0 var(--color-background), var(--b) var(--b) 0 var(--color-background), var(--a) var(--b) 0 var(--color-background), var(--a) var(--a) 0 var(--color-background), var(--b) var(--a) 0 var(--color-background);position:relative;top:0;left:0;width:100%;height:100%;overflow:clip}.tl-theme__light{--color-accent: #e64a4a;--color-background: rgb(249, 250, 251);--color-brush-fill: rgba(144, 144, 144, .102);--color-brush-stroke: rgba(144, 144, 144, .251);--color-grid: rgb(109, 109, 109);--color-low: hsl(204, 16%, 94%);--color-low-border: hsl(204, 16%, 92%);--color-culled: rgb(235, 238, 240);--color-muted-none: rgba(0, 0, 0, 0);--color-muted-0: rgba(0, 0, 0, .02);--color-muted-1: rgba(0, 0, 0, .1);--color-muted-2: rgba(0, 0, 0, .042);--color-hint: rgba(0, 0, 0, .055);--color-overlay: rgba(0, 0, 0, .2);--color-divider: #e8e8e8;--color-panel-contrast: #ffffff;--color-panel-overlay: rgba(255, 255, 255, .82);--color-panel: #fdfdfd;--color-focus: #004094;--color-selected: #2f80ed;--color-selected-contrast: #ffffff;--color-selection-fill: #1e90ff06;--color-selection-stroke: #2f80ed;--color-text-0: #1d1d1d;--color-text-1: #2d2d2d;--color-text-3: #a4a5a7;--color-text-shadow: #ffffff;--color-primary: #2f80ed;--color-warn: #d10b0b;--color-text: #000000;--color-laser: #ff0000;--shadow-1: 0px 1px 2px rgba(0, 0, 0, .25), 0px 1px 3px rgba(0, 0, 0, .09);--shadow-2: 0px 0px 2px rgba(0, 0, 0, .16), 0px 2px 3px rgba(0, 0, 0, .24), 0px 2px 6px rgba(0, 0, 0, .1), inset 0px 0px 0px 1px var(--color-panel-contrast);--shadow-3: 0px 1px 2px rgba(0, 0, 0, .28), 0px 2px 6px rgba(0, 0, 0, .14), inset 0px 0px 0px 1px var(--color-panel-contrast);--shadow-4: 0px 0px 3px rgba(0, 0, 0, .19), 0px 5px 4px rgba(0, 0, 0, .16), 0px 2px 16px rgba(0, 0, 0, .06), inset 0px 0px 0px 1px var(--color-panel-contrast)}.tl-theme__dark{--color-accent: #e64a4a;--color-background: #212529;--color-brush-fill: rgba(180, 180, 180, .05);--color-brush-stroke: rgba(180, 180, 180, .25);--color-grid: #909090;--color-low: #2c3136;--color-low-border: #30363b;--color-culled: rgb(47, 52, 57);--color-muted-none: rgba(255, 255, 255, 0);--color-muted-0: rgba(255, 255, 255, .02);--color-muted-1: rgba(255, 255, 255, .1);--color-muted-2: rgba(255, 255, 255, .05);--color-hint: rgba(255, 255, 255, .1);--color-overlay: rgba(0, 0, 0, .35);--color-divider: #49555f;--color-panel-contrast: #49555f;--color-panel: #363d44;--color-panel-overlay: rgba(54, 61, 68, .82);--color-focus: #a5c3f3;--color-selected: #4285f4;--color-selected-contrast: #ffffff;--color-selection-fill: rgba(38, 150, 255, .05);--color-selection-stroke: #2f80ed;--color-text-0: #f0eded;--color-text-1: #d9d9d9;--color-text-3: #6d747b;--color-text-shadow: #292f35;--color-primary: #2f80ed;--color-warn: #ef6464;--color-text: #f8f9fa;--color-laser: #ff0000;--shadow-1: 0px 1px 2px #00000029, 0px 1px 3px #00000038, inset 0px 0px 0px 1px var(--color-panel-contrast);--shadow-2: 0px 1px 3px #00000077, 0px 2px 6px #00000055, inset 0px 0px 0px 1px var(--color-panel-contrast);--shadow-3: 0px 1px 3px #00000077, 0px 2px 12px rgba(0, 0, 0, .22), inset 0px 0px 0px 1px var(--color-panel-contrast)}.tl-counter-scaled{transform:scale(var(--tl-scale));transform-origin:top left;width:calc(100% * var(--tl-zoom));height:calc(100% * var(--tl-zoom))}.tl-container,.tl-container *{-webkit-touch-callout:none;-webkit-tap-highlight-color:transparent;scrollbar-highlight-color:transparent;-webkit-user-select:none;user-select:none;box-sizing:border-box;outline:none}.tl-container a{-webkit-touch-callout:initial}.tl-container:focus-within{outline:1px solid var(--color-low)}input,*[contenteditable],*[contenteditable] *{-webkit-user-select:text}.tl-canvas{position:absolute;top:0;left:0;width:100%;height:100%;color:var(--color-text);z-index:var(--layer-canvas);cursor:var(--tl-cursor);overflow:clip;content-visibility:auto;touch-action:none;contain:strict}.tl-fixed-layer{position:absolute;top:0;left:0;width:100%;height:100%;contain:strict;pointer-events:none}.tl-shapes{position:relative;z-index:var(--layer-shapes)}.tl-overlays{position:relative;z-index:var(--layer-overlays)}.tl-overlays__item{position:absolute;top:0;left:0;height:var(--tl-dpr-multiple-px);width:var(--tl-dpr-multiple-px);overflow:visible;pointer-events:none;transform-origin:top left}.tl-svg-context{position:absolute;top:0;left:0;height:var(--tl-dpr-multiple-px);width:var(--tl-dpr-multiple-px);pointer-events:none}.tl-positioned{position:absolute;top:0;left:0;transform-origin:top left}.tl-background{position:absolute;background-color:var(--color-background);top:0;right:0;bottom:0;left:0;z-index:var(--layer-background)}.tl-grid{position:absolute;top:0;left:0;width:100%;height:100%;touch-action:none;pointer-events:none;z-index:var(--layer-grid);contain:strict}.tl-grid-dot{fill:var(--color-grid)}.tl-html-layer{position:absolute;top:0;left:0;width:1px;height:1px;contain:layout style size}.tl-brush{stroke-width:calc(var(--tl-scale) * 1px);contain:size layout}.tl-brush__default{stroke:var(--color-brush-stroke);fill:var(--color-brush-fill)}.tl-screenshot-brush{stroke:var(--color-text-0);fill:none}.tl-scribble{stroke-linejoin:round;stroke-linecap:round;pointer-events:none;contain:size layout}.tl-shape{position:absolute;pointer-events:none;overflow:visible;transform-origin:top left;contain:size layout}.tl-shape__culled{position:relative;background-color:var(--color-culled)}.tl-svg-container{position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;stroke-linecap:round;stroke-linejoin:round;transform-origin:top left;overflow:visible}.tl-html-container{position:absolute;top:0;left:0;width:100%;height:100%;pointer-events:none;stroke-linecap:round;stroke-linejoin:round;transform-origin:top left;color:inherit}.tl-collaborator__scribble{z-index:10}.tl-collaborator__brush{z-index:20}.tl-collaborator__shape-indicator{z-index:30}.tl-user-scribble{z-index:40}.tl-user-brush{z-index:50}.tl-user-indicator__selected{z-index:60}.tl-user-indicator__hovered{z-index:70}.tl-user-handles{z-index:80}.tl-user-snapline{z-index:90}.tl-selection__fg{pointer-events:none;z-index:100}.tl-user-indicator__hint{z-index:110;stroke-width:calc(2.5px * var(--tl-scale))}.tl-collaborator__cursor-hint{z-index:120}.tl-collaborator__cursor{z-index:130}.tl-cursor{overflow:visible}.tl-shape-indicator{transform-origin:top left;fill:none;stroke-width:calc(1.5px * var(--tl-scale));contain:size}.tl-selection__bg{position:absolute;top:0;left:0;transform-origin:top left;background-color:transparent;pointer-events:all}.tl-selection__fg__outline{fill:none;pointer-events:none;stroke:var(--color-selection-stroke);stroke-width:calc(1.5px * var(--tl-scale))}.tl-corner-handle{pointer-events:none;stroke:var(--color-selection-stroke);fill:var(--color-background);stroke-width:calc(1.5px * var(--tl-scale))}.tl-text-handle{pointer-events:none;fill:var(--color-selection-stroke)}.tl-corner-crop-handle,.tl-corner-crop-edge-handle{pointer-events:none;fill:none;stroke:var(--color-selection-stroke)}.tl-rotate-handle{stroke:var(--color-selection-stroke);fill:var(--color-background);stroke-width:calc(1.5px * var(--tl-scale));pointer-events:all}.tl-mobile-rotate__bg{pointer-events:all;cursor:var(--tl-cursor-grab)}.tl-mobile-rotate__fg{pointer-events:none;stroke:var(--color-selection-stroke);fill:var(--color-background);stroke-width:calc(1.5px * var(--tl-scale))}.tl-transparent{fill:transparent;stroke:transparent}.tl-handle{pointer-events:all}.tl-handle__bg{fill:transparent;stroke:transparent;pointer-events:all;cursor:var(--tl-cursor-grabbing)}.tl-handle__fg{fill:var(--color-background);stroke:var(--color-selection-stroke);stroke-width:calc(1.5px * var(--tl-scale));pointer-events:none}.tl-handle__create{opacity:0}.tl-handle__create:hover{opacity:1}.tl-handle__bg:active{fill:none}.tl-handle__bg:hover{cursor:var(--tl-cursor-grab);fill:var(--color-selection-fill)}@media (pointer: coarse){.tl-handle__bg:active{fill:var(--color-selection-fill)}.tl-handle__create{opacity:1}}.tl-image,.tl-video{object-fit:cover;background-size:cover;width:100%;height:100%}.tl-image-container,.tl-video-container,.tl-embed-container{width:100%;height:100%;pointer-events:all;display:flex;justify-content:center;align-items:center}.tl-image__tg{--scale: min(2, var(--tl-scale)) ;position:absolute;top:calc(var(--scale) * 8px);right:calc(var(--scale) * 8px);font-size:10px;transform-origin:top right;background-color:var(--color-background);padding:2px 4px;border-radius:var(--radius-1)}.tl-collaborator-cursor{position:absolute}.tl-nametag{top:16px;left:13px;width:fit-content;height:fit-content;max-width:120px;padding:3px 6px;white-space:nowrap;position:absolute;overflow:hidden;text-overflow:ellipsis;font-size:12px;font-family:var(--font-body);border-radius:var(--radius-2);color:var(--color-selected-contrast)}.tl-nametag-title{top:-2px;left:13px;width:fit-content;height:fit-content;padding:0 6px;max-width:120px;white-space:nowrap;position:absolute;overflow:hidden;text-overflow:ellipsis;font-size:12px;font-family:var(--font-body);text-shadow:var(--tl-text-outline);color:var(--color-selected-contrast)}.tl-nametag-chat{top:16px;left:13px;width:fit-content;height:fit-content;color:var(--color-selected-contrast);white-space:nowrap;position:absolute;padding:3px 6px;font-size:12px;font-family:var(--font-body);opacity:1;border-radius:var(--radius-2)}.tl-cursor-chat{position:absolute;color:var(--color-selected-contrast);white-space:nowrap;padding:3px 6px;font-size:12px;font-family:var(--font-body);pointer-events:none;z-index:var(--layer-cursor);margin-top:16px;margin-left:13px;opacity:1;border:none;-webkit-user-select:text;user-select:text;border-radius:var(--radius-2)}.tl-cursor-chat .tl-cursor-chat__bubble{padding-right:12px}.tl-cursor-chat::selection{background:var(--color-selected);color:var(--color-selected-contrast);text-shadow:none}.tl-cursor-chat-fade{opacity:.0001;transition:opacity 5s ease-in-out}.tl-cursor-chat::placeholder{color:var(--color-selected-contrast);opacity:.7}@keyframes spinner{to{transform:rotate(360deg)}}.tl-spinner:after{content:"";box-sizing:border-box;position:absolute;top:50%;left:50%;width:20px;height:20px;margin-top:-10px;margin-left:-10px;border-radius:50%;border:2px solid #ccc;border-top-color:#000;animation:spinner .6s linear infinite;pointer-events:none}.tl-iconshape__icon{pointer-events:all;width:100%;height:100%}.tl-icon-preview{width:14px;height:14px}.tl-text-shape__wrapper{position:relative;font-weight:400;min-width:1px;padding:0;margin:0;border:none;height:100%;font-variant:normal;font-style:normal;pointer-events:all;white-space:pre-wrap;overflow-wrap:break-word;text-shadow:var(--tl-text-outline)}.tl-text-shape__wrapper[data-align=start]{text-align:left}.tl-text-shape__wrapper[data-align=middle]{text-align:center}.tl-text-shape__wrapper[data-align=end]{text-align:right}.tl-text-shape__wrapper[data-font=draw]{font-family:var(--tl-font-draw)}.tl-text-shape__wrapper[data-font=sans]{font-family:var(--tl-font-sans)}.tl-text-shape__wrapper[data-font=serif]{font-family:var(--tl-font-serif)}.tl-text-shape__wrapper[data-font=mono]{font-family:var(--tl-font-mono)}.tl-text-shape__wrapper[data-isediting=true] .tl-text-content{opacity:0}.tl-text{margin:0;padding:0;border:0px;color:inherit;caret-color:var(--color-text);background:none;border-image:none;font-size:inherit;font-family:inherit;font-weight:inherit;line-height:inherit;font-variant:inherit;font-style:inherit;text-align:inherit;letter-spacing:inherit;text-shadow:inherit;outline:none;white-space:pre-wrap;word-wrap:break-word;overflow-wrap:break-word;pointer-events:all;text-rendering:auto;text-transform:none;text-indent:0px;display:inline-block;-webkit-appearance:auto;-moz-appearance:auto;appearance:auto;column-count:initial!important;writing-mode:horizontal-tb!important;word-spacing:0px}.tl-text-measure{position:absolute;z-index:999999;top:-9999px;right:-9999px;opacity:0;width:max-content;box-sizing:border-box;pointer-events:none;line-break:normal;white-space:pre-wrap;word-wrap:break-word;overflow-wrap:break-word;resize:none;border:none;user-select:none;contain:style paint;-webkit-user-select:none}.tl-text-edit-container{position:relative;width:100%;height:100%}.tl-text-input,.tl-text-content{position:absolute;top:0;left:0;width:100%;height:100%;min-width:1px;min-height:1px;overflow:visible;outline:none}.tl-text-content{pointer-events:none}.tl-text-input{resize:none;user-select:all;-webkit-user-select:text;overflow:hidden;cursor:var(--tl-cursor-text)}.tl-text-input::selection{background:var(--color-selected);color:var(--color-selected-contrast);text-shadow:none}.tl-snap-line,.tl-snap-point{stroke:var(--color-accent);stroke-width:calc(1px * var(--tl-scale));fill:none}.tl-group{stroke:var(--color-text);stroke-width:calc(1px * var(--tl-scale));opacity:.5}.tl-bookmark__container{width:100%;height:100%;position:relative;border:1px solid var(--color-panel-contrast);background-color:var(--color-panel);border-radius:var(--radius-2);display:flex;flex-direction:column;overflow:hidden}.tl-bookmark__image_container{flex:1;overflow:hidden;border-top-left-radius:var(--radius-1);border-top-right-radius:var(--radius-1);width:100%;height:100%;display:flex;justify-content:flex-end;align-items:flex-start}.tl-bookmark__image_container>.tl-hyperlink-button:after{background-color:var(--color-panel)}.tl-bookmark__placeholder{width:100%;height:100%;background-color:var(--color-muted-2);border-bottom:1px solid var(--color-muted-2)}.tl-bookmark__image{width:100%;height:100%;object-fit:cover;object-position:center}.tl-bookmark__copy_container{background-color:var(--color-muted);padding:var(--space-4);pointer-events:all}.tl-bookmark__heading,.tl-bookmark__description,.tl-bookmark__link{margin:0;width:100%;font-family:inherit}.tl-bookmark__heading{font-size:16px;font-weight:700;padding-bottom:var(--space-2);margin:8px 0}.tl-bookmark__description{font-size:12px;padding-bottom:var(--space-4)}.tl-bookmark__link{font-size:14px;pointer-events:all;z-index:999;overflow:hidden;display:block;color:var(--color-text);text-overflow:ellipsis;text-decoration:none;color:var(--color-text-1);cursor:var(--tl-cursor-pointer)}.tl-bookmark__link:hover{color:var(--color-selected)}.tl-hyperlink-button{background:none;margin:0;position:absolute;top:0;right:0;height:44px;width:44px;display:flex;align-items:center;justify-content:center;z-index:200;font-size:12px;font-weight:400;color:var(--color-text-1);padding:13px;cursor:var(--tl-cursor-pointer);border:none;outline:none;pointer-events:all}.tl-hyperlink-button:after{content:"";z-index:-1;position:absolute;right:6px;bottom:6px;display:block;width:calc(100% - 12px);height:calc(100% - 12px);border-radius:var(--radius-1);background-color:var(--color-background);pointer-events:none}.tl-hyperlink-button:hover{color:var(--color-selected)}.tl-hyperlink-button:focus-visible{color:var(--color-selected)}.tl-hyperlink-button__icon{width:18px;height:18px;background-color:currentColor;pointer-events:none}.tl-hyperlink-button__hidden{display:none}.tl-text-label{display:flex;justify-content:center;align-items:center;color:var(--color-text);text-shadow:var(--tl-text-outline);line-height:inherit;position:absolute;top:0;right:0;bottom:0;left:0;z-index:10}.tl-text-label[data-isediting=true] .tl-text-content{opacity:0}.tl-text-label[data-hastext=false][data-isediting=false]>.tl-text-label__inner{width:40px;height:40px}.tl-text-label[data-hastext=true][data-isediting=false] .tl-text-content{pointer-events:all}.tl-text-label__inner{position:relative;width:fit-content;height:fit-content;display:flex;align-items:center;justify-content:center;pointer-events:none;min-height:auto}.tl-text-label__inner>.tl-text{position:relative;top:0;left:0;padding:16px;height:fit-content;width:fit-content;border-radius:var(--radius-1);max-width:100%;z-index:3}.tl-text-label__inner>.tl-text-input{position:absolute;top:0;left:0;width:100%;height:100%;padding:16px;z-index:4}.tl-text-label[data-textwrap=true]>.tl-text-label__inner{max-width:100%}.tl-text-label[data-isediting=true]{background-color:transparent;min-height:auto}.tl-text-label[data-isediting=true] p{opacity:0}.tl-text-label[data-align=start],.tl-text-label[data-align=start-legacy]{text-align:left}.tl-text-label[data-align=middle],.tl-text-label[data-align=middle-legacy]{text-align:center}.tl-text-label[data-align=end],.tl-text-label[data-align=end-legacy]{text-align:right}.tl-arrow-hint{stroke:var(--color-text-1);fill:none;stroke-linecap:round;overflow:visible}.tl-arrow-label[data-font=draw],.tl-text-label[data-font=draw]{font-family:var(--tl-font-draw)}.tl-arrow-label[data-font=sans],.tl-text-label[data-font=sans]{font-family:var(--tl-font-sans)}.tl-arrow-label[data-font=serif],.tl-text-label[data-font=serif]{font-family:var(--tl-font-serif)}.tl-arrow-label[data-font=mono],.tl-text-label[data-font=mono]{font-family:var(--tl-font-mono)}.tl-arrow-label{position:absolute;top:-1px;left:-1px;width:2px;height:2px;padding:0;display:flex;justify-content:center;align-items:center;color:var(--color-text);text-shadow:var(--tl-text-outline)}.tl-arrow-label[data-isediting=true] p{opacity:0}.tl-arrow-label[data-isediting=true]>.tl-arrow-label__inner{background-color:var(--color-background)}.tl-arrow-label__inner{border-radius:var(--radius-1);box-sizing:content-box;position:relative;height:max-content;width:max-content;pointer-events:all;display:flex;justify-content:center;align-items:center}.tl-arrow-label p,.tl-arrow-label textarea{margin:0;padding:0;border:0px;color:inherit;caret-color:var(--color-text);background:none;border-image:none;font-size:inherit;font-family:inherit;font-weight:inherit;line-height:inherit;font-variant:inherit;font-style:inherit;text-align:inherit;letter-spacing:inherit;text-shadow:inherit;outline:none;white-space:pre-wrap;word-wrap:break-word;overflow-wrap:break-word;pointer-events:all;text-rendering:auto;text-transform:none;text-indent:0px;display:inline-block;-webkit-appearance:auto;-moz-appearance:auto;appearance:auto;column-count:initial!important;writing-mode:horizontal-tb!important;word-spacing:0px}.tl-arrow-label p{position:relative;height:max-content;z-index:2;padding:4px;overflow:visible}.tl-arrow-label textarea{z-index:3;margin:0;padding:4px;height:100%;width:100%;position:absolute;resize:none;border:0px;user-select:all;-webkit-user-select:text;caret-color:var(--color-text);border-image:none;min-width:4px}.tl-note__container{position:relative;width:100%;height:100%;border-radius:var(--radius-2);box-shadow:var(--shadow-1);overflow:hidden;border-color:currentColor;border-style:solid;border-width:1px}.tl-note__container .tl-text-label{text-shadow:none}.tl-note__scrim{position:absolute;z-index:1;top:0;left:0;width:100%;height:100%;background-color:var(--color-background);opacity:.28}.tl-loading{background-color:var(--color-background);color:var(--color-text-1);height:100%;width:100%;display:flex;flex-direction:column;justify-content:center;align-items:center;gap:var(--space-2);font-size:14px;font-weight:500;opacity:0;animation:fade-in .2s ease-in-out forwards;animation-delay:.2s}@keyframes fade-in{0%{opacity:0}to{opacity:1}}.tl-frame__body{stroke-width:calc(1px * var(--tl-scale))}.tl-frame__creating{stroke:var(--color-selected);fill:none}.tl-frame__hitarea{border-style:solid;border-width:calc(8px * var(--tl-scale));border-color:transparent;background:none;pointer-events:stroke;box-sizing:border-box;top:calc(-8px * var(--tl-scale));left:calc(-8px * var(--tl-scale));width:calc(100% + calc(16px * var(--tl-scale)));height:calc(100% + calc(16px * var(--tl-scale)));z-index:1;position:absolute}.tl-frame-heading{display:flex;align-items:center;position:absolute;transform-origin:0% 100%;overflow:hidden;max-width:100%;min-width:32px;height:auto;font-size:12px;padding-bottom:4px;pointer-events:all}.tl-frame-heading-hit-area{pointer-events:all;transform-origin:0% 100%;display:flex;height:100%;width:100%;align-items:center;border-radius:var(--radius-1);background-color:var(--color-background)}.tl-frame-label{pointer-events:all;overflow:hidden;text-overflow:ellipsis;padding:var(--space-3) var(--space-3);position:relative;font-size:inherit;white-space:pre;border:1px solid transparent}.tl-frame-label__editing{color:transparent;white-space:pre;width:auto;overflow:visible;background-color:var(--color-panel);border-radius:var(--radius-1);border-color:var(--color-selected)}.tl-frame-name-input{position:absolute;border:none;background:none;outline:none;padding:var(--space-3) var(--space-3);top:0;right:0;bottom:0;left:0;font-size:inherit;font-family:inherit;font-weight:inherit;width:100%;color:var(--color-text-1);border-radius:var(--radius-1);user-select:all;-webkit-user-select:text;white-space:pre;cursor:var(--tl-cursor-text)}@media (max-width: 600px){.tl-frame-heading{font-size:16px}}.tl-embed{border:none;border-radius:var(--radius-2)}.tl-image__button{padding:4px 8px;color:var(--color-text);background-color:var(--color-panel);border-radius:var(--radius-2);box-shadow:var(--shadow-1);pointer-events:all;cursor:var(--tl-cursor-pointer);outline:none;display:flex}.tl-image__button:disabled{opacity:.5;pointer-events:none}.tl-image__toolbox{position:absolute;top:0;left:0;display:flex;justify-content:flex-end;align-items:flex-end;padding:10px}.tl-image__toolbox__hidden{display:none}.tl-shape-error-boundary{width:100%;height:100%;background-color:var(--color-muted-1);border-width:calc(1px * var(--tl-scale));border-color:var(--color-muted-1);border-style:solid;border-radius:calc(var(--radius-1) * var(--tl-scale));display:flex;flex-direction:column;align-items:center;justify-content:center;text-align:left;position:relative;pointer-events:all;overflow:hidden;padding:var(--space-2)}.tl-shape-error-boundary:before{transform:scale(var(--tl-scale));content:"Error";font-size:12px;font-family:inherit;color:var(--color-text-0)}.tl-error-boundary{width:100%;height:100%;display:flex;align-items:center;justify-content:center;padding:var(--space-4);background-color:var(--color-background);color:var(--color-text-1);position:absolute;z-index:600}.tl-error-boundary__overlay{position:absolute;top:0;right:0;bottom:0;left:0;z-index:500;background-color:var(--color-overlay)}.tl-error-boundary__content *{user-select:all;-webkit-user-select:text;pointer-events:all}.tl-error-boundary__canvas{pointer-events:none;position:absolute;top:0;right:0;bottom:0;left:0;z-index:-1}.tl-error-boundary__canvas:after{content:" ";display:block;position:absolute;top:0;right:0;bottom:0;left:0;z-index:600;pointer-events:all}.tl-error-boundary__content{width:fit-content;height:fit-content;max-width:100%;width:400px;max-height:100%;background-color:var(--color-panel);padding:16px;border-radius:16px;box-shadow:var(--shadow-2);font-size:14px;font-weight:400;display:flex;flex-direction:column;overflow:auto;z-index:600;gap:12px}.tl-error-boundary__content__expanded{width:600px}.tl-error-boundary__content h2{font-size:16px;margin:0;font-weight:500}.tl-error-boundary__content p{line-height:1.5;margin:0}.tl-error-boundary__content pre{background-color:var(--color-muted-2);padding:var(--space-5);border-radius:var(--radius-2);overflow:auto;font-size:12px;max-height:320px}.tl-error-boundary__content button{background:none;border:none;font-family:inherit;font-size:14px;font-weight:500;padding:var(--space-4);border-radius:var(--radius-3);cursor:var(--tl-cursor-pointer);color:inherit;background-color:transparent}.tl-error-boundary__content button:hover{background-color:var(--color-low)}.tl-error-boundary__content a{color:var(--color-text-1);font-weight:500;text-decoration:none}.tl-error-boundary__content a:hover{color:var(--color-text-1)}.tl-error-boundary__content__error{position:relative}.tl-error-boundary__content__error button{position:absolute;top:var(--space-2);right:var(--space-2);font-size:12px;padding:var(--space-2) var(--space-3);background-color:var(--color-panel);border-radius:var(--radius-1)}.tl-error-boundary__content__actions{display:flex;justify-content:space-between;gap:var(--space-4);margin:0 0 0 -4px}.tl-error-boundary__content__actions__group{display:flex;gap:var(--space-4)}.tl-error-boundary__content .tl-error-boundary__reset{color:var(--color-warn)}.tl-error-boundary__content .tl-error-boundary__refresh{background-color:var(--color-primary);color:var(--color-selected-contrast)}.tl-error-boundary__content .tl-error-boundary__refresh:hover{background-color:var(--color-primary);opacity:.9}@media screen and (pointer: coarse){.tl-canvas__mobile .tl-handle__hint{opacity:1}}.tl-hidden{opacity:0;pointer-events:none}.debug__ui-logger{position:absolute;top:62px;left:16px;color:#555;font-size:12px;font-family:monospace}.tl-container{--layer-panels: 300;--layer-menus: 400;--layer-overlays: 500;--layer-toasts: 650;--layer-cursor: 700}.tlui-button{position:relative;height:40px;min-width:40px;padding:0 12px;display:flex;align-items:center;justify-content:center;background-color:transparent;border:transparent;color:currentColor;cursor:pointer;pointer-events:all;font-weight:inherit;font-family:inherit;text-rendering:optimizeLegibility;font-size:12px;gap:0px;color:var(--color-text-1);text-shadow:1px 1px var(--color-text-shadow)}.tlui-button:disabled{color:var(--color-text-3);text-shadow:none}.tlui-button:disabled .tlui-kbd{color:var(--color-text-3)}.tlui-button>*{position:relative;z-index:1}.tlui-button__label{flex-grow:2;text-align:left}.tlui-button:focus-visible:not(:hover){outline:1px solid var(--color-selected);outline-offset:-4px;border-radius:var(--radius-3)}.tlui-button:after{display:block;content:"";position:absolute;top:4px;right:4px;bottom:4px;left:4px;background-color:transparent;border-radius:var(--radius-2)}.tlui-button[aria-expanded=true]:after{background-color:var(--color-muted-0);opacity:1}@media (hover: hover){.tlui-button:after{background-color:var(--color-muted-2);opacity:0}.tlui-button:not(:disabled):hover:after{opacity:1}}.tlui-button__low{border-radius:var(--radius-3);background-color:var(--color-low)}@media (hover: hover){.tlui-button__low:after{background-color:var(--color-muted-2)}}.tlui-button__primary{color:var(--color-primary)}.tlui-button__danger{color:var(--color-warn);text-shadow:none}@media (hover: hover){.tlui-button__primary:not(:disabled,:focus-visible):hover{color:var(--color-primary)}.tlui-button__danger:not(:disabled,:focus-visible):hover{color:var(--color-warn);text-shadow:none}}.tlui-button__panel{position:relative}.tlui-button__icon{height:40px;width:40px;min-height:40px;min-width:40px;padding:0}.tlui-button__icon-left{margin-right:var(--space-2)}.tlui-button__icon[data-state=hinted]:after{background:var(--color-hint);opacity:1}.tlui-button__icon[data-state=hinted]:not(:disabled,:focus-visible):active:after{background:var(--color-hint);opacity:1}@media (hover: hover){.tlui-button__icon:after{top:4px;right:4px;bottom:4px;left:4px;border-radius:var(--radius-2)}.tlui-button__icon[data-state=hinted]:not(:disabled,:focus-visible):hover:after{background:var(--color-hint)}}.tlui-button__menu{height:40px;min-height:40px;min-width:128px;width:100%;gap:8px;margin:-4px 0}.tlui-button__menu:nth-child(1){margin-top:0}.tlui-button__menu:nth-last-child(1){margin-bottom:0}@media (hover: hover){.tlui-button__menu:after{top:4px;right:4px;bottom:4px;left:4px;border-radius:var(--radius-2)}}.tlui-button__checkbox{padding-left:8px}.tlui-button__checkbox__indicator{width:15px;height:15px}.tlui-toolbar__lock-button{position:absolute;top:4px;right:0;pointer-events:all;height:40px;width:40px;min-width:0px;border-radius:var(--radius-2)}.tlui-toolbar__lock-button:after{top:4px;right:4px;bottom:4px;left:4px}.tlui-button__tool{position:relative;height:48px;width:48px;margin-left:-2px;margin-right:-2px}.tlui-button__tool:nth-of-type(1){margin-left:0}.tlui-button__tool:nth-last-of-type(1){margin-right:0}@media (hover: hover){.tlui-button__tool:after{top:4px;right:4px;bottom:4px;left:4px;border-radius:8px}.tlui-button__tool[data-state=selected]:not(:disabled,:focus-visible):hover{color:var(--color-selected-contrast)}}.tlui-button__tool[data-state=selected]{color:var(--color-selected-contrast)}.tlui-button__tool[data-state=selected]:not(:disabled,:focus-visible):active{color:var(--color-selected-contrast)}.tlui-button__tool[data-state=selected]:not(:disabled):after{background:var(--color-selected);opacity:1}.tlui-button__help{height:32px;width:32px;padding:0;min-width:32px;border-radius:100%;background-color:var(--color-low);border:1px solid var(--color-low-border)}@media (hover: hover){.tlui-button__help:after{background-color:var(--color-muted-2);border-radius:100%;top:4px;right:4px;bottom:4px;left:4px}}.tlui-buttons__horizontal{display:flex;flex-direction:row}.tlui-buttons__horizontal>*{margin-left:-2px;margin-right:-2px}.tlui-buttons__horizontal>*:nth-child(1){margin-left:0}.tlui-buttons__horizontal>*:nth-last-child(1){margin-right:0}.tlui-buttons__grid{display:grid;grid-template-columns:repeat(4,auto);grid-auto-flow:row;overflow:hidden}.tlui-buttons__grid>.tlui-button{margin:-2px}.tlui-buttons__grid>.tlui-button:nth-of-type(4n){margin-right:0}.tlui-buttons__grid>.tlui-button:nth-of-type(4n-3){margin-left:0}.tlui-buttons__grid>.tlui-button:nth-of-type(-n+4){margin-top:0}.tlui-buttons__grid>.tlui-button:nth-last-of-type(-n+4){margin-bottom:0}.tlui-zoom-menu__button__pct{width:60px;min-width:60px;text-align:center}@media (max-width: 640px){.tlui-button__tool{height:48px;width:44px}.tlui-button__tool>.tlui-icon{height:16px;width:16px}.tlui-kbd{visibility:hidden}.tlui-menu__group .tlui-button__icon-left{display:none}}.tlui-layout{position:relative;display:grid;grid-template-columns:1fr;grid-template-rows:minmax(0px,1fr) auto;grid-auto-rows:auto;height:100%;max-height:100%;overflow:clip;pointer-events:none;-webkit-user-select:none;user-select:none;contain:strict;z-index:var(--layer-panels);-webkit-transform:translate3d(0,0,0);--sab: env(safe-area-inset-bottom)}.tlui-layout__top{grid-column:1;grid-row:1;display:flex;min-width:0px;justify-content:space-between}.tlui-layout__top__left{display:flex;flex-direction:column;align-items:flex-start;justify-content:flex-start;width:100%;height:100%;flex:0 1 0}.tlui-layout__top__right{display:flex;flex-direction:column;align-items:flex-end;justify-content:flex-start;height:100%;flex:0 0 auto;min-width:0px}.scrollable,.scrollable *{pointer-events:all;touch-action:auto;overscroll-behavior:none}.tlui-helper-buttons{position:relative;display:flex;flex-direction:column;justify-content:flex-start;align-items:flex-start;width:min-content;gap:var(--space-3);margin:var(--space-2) var(--space-3);white-space:nowrap;pointer-events:none;z-index:var(--layer-panels)}.tlui-icon{flex-shrink:0;width:18px;height:18px;background-color:currentColor}.tlui-icon__small{width:15px;height:15px}.tlui-slider{position:relative;display:flex;align-items:center;-webkit-user-select:none;user-select:none;touch-action:none}.tlui-slider__container{width:100%;padding:0px var(--space-4)}.tlui-slider__track{position:relative;flex-grow:1;height:44px;cursor:pointer}.tlui-slider__track:after{display:block;position:absolute;top:calc(50% - 2px);content:"";height:3px;width:100%;background-color:var(--color-muted-1);border-radius:14px}.tlui-slider__range{position:absolute;top:calc(50% - 2px);left:0;height:3px;background-color:var(--color-selected);border-radius:14px}.tlui-slider__thumb{all:unset;cursor:grab;display:block;width:18px;height:18px;position:relative;top:-1px;background-color:var(--color-panel);border-radius:999px;box-shadow:inset 0 0 0 2px var(--color-text-1)}.tlui-slider__thumb:active{cursor:grabbing;box-shadow:inset 0 0 0 2px var(--color-text-1),var(--shadow-1)}.tlui-slider__thumb:focus-visible{box-shadow:inset 0 0 0 2px var(--color-focus)}.tlui-kbd{font-family:inherit;font-size:11px;line-height:11px;display:grid;justify-items:center;grid-auto-flow:column;grid-template-columns:auto;grid-auto-columns:minmax(1em,auto);gap:1px;align-self:bottom;color:var(--color-text-1);margin-left:var(--space-4)}.tlui-kbd>span{width:100%;text-align:center;display:inline;margin:0;padding:2px;border-radius:2px}.tlui-kbd:not(:last-child){margin-right:var(--space-2)}.tlui-focus-button{z-index:var(--layer-panels);pointer-events:all}.tlui-popover{position:relative;display:flex;align-content:stretch}.tlui-popover__content{position:relative;max-height:75vh;margin:0;border:none;border-radius:var(--radius-3);background-color:var(--color-panel);box-shadow:var(--shadow-3);z-index:var(--layer-menus);overflow:hidden;overflow-y:auto;touch-action:auto;overscroll-behavior:none;scrollbar-width:none;-ms-overflow-style:none}.tlui-debug-panel{background-color:var(--color-low);width:100%;display:grid;align-items:center;grid-template-columns:1fr auto auto;justify-content:space-between;padding-left:var(--space-4);border-top:1px solid var(--color-background);font-size:12px;color:var(--color-text-1);z-index:var(--layer-panels);pointer-events:all}.tlui-debug-panel__current-state{white-space:nowrap}.tlui-menu-zone{position:relative;z-index:var(--layer-panels);width:fit-content;border-right:4px solid var(--color-background);border-bottom:4px solid var(--color-background);border-bottom-right-radius:var(--radius-4);background-color:var(--color-low)}.tlui-menu-zone *[data-state=open]:after{background:linear-gradient(180deg,rgba(144,144,144,0) 0%,var(--color-muted-2) 100%)}.tlui-style-panel__wrapper{box-shadow:var(--shadow-2);border-radius:var(--radius-3);pointer-events:all;background-color:var(--color-panel);height:fit-content;max-height:100%;margin:4px 8px;touch-action:auto;overscroll-behavior:none;overflow-y:auto;overflow-x:hidden;color:var(--color-text)}.tlui-style-panel{position:relative;z-index:var(--layer-panels);pointer-events:all;width:148px;max-width:148px}.tlui-style-panel::-webkit-scrollbar{display:none}.tlui-style-panel .tlui-button.select{width:100%}.tlui-style-panel__section{display:flex;position:relative;flex-direction:column}.tlui-style-panel__section:nth-of-type(n+2):not(:last-child){border-bottom:1px solid var(--color-divider)}.tlui-style-panel__section:empty{display:none}.tlui-style-panel__section__common:not(:only-child){margin-bottom:7px;border-bottom:1px solid var(--color-divider)}.tlui-style-panel__row{display:flex}.tlui-style-panel__row__extra-button{margin-left:-2px}.tlui-style-panel__double-select-picker__wrapper{width:100%;max-width:100%}.tlui-style-panel__double-select-picker{display:flex;grid-template-columns:1fr auto;align-items:center;padding-left:var(--space-4);color:var(--color-text-1);font-size:12px}.tlui-style-panel__double-select-picker-label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap;flex-grow:2;max-width:100%}.tlui-style-panel__section *[data-state=open]:after{background:var(--color-muted-0)}.tlui-input{background:none;margin:0;position:relative;z-index:1;height:40px;max-height:40px;display:flex;align-items:center;justify-content:center;font-family:inherit;font-size:12px;font-weight:inherit;color:var(--color-text-1);padding:var(--space-4);padding-left:0;border:none;outline:none;text-overflow:ellipsis;width:100%;user-select:all;text-rendering:optimizeLegibility;-webkit-user-select:auto!important}.tlui-input__wrapper{width:100%;height:44px;display:flex;align-items:center;gap:var(--space-4);color:var(--color-text)}.tlui-input__wrapper>.tlui-icon{flex-shrink:0}@media (max-width: 600px){@supports (-webkit-touch-callout: none){.tlui-input{font-size:16px}}}.tlui-prompt__overlay{background:var(--color-overlay);position:fixed;top:0;left:0;right:0;bottom:0;display:grid;place-items:center;overflow-y:auto;z-index:var(--layer-overlays)}.tlui-prompt__content{cursor:default;background-color:var(--color-panel);box-shadow:var(--shadow-3);border-radius:var(--radius-4);padding:var(--space-5);font-size:12px;overflow-y:auto;min-width:300px;max-width:80vw;max-height:80vh}.tlui-prompt__actions{border:none;padding:0;margin:0;display:flex;justify-content:flex-end;margin-right:calc(-1 * var(--space-3));margin-bottom:calc(-1 * var(--space-3))}.tlui-prompt__title{margin:0;font-size:12px}.tlui-prompt__error{color:#d10b0b;display:flex;gap:var(--space-2);align-items:center}.tlui-dialog__overlay{position:absolute;top:0;left:0;width:100%;height:100%;z-index:var(--layer-overlays);background-color:var(--color-overlay);pointer-events:all;animation:fadeIn .12s ease-out;display:grid;place-items:center;overflow-y:auto}.tlui-dialog__content{display:flex;flex-direction:column;position:relative;cursor:default;background-color:var(--color-panel);box-shadow:var(--shadow-3);border-radius:var(--radius-3);font-size:12px;overflow:hidden;min-width:300px;max-width:80vw;max-height:80vh}.tlui-dialog__header{position:relative;display:flex;align-items:center;flex:0;z-index:999;padding-left:var(--space-4);color:var(--color-text);height:44px}.tlui-dialog__header__title{flex:1;font-weight:inherit;font-size:12px;margin:0;color:var(--color-text-1)}.tlui-dialog__header__close{justify-self:flex-end}.tlui-dialog__body{padding:var(--space-4) var(--space-4);flex:0 1;overflow-y:auto;overflow-x:hidden;color:var(--color-text-1);user-select:all;-webkit-user-select:text}.tlui-dialog__footer{position:relative;z-index:999}.tlui-dialog__footer__actions{display:flex;align-items:center;justify-content:flex-end}.tlui-dialog__footer__actions>.tlui-button:nth-last-child(n+2){margin-right:-4px}.tlui-toolbar{grid-column:1 / span 3;grid-row:1;display:flex;align-items:center;justify-content:center;flex-grow:2;padding-bottom:calc(var(--space-3) + var(--sab))}.tlui-toolbar__inner{position:relative;width:fit-content;display:flex;gap:var(--space-3);align-items:flex-end}.tlui-toolbar__left{width:fit-content}.tlui-toolbar__extras{position:relative;z-index:1;width:100%;pointer-events:none;top:4px;height:48px}.tlui-toolbar__extras__controls{display:flex;position:relative;flex-direction:row;z-index:1;background-color:var(--color-low);border-top-left-radius:var(--radius-4);border-top-right-radius:var(--radius-4);border:4px solid var(--color-background);margin-left:8px;margin-right:0;pointer-events:all;width:fit-content}.tlui-toolbar__tools{display:flex;flex-direction:row;background-color:var(--color-low);border-radius:11px;z-index:var(--layer-panels);pointer-events:all;position:relative;align-items:center;background:var(--color-panel);box-shadow:var(--shadow-2)}.tlui-toolbar__overflow{width:40px}@media (max-width: 640px){.tlui-toolbar__overflow{width:32px;padding:0}.tlui-toolbar *[data-state=open]:after{background:linear-gradient(0deg,rgba(144,144,144,0) 0%,var(--color-muted-2) 100%)}}.tlui-help-menu{pointer-events:all;position:absolute;bottom:var(--space-2);right:var(--space-2);z-index:var(--layer-panels);border:4px solid var(--color-background);border-radius:100%}.tlui-context-menu__move-to-page__name{max-width:min(300px,35vw);overflow:hidden;text-overflow:ellipsis}.tlui-context-menu__move-to-page__name[data-disabled]{color:var(--color-text-3);pointer-events:none}.tlui-menu{z-index:var(--layer-menus);height:fit-content;width:fit-content;max-height:80vh;border-radius:var(--radius-3);pointer-events:all;touch-action:auto;overflow-y:auto;overscroll-behavior:none;background-color:var(--color-panel);box-shadow:var(--shadow-3)}.tlui-menu::-webkit-scrollbar{display:none}.tlui-menu__arrow{position:relative;top:-1px;fill:var(--color-panel);stroke:var(--color-panel-contrast);stroke-width:1px}.tlui-menu__group[data-size=large]{min-width:initial}.tlui-menu__group[data-size=medium]{min-width:144px}.tlui-menu__group[data-size=small]{min-width:96px}.tlui-menu__group[data-size=tiny]{min-width:0px}.tlui-menu__group+.tlui-menu__group{border-top:1px solid var(--color-divider)}.tlui-menu__submenu__trigger[data-state=open]:not(:hover):after{border-radius:var(--radius-1);background:linear-gradient(90deg,rgba(144,144,144,0) 0%,var(--color-muted-2) 100%)}.tlui-menu__submenu__trigger[data-direction=left][data-state=open]:not(:hover):after{border-radius:var(--radius-1);background:linear-gradient(270deg,rgba(144,144,144,0) 0%,var(--color-muted-2) 100%)}.tlui-actions-menu{max-height:calc(100vh - 150px)}.tlui-toast__viewport{position:absolute;top:0;right:0;bottom:0;left:0;margin:0;display:flex;align-items:flex-end;justify-content:flex-end;flex-direction:column;gap:var(--space-3);pointer-events:none;padding:0px var(--space-3) 64px 0px;z-index:var(--layer-toasts)}.tlui-toast__viewport>*{pointer-events:all}.tlui-toast__icon{padding-top:var(--space-4);padding-left:var(--space-4);color:var(--color-text-1)}.tlui-toast__container{min-width:200px;display:flex;flex-direction:row;background-color:var(--color-panel);box-shadow:var(--shadow-2);border-radius:var(--radius-3);font-size:12px}.tlui-toast__main{flex-grow:2;max-width:280px}.tlui-toast__content{padding:var(--space-4);display:flex;flex-direction:column;gap:var(--space-3)}.tlui-toast__title{font-weight:700;color:var(--color-text-1)}.tlui-toast__description{color:var(--color-text-1);padding:var(--space-3);margin:0;padding:0}.tlui-toast__icon+.tlui-toast__main>.tlui-toast__actions{padding-left:0}.tlui-toast__actions{display:flex;flex-direction:row;justify-content:flex-start;margin-left:0}.tlui-toast__close{align-self:flex-end;flex-shrink:0}@media (prefers-reduced-motion: no-preference){.tlui-toast__container[data-state=open]{animation:slide-in .2s cubic-bezier(.785,.135,.15,.86)}.tlui-toast__container[data-state=closed]{animation:hide .1s ease-in}.tlui-toast__container[data-swipe=move]{transform:translate(var(--radix-toast-swipe-move-x))}.tlui-toast__container[data-swipe=cancel]{transform:translate(0);transition:transform .2s ease-out}.tlui-toast__container[data-swipe=end]{animation:swipe-out .1s ease-out}}.tlui-layout__bottom{grid-row:2}.tlui-layout__bottom__main{width:100%;position:relative;display:flex;align-items:flex-end;justify-content:center}.tlui-navigation-zone{display:flex;width:min-content;flex-direction:column;z-index:var(--layer-panels);pointer-events:all;position:absolute;left:0;bottom:0}.tlui-navigation-zone:before{content:"";display:block;position:absolute;z-index:-1;top:-4px;right:-4px;bottom:0;left:0;border-radius:0;border-top:4px solid var(--color-background);border-right:4px solid var(--color-background);border-top-right-radius:var(--radius-4);background-color:var(--color-low)}.tlui-navigation-zone__toggle .tlui-icon{opacity:.24}.tlui-navigation-zone__toggle:active .tlui-icon{opacity:1}@media (hover: hover){.tlui-navigation-zone__toggle:hover .tlui-icon{opacity:1}}.tlui-minimap{width:100%;height:96px;min-height:96px;overflow:hidden;padding:var(--space-3);padding-top:0}.tlui-minimap__canvas{position:relative;width:100%;height:100%}@keyframes hide{0%{opacity:1}to{opacity:0}}@keyframes slide-in{0%{transform:translate(calc(100% + var(--space-3)))}to{transform:translate(0)}}@keyframes swipe-out{0%{transform:translate(var(--radix-toast-swipe-end-x))}to{transform:translate(calc(100% + var(--space-3)))}}.tlui-page-menu__wrapper{position:relative;display:flex;flex-direction:column;width:220px;height:fit-content;max-height:50vh}.tlui-page-menu__trigger{width:128px}.tlui-page-menu__trigger>span{flex-grow:2;margin-right:var(--space-4)}.tlui-page-menu__header{display:flex;flex-direction:row;align-items:center;width:100%;height:40px;padding-left:var(--space-4);border-bottom:1px solid var(--color-divider)}.tlui-page-menu__header>.tlui-button:nth-of-type(1){margin-right:-4px}.tlui-page-menu__header__title{color:var(--color-text);font-size:12px;flex-grow:2}.tlui-page-menu__name{flex-grow:2;text-align:left;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.tlui-page-menu__list{position:relative;flex-direction:column;max-height:100%;overflow-x:hidden;overflow-y:auto;touch-action:auto}.tlui-page-menu__item{display:flex;flex-direction:row;align-items:center;justify-content:space-between;gap:0px}.tlui-page-menu__item:nth-of-type(n+2){margin-top:-4px}.tlui-page-menu__item__button{width:100%}.tlui-page-menu__item__button:not(:only-child){flex-grow:2;margin-right:-2px}.tlui-page-menu__item__button>span{display:block;flex-grow:2;text-align:left;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.tlui-page-menu__item__button__checkbox{padding-left:35px}.tlui-page-menu__item__button__check{position:absolute;left:0;width:24px;padding-left:10px;display:inline-flex;align-items:center;justify-content:center;color:var(--color-text)}.tlui-page_menu__item__sortable{position:absolute;top:0;left:0;width:100%;height:fit-content;display:flex;flex-direction:row;align-items:center;overflow:hidden;z-index:1}.tlui-page_menu__item__sortable__title{flex:1}.tlui-page_menu__item__sortable__title>.tlui-input__wrapper{height:100%}.tlui-page_menu__item__sortable:focus-within{z-index:10}.tlui-page_menu__item__sortable__handle{touch-action:none;width:32px;min-width:0px;height:40px;cursor:grab;color:var(--color-text-3);flex-shrink:0;margin-right:-9px}.tlui-page_menu__item__sortable__handle:active{cursor:grabbing}.tlui-page-menu__item__input{margin-left:12px;height:100%}.tlui-page_menu__item__submenu{pointer-events:all;flex:0;cursor:pointer;display:none;margin:0 0 0 -2px}.tlui-page_menu__item__submenu[data-isediting=true]{display:block}@media (hover: hover){.tlui-page_menu__item__submenu{opacity:0;display:block}.tlui-page_menu__item__submenu:hover,.tlui-page-menu__item:focus-within>.tlui-page_menu__item__submenu,.tlui-page_menu__item__sortable:focus-within>.tlui-page_menu__item__submenu{opacity:1}}.tlui-edit-link-dialog{display:flex;flex-direction:column;gap:var(--space-4);color:var(--color-text)}.tlui-edit-link-dialog__input{background-color:var(--color-muted-2);flex-grow:2;border-radius:var(--radius-2);padding:0px var(--space-4)}.tlui-embed__spacer{flex-grow:2;min-height:0px;margin-left:calc(-1 * var(--space-4));margin-top:calc(-1 * var(--space-4));pointer-events:none}.tlui-embed-dialog__list{display:flex;flex-direction:column;padding-bottom:var(--space-5)}.tlui-embed-dialog__item{position:relative;border:none;background:none;font-family:inherit;display:flex;text-align:left;gap:var(--space-3);margin:0 -8px;cursor:pointer;padding:0 4px;align-items:center;color:var(--color-text);font-size:var(--font-size-1);height:44px}@media (hover: hover){.tlui-embed-dialog__item:not(:disabled,:focus-visible):hover:after{display:block;content:"";position:absolute;top:4px;right:4px;bottom:4px;left:4px;background-color:var(--color-muted-2);border-radius:var(--radius-1)}}.tlui-embed-dialog__item__image{width:24px;height:24px;display:flex;align-items:center;justify-content:center;background-size:contain;background-repeat:no-repeat;background-position:center center}.tlui-embed-dialog__enter{display:flex;flex-direction:column;gap:var(--space-4);color:var(--color-text-1)}.tlui-embed-dialog__input{background-color:var(--color-muted-2);flex-grow:2;border-radius:var(--radius-2);padding:0px var(--space-4)}.tlui-embed-dialog__warning{color:var(--color-warn);text-shadow:none}.tlui-embed-dialog__instruction__link{display:flex;gap:var(--space-1);margin-top:var(--space-4)}.tlui-embed-dialog__enter a{color:var(--color-text-1)}.tlui-following-indicator{display:block;position:absolute;top:0;right:0;bottom:0;left:0;border-width:2px;border-style:solid;z-index:var(--layer-following-indicator);pointer-events:none}.tlui-offline-indicator{display:flex;flex-direction:row;gap:var(--space-3);color:var(--color-text);background-color:var(--color-low);border:3px solid var(--color-background);padding:0px var(--space-5);height:42px;align-items:center;justify-content:center;border-radius:99px;opacity:0;animation:fade-in;animation-duration:.12s;animation-delay:2s;animation-fill-mode:forwards}.tlui-shortcuts-dialog__header{border-bottom:1px solid var(--color-divider)}.tlui-shortcuts-dialog__body{position:relative;columns:1;column-gap:var(--space-9);pointer-events:all;touch-action:auto}@media (min-width: 475px){.tlui-shortcuts-dialog__body{columns:2;column-gap:var(--space-9)}}@media (min-width: 960px){.tlui-shortcuts-dialog__body{columns:3;column-gap:var(--space-9)}}.tlui-shortcuts-dialog__group{break-inside:avoid-column;padding-bottom:var(--space-6)}.tlui-shortcuts-dialog__group__title{font-size:inherit;font-weight:inherit;margin:0;color:var(--color-text-3);height:32px;display:flex;align-items:center}.tlui-shortcuts-dialog__group__content{display:flex;flex-direction:column;color:var(--color-text-1)}.tlui-shortcuts-dialog__key-pair{display:flex;gap:var(--space-4);align-items:center;justify-content:space-between;height:32px}.tlui-shortcuts-dialog__key-pair__key{flex:1;font-size:12px}:root{--cubic: cubic-bezier(.04, .54, .17, .99);--hover-color: rgb(241, 241, 241)}html,body{padding:0;margin:0;font-family:Inter,sans-serif;overscroll-behavior:none;touch-action:none;min-height:100vh;font-size:16px;min-height:-webkit-fill-available;height:100%;font-family:Open Sans,Verdana,Arial,Helvetica,sans-serif}html,*{box-sizing:border-box}.hidden{display:none}.whiteboard-container{position:absolute;top:0;left:0;height:calc(100vh - 280px);width:calc(100% - 20px);display:flex;background-color:#fff;border-radius:10px;margin:0 10px;border:.1vh solid #e5e5e5}.right-panel{top:20px;right:30px;z-index:999}.tldraw__editor{width:100%;height:100%;border-radius:10px;overflow:hidden}svg:not(:root){overflow:visible!important}.sidebar-header{display:flex;justify-content:space-between}.title-users{margin:5px 10px;color:#7b7b7b;text-transform:uppercase;font-size:14px;font-weight:400}.user-list{display:flex;flex-direction:column;gap:5px}.user-list .user{background-color:#fff;border-radius:5px;color:#264883;padding:5px 10px;align-items:center;display:flex;gap:5px;font-size:12px;font-weight:600;-webkit-user-select:none;user-select:none;cursor:pointer;transition:.3s var(--cubic) all;justify-content:space-between}.user-list .user:hover{background-color:var(--hover-color)}.user-list .user .icon{color:#09b13e}.user-list .user .circle-color{width:5px;height:5px;border-radius:100%}.flex{display:flex}.justify-between{justify-content:space-between}.justify-center{justify-content:center}.gap-1{gap:5px}.gap-2{gap:10px}.w-full{width:100%}.items-center{align-items:center}.permission-icon{color:#b6b6b6}.users-avatar{border-radius:10px;cursor:pointer;transition:.3s ease-in-out all;padding:5px;width:max-content;margin:5px}.users-avatar:hover{background-color:var(--hover-color)}.mantine-HoverCard-dropdown{padding:10px!important}.tlui-layout__top__right{flex-direction:row!important;align-items:flex-start!important}@media (max-width: 768px){.whiteboard-container{height:calc(100% - 213px);left:0;top:150px;width:100%;border-radius:0}}*,:after,:before{box-sizing:border-box}button,input,select,textarea{font:inherit}button,select{text-transform:none}body{-webkit-font-smoothing:var(--mantine-webkit-font-smoothing);-moz-osx-font-smoothing:var(--mantine-moz-font-smoothing);background-color:var(--mantine-color-body);color:var(--mantine-color-text);font-family:var(--mantine-font-family);font-size:var(--mantine-font-size-md);line-height:var(--mantine-line-height);margin:0}@media screen and (max-device-width:500px){body{-webkit-text-size-adjust:100%}}@media (prefers-reduced-motion:reduce){[data-respect-reduced-motion] [data-reduce-motion]{animation:none;transition:none}}[data-mantine-color-scheme=dark] .mantine-dark-hidden,[data-mantine-color-scheme=light] .mantine-light-hidden{display:none}.mantine-focus-auto:focus-visible{outline:calc(.125rem*var(--mantine-scale)) solid var(--mantine-primary-color-filled);outline-offset:calc(.125rem*var(--mantine-scale))}.mantine-focus-always:focus{outline:calc(.125rem*var(--mantine-scale)) solid var(--mantine-primary-color-filled);outline-offset:calc(.125rem*var(--mantine-scale))}.mantine-focus-never:focus{outline:none}.mantine-active:active{transform:translateY(calc(.0625rem*var(--mantine-scale)))}[dir=rtl] .mantine-rotate-rtl{transform:rotate(180deg)}:root{--mantine-z-index-app:100;--mantine-z-index-modal:200;--mantine-z-index-popover:300;--mantine-z-index-overlay:400;--mantine-z-index-max:9999;--mantine-scale:1;--mantine-cursor-type:default;--mantine-webkit-font-smoothing:antialiased;--mantine-color-scheme:light dark;--mantine-moz-font-smoothing:grayscale;--mantine-color-white:#fff;--mantine-color-black:#000;--mantine-line-height:1.55;--mantine-font-family:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;--mantine-font-family-monospace:ui-monospace,SFMono-Regular,Menlo,Monaco,Consolas,Liberation Mono,Courier New,monospace;--mantine-font-family-headings:-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji;--mantine-heading-font-weight:700;--mantine-radius-default:calc(.25rem*var(--mantine-scale));--mantine-primary-color-0:var(--mantine-color-blue-0);--mantine-primary-color-1:var(--mantine-color-blue-1);--mantine-primary-color-2:var(--mantine-color-blue-2);--mantine-primary-color-3:var(--mantine-color-blue-3);--mantine-primary-color-4:var(--mantine-color-blue-4);--mantine-primary-color-5:var(--mantine-color-blue-5);--mantine-primary-color-6:var(--mantine-color-blue-6);--mantine-primary-color-7:var(--mantine-color-blue-7);--mantine-primary-color-8:var(--mantine-color-blue-8);--mantine-primary-color-9:var(--mantine-color-blue-9);--mantine-primary-color-filled:var(--mantine-color-blue-filled);--mantine-primary-color-filled-hover:var(--mantine-color-blue-filled-hover);--mantine-primary-color-light:var(--mantine-color-blue-light);--mantine-primary-color-light-hover:var(--mantine-color-blue-light-hover);--mantine-primary-color-light-color:var(--mantine-color-blue-light-color);--mantine-breakpoint-xs:36em;--mantine-breakpoint-sm:48em;--mantine-breakpoint-md:62em;--mantine-breakpoint-lg:75em;--mantine-breakpoint-xl:88em;--mantine-spacing-xs:calc(.625rem*var(--mantine-scale));--mantine-spacing-sm:calc(.75rem*var(--mantine-scale));--mantine-spacing-md:calc(1rem*var(--mantine-scale));--mantine-spacing-lg:calc(1.25rem*var(--mantine-scale));--mantine-spacing-xl:calc(2rem*var(--mantine-scale));--mantine-font-size-xs:calc(.75rem*var(--mantine-scale));--mantine-font-size-sm:calc(.875rem*var(--mantine-scale));--mantine-font-size-md:calc(1rem*var(--mantine-scale));--mantine-font-size-lg:calc(1.125rem*var(--mantine-scale));--mantine-font-size-xl:calc(1.25rem*var(--mantine-scale));--mantine-line-height-xs:1.4;--mantine-line-height-sm:1.45;--mantine-line-height-md:1.55;--mantine-line-height-lg:1.6;--mantine-line-height-xl:1.65;--mantine-shadow-xs:0 calc(.0625rem*var(--mantine-scale)) calc(.1875rem*var(--mantine-scale)) rgba(0,0,0,.05),0 calc(.0625rem*var(--mantine-scale)) calc(.125rem*var(--mantine-scale)) rgba(0,0,0,.1);--mantine-shadow-sm:0 calc(.0625rem*var(--mantine-scale)) calc(.1875rem*var(--mantine-scale)) rgba(0,0,0,.05),rgba(0,0,0,.05) 0 calc(.625rem*var(--mantine-scale)) calc(.9375rem*var(--mantine-scale)) calc(-.3125rem*var(--mantine-scale)),rgba(0,0,0,.04) 0 calc(.4375rem*var(--mantine-scale)) calc(.4375rem*var(--mantine-scale)) calc(-.3125rem*var(--mantine-scale));--mantine-shadow-md:0 calc(.0625rem*var(--mantine-scale)) calc(.1875rem*var(--mantine-scale)) rgba(0,0,0,.05),rgba(0,0,0,.05) 0 calc(1.25rem*var(--mantine-scale)) calc(1.5625rem*var(--mantine-scale)) calc(-.3125rem*var(--mantine-scale)),rgba(0,0,0,.04) 0 calc(.625rem*var(--mantine-scale)) calc(.625rem*var(--mantine-scale)) calc(-.3125rem*var(--mantine-scale));--mantine-shadow-lg:0 calc(.0625rem*var(--mantine-scale)) calc(.1875rem*var(--mantine-scale)) rgba(0,0,0,.05),rgba(0,0,0,.05) 0 calc(1.75rem*var(--mantine-scale)) calc(1.4375rem*var(--mantine-scale)) calc(-.4375rem*var(--mantine-scale)),rgba(0,0,0,.04) 0 calc(.75rem*var(--mantine-scale)) calc(.75rem*var(--mantine-scale)) calc(-.4375rem*var(--mantine-scale));--mantine-shadow-xl:0 calc(.0625rem*var(--mantine-scale)) calc(.1875rem*var(--mantine-scale)) rgba(0,0,0,.05),rgba(0,0,0,.05) 0 calc(2.25rem*var(--mantine-scale)) calc(1.75rem*var(--mantine-scale)) calc(-.4375rem*var(--mantine-scale)),rgba(0,0,0,.04) 0 calc(1.0625rem*var(--mantine-scale)) calc(1.0625rem*var(--mantine-scale)) calc(-.4375rem*var(--mantine-scale));--mantine-radius-xs:calc(.125rem*var(--mantine-scale));--mantine-radius-sm:calc(.25rem*var(--mantine-scale));--mantine-radius-md:calc(.5rem*var(--mantine-scale));--mantine-radius-lg:calc(1rem*var(--mantine-scale));--mantine-radius-xl:calc(2rem*var(--mantine-scale));--mantine-color-dark-0:#c9c9c9;--mantine-color-dark-1:#b8b8b8;--mantine-color-dark-2:#828282;--mantine-color-dark-3:#696969;--mantine-color-dark-4:#424242;--mantine-color-dark-5:#3b3b3b;--mantine-color-dark-6:#2e2e2e;--mantine-color-dark-7:#242424;--mantine-color-dark-8:#1f1f1f;--mantine-color-dark-9:#141414;--mantine-color-gray-0:#f8f9fa;--mantine-color-gray-1:#f1f3f5;--mantine-color-gray-2:#e9ecef;--mantine-color-gray-3:#dee2e6;--mantine-color-gray-4:#ced4da;--mantine-color-gray-5:#adb5bd;--mantine-color-gray-6:#868e96;--mantine-color-gray-7:#495057;--mantine-color-gray-8:#343a40;--mantine-color-gray-9:#212529;--mantine-color-red-0:#fff5f5;--mantine-color-red-1:#ffe3e3;--mantine-color-red-2:#ffc9c9;--mantine-color-red-3:#ffa8a8;--mantine-color-red-4:#ff8787;--mantine-color-red-5:#ff6b6b;--mantine-color-red-6:#fa5252;--mantine-color-red-7:#f03e3e;--mantine-color-red-8:#e03131;--mantine-color-red-9:#c92a2a;--mantine-color-pink-0:#fff0f6;--mantine-color-pink-1:#ffdeeb;--mantine-color-pink-2:#fcc2d7;--mantine-color-pink-3:#faa2c1;--mantine-color-pink-4:#f783ac;--mantine-color-pink-5:#f06595;--mantine-color-pink-6:#e64980;--mantine-color-pink-7:#d6336c;--mantine-color-pink-8:#c2255c;--mantine-color-pink-9:#a61e4d;--mantine-color-grape-0:#f8f0fc;--mantine-color-grape-1:#f3d9fa;--mantine-color-grape-2:#eebefa;--mantine-color-grape-3:#e599f7;--mantine-color-grape-4:#da77f2;--mantine-color-grape-5:#cc5de8;--mantine-color-grape-6:#be4bdb;--mantine-color-grape-7:#ae3ec9;--mantine-color-grape-8:#9c36b5;--mantine-color-grape-9:#862e9c;--mantine-color-violet-0:#f3f0ff;--mantine-color-violet-1:#e5dbff;--mantine-color-violet-2:#d0bfff;--mantine-color-violet-3:#b197fc;--mantine-color-violet-4:#9775fa;--mantine-color-violet-5:#845ef7;--mantine-color-violet-6:#7950f2;--mantine-color-violet-7:#7048e8;--mantine-color-violet-8:#6741d9;--mantine-color-violet-9:#5f3dc4;--mantine-color-indigo-0:#edf2ff;--mantine-color-indigo-1:#dbe4ff;--mantine-color-indigo-2:#bac8ff;--mantine-color-indigo-3:#91a7ff;--mantine-color-indigo-4:#748ffc;--mantine-color-indigo-5:#5c7cfa;--mantine-color-indigo-6:#4c6ef5;--mantine-color-indigo-7:#4263eb;--mantine-color-indigo-8:#3b5bdb;--mantine-color-indigo-9:#364fc7;--mantine-color-blue-0:#e7f5ff;--mantine-color-blue-1:#d0ebff;--mantine-color-blue-2:#a5d8ff;--mantine-color-blue-3:#74c0fc;--mantine-color-blue-4:#4dabf7;--mantine-color-blue-5:#339af0;--mantine-color-blue-6:#228be6;--mantine-color-blue-7:#1c7ed6;--mantine-color-blue-8:#1971c2;--mantine-color-blue-9:#1864ab;--mantine-color-cyan-0:#e3fafc;--mantine-color-cyan-1:#c5f6fa;--mantine-color-cyan-2:#99e9f2;--mantine-color-cyan-3:#66d9e8;--mantine-color-cyan-4:#3bc9db;--mantine-color-cyan-5:#22b8cf;--mantine-color-cyan-6:#15aabf;--mantine-color-cyan-7:#1098ad;--mantine-color-cyan-8:#0c8599;--mantine-color-cyan-9:#0b7285;--mantine-color-teal-0:#e6fcf5;--mantine-color-teal-1:#c3fae8;--mantine-color-teal-2:#96f2d7;--mantine-color-teal-3:#63e6be;--mantine-color-teal-4:#38d9a9;--mantine-color-teal-5:#20c997;--mantine-color-teal-6:#12b886;--mantine-color-teal-7:#0ca678;--mantine-color-teal-8:#099268;--mantine-color-teal-9:#087f5b;--mantine-color-green-0:#ebfbee;--mantine-color-green-1:#d3f9d8;--mantine-color-green-2:#b2f2bb;--mantine-color-green-3:#8ce99a;--mantine-color-green-4:#69db7c;--mantine-color-green-5:#51cf66;--mantine-color-green-6:#40c057;--mantine-color-green-7:#37b24d;--mantine-color-green-8:#2f9e44;--mantine-color-green-9:#2b8a3e;--mantine-color-lime-0:#f4fce3;--mantine-color-lime-1:#e9fac8;--mantine-color-lime-2:#d8f5a2;--mantine-color-lime-3:#c0eb75;--mantine-color-lime-4:#a9e34b;--mantine-color-lime-5:#94d82d;--mantine-color-lime-6:#82c91e;--mantine-color-lime-7:#74b816;--mantine-color-lime-8:#66a80f;--mantine-color-lime-9:#5c940d;--mantine-color-yellow-0:#fff9db;--mantine-color-yellow-1:#fff3bf;--mantine-color-yellow-2:#ffec99;--mantine-color-yellow-3:#ffe066;--mantine-color-yellow-4:#ffd43b;--mantine-color-yellow-5:#fcc419;--mantine-color-yellow-6:#fab005;--mantine-color-yellow-7:#f59f00;--mantine-color-yellow-8:#f08c00;--mantine-color-yellow-9:#e67700;--mantine-color-orange-0:#fff4e6;--mantine-color-orange-1:#ffe8cc;--mantine-color-orange-2:#ffd8a8;--mantine-color-orange-3:#ffc078;--mantine-color-orange-4:#ffa94d;--mantine-color-orange-5:#ff922b;--mantine-color-orange-6:#fd7e14;--mantine-color-orange-7:#f76707;--mantine-color-orange-8:#e8590c;--mantine-color-orange-9:#d9480f;--mantine-h1-font-size:calc(2.125rem*var(--mantine-scale));--mantine-h1-line-height:1.3;--mantine-h1-font-weight:700;--mantine-h2-font-size:calc(1.625rem*var(--mantine-scale));--mantine-h2-line-height:1.35;--mantine-h2-font-weight:700;--mantine-h3-font-size:calc(1.375rem*var(--mantine-scale));--mantine-h3-line-height:1.4;--mantine-h3-font-weight:700;--mantine-h4-font-size:calc(1.125rem*var(--mantine-scale));--mantine-h4-line-height:1.45;--mantine-h4-font-weight:700;--mantine-h5-font-size:calc(1rem*var(--mantine-scale));--mantine-h5-line-height:1.5;--mantine-h5-font-weight:700;--mantine-h6-font-size:calc(.875rem*var(--mantine-scale));--mantine-h6-line-height:1.5;--mantine-h6-font-weight:700;color-scheme:var(--mantine-color-scheme)}:root[data-mantine-color-scheme=dark]{--mantine-color-scheme:dark;--mantine-primary-color-contrast:var(--mantine-color-white);--mantine-color-bright:var(--mantine-color-white);--mantine-color-text:var(--mantine-color-dark-0);--mantine-color-body:var(--mantine-color-dark-7);--mantine-color-error:var(--mantine-color-red-8);--mantine-color-placeholder:var(--mantine-color-dark-3);--mantine-color-anchor:var(--mantine-color-blue-4);--mantine-color-default:var(--mantine-color-dark-6);--mantine-color-default-hover:var(--mantine-color-dark-5);--mantine-color-default-color:var(--mantine-color-white);--mantine-color-default-border:var(--mantine-color-dark-4);--mantine-color-dimmed:var(--mantine-color-dark-2);--mantine-color-dark-text:var(--mantine-color-dark-4);--mantine-color-dark-filled:var(--mantine-color-dark-8);--mantine-color-dark-filled-hover:var(--mantine-color-dark-7);--mantine-color-dark-light:rgba(36,36,36,.15);--mantine-color-dark-light-hover:rgba(36,36,36,.2);--mantine-color-dark-light-color:var(--mantine-color-dark-3);--mantine-color-dark-outline:var(--mantine-color-dark-4);--mantine-color-dark-outline-hover:rgba(36,36,36,.05);--mantine-color-gray-text:var(--mantine-color-gray-4);--mantine-color-gray-filled:var(--mantine-color-gray-8);--mantine-color-gray-filled-hover:var(--mantine-color-gray-9);--mantine-color-gray-light:hsla(210,7%,56%,.15);--mantine-color-gray-light-hover:hsla(210,7%,56%,.2);--mantine-color-gray-light-color:var(--mantine-color-gray-3);--mantine-color-gray-outline:var(--mantine-color-gray-4);--mantine-color-gray-outline-hover:rgba(206,212,218,.05);--mantine-color-red-text:var(--mantine-color-red-4);--mantine-color-red-filled:var(--mantine-color-red-8);--mantine-color-red-filled-hover:var(--mantine-color-red-9);--mantine-color-red-light:rgba(250,82,82,.15);--mantine-color-red-light-hover:rgba(250,82,82,.2);--mantine-color-red-light-color:var(--mantine-color-red-3);--mantine-color-red-outline:var(--mantine-color-red-4);--mantine-color-red-outline-hover:hsla(0,100%,76%,.05);--mantine-color-pink-text:var(--mantine-color-pink-4);--mantine-color-pink-filled:var(--mantine-color-pink-8);--mantine-color-pink-filled-hover:var(--mantine-color-pink-9);--mantine-color-pink-light:rgba(230,73,128,.15);--mantine-color-pink-light-hover:rgba(230,73,128,.2);--mantine-color-pink-light-color:var(--mantine-color-pink-3);--mantine-color-pink-outline:var(--mantine-color-pink-4);--mantine-color-pink-outline-hover:rgba(247,131,172,.05);--mantine-color-grape-text:var(--mantine-color-grape-4);--mantine-color-grape-filled:var(--mantine-color-grape-8);--mantine-color-grape-filled-hover:var(--mantine-color-grape-9);--mantine-color-grape-light:rgba(190,75,219,.15);--mantine-color-grape-light-hover:rgba(190,75,219,.2);--mantine-color-grape-light-color:var(--mantine-color-grape-3);--mantine-color-grape-outline:var(--mantine-color-grape-4);--mantine-color-grape-outline-hover:rgba(218,119,242,.05);--mantine-color-violet-text:var(--mantine-color-violet-4);--mantine-color-violet-filled:var(--mantine-color-violet-8);--mantine-color-violet-filled-hover:var(--mantine-color-violet-9);--mantine-color-violet-light:rgba(121,80,242,.15);--mantine-color-violet-light-hover:rgba(121,80,242,.2);--mantine-color-violet-light-color:var(--mantine-color-violet-3);--mantine-color-violet-outline:var(--mantine-color-violet-4);--mantine-color-violet-outline-hover:rgba(151,117,250,.05);--mantine-color-indigo-text:var(--mantine-color-indigo-4);--mantine-color-indigo-filled:var(--mantine-color-indigo-8);--mantine-color-indigo-filled-hover:var(--mantine-color-indigo-9);--mantine-color-indigo-light:rgba(76,110,245,.15);--mantine-color-indigo-light-hover:rgba(76,110,245,.2);--mantine-color-indigo-light-color:var(--mantine-color-indigo-3);--mantine-color-indigo-outline:var(--mantine-color-indigo-4);--mantine-color-indigo-outline-hover:rgba(116,143,252,.05);--mantine-color-blue-text:var(--mantine-color-blue-4);--mantine-color-blue-filled:var(--mantine-color-blue-8);--mantine-color-blue-filled-hover:var(--mantine-color-blue-9);--mantine-color-blue-light:rgba(34,139,230,.15);--mantine-color-blue-light-hover:rgba(34,139,230,.2);--mantine-color-blue-light-color:var(--mantine-color-blue-3);--mantine-color-blue-outline:var(--mantine-color-blue-4);--mantine-color-blue-outline-hover:rgba(77,171,247,.05);--mantine-color-cyan-text:var(--mantine-color-cyan-4);--mantine-color-cyan-filled:var(--mantine-color-cyan-8);--mantine-color-cyan-filled-hover:var(--mantine-color-cyan-9);--mantine-color-cyan-light:rgba(21,170,191,.15);--mantine-color-cyan-light-hover:rgba(21,170,191,.2);--mantine-color-cyan-light-color:var(--mantine-color-cyan-3);--mantine-color-cyan-outline:var(--mantine-color-cyan-4);--mantine-color-cyan-outline-hover:rgba(59,201,219,.05);--mantine-color-teal-text:var(--mantine-color-teal-4);--mantine-color-teal-filled:var(--mantine-color-teal-8);--mantine-color-teal-filled-hover:var(--mantine-color-teal-9);--mantine-color-teal-light:rgba(18,184,134,.15);--mantine-color-teal-light-hover:rgba(18,184,134,.2);--mantine-color-teal-light-color:var(--mantine-color-teal-3);--mantine-color-teal-outline:var(--mantine-color-teal-4);--mantine-color-teal-outline-hover:rgba(56,217,169,.05);--mantine-color-green-text:var(--mantine-color-green-4);--mantine-color-green-filled:var(--mantine-color-green-8);--mantine-color-green-filled-hover:var(--mantine-color-green-9);--mantine-color-green-light:rgba(64,192,87,.15);--mantine-color-green-light-hover:rgba(64,192,87,.2);--mantine-color-green-light-color:var(--mantine-color-green-3);--mantine-color-green-outline:var(--mantine-color-green-4);--mantine-color-green-outline-hover:rgba(105,219,124,.05);--mantine-color-lime-text:var(--mantine-color-lime-4);--mantine-color-lime-filled:var(--mantine-color-lime-8);--mantine-color-lime-filled-hover:var(--mantine-color-lime-9);--mantine-color-lime-light:rgba(130,201,30,.15);--mantine-color-lime-light-hover:rgba(130,201,30,.2);--mantine-color-lime-light-color:var(--mantine-color-lime-3);--mantine-color-lime-outline:var(--mantine-color-lime-4);--mantine-color-lime-outline-hover:rgba(169,227,75,.05);--mantine-color-yellow-text:var(--mantine-color-yellow-4);--mantine-color-yellow-filled:var(--mantine-color-yellow-8);--mantine-color-yellow-filled-hover:var(--mantine-color-yellow-9);--mantine-color-yellow-light:rgba(250,176,5,.15);--mantine-color-yellow-light-hover:rgba(250,176,5,.2);--mantine-color-yellow-light-color:var(--mantine-color-yellow-3);--mantine-color-yellow-outline:var(--mantine-color-yellow-4);--mantine-color-yellow-outline-hover:rgba(255,212,59,.05);--mantine-color-orange-text:var(--mantine-color-orange-4);--mantine-color-orange-filled:var(--mantine-color-orange-8);--mantine-color-orange-filled-hover:var(--mantine-color-orange-9);--mantine-color-orange-light:rgba(253,126,20,.15);--mantine-color-orange-light-hover:rgba(253,126,20,.2);--mantine-color-orange-light-color:var(--mantine-color-orange-3);--mantine-color-orange-outline:var(--mantine-color-orange-4);--mantine-color-orange-outline-hover:rgba(255,169,77,.05)}:root[data-mantine-color-scheme=light]{--mantine-color-scheme:light;--mantine-color-bright:var(--mantine-color-black);--mantine-color-text:var(--mantine-color-black);--mantine-color-body:var(--mantine-color-white);--mantine-primary-color-contrast:var(--mantine-color-white);--mantine-color-error:var(--mantine-color-red-6);--mantine-color-placeholder:var(--mantine-color-gray-5);--mantine-color-anchor:var(--mantine-primary-color-filled);--mantine-color-default:var(--mantine-color-white);--mantine-color-default-hover:var(--mantine-color-gray-0);--mantine-color-default-color:var(--mantine-color-gray-9);--mantine-color-default-border:var(--mantine-color-gray-4);--mantine-color-dimmed:var(--mantine-color-gray-6);--mantine-color-dark-text:var(--mantine-color-dark-filled);--mantine-color-dark-filled:var(--mantine-color-dark-6);--mantine-color-dark-filled-hover:var(--mantine-color-dark-7);--mantine-color-dark-light:rgba(56,56,56,.1);--mantine-color-dark-light-hover:rgba(56,56,56,.12);--mantine-color-dark-light-color:var(--mantine-color-dark-6);--mantine-color-dark-outline:var(--mantine-color-dark-6);--mantine-color-dark-outline-hover:rgba(56,56,56,.05);--mantine-color-gray-text:var(--mantine-color-gray-filled);--mantine-color-gray-filled:var(--mantine-color-gray-6);--mantine-color-gray-filled-hover:var(--mantine-color-gray-7);--mantine-color-gray-light:hsla(210,7%,56%,.1);--mantine-color-gray-light-hover:hsla(210,7%,56%,.12);--mantine-color-gray-light-color:var(--mantine-color-gray-6);--mantine-color-gray-outline:var(--mantine-color-gray-6);--mantine-color-gray-outline-hover:hsla(210,7%,56%,.05);--mantine-color-red-text:var(--mantine-color-red-filled);--mantine-color-red-filled:var(--mantine-color-red-6);--mantine-color-red-filled-hover:var(--mantine-color-red-7);--mantine-color-red-light:rgba(250,82,82,.1);--mantine-color-red-light-hover:rgba(250,82,82,.12);--mantine-color-red-light-color:var(--mantine-color-red-6);--mantine-color-red-outline:var(--mantine-color-red-6);--mantine-color-red-outline-hover:rgba(250,82,82,.05);--mantine-color-pink-text:var(--mantine-color-pink-filled);--mantine-color-pink-filled:var(--mantine-color-pink-6);--mantine-color-pink-filled-hover:var(--mantine-color-pink-7);--mantine-color-pink-light:rgba(230,73,128,.1);--mantine-color-pink-light-hover:rgba(230,73,128,.12);--mantine-color-pink-light-color:var(--mantine-color-pink-6);--mantine-color-pink-outline:var(--mantine-color-pink-6);--mantine-color-pink-outline-hover:rgba(230,73,128,.05);--mantine-color-grape-text:var(--mantine-color-grape-filled);--mantine-color-grape-filled:var(--mantine-color-grape-6);--mantine-color-grape-filled-hover:var(--mantine-color-grape-7);--mantine-color-grape-light:rgba(190,75,219,.1);--mantine-color-grape-light-hover:rgba(190,75,219,.12);--mantine-color-grape-light-color:var(--mantine-color-grape-6);--mantine-color-grape-outline:var(--mantine-color-grape-6);--mantine-color-grape-outline-hover:rgba(190,75,219,.05);--mantine-color-violet-text:var(--mantine-color-violet-filled);--mantine-color-violet-filled:var(--mantine-color-violet-6);--mantine-color-violet-filled-hover:var(--mantine-color-violet-7);--mantine-color-violet-light:rgba(121,80,242,.1);--mantine-color-violet-light-hover:rgba(121,80,242,.12);--mantine-color-violet-light-color:var(--mantine-color-violet-6);--mantine-color-violet-outline:var(--mantine-color-violet-6);--mantine-color-violet-outline-hover:rgba(121,80,242,.05);--mantine-color-indigo-text:var(--mantine-color-indigo-filled);--mantine-color-indigo-filled:var(--mantine-color-indigo-6);--mantine-color-indigo-filled-hover:var(--mantine-color-indigo-7);--mantine-color-indigo-light:rgba(76,110,245,.1);--mantine-color-indigo-light-hover:rgba(76,110,245,.12);--mantine-color-indigo-light-color:var(--mantine-color-indigo-6);--mantine-color-indigo-outline:var(--mantine-color-indigo-6);--mantine-color-indigo-outline-hover:rgba(76,110,245,.05);--mantine-color-blue-text:var(--mantine-color-blue-filled);--mantine-color-blue-filled:var(--mantine-color-blue-6);--mantine-color-blue-filled-hover:var(--mantine-color-blue-7);--mantine-color-blue-light:rgba(34,139,230,.1);--mantine-color-blue-light-hover:rgba(34,139,230,.12);--mantine-color-blue-light-color:var(--mantine-color-blue-6);--mantine-color-blue-outline:var(--mantine-color-blue-6);--mantine-color-blue-outline-hover:rgba(34,139,230,.05);--mantine-color-cyan-text:var(--mantine-color-cyan-filled);--mantine-color-cyan-filled:var(--mantine-color-cyan-6);--mantine-color-cyan-filled-hover:var(--mantine-color-cyan-7);--mantine-color-cyan-light:rgba(21,170,191,.1);--mantine-color-cyan-light-hover:rgba(21,170,191,.12);--mantine-color-cyan-light-color:var(--mantine-color-cyan-6);--mantine-color-cyan-outline:var(--mantine-color-cyan-6);--mantine-color-cyan-outline-hover:rgba(21,170,191,.05);--mantine-color-teal-text:var(--mantine-color-teal-filled);--mantine-color-teal-filled:var(--mantine-color-teal-6);--mantine-color-teal-filled-hover:var(--mantine-color-teal-7);--mantine-color-teal-light:rgba(18,184,134,.1);--mantine-color-teal-light-hover:rgba(18,184,134,.12);--mantine-color-teal-light-color:var(--mantine-color-teal-6);--mantine-color-teal-outline:var(--mantine-color-teal-6);--mantine-color-teal-outline-hover:rgba(18,184,134,.05);--mantine-color-green-text:var(--mantine-color-green-filled);--mantine-color-green-filled:var(--mantine-color-green-6);--mantine-color-green-filled-hover:var(--mantine-color-green-7);--mantine-color-green-light:rgba(64,192,87,.1);--mantine-color-green-light-hover:rgba(64,192,87,.12);--mantine-color-green-light-color:var(--mantine-color-green-6);--mantine-color-green-outline:var(--mantine-color-green-6);--mantine-color-green-outline-hover:rgba(64,192,87,.05);--mantine-color-lime-text:var(--mantine-color-lime-filled);--mantine-color-lime-filled:var(--mantine-color-lime-6);--mantine-color-lime-filled-hover:var(--mantine-color-lime-7);--mantine-color-lime-light:rgba(130,201,30,.1);--mantine-color-lime-light-hover:rgba(130,201,30,.12);--mantine-color-lime-light-color:var(--mantine-color-lime-6);--mantine-color-lime-outline:var(--mantine-color-lime-6);--mantine-color-lime-outline-hover:rgba(130,201,30,.05);--mantine-color-yellow-text:var(--mantine-color-yellow-filled);--mantine-color-yellow-filled:var(--mantine-color-yellow-6);--mantine-color-yellow-filled-hover:var(--mantine-color-yellow-7);--mantine-color-yellow-light:rgba(250,176,5,.1);--mantine-color-yellow-light-hover:rgba(250,176,5,.12);--mantine-color-yellow-light-color:var(--mantine-color-yellow-6);--mantine-color-yellow-outline:var(--mantine-color-yellow-6);--mantine-color-yellow-outline-hover:rgba(250,176,5,.05);--mantine-color-orange-text:var(--mantine-color-orange-filled);--mantine-color-orange-filled:var(--mantine-color-orange-6);--mantine-color-orange-filled-hover:var(--mantine-color-orange-7);--mantine-color-orange-light:rgba(253,126,20,.1);--mantine-color-orange-light-hover:rgba(253,126,20,.12);--mantine-color-orange-light-color:var(--mantine-color-orange-6);--mantine-color-orange-outline:var(--mantine-color-orange-6);--mantine-color-orange-outline-hover:rgba(253,126,20,.05)}.m-d57069b5{--scrollarea-scrollbar-size:calc(.75rem*var(--mantine-scale));overflow:hidden;position:relative}.m-c0783ff9{-ms-overflow-style:none;-webkit-overflow-scrolling:touch;height:100%;scrollbar-width:none;width:100%}.m-c0783ff9::-webkit-scrollbar{display:none}.m-c0783ff9:where([data-scrollbars=xy],[data-scrollbars=y]):where([data-offset-scrollbars=xy],[data-offset-scrollbars=y]){padding-left:unset;padding-right:var(--scrollarea-scrollbar-size)}:where([dir=rtl]) .m-c0783ff9:where([data-scrollbars=xy],[data-scrollbars=y]):where([data-offset-scrollbars=xy],[data-offset-scrollbars=y]){padding-left:var(--scrollarea-scrollbar-size);padding-right:unset}.m-c0783ff9:where([data-scrollbars=xy],[data-scrollbars=x]):where([data-offset-scrollbars=xy] [data-offset-scrollbars=x]){padding-bottom:var(--scrollarea-scrollbar-size)}.m-f8f631dd{display:table;min-width:100%}.m-c44ba933{background-color:transparent;box-sizing:border-box;display:flex;flex-direction:row;padding:calc(var(--scrollarea-scrollbar-size)/5);touch-action:none;transition:background-color .15s ease,opacity .15s ease;-webkit-user-select:none;user-select:none}@media (hover:hover){:where([data-mantine-color-scheme=light]) .m-c44ba933:hover{background-color:var(--mantine-color-gray-0)}:where([data-mantine-color-scheme=light]) .m-c44ba933:hover>.m-d8b5e363{background-color:#00000080}:where([data-mantine-color-scheme=dark]) .m-c44ba933:hover{background-color:var(--mantine-color-dark-8)}:where([data-mantine-color-scheme=dark]) .m-c44ba933:hover>.m-d8b5e363{background-color:#ffffff80}}@media (hover:none){:where([data-mantine-color-scheme=light]) .m-c44ba933:active{background-color:var(--mantine-color-gray-0)}:where([data-mantine-color-scheme=light]) .m-c44ba933:active>.m-d8b5e363{background-color:#00000080}:where([data-mantine-color-scheme=dark]) .m-c44ba933:active{background-color:var(--mantine-color-dark-8)}:where([data-mantine-color-scheme=dark]) .m-c44ba933:active>.m-d8b5e363{background-color:#ffffff80}}.m-c44ba933:where([data-hidden],[data-state=hidden]){display:none}.m-c44ba933:where([data-orientation=vertical]){bottom:var(--sa-corner-width);right:0;top:0;width:var(--scrollarea-scrollbar-size)}[dir=rtl] .m-c44ba933:where([data-orientation=vertical]){left:0;right:unset}.m-c44ba933:where([data-orientation=horizontal]){bottom:0;flex-direction:column;height:var(--scrollarea-scrollbar-size);left:0;right:var(--sa-corner-height)}[dir=rtl] .m-c44ba933:where([data-orientation=horizontal]){left:var(--sa-corner-height);right:0}.m-d8b5e363{border-radius:var(--scrollarea-scrollbar-size);flex:1;overflow:hidden;position:relative;transition:background-color .15s ease}.m-d8b5e363:before{content:'""';height:100%;left:50%;min-height:calc(2.75rem*var(--mantine-scale));min-width:calc(2.75rem*var(--mantine-scale));position:absolute;top:50%;transform:translate(-50%,-50%);width:100%}[data-mantine-color-scheme=light] .m-d8b5e363{background-color:#0006}[data-mantine-color-scheme=dark] .m-d8b5e363{background-color:#fff6}.m-21657268{bottom:0;display:block;opacity:0;position:absolute;right:0;transition:opacity .15s ease}[dir=rtl] .m-21657268{bottom:0;left:0;right:unset}:where([data-mantine-color-scheme=light]) .m-21657268{background-color:var(--mantine-color-gray-0)}:where([data-mantine-color-scheme=dark]) .m-21657268{background-color:var(--mantine-color-dark-8)}.m-21657268:where([data-hovered]){opacity:1}.m-21657268:where([data-hidden]){display:none}.m-87cf2631{-webkit-tap-highlight-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:transparent;border:0;color:inherit;cursor:pointer;font-size:var(--mantine-font-size-md);padding:0;text-align:left;text-decoration:none;touch-action:manipulation}:where([dir=rtl]) .m-87cf2631{text-align:right}.m-515a97f8{clip:rect(0 0 0 0);border:0;height:1px;margin:-1px;overflow:hidden;padding:0;position:absolute;white-space:nowrap;width:1px}.m-1b7284a3{--paper-radius:var(--mantine-radius-default);-webkit-tap-highlight-color:transparent;background-color:var(--mantine-color-body);border-radius:var(--paper-radius);box-shadow:var(--paper-shadow);display:block;outline:0;text-decoration:none;touch-action:manipulation}:where([data-mantine-color-scheme=light]) .m-1b7284a3:where([data-with-border]){border:calc(.0625rem*var(--mantine-scale)) solid var(--mantine-color-gray-3)}:where([data-mantine-color-scheme=dark]) .m-1b7284a3:where([data-with-border]){border:calc(.0625rem*var(--mantine-scale)) solid var(--mantine-color-dark-4)}.m-38a85659{border:calc(.0625rem*var(--mantine-scale)) solid var(--popover-border-color);border-radius:var(--popover-radius,var(--mantine-radius-default));box-shadow:var(--popover-shadow,none);padding:var(--mantine-spacing-sm) var(--mantine-spacing-md);position:absolute}.m-38a85659:focus{outline:none}[data-mantine-color-scheme=light] .m-38a85659{--popover-border-color:var(--mantine-color-gray-2);background-color:var(--mantine-color-white)}[data-mantine-color-scheme=dark] .m-38a85659{--popover-border-color:var(--mantine-color-dark-4);background-color:var(--mantine-color-dark-6)}.m-a31dc6c1{background-color:inherit;border:calc(.0625rem*var(--mantine-scale)) solid var(--popover-border-color);z-index:1}.m-5ae2e3c{--loader-size-xs:calc(1.125rem*var(--mantine-scale));--loader-size-sm:calc(1.375rem*var(--mantine-scale));--loader-size-md:calc(2.25rem*var(--mantine-scale));--loader-size-lg:calc(2.75rem*var(--mantine-scale));--loader-size-xl:calc(3.625rem*var(--mantine-scale));--loader-size:var(--loader-size-md);--loader-color:var(--mantine-primary-color-filled)}@keyframes m-5d2b3b9d{0%{opacity:0;transform:scale(.6)}50%,to{transform:scale(1)}}.m-7a2bd4cd{display:flex;gap:calc(var(--loader-size)/5);height:var(--loader-size);position:relative;width:var(--loader-size)}.m-870bb79{animation:m-5d2b3b9d 1.2s cubic-bezier(0,.5,.5,1) infinite;background:var(--loader-color);border-radius:calc(.125rem*var(--mantine-scale));flex:1}.m-870bb79:first-of-type{animation-delay:-.24s}.m-870bb79:nth-of-type(2){animation-delay:-.12s}.m-870bb79:nth-of-type(3){animation-delay:0}@keyframes m-aac34a1{0%,to{opacity:1;transform:scale(1)}50%{opacity:.5;transform:scale(.6)}}.m-4e3f22d7{align-items:center;display:flex;gap:calc(var(--loader-size)/10);height:var(--loader-size);justify-content:center;position:relative;width:var(--loader-size)}.m-870c4af{animation:m-aac34a1 .8s linear infinite;background:var(--loader-color);border-radius:50%;height:calc(var(--loader-size)/3 - var(--loader-size)/15);width:calc(var(--loader-size)/3 - var(--loader-size)/15)}.m-870c4af:nth-child(2){animation-delay:.4s}@keyframes m-f8e89c4b{0%{transform:rotate(0)}to{transform:rotate(1turn)}}.m-b34414df{display:inline-block}.m-b34414df,.m-b34414df:after{height:var(--loader-size);width:var(--loader-size)}.m-b34414df:after{animation:m-f8e89c4b 1.2s linear infinite;border-color:var(--loader-color) var(--loader-color) var(--loader-color) transparent;border-radius:calc(625rem*var(--mantine-scale));border-style:solid;border-width:calc(var(--loader-size)/8);content:"";display:block}.m-8d3f4000{--ai-size-xs:calc(1.125rem*var(--mantine-scale));--ai-size-sm:calc(1.375rem*var(--mantine-scale));--ai-size-md:calc(1.75rem*var(--mantine-scale));--ai-size-lg:calc(2.125rem*var(--mantine-scale));--ai-size-xl:calc(2.75rem*var(--mantine-scale));--ai-size-input-xs:calc(1.875rem*var(--mantine-scale));--ai-size-input-sm:calc(2.25rem*var(--mantine-scale));--ai-size-input-md:calc(2.625rem*var(--mantine-scale));--ai-size-input-lg:calc(3.125rem*var(--mantine-scale));--ai-size-input-xl:calc(3.75rem*var(--mantine-scale));--ai-size:var(--ai-size-md);--ai-color:var(--mantine-color-white);align-items:center;background:var(--_ai-bg,var(--ai-bg,var(--mantine-primary-color-filled)));border:var(--ai-bd,calc(.0625rem*var(--mantine-scale)) solid transparent);border-radius:var(--ai-radius,var(--mantine-radius-default));color:var(--_ai-color,var(--ai-color,var(--mantine-color-white)));cursor:var(--_ai-cursor,pointer);display:inline-flex;height:var(--ai-size);justify-content:center;line-height:1;min-height:var(--ai-size);min-width:var(--ai-size);overflow:hidden;position:relative;-webkit-user-select:none;user-select:none;width:var(--ai-size)}@media (hover:hover){.m-8d3f4000:hover:not([data-loading]):not(:disabled):not([data-disabled]){--_ai-bg:var(--ai-hover,var(--mantine-primary-color-filled-hover));--_ai-color:var(--ai-hover-color)}}@media (hover:none){.m-8d3f4000:active:not([data-loading]):not(:disabled):not([data-disabled]){--_ai-bg:var(--ai-hover,var(--mantine-primary-color-filled-hover));--_ai-color:var(--ai-hover-color)}}[data-mantine-color-scheme=light] .m-8d3f4000{--_ai-loading-overlay-bg:hsla(0,0%,100%,.35);--_ai-disabled-bg:var(--mantine-color-gray-1);--_ai-disabled-color:var(--mantine-color-gray-5)}[data-mantine-color-scheme=dark] .m-8d3f4000{--_ai-loading-overlay-bg:rgba(0,0,0,.35);--_ai-disabled-bg:var(--mantine-color-dark-6);--_ai-disabled-color:var(--mantine-color-dark-3)}.m-8d3f4000[data-loading]{--_ai-cursor:not-allowed}.m-8d3f4000[data-loading] .m-302b9fb1{opacity:1;transform:none}.m-8d3f4000[data-loading] .m-8d3afb97{opacity:0;transform:translateY(100%)}.m-8d3f4000:disabled:not([data-loading]),.m-8d3f4000[data-disabled]:not([data-loading]){--_ai-cursor:not-allowed;--_ai-bg:var(--_ai-disabled-bg);--_ai-color:var(--_ai-disabled-color);--ai-bd:calc(.0625rem*var(--mantine-scale)) solid transparent!important}.m-8d3f4000:disabled:not([data-loading]):active,.m-8d3f4000[data-disabled]:not([data-loading]):active{transform:none}.m-302b9fb1{align-items:center;background-color:var(--_ai-loading-overlay-bg);border-radius:var(--ai-radius,var(--mantine-radius-default));display:flex;inset:calc(-.0625rem*var(--mantine-scale));justify-content:center;opacity:0;position:absolute;transform:translateY(-100%);transition:transform .15s ease,opacity .1s ease}.m-1a0f1b21{--ai-border-width:calc(.0625rem*var(--mantine-scale));display:flex}.m-1a0f1b21[data-orientation=horizontal]{flex-direction:row}.m-1a0f1b21[data-orientation=horizontal] .m-8d3f4000:not(:only-child):first-child{border-bottom-right-radius:0;border-right-width:calc(var(--ai-border-width)/2);border-top-right-radius:0}.m-1a0f1b21[data-orientation=horizontal] .m-8d3f4000:not(:only-child):last-child{border-bottom-left-radius:0;border-left-width:calc(var(--ai-border-width)/2);border-top-left-radius:0}.m-1a0f1b21[data-orientation=horizontal] .m-8d3f4000:not(:only-child):not(:first-child):not(:last-child){border-left-width:calc(var(--ai-border-width)/2);border-radius:0;border-right-width:calc(var(--ai-border-width)/2)}[dir=rtl] .m-1a0f1b21[data-orientation=horizontal] .m-8d3f4000:not(:only-child):first-child{border:var(--ai-bd,calc(.0625rem*var(--mantine-scale)) solid transparent);border-radius:var(--ai-radius,var(--mantine-radius-default));border-bottom-left-radius:0;border-left-width:calc(var(--ai-border-width)/2);border-top-left-radius:0}[dir=rtl] .m-1a0f1b21[data-orientation=horizontal] .m-8d3f4000:not(:only-child):last-child{border:var(--ai-bd,calc(.0625rem*var(--mantine-scale)) solid transparent);border-radius:var(--ai-radius,var(--mantine-radius-default));border-bottom-right-radius:0;border-right-width:calc(var(--ai-border-width)/2);border-top-right-radius:0}.m-1a0f1b21[data-orientation=vertical]{flex-direction:column}.m-1a0f1b21[data-orientation=vertical] .m-8d3f4000:not(:only-child):first-child{border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-width:calc(var(--ai-border-width)/2)}.m-1a0f1b21[data-orientation=vertical] .m-8d3f4000:not(:only-child):last-child{border-top-left-radius:0;border-top-right-radius:0;border-top-width:calc(var(--ai-border-width)/2)}.m-1a0f1b21[data-orientation=vertical] .m-8d3f4000:not(:only-child):not(:first-child):not(:last-child){border-bottom-width:calc(var(--ai-border-width)/2);border-radius:0;border-top-width:calc(var(--ai-border-width)/2)}.m-8d3afb97{display:flex;height:100%;transition:transform .15s ease,opacity .1s ease;width:100%}.m-86a44da5,.m-8d3afb97{align-items:center;justify-content:center}.m-86a44da5{--cb-size-xs:calc(1.125rem*var(--mantine-scale));--cb-size-sm:calc(1.375rem*var(--mantine-scale));--cb-size-md:calc(1.75rem*var(--mantine-scale));--cb-size-lg:calc(2.125rem*var(--mantine-scale));--cb-size-xl:calc(2.75rem*var(--mantine-scale));--cb-size:var(--cb-size-md);--cb-icon-size:70%;--cb-radius:var(--mantine-radius-default);border-radius:var(--cb-radius);color:var(--_cb-color);display:inline-flex;height:var(--cb-size);line-height:1;min-height:var(--cb-size);min-width:var(--cb-size);position:relative;-webkit-user-select:none;user-select:none;width:var(--cb-size)}:where([data-mantine-color-scheme=light]) .m-86a44da5{color:var(--mantine-color-gray-7)}:where([data-mantine-color-scheme=dark]) .m-86a44da5{color:var(--mantine-color-dark-1)}@media (hover:hover){:where([data-mantine-color-scheme=light]) .m-220c80f2:hover{background-color:var(--mantine-color-gray-0)}:where([data-mantine-color-scheme=dark]) .m-220c80f2:hover{background-color:var(--mantine-color-dark-6)}}@media (hover:none){:where([data-mantine-color-scheme=light]) .m-220c80f2:active{background-color:var(--mantine-color-gray-0)}:where([data-mantine-color-scheme=dark]) .m-220c80f2:active{background-color:var(--mantine-color-dark-6)}}.m-4081bf90{align-items:var(--group-align,center);display:flex;flex-direction:row;flex-wrap:var(--group-wrap,wrap);gap:var(--group-gap,var(--mantine-spacing-md));justify-content:var(--group-justify,flex-start)}.m-4081bf90:where([data-grow])>*{flex-grow:1;max-width:var(--group-child-width)}.m-9814e45f{backdrop-filter:var(--overlay-filter);-webkit-backdrop-filter:var(--overlay-filter);background:var(--overlay-bg,rgba(0,0,0,.6));border-radius:var(--overlay-radius,0);top:0;right:0;bottom:0;left:0;position:absolute;z-index:var(--overlay-z-index)}.m-9814e45f:where([data-fixed]){position:fixed}.m-9814e45f:where([data-center]){align-items:center;display:flex;justify-content:center}.m-615af6c9{font-size:var(--mantine-font-size-md);font-weight:400;line-height:1;margin:0;padding:0}.m-b5489c3c{align-items:center;background-color:var(--mantine-color-body);display:flex;justify-content:space-between;min-height:calc(3.75rem*var(--mantine-scale));padding:var(--mb-padding,var(--mantine-spacing-md));padding-left:var(--_pl,var(--mb-padding,var(--mantine-spacing-md)));padding-right:var(--_pr,calc(var(--mb-padding, var(--mantine-spacing-md)) - .3125rem*var(--mantine-scale)));position:sticky;top:0;z-index:1000}[dir=rtl] .m-b5489c3c{--_pr:var(--mb-padding,var(--mantine-spacing-md));--_pl:calc(var(--mb-padding, var(--mantine-spacing-md)) - .3125rem*var(--mantine-scale))}.m-60c222c7{bottom:0;pointer-events:none;position:fixed;top:0;width:100%;z-index:var(--mb-z-index)}.m-fd1ab0aa{box-shadow:var(--mb-shadow,var(--mantine-shadow-xl));pointer-events:all}.m-606cb269{margin-left:var(--_close-ml,auto);margin-right:var(--_close-mr,0)}[dir=rtl] .m-606cb269{--_close-ml:0;--_close-mr:auto}.m-5df29311{padding:var(--mb-padding,var(--mantine-spacing-md));padding-top:var(--_pt,var(--mb-padding,var(--mantine-spacing-md)))}.m-5df29311:not(:only-child){--_pt:0}.m-6c018570{--input-height-xs:calc(1.875rem*var(--mantine-scale));--input-height-sm:calc(2.25rem*var(--mantine-scale));--input-height-md:calc(2.625rem*var(--mantine-scale));--input-height-lg:calc(3.125rem*var(--mantine-scale));--input-height-xl:calc(3.75rem*var(--mantine-scale));--input-padding-y-xs:calc(.3125rem*var(--mantine-scale));--input-padding-y-sm:calc(.375rem*var(--mantine-scale));--input-padding-y-md:calc(.5rem*var(--mantine-scale));--input-padding-y-lg:calc(.625rem*var(--mantine-scale));--input-padding-y-xl:calc(.8125rem*var(--mantine-scale));--_input-height:var(--input-height,var(--input-height-sm));--_input-radius:var(--input-radius,var(--mantine-radius-default));--_input-cursor:text;--_input-text-align:left;--_input-line-height:calc(var(--_input-height) - .125rem*var(--mantine-scale));--_input-padding:calc(var(--_input-height)/3);--_input-padding-left:var(--_input-padding);--_input-padding-right:var(--_input-padding);--_input-placeholder-color:var(--mantine-color-placeholder);--_input-color:var(--mantine-color-text);--_input-left-section-size:var( --input-left-section-width,calc(var(--_input-height) - .125rem*var(--mantine-scale)) );--_input-right-section-size:var( --input-right-section-width,calc(var(--_input-height) - .125rem*var(--mantine-scale)) );--_input-size:var(--_input-height);--_section-y:calc(.0625rem*var(--mantine-scale));--_left-section-left:calc(.0625rem*var(--mantine-scale));--_left-section-right:unset;--_left-section-border-radius:var(--_input-radius) 0 0 var(--_input-radius);--_right-section-left:unset;--_right-section-right:calc(.0625rem*var(--mantine-scale));--_right-section-border-radius:0 var(--_input-radius) var(--_input-radius) 0;margin-bottom:var(--input-margin-bottom,0);margin-top:var(--input-margin-top,0);position:relative}.m-6c018570[data-variant=unstyled]{--input-padding:0;--input-padding-y:0;--_input-padding-left:0;--_input-padding-right:0}.m-6c018570[data-pointer]{--_input-cursor:pointer}.m-6c018570[data-multiline]{--input-padding-y-xs:calc(.28125rem*var(--mantine-scale));--input-padding-y-sm:calc(.34375rem*var(--mantine-scale));--input-padding-y-md:calc(.4375rem*var(--mantine-scale));--input-padding-y-lg:calc(.59375rem*var(--mantine-scale));--input-padding-y-xl:calc(.8125rem*var(--mantine-scale));--_input-size:auto;--_input-line-height:var(--mantine-line-height);--input-padding-y:var(--input-padding-y-sm)}.m-6c018570[data-with-left-section]{--_input-padding-left:var(--_input-left-section-size)}[dir=rtl] .m-6c018570[data-with-left-section]{--_input-padding-right:var(--_input-left-section-size)}[dir=rtl] .m-6c018570[data-with-left-section]:not([data-with-right-section]){--_input-padding-left:var(--_input-padding)}.m-6c018570[data-with-right-section]{--_input-padding-right:var(--_input-right-section-size)}[dir=rtl] .m-6c018570[data-with-right-section]{--_input-padding-left:var(--_input-right-section-size)}[dir=rtl] .m-6c018570[data-with-right-section]:not([data-with-left-section]){--_input-padding-right:var(--_input-padding)}[data-mantine-color-scheme=light] .m-6c018570{--_input-disabled-bg:var(--mantine-color-gray-1);--_input-disabled-color:var(--mantine-color-gray-6)}[data-mantine-color-scheme=light] .m-6c018570[data-variant=default]{--_input-bd:var(--mantine-color-gray-4);--_input-bg:var(--mantine-color-white);--_input-bd-focus:var(--mantine-primary-color-filled)}[data-mantine-color-scheme=light] .m-6c018570[data-variant=filled]{--_input-bd:transparent;--_input-bg:var(--mantine-color-gray-1);--_input-bd-focus:var(--mantine-primary-color-filled)}[data-mantine-color-scheme=light] .m-6c018570[data-variant=unstyled]{--_input-bd:transparent;--_input-bg:transparent;--_input-bd-focus:transparent}[data-mantine-color-scheme=dark] .m-6c018570{--_input-disabled-bg:var(--mantine-color-dark-6);--_input-disabled-color:var(--mantine-color-dark-2)}[data-mantine-color-scheme=dark] .m-6c018570[data-variant=default]{--_input-bd:var(--mantine-color-dark-4);--_input-bg:var(--mantine-color-dark-6);--_input-bd-focus:var(--mantine-primary-color-filled)}[data-mantine-color-scheme=dark] .m-6c018570[data-variant=filled]{--_input-bd:transparent;--_input-bg:var(--mantine-color-dark-5);--_input-bd-focus:var(--mantine-primary-color-filled)}[data-mantine-color-scheme=dark] .m-6c018570[data-variant=unstyled]{--_input-bd:transparent;--_input-bg:transparent;--_input-bd-focus:transparent}[data-mantine-color-scheme] .m-6c018570[data-error]:not([data-variant=unstyled]){--_input-bd:var(--mantine-color-error)}[data-mantine-color-scheme] .m-6c018570[data-error]{--_input-color:var(--mantine-color-error);--_input-placeholder-color:var(--mantine-color-error);--_input-section-color:var(--mantine-color-error)}[dir=rtl] .m-6c018570{--_input-text-align:right;--_left-section-left:unset;--_left-section-right:calc(.0625rem*var(--mantine-scale));--_left-section-border-radius:0 var(--_input-radius) var(--_input-radius) 0;--_right-section-left:calc(.0625rem*var(--mantine-scale));--_right-section-right:unset;--_right-section-border-radius:var(--_input-radius) 0 0 var(--_input-radius)}.m-8fb7ebe7{-webkit-tap-highlight-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:var(--_input-bg);border:calc(.0625rem*var(--mantine-scale)) solid var(--_input-bd);border-radius:var(--_input-radius);color:var(--_input-color);cursor:var(--_input-cursor);display:block;font-family:var(--_input-font-family,var(--mantine-font-family));font-size:var(--_input-fz,var(--input-fz,var(--mantine-font-size-sm)));height:var(--_input-size);line-height:var(--_input-line-height);min-height:var(--_input-height);overflow:var(--_input-overflow);padding:var(--input-padding-y,0) var(--_input-padding-right) var(--input-padding-y,0) var(--_input-padding-left);resize:var(--input-resize,none);text-align:var(--_input-text-align);transition:border-color .1s ease;width:100%}.m-8fb7ebe7[data-no-overflow]{--_input-overflow:hidden}.m-8fb7ebe7[data-monospace]{--_input-font-family:var(--mantine-font-family-monospace);--_input-fz:calc(var(--input-fz, var(--mantine-font-size-sm)) - .125rem*var(--mantine-scale))}.m-8fb7ebe7:focus,.m-8fb7ebe7:focus-within{--_input-bd:var(--_input-bd-focus);outline:none}[data-error] .m-8fb7ebe7:focus,[data-error] .m-8fb7ebe7:focus-within{--_input-bd:var(--mantine-color-error)}.m-8fb7ebe7::placeholder{color:var(--_input-placeholder-color);opacity:1}.m-8fb7ebe7::-webkit-inner-spin-button,.m-8fb7ebe7::-webkit-outer-spin-button,.m-8fb7ebe7::-webkit-search-cancel-button,.m-8fb7ebe7::-webkit-search-decoration,.m-8fb7ebe7::-webkit-search-results-button,.m-8fb7ebe7::-webkit-search-results-decoration{-webkit-appearance:none;-moz-appearance:none;appearance:none}.m-8fb7ebe7[type=number]{-moz-appearance:textfield}.m-8fb7ebe7:disabled,.m-8fb7ebe7[data-disabled]{background-color:var(--_input-disabled-bg);color:var(--_input-disabled-color);cursor:not-allowed;opacity:.6}.m-8fb7ebe7:has(input:disabled){background-color:var(--_input-disabled-bg);color:var(--_input-disabled-color);cursor:not-allowed;opacity:.6}.m-82577fc2{align-items:center;border-radius:var(--_section-border-radius);bottom:var(--_section-y);color:var(--_input-section-color,var(--mantine-color-dimmed));display:flex;justify-content:center;left:var(--_section-left);pointer-events:var(--_section-pointer-events);position:absolute;right:var(--_section-right);top:var(--_section-y);width:var(--_section-size);z-index:1}.m-82577fc2[data-position=right]{--_section-pointer-events:var(--input-right-section-pointer-events);--_section-left:var(--_right-section-left);--_section-right:var(--_right-section-right);--_section-size:var(--_input-right-section-size);--_section-border-radius:var(--_right-section-border-radius)}.m-82577fc2[data-position=left]{--_section-pointer-events:var(--input-left-section-pointer-events);--_section-left:var(--_left-section-left);--_section-right:var(--_left-section-right);--_section-size:var(--_input-left-section-size);--_section-border-radius:var(--_left-section-border-radius)}.m-88bacfd0{color:var(--_input-placeholder-color,var(--mantine-color-placeholder))}[data-error] .m-88bacfd0{--_input-placeholder-color:var(--_input-color,var(--mantine-color-placeholder))}.m-46b77525{line-height:var(--mantine-line-height)}.m-8fdc1311{-webkit-tap-highlight-color:transparent;cursor:default;display:inline-block;font-size:var(--input-label-size,var(--mantine-font-size-sm));font-weight:500;word-break:break-word}.m-78a94662{color:var(--input-asterisk-color,var(--mantine-color-error))}.m-8f816625,.m-fe47ce59{word-wrap:break-word;display:block;line-height:1.2;margin:0;padding:0}.m-8f816625{color:var(--mantine-color-error);font-size:var(--input-error-size,calc(var(--mantine-font-size-sm) - .125rem*var(--mantine-scale)))}.m-fe47ce59{color:var(--mantine-color-dimmed);font-size:var(--input-description-size,calc(var(--mantine-font-size-sm) - .125rem*var(--mantine-scale)))}.m-8bffd616{display:flex}.m-9bdbb667{--_accordion-radius:var(--accordion-radius,var(--mantine-radius-default))}.m-df78851f{word-break:break-word}.m-4ba554d4{padding:var(--mantine-spacing-md);padding-top:calc(var(--mantine-spacing-xs)/2)}.m-8fa820a0{margin:0;padding:0}.m-4ba585b8{align-items:center;background-color:var(--_control-background-color,transparent);color:var(--_control-color);cursor:var(--_control-cursor,pointer);display:flex;flex-direction:var(--_control-flex-direction,row-reverse);opacity:var(--_control-opacity,1);padding-left:var(--_control-padding-left,var(--mantine-spacing-md));padding-right:var(--_control-padding-right,var(--mantine-spacing-md));text-align:left;width:100%}.m-4ba585b8[data-chevron-position=left]{--_control-flex-direction:row;--_control-padding-left:0}[dir=rtl] .m-4ba585b8[data-chevron-position=left]{--_control-padding-left:var(--mantine-spacing-md)}[data-mantine-color-scheme=light] .m-4ba585b8{--_control-color:var(--mantine-color-black)}[data-mantine-color-scheme=dark] .m-4ba585b8{--_control-color:var(--mantine-color-dark-0)}.m-4ba585b8:disabled,.m-4ba585b8[data-disabled]{--_control-opacity:.4;--_control-cursor:not-allowed}@media (hover:hover){[data-mantine-color-scheme=light] .m-4271d21b:not(:disabled,[data-disabled]):hover,[data-mantine-color-scheme=light] .m-6939a5e9:not(:disabled,[data-disabled]):hover{--_control-background-color:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-4271d21b:not(:disabled,[data-disabled]):hover,[data-mantine-color-scheme=dark] .m-6939a5e9:not(:disabled,[data-disabled]):hover{--_control-background-color:var(--mantine-color-dark-6)}}@media (hover:none){[data-mantine-color-scheme=light] .m-4271d21b:not(:disabled,[data-disabled]):active,[data-mantine-color-scheme=light] .m-6939a5e9:not(:disabled,[data-disabled]):active{--_control-background-color:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-4271d21b:not(:disabled,[data-disabled]):active,[data-mantine-color-scheme=dark] .m-6939a5e9:not(:disabled,[data-disabled]):active{--_control-background-color:var(--mantine-color-dark-6)}}.m-df3ffa0f{color:inherit;flex:1;font-weight:400;overflow:hidden;padding-bottom:var(--mantine-spacing-sm);padding-top:var(--mantine-spacing-sm);text-overflow:ellipsis}[dir=rtl] .m-df3ffa0f{text-align:right}.m-3f35ae96{align-items:center;display:flex;justify-content:flex-start;margin-left:var(--_chevron-margin-left);margin-right:var(--_chevron-margin-right);min-width:var(--accordion-chevron-size,calc(.9375rem*var(--mantine-scale)));transform:var(--_chevron-transform,rotate(0deg));transition:transform var(--accordion-transition-duration,.2s) ease;width:var(--accordion-chevron-size,calc(.9375rem*var(--mantine-scale)))}.m-3f35ae96[data-rotate]{--_chevron-transform:rotate(180deg)}.m-3f35ae96[data-position=left]{--_chevron-margin-right:var(--mantine-spacing-md);--_chevron-margin-left:var(--mantine-spacing-md)}.m-3f35ae96[data-position=right]{--_chevron-margin-left:0}[dir=rtl] .m-3f35ae96[data-position=left]{--_chevron-margin-right:0;--_chevron-margin-left:var(--mantine-spacing-md)}[dir=rtl] .m-3f35ae96[data-position=right]{--_chevron-margin-right:var(--mantine-spacing-md);--_chevron-margin-left:0}.m-9bd771fe{align-items:center;display:flex;justify-content:center;margin-left:var(--_icon-margin-left,0);margin-right:var(--_icon-margin-right,var(--mantine-spacing-sm))}.m-9bd771fe[data-chevron-position=left]{--_icon-margin-right:0;--_icon-margin-left:var(--mantine-spacing-lg)}[dir=rtl] .m-9bd771fe[data-chevron-position=left]{--_icon-margin-right:var(--mantine-spacing-lg);--_icon-margin-left:0}[dir=rtl] .m-9bd771fe[data-chevron-position=right]{--_icon-margin-right:0;--_icon-margin-left:var(--mantine-spacing-sm)}.m-9bd7b098{background-color:var(--_item-bg)}[data-mantine-color-scheme=light] .m-9bd7b098{--_item-border-color:var(--mantine-color-gray-3);--_item-filled-color:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-9bd7b098{--_item-border-color:var(--mantine-color-dark-4);--_item-filled-color:var(--mantine-color-dark-6)}.m-fe19b709{border-bottom:calc(.0625rem*var(--mantine-scale)) solid var(--_item-border-color)}.m-1f921b3b{border:calc(.0625rem*var(--mantine-scale)) solid var(--_item-border-color);transition:background-color .15s ease}.m-1f921b3b[data-active]{--_item-bg:var(--_item-filled-color)}.m-1f921b3b:first-of-type,.m-1f921b3b:first-of-type>[data-accordion-control]{border-top-left-radius:var(--_accordion-radius);border-top-right-radius:var(--_accordion-radius)}.m-1f921b3b:last-of-type,.m-1f921b3b:last-of-type>[data-accordion-control]{border-bottom-left-radius:var(--_accordion-radius);border-bottom-right-radius:var(--_accordion-radius)}.m-1f921b3b+.m-1f921b3b{border-top:0}.m-2cdf939a{border-radius:var(--_accordion-radius)}.m-2cdf939a[data-active],.m-9f59b069{--_item-bg:var(--_item-filled-color)}.m-9f59b069{border:calc(.0625rem*var(--mantine-scale)) solid var(--__item-border-color,transparent);border-radius:var(--_accordion-radius);transition:background-color .15s ease}.m-9f59b069[data-active]{--__item-border-color:var(--_item-border-color)}[data-mantine-color-scheme=light] .m-9f59b069[data-active]{--_item-bg:var(--mantine-color-white)}[data-mantine-color-scheme=dark] .m-9f59b069[data-active]{--_item-bg:var(--mantine-color-dark-7)}.m-9f59b069+.m-9f59b069{margin-top:var(--mantine-spacing-md)}.m-7f854edf{bottom:var(--affix-bottom);left:var(--affix-left);position:fixed;right:var(--affix-right);top:var(--affix-top);z-index:var(--affix-z-index)}.m-66836ed3{--alert-radius:var(--mantine-radius-default);--alert-bg:var(--mantine-primary-color-light);--alert-bd:calc(.0625rem*var(--mantine-scale)) solid transparent;--alert-color:var(--mantine-primary-color-light-color);background-color:var(--alert-bg);border:var(--alert-bd);border-radius:var(--alert-radius);color:var(--alert-color);overflow:hidden;padding:var(--mantine-spacing-md) var(--mantine-spacing-md);position:relative}.m-667c2793,.m-a5d60502{display:flex}.m-667c2793{flex:1;flex-direction:column;gap:var(--mantine-spacing-xs)}.m-6a03f287{align-items:center;display:flex;font-size:var(--mantine-font-size-sm);font-weight:700;justify-content:space-between}.m-6a03f287:where([data-with-close-button]){padding-right:var(--mantine-spacing-md)}:where([dir=rtl]) .m-6a03f287:where([data-with-close-button]){padding-left:var(--mantine-spacing-md);padding-right:0}.m-698f4f23{display:block;overflow:hidden;text-overflow:ellipsis}.m-667f2a6a{align-items:center;display:flex;height:calc(1.25rem*var(--mantine-scale));justify-content:flex-start;line-height:1;margin-right:var(--mantine-spacing-md);margin-top:calc(.0625rem*var(--mantine-scale));width:calc(1.25rem*var(--mantine-scale))}:where([dir=rtl]) .m-667f2a6a{margin-left:var(--mantine-spacing-md);margin-right:0}.m-7fa78076{font-size:var(--mantine-font-size-sm);overflow:hidden;text-overflow:ellipsis}:where([data-mantine-color-scheme=light]) .m-7fa78076{color:var(--mantine-color-black)}:where([data-mantine-color-scheme=dark]) .m-7fa78076{color:var(--mantine-color-white)}.m-7fa78076:where([data-variant=filled]){color:var(--alert-color)}.m-7fa78076:where([data-variant=white]){color:var(--mantine-color-black)}.m-87f54839{color:var(--alert-color);height:calc(1.25rem*var(--mantine-scale));width:calc(1.25rem*var(--mantine-scale))}.m-b6d8b162{-webkit-tap-highlight-color:transparent;color:var(--text-color);font-size:var(--text-fz,var(--mantine-font-size-md));font-weight:400;line-height:var(--_text-line-height,var(--text-lh,var(--mantine-line-height-md)));margin:0;padding:0;text-decoration:none}.m-b6d8b162[data-truncate]{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.m-b6d8b162[data-truncate=start]{direction:rtl;text-align:right}[dir=rtl] .m-b6d8b162[data-truncate=start]{direction:ltr;text-align:left}.m-b6d8b162[data-variant=gradient]{-webkit-text-fill-color:transparent;background-clip:text;-webkit-background-clip:text;background-image:var(--text-gradient)}.m-b6d8b162[data-line-clamp]{-webkit-line-clamp:var(--text-line-clamp);-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden;text-overflow:ellipsis}.m-b6d8b162[data-inherit]{font-size:inherit;font-weight:inherit;line-height:inherit}.m-b6d8b162[data-inline]{--_text-line-height:1}.m-849cf0da{-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:transparent;border:none;color:var(--mantine-color-anchor);cursor:pointer;display:inline;margin:0;padding:0;text-decoration:none}@media (hover:hover){.m-849cf0da:where([data-underline=hover]):hover{text-decoration:underline}}@media (hover:none){.m-849cf0da:where([data-underline=hover]):active{text-decoration:underline}}.m-849cf0da:where([data-underline=always]){text-decoration:underline}.m-89ab340[data-resizing]{--app-shell-transition-duration:0ms!important}.m-89ab340[data-disabled]{--app-shell-header-offset:0px!important;--app-shell-navbar-offset:0px!important}[data-mantine-color-scheme=light] .m-89ab340{--_app-shell-border-color:var(--mantine-color-gray-3)}[data-mantine-color-scheme=dark] .m-89ab340{--_app-shell-border-color:var(--mantine-color-dark-4)}.m-3840c879,.m-3b16f56b,.m-45252eee,.m-8983817,.m-9cdde9a{transition-duration:var(--app-shell-transition-duration);transition-timing-function:var(--app-shell-transition-timing-function)}.m-45252eee,.m-9cdde9a{background-color:var(--mantine-color-body);display:flex;flex-direction:column;height:var( --_section-height,calc(100dvh - var(--app-shell-header-offset, 0px) - var(--app-shell-footer-offset, 0px)) );position:fixed;top:var(--_section-top,var(--app-shell-header-offset,0));transition-property:transform,top,height}[data-layout=alt] .m-45252eee,[data-layout=alt] .m-9cdde9a{--_section-top:0px;--_section-height:100dvh}.m-45252eee{border-left:var(--_navbar-border-left);border-right:var(--_navbar-border-right);left:var(--_navbar-left,0);right:var(--_navbar-right);transform:var(--_navbar-transform,var(--app-shell-navbar-transform));transition-property:transform,top,height;width:var(--app-shell-navbar-width);z-index:var(--app-shell-navbar-z-index)}.m-45252eee[data-with-border]{--_navbar-border-right:calc(.0625rem*var(--mantine-scale)) solid var(--_app-shell-border-color)}[dir=rtl] .m-45252eee[data-with-border]{--_navbar-border-right:none;--_navbar-border-left:calc(.0625rem*var(--mantine-scale)) solid var(--_app-shell-border-color)}[dir=rtl] .m-45252eee{--_navbar-left:auto;--_navbar-right:0px;--_navbar-transform:var(--app-shell-navbar-transform-rtl)}.m-9cdde9a{border-left:var(--_aside-border-left);border-right:var(--_aside-border-right);left:var(--_aside-left);right:var(--_aside-right,0);transform:var(--_aside-transform,var(--app-shell-aside-transform));width:var(--app-shell-aside-width);z-index:var(--app-shell-aside-z-index)}.m-9cdde9a[data-with-border]{--_aside-border-left:calc(.0625rem*var(--mantine-scale)) solid var(--_app-shell-border-color)}[dir=rtl] .m-9cdde9a[data-with-border]{--_aside-border-left:none;--_aside-border-right:calc(.0625rem*var(--mantine-scale)) solid var(--_app-shell-border-color)}[dir=rtl] .m-9cdde9a{--_aside-left:0px;--_aside-right:auto;--_aside-transform:var(--app-shell-aside-transform-rtl)}.m-8983817{min-height:100dvh;padding:calc(var(--app-shell-header-offset, 0px) + var(--app-shell-padding)) var( --_main-padding-right,calc(var(--app-shell-aside-offset, 0px) + var(--app-shell-padding)) ) calc(var(--app-shell-footer-offset, 0px) + var(--app-shell-padding)) var( --_main-padding-left,calc(var(--app-shell-navbar-offset, 0px) + var(--app-shell-padding)) );transition-property:padding}[dir=rtl] .m-8983817{--_main-padding-left:calc(var(--app-shell-aside-offset, 0px) + var(--app-shell-padding));--_main-padding-right:calc(var(--app-shell-navbar-offset, 0px) + var(--app-shell-padding))}.m-3840c879,.m-3b16f56b{background-color:var(--mantine-color-body);left:var(--_section-left,0);position:fixed;right:var(--_section-right,0);transition-property:transform,left,right}[data-layout=alt] .m-3840c879,[data-layout=alt] .m-3b16f56b{--_section-left:var(--app-shell-navbar-offset,0px)}[dir=rtl] [data-layout=alt] .m-3840c879,[dir=rtl] [data-layout=alt] .m-3b16f56b{--_section-right:var(--app-shell-navbar-offset,0px);--_section-left:0px}.m-3b16f56b{background-color:var(--mantine-color-body);border-bottom:var(--_header-border-bottom);height:var(--app-shell-header-height);top:0;transform:var(--app-shell-header-transform);z-index:var(--app-shell-header-z-index)}.m-3b16f56b[data-with-border]{--_header-border-bottom:calc(.0625rem*var(--mantine-scale)) solid var(--_app-shell-border-color)}.m-3840c879{border-top:var(--_footer-border-top);bottom:0;height:var(--app-shell-footer-height);transform:var(--app-shell-footer-transform);z-index:var(--app-shell-footer-z-index)}.m-3840c879[data-with-border]{--_footer-border-top:calc(.0625rem*var(--mantine-scale)) solid var(--_app-shell-border-color)}.m-6dcfc7c7{flex-grow:var(--_section-grow,0)}.m-6dcfc7c7[data-grow]{--_section-grow:1}.m-71ac47fc{--ar-ratio:1;max-width:100%;position:relative}.m-71ac47fc:before{content:"";display:block;height:0;padding-bottom:calc((1/var(--ar-ratio))*100%)}.m-71ac47fc:after{clear:both;content:"";display:table}.m-71ac47fc>:where(:not(style)){align-items:center;display:flex;height:100%;top:0;right:0;bottom:0;left:0;justify-content:center;position:absolute;width:100%}.m-71ac47fc>:where(img,video){object-fit:cover}.m-88b62a41{--_combobox-padding:var(--combobox-padding,calc(.25rem*var(--mantine-scale)));padding:var(--_combobox-padding)}.m-88b62a41[data-hidden]{display:none}.m-88b62a41,.m-b2821a6e{--combobox-option-padding-xs:calc(.25rem*var(--mantine-scale)) calc(.5rem*var(--mantine-scale));--combobox-option-padding-sm:calc(.375rem*var(--mantine-scale)) calc(.625rem*var(--mantine-scale));--combobox-option-padding-md:calc(.5rem*var(--mantine-scale)) calc(.75rem*var(--mantine-scale));--combobox-option-padding-lg:calc(.625rem*var(--mantine-scale)) calc(1rem*var(--mantine-scale));--combobox-option-padding-xl:calc(.875rem*var(--mantine-scale)) calc(1.25rem*var(--mantine-scale));--_combobox-option-padding:var(--combobox-option-padding,var(--combobox-option-padding-sm))}.m-92253aa5{background-color:var(--_option-bg,transparent);border-radius:var(--mantine-radius-default);color:var(--_option-color,inherit);cursor:var(--_option-cursor,pointer);font-size:var(--combobox-option-fz,var(--mantine-font-size-sm));opacity:var(--_option-opacity,1);padding:var(--_combobox-option-padding);word-break:break-word}.m-92253aa5[data-combobox-selected]{--_option-bg:var(--mantine-primary-color-filled);--_option-color:var(--mantine-color-white)}.m-92253aa5[data-combobox-disabled]{--_option-cursor:not-allowed;--_option-opacity:.35}@media (hover:hover){[data-mantine-color-scheme=light] .m-92253aa5:hover:not([data-combobox-selected],[data-combobox-disabled]){--_option-bg:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-92253aa5:hover:not([data-combobox-selected],[data-combobox-disabled]){--_option-bg:var(--mantine-color-dark-7)}}@media (hover:none){[data-mantine-color-scheme=light] .m-92253aa5:active:not([data-combobox-selected],[data-combobox-disabled]){--_option-bg:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-92253aa5:active:not([data-combobox-selected],[data-combobox-disabled]){--_option-bg:var(--mantine-color-dark-7)}}.m-985517d8{background-color:var(--_search_background);border-bottom-left-radius:0;border-bottom-right-radius:0;border-left-width:0;border-right-width:0;border-top-width:0;margin:calc(var(--_combobox-padding)*-1) calc(var(--_combobox-padding)*-1) var(--_combobox-padding);position:relative;width:calc(100% + var(--_combobox-padding)*2)}.m-985517d8,.m-985517d8:focus{border-color:var(--_search-border-color)}[data-mantine-color-scheme=light] .m-985517d8{--_search-border-color:var(--mantine-color-gray-2);--_search_background:var(--mantine-color-white)}[data-mantine-color-scheme=dark] .m-985517d8{--_search-border-color:var(--mantine-color-dark-4);--_search_background:var(--mantine-color-dark-7)}.m-2530cd1d{color:var(--mantine-color-dimmed);text-align:center}.m-2530cd1d,.m-82b967cb,.m-858f94bd{font-size:var(--combobox-option-fz,var(--mantine-font-size-sm));padding:var(--_combobox-option-padding)}.m-82b967cb,.m-858f94bd{border:0 solid var(--_footer-border-color);margin-left:calc(var(--_combobox-padding)*-1);margin-right:calc(var(--_combobox-padding)*-1)}[data-mantine-color-scheme=light] .m-82b967cb,[data-mantine-color-scheme=light] .m-858f94bd{--_footer-border-color:var(--mantine-color-gray-2)}[data-mantine-color-scheme=dark] .m-82b967cb,[data-mantine-color-scheme=dark] .m-858f94bd{--_footer-border-color:var(--mantine-color-dark-4)}.m-82b967cb{border-top-width:calc(.0625rem*var(--mantine-scale));margin-bottom:calc(var(--_combobox-padding)*-1);margin-top:var(--_combobox-padding)}.m-858f94bd{border-bottom-width:calc(.0625rem*var(--mantine-scale));margin-bottom:var(--_combobox-padding);margin-top:calc(var(--_combobox-padding)*-1)}.m-254f3e4f:has(.m-2bb2e9e5:only-child){display:none}.m-2bb2e9e5{align-items:center;color:var(--mantine-color-dimmed);display:flex;font-size:calc(var(--combobox-option-fz, var(--mantine-font-size-sm))*.85);font-weight:500;padding:var(--_combobox-option-padding);position:relative}.m-2bb2e9e5:after{background-color:var(--_divider-bg);content:"";flex:1;height:calc(.0625rem*var(--mantine-scale));left:0;margin-left:var(--mantine-spacing-xs);right:0}[data-mantine-color-scheme=light] .m-2bb2e9e5:after{--_divider-bg:var(--mantine-color-gray-2)}[data-mantine-color-scheme=dark] .m-2bb2e9e5:after{--_divider-bg:var(--mantine-color-dark-4)}[dir=rtl] .m-2bb2e9e5:after{margin-left:unset;margin-right:var(--mantine-spacing-xs)}.m-2bb2e9e5:only-child{display:none}.m-2943220b{--combobox-chevron-size-xs:calc(.875rem*var(--mantine-scale));--combobox-chevron-size-sm:calc(1.125rem*var(--mantine-scale));--combobox-chevron-size-md:calc(1.25rem*var(--mantine-scale));--combobox-chevron-size-lg:calc(1.5rem*var(--mantine-scale));--combobox-chevron-size-xl:calc(1.75rem*var(--mantine-scale));--combobox-chevron-size:var(--combobox-chevron-size-sm);color:var(--_color);height:var(--combobox-chevron-size);width:var(--combobox-chevron-size)}[data-mantine-color-scheme=light] .m-2943220b{--_color:var(--mantine-color-gray-6)}[data-mantine-color-scheme=dark] .m-2943220b{--_color:var(--mantine-color-dark-3)}.m-2943220b[data-error]{--_color:var(--mantine-color-error)}.m-390b5f4{align-items:center;display:flex;flex-direction:var(--_flex-direction,row);gap:calc(.5rem*var(--mantine-scale))}.m-390b5f4[data-reverse]{justify-content:space-between}.m-8ee53fc2{height:.8em;min-width:.8em;opacity:.4;width:.8em}[data-combobox-selected] .m-8ee53fc2{opacity:1}.m-5f75b09e{--label-lh-xs:calc(1rem*var(--mantine-scale));--label-lh-sm:calc(1.25rem*var(--mantine-scale));--label-lh-md:calc(1.5rem*var(--mantine-scale));--label-lh-lg:calc(1.875rem*var(--mantine-scale));--label-lh-xl:calc(2.25rem*var(--mantine-scale));--label-lh:var(--label-lh-sm)}.m-5f75b09e[data-label-position=left]{--label-order:1;--label-offset-right:var(--mantine-spacing-sm);--label-offset-left:0}[dir=rtl] .m-5f75b09e[data-label-position=left]{--label-offset-right:0;--label-offset-left:var(--mantine-spacing-sm)}.m-5f75b09e[data-label-position=right]{--label-order:2;--label-offset-right:0;--label-offset-left:var(--mantine-spacing-sm)}[dir=rtl] .m-5f75b09e[data-label-position=right]{--label-offset-right:var(--mantine-spacing-sm);--label-offset-left:0}.m-5f6e695e{display:flex}.m-d3ea56bb{--label-cursor:var(--mantine-cursor-type);-webkit-tap-highlight-color:transparent;cursor:var(--label-cursor);display:inline-flex;flex-direction:column;font-size:var(--label-fz,var(--mantine-font-size-sm));line-height:var(--label-lh);order:var(--label-order)}.m-d3ea56bb[data-disabled],fieldset:disabled .m-d3ea56bb{--label-cursor:not-allowed}.m-8ee546b8{color:inherit;cursor:var(--label-cursor);padding-left:var(--label-offset-left);padding-right:var(--label-offset-right)}:where([data-mantine-color-scheme=light]) .m-8ee546b8:where([data-disabled]),:where([data-mantine-color-scheme=light]) fieldset:disabled .m-8ee546b8{color:var(--mantine-color-gray-5)}:where([data-mantine-color-scheme=dark]) .m-8ee546b8:where([data-disabled]),:where([data-mantine-color-scheme=dark]) fieldset:disabled .m-8ee546b8{color:var(--mantine-color-dark-3)}.m-328f68c0,.m-8e8a99cc{margin-top:calc(var(--mantine-spacing-xs)/2);padding-left:var(--label-offset-left);padding-right:var(--label-offset-right)}.m-bf2d988c{--checkbox-size-xs:calc(1rem*var(--mantine-scale));--checkbox-size-sm:calc(1.25rem*var(--mantine-scale));--checkbox-size-md:calc(1.5rem*var(--mantine-scale));--checkbox-size-lg:calc(1.875rem*var(--mantine-scale));--checkbox-size-xl:calc(2.25rem*var(--mantine-scale));--checkbox-size:var(--checkbox-size-sm);--checkbox-color:var(--mantine-primary-color-filled);--checkbox-icon-color:var(--mantine-color-white)}.m-26062bec{height:var(--checkbox-size);order:var(--_checkbox-inner-order,1);position:relative;width:var(--checkbox-size)}.m-26062bec[data-label-position=left]{--_checkbox-inner-order:2}.m-26063560{-webkit-tap-highlight-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:var(--_checkbox-bg);border:calc(.0625rem*var(--mantine-scale)) solid var(--_checkbox-bd-color);border-radius:var(--checkbox-radius,var(--mantine-radius-default));cursor:var(--_checkbox-cursor,var(--mantine-cursor-type));display:block;height:var(--checkbox-size);margin:0;padding:0;transition:border-color .1s ease,background-color .1s ease;width:var(--checkbox-size)}[data-mantine-color-scheme=light] .m-26063560{--_checkbox-bg:var(--mantine-color-white);--_checkbox-bd-color:var(--mantine-color-gray-4)}[data-mantine-color-scheme=dark] .m-26063560{--_checkbox-bg:var(--mantine-color-dark-6);--_checkbox-bd-color:var(--mantine-color-dark-4)}.m-26063560[data-error]{--_checkbox-bd-color:var(--mantine-color-error)}[data-mantine-color-scheme] .m-26063560:checked,[data-mantine-color-scheme] .m-26063560[data-indeterminate]{--_checkbox-bg:var(--checkbox-color);--_checkbox-bd-color:var(--checkbox-color)}[data-mantine-color-scheme] .m-26063560:checked+.m-bf295423,[data-mantine-color-scheme] .m-26063560[data-indeterminate]+.m-bf295423{--_checkbox-icon-opacity:1;--_checkbox-icon-transform:none}.m-26063560:disabled{--_checkbox-cursor:not-allowed}[data-mantine-color-scheme=light] .m-26063560:disabled{--_checkbox-bg:var(--mantine-color-gray-2);--_checkbox-bd-color:var(--mantine-color-gray-3)}[data-mantine-color-scheme=dark] .m-26063560:disabled{--_checkbox-bg:var(--mantine-color-dark-6);--_checkbox-bd-color:var(--mantine-color-dark-6)}[data-mantine-color-scheme=light] .m-26063560:disabled+.m-bf295423{--_checkbox-icon-color:var(--mantine-color-gray-5)}[data-mantine-color-scheme=dark] .m-26063560:disabled+.m-bf295423{--_checkbox-icon-color:var(--mantine-color-dark-3)}.m-215c4542+.m-bf295423{--_checkbox-icon-color:var(--checkbox-color)}[data-mantine-color-scheme] .m-215c4542:checked:not(:disabled),[data-mantine-color-scheme] .m-215c4542[data-indeterminate]{--_checkbox-bg:transparent;--_checkbox-bd-color:var(--checkbox-color)}[data-mantine-color-scheme] .m-215c4542:checked:not(:disabled)+.m-bf295423,[data-mantine-color-scheme] .m-215c4542[data-indeterminate]+.m-bf295423{--_checkbox-icon-color:var(--checkbox-color);--_checkbox-icon-opacity:1;--_checkbox-icon-transform:none}.m-bf295423{bottom:0;color:var(--_checkbox-icon-color,var(--checkbox-icon-color));left:0;margin:auto;opacity:var(--_checkbox-icon-opacity,0);pointer-events:none;position:absolute;right:0;top:0;transform:var(--_checkbox-icon-transform,translateY(calc(.3125rem*var(--mantine-scale))) scale(.5));transition:transform .1s ease,opacity .1s ease;width:60%}.m-11def92b{--ag-spacing:var(--mantine-spacing-sm);--ag-offset:calc(var(--ag-spacing)*-1);display:flex;padding-left:var(--ag-spacing)}:where([dir=rtl]) .m-11def92b{padding-left:0;padding-right:var(--ag-spacing)}.m-f85678b6{--avatar-size-xs:calc(1rem*var(--mantine-scale));--avatar-size-sm:calc(1.625rem*var(--mantine-scale));--avatar-size-md:calc(2.375rem*var(--mantine-scale));--avatar-size-lg:calc(3.5rem*var(--mantine-scale));--avatar-size-xl:calc(5.25rem*var(--mantine-scale));--avatar-size:var(--avatar-size-md);--avatar-radius:calc(62.5rem*var(--mantine-scale));--avatar-bg:var(--mantine-color-gray-light);--avatar-bd:calc(.0625rem*var(--mantine-scale)) solid transparent;--avatar-color:var(--mantine-color-gray-light-color);--avatar-placeholder-fz:calc(var(--avatar-size)/2.5);-webkit-tap-highlight-color:transparent;border-radius:var(--avatar-radius);display:block;height:var(--avatar-size);min-width:var(--avatar-size);overflow:hidden;padding:0;position:relative;text-decoration:none;-webkit-user-select:none;user-select:none;width:var(--avatar-size)}.m-f85678b6:where([data-within-group]){background:var(--mantine-color-body);border:calc(.125rem*var(--mantine-scale)) solid var(--mantine-color-body);margin-left:var(--ag-offset)}:where([dir=rtl]) .m-f85678b6:where([data-within-group]){margin-left:unset;margin-right:var(--ag-offset)}.m-11f8ac07{display:block;height:100%;object-fit:cover;width:100%}.m-104cd71f{align-items:center;background:var(--avatar-bg);border:var(--avatar-bd);border-radius:var(--avatar-radius);color:var(--avatar-color);display:flex;font-size:var(--avatar-placeholder-fz);font-weight:700;height:100%;justify-content:center;-webkit-user-select:none;user-select:none;width:100%}.m-104cd71f>[data-avatar-placeholder-icon]{height:70%;width:70%}.m-2ce0de02{background-position:50%;background-size:cover;border:0;border-radius:var(--bi-radius,0);display:block;text-decoration:none;width:100%}.m-347db0ec{--badge-height-xs:calc(1rem*var(--mantine-scale));--badge-height-sm:calc(1.125rem*var(--mantine-scale));--badge-height-md:calc(1.25rem*var(--mantine-scale));--badge-height-lg:calc(1.625rem*var(--mantine-scale));--badge-height-xl:calc(2rem*var(--mantine-scale));--badge-fz-xs:calc(.5625rem*var(--mantine-scale));--badge-fz-sm:calc(.625rem*var(--mantine-scale));--badge-fz-md:calc(.6875rem*var(--mantine-scale));--badge-fz-lg:calc(.8125rem*var(--mantine-scale));--badge-fz-xl:calc(1rem*var(--mantine-scale));--badge-padding-x-xs:calc(.375rem*var(--mantine-scale));--badge-padding-x-sm:calc(.5rem*var(--mantine-scale));--badge-padding-x-md:calc(.625rem*var(--mantine-scale));--badge-padding-x-lg:calc(.75rem*var(--mantine-scale));--badge-padding-x-xl:calc(1rem*var(--mantine-scale));--badge-height:var(--badge-height-md);--badge-fz:var(--badge-fz-md);--badge-padding-x:var(--badge-padding-x-md);--badge-radius:calc(62.5rem*var(--mantine-scale));--badge-lh:calc(var(--badge-height) - .125rem*var(--mantine-scale));--badge-color:var(--mantine-color-white);--badge-bg:var(--mantine-primary-color-filled);--badge-bd:calc(.0625rem*var(--mantine-scale)) solid transparent;-webkit-tap-highlight-color:transparent;align-items:center;background:var(--badge-bg);border:var(--badge-bd);border-radius:var(--badge-radius);color:var(--badge-color);cursor:inherit;display:inline-flex;font-size:var(--badge-fz);font-weight:700;height:var(--badge-height);justify-content:center;letter-spacing:calc(.01563rem*var(--mantine-scale));line-height:var(--badge-lh);overflow:hidden;padding:0 var(--badge-padding-x);text-decoration:none;text-overflow:ellipsis;text-transform:uppercase;width:fit-content}.m-347db0ec:where([data-block]){display:flex;width:100%}.m-347db0ec:where([data-circle]){padding-left:calc(.125rem*var(--mantine-scale));padding-right:calc(.125rem*var(--mantine-scale));width:var(--badge-height)}.m-fbd81e3d{--badge-dot-size:calc(var(--badge-height)/3.4)}:where([data-mantine-color-scheme=light]) .m-fbd81e3d{background-color:var(--mantine-color-white);border-color:var(--mantine-color-gray-4);color:var(--mantine-color-black)}:where([data-mantine-color-scheme=dark]) .m-fbd81e3d{background-color:var(--mantine-color-dark-5);border-color:var(--mantine-color-dark-5);color:var(--mantine-color-white)}.m-fbd81e3d:before{background-color:var(--badge-dot-color);border-radius:var(--badge-dot-size);content:"";display:block;height:var(--badge-dot-size);margin-right:var(--badge-dot-size);width:var(--badge-dot-size)}:where([dir=rtl]) .m-fbd81e3d:before{margin-left:var(--badge-dot-size);margin-right:0}.m-5add502a{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.m-91fdda9b{--badge-section-margin:calc(var(--mantine-spacing-xs)/2);align-items:center;display:inline-flex;justify-content:center}.m-91fdda9b:where([data-position=left]){margin-left:0;margin-right:var(--badge-section-margin)}:where([dir=rtl]) .m-91fdda9b:where([data-position=left]){margin-left:var(--badge-section-margin);margin-right:0}.m-91fdda9b:where([data-position=right]){margin-left:var(--badge-section-margin);margin-right:0}[dir=rtl] .m-91fdda9b:where([data-position=right]){margin-left:0;margin-right:var(--badge-section-margin)}.m-ddec01c0{--blockquote-border:calc(.1875rem*var(--mantine-scale)) solid var(--bq-bd);border-bottom-right-radius:var(--bq-radius);border-left:var(--blockquote-border);border-top-right-radius:var(--bq-radius);margin:0;padding:var(--mantine-spacing-xl) calc(2.375rem*var(--mantine-scale));position:relative}:where([dir=rtl]) .m-ddec01c0{border-bottom-left-radius:var(--bq-radius);border-bottom-right-radius:0;border-left:none;border-right:var(--blockquote-border);border-top-left-radius:var(--bq-radius);border-top-right-radius:0}:where([data-mantine-color-scheme=light]) .m-ddec01c0{background-color:var(--bq-bg-light)}:where([data-mantine-color-scheme=dark]) .m-ddec01c0{background-color:var(--bq-bg-dark)}.m-dde7bd57{--blockquote-icon-offset:calc(var(--bq-icon-size)/-2);align-items:center;background-color:var(--mantine-color-body);border-radius:var(--bq-icon-size);color:var(--bq-bd);display:flex;height:var(--bq-icon-size);justify-content:center;left:var(--blockquote-icon-offset);position:absolute;top:var(--blockquote-icon-offset);width:var(--bq-icon-size)}:where([dir=rtl]) .m-dde7bd57{left:0;right:var(--blockquote-icon-offset)}.m-dde51a35{display:block;font-size:85%;margin-top:var(--mantine-spacing-md);opacity:.6}.m-8b3717df{align-items:center;display:flex}.m-f678d540{-webkit-tap-highlight-color:transparent;line-height:1;white-space:nowrap}.m-3b8f2208{align-items:center;display:flex;justify-content:center;line-height:1;margin-left:var(--bc-separator-margin,var(--mantine-spacing-xs));margin-right:var(--bc-separator-margin,var(--mantine-spacing-xs))}:where([data-mantine-color-scheme=light]) .m-3b8f2208{color:var(--mantine-color-gray-7)}:where([data-mantine-color-scheme=dark]) .m-3b8f2208{color:var(--mantine-color-dark-2)}.m-fea6bf1a{--burger-size-xs:calc(.75rem*var(--mantine-scale));--burger-size-sm:calc(1.125rem*var(--mantine-scale));--burger-size-md:calc(1.5rem*var(--mantine-scale));--burger-size-lg:calc(2.125rem*var(--mantine-scale));--burger-size-xl:calc(2.625rem*var(--mantine-scale));--burger-size:var(--burger-size-md);cursor:pointer;height:calc(var(--burger-size) + var(--mantine-spacing-xs));padding:calc(var(--mantine-spacing-xs)/2);width:calc(var(--burger-size) + var(--mantine-spacing-xs))}:where([data-mantine-color-scheme=light]) .m-fea6bf1a{--burger-color:var(--mantine-color-black)}:where([data-mantine-color-scheme=dark]) .m-fea6bf1a{--burger-color:var(--mantine-color-white)}.m-d4fb9cad{position:relative;-webkit-user-select:none;user-select:none}.m-d4fb9cad,.m-d4fb9cad:after,.m-d4fb9cad:before{background-color:var(--burger-color);display:block;height:calc(var(--burger-size)/12);outline:calc(.0625rem*var(--mantine-scale)) solid transparent;transition-duration:var(--burger-transition-duration,.3s);transition-property:background-color,transform;transition-timing-function:var(--burger-transition-timing-function,ease);width:var(--burger-size)}.m-d4fb9cad:after,.m-d4fb9cad:before{content:"";left:0;position:absolute}.m-d4fb9cad:before{top:calc(var(--burger-size)/-3)}.m-d4fb9cad:after{top:calc(var(--burger-size)/3)}.m-d4fb9cad[data-opened]{background-color:transparent}.m-d4fb9cad[data-opened]:before{transform:translateY(calc(var(--burger-size)/3)) rotate(45deg)}.m-d4fb9cad[data-opened]:after{transform:translateY(calc(var(--burger-size)/-3)) rotate(-45deg)}.m-77c9d27d{--button-height-xs:calc(1.875rem*var(--mantine-scale));--button-height-sm:calc(2.25rem*var(--mantine-scale));--button-height-md:calc(2.625rem*var(--mantine-scale));--button-height-lg:calc(3.125rem*var(--mantine-scale));--button-height-xl:calc(3.75rem*var(--mantine-scale));--button-height-compact-xs:calc(1.375rem*var(--mantine-scale));--button-height-compact-sm:calc(1.625rem*var(--mantine-scale));--button-height-compact-md:calc(1.875rem*var(--mantine-scale));--button-height-compact-lg:calc(2.125rem*var(--mantine-scale));--button-height-compact-xl:calc(2.5rem*var(--mantine-scale));--button-padding-x-xs:calc(.875rem*var(--mantine-scale));--button-padding-x-sm:calc(1.125rem*var(--mantine-scale));--button-padding-x-md:calc(1.375rem*var(--mantine-scale));--button-padding-x-lg:calc(1.625rem*var(--mantine-scale));--button-padding-x-xl:calc(2rem*var(--mantine-scale));--button-padding-x-compact-xs:calc(.4375rem*var(--mantine-scale));--button-padding-x-compact-sm:calc(.5rem*var(--mantine-scale));--button-padding-x-compact-md:calc(.625rem*var(--mantine-scale));--button-padding-x-compact-lg:calc(.75rem*var(--mantine-scale));--button-padding-x-compact-xl:calc(.875rem*var(--mantine-scale));--button-height:var(--button-height-sm);--button-padding-x:var(--button-padding-x-sm);--button-color:var(--mantine-color-white);background:var(--_button-bg,var(--button-bg,var(--mantine-primary-color-filled)));border:var(--_button-bd,var(--button-bd,calc(.0625rem*var(--mantine-scale)) solid transparent));border-radius:var(--button-radius,var(--mantine-radius-default));color:var(--_button-color,var(--button-color,var(--mantine-color-white)));cursor:var(--_button-cursor,pointer);display:var(--_button-display,inline-block);font-size:var(--button-fz,var(--mantine-font-size-sm));font-weight:600;height:var(--button-height,var(--button-height-sm));line-height:1;overflow:hidden;padding-left:var(--_button-padding-left,var(--button-padding-x,var(--button-padding-x-sm)));padding-right:var(--_button-padding-right,var(--button-padding-x,var(--button-padding-x-sm)));position:relative;text-align:center;-webkit-user-select:none;user-select:none;vertical-align:middle;width:var(--_button-width,auto)}.m-77c9d27d[data-block]{--_button-display:block;--_button-width:100%}.m-77c9d27d[data-with-left-section]{--_button-padding-left:calc(var(--button-padding-x)/1.5)}[dir=rtl] .m-77c9d27d[data-with-left-section]{--_button-padding-left:var(--button-padding-x)}.m-77c9d27d[data-with-right-section],[dir=rtl] .m-77c9d27d[data-with-left-section]{--_button-padding-right:calc(var(--button-padding-x)/1.5)}[dir=rtl] .m-77c9d27d[data-with-right-section]{--_button-padding-right:var(--button-padding-x);--_button-padding-left:calc(var(--button-padding-x)/1.5)}.m-77c9d27d:disabled:not([data-loading]),.m-77c9d27d[data-disabled]:not([data-loading]){--_button-cursor:not-allowed;--_button-bg:var(--_disabled-bg);--_button-color:var(--_disabled-color);--_button-bd:calc(.0625rem*var(--mantine-scale)) solid transparent;transform:none}.m-77c9d27d:before{background-color:var(--_button-loading-overlay-bg);border-radius:var(--button-radius,var(--mantine-radius-default));content:"";filter:blur(12px);inset:calc(-.0625rem*var(--mantine-scale));opacity:0;pointer-events:none;position:absolute;transform:translateY(-100%);transition:transform .15s ease,opacity .1s ease}.m-77c9d27d[data-loading]{--_button-cursor:not-allowed;transform:none}.m-77c9d27d[data-loading]:before{opacity:1;transform:translateY(0)}.m-77c9d27d[data-loading] .m-80f1301b{opacity:0;transform:translateY(100%)}.m-77c9d27d[data-loading] .m-a25b86ee{opacity:1;transform:translate(-50%,calc(-50% + .0625rem*var(--mantine-scale)))}@media (hover:hover){.m-77c9d27d:hover:not([data-loading]):not(:disabled):not([data-disabled]){--_button-bg:var(--button-hover,var(--mantine-primary-color-filled-hover));--_button-color:var(--button-hover-color)}}@media (hover:none){.m-77c9d27d:active:not([data-loading]):not(:disabled):not([data-disabled]){--_button-bg:var(--button-hover,var(--mantine-primary-color-filled-hover));--_button-color:var(--button-hover-color)}}[data-mantine-color-scheme=light] .m-77c9d27d{--_disabled-color:var(--mantine-color-gray-5);--_disabled-bg:var(--mantine-color-gray-1);--_button-loading-overlay-bg:hsla(0,0%,100%,.15)}[data-mantine-color-scheme=dark] .m-77c9d27d{--_disabled-color:var(--mantine-color-dark-3);--_disabled-bg:var(--mantine-color-dark-6);--_button-loading-overlay-bg:rgba(0,0,0,.15)}.m-80f1301b{justify-content:var(--button-justify,center);overflow:visible;transition:transform .15s ease,opacity .1s ease}.m-80f1301b,.m-811560b9{align-items:center;display:flex;height:100%}.m-811560b9{opacity:var(--_button-label-opacity,1);overflow:hidden;white-space:nowrap}.m-811560b9[data-loading]{--_button-label-opacity:.2}.m-a74036a{align-items:center;display:flex;margin-left:var(--_button-section-margin-left);margin-right:var(--_button-section-margin-right)}.m-a74036a[data-position=left]{--_button-section-margin-right:var(--mantine-spacing-xs)}[dir=rtl] .m-a74036a[data-position=left]{--_button-section-margin-right:0}.m-a74036a[data-position=right],[dir=rtl] .m-a74036a[data-position=left]{--_button-section-margin-left:var(--mantine-spacing-xs)}[dir=rtl] .m-a74036a[data-position=right]{--_button-section-margin-left:0;--_button-section-margin-right:var(--mantine-spacing-xs)}.m-a25b86ee{left:50%;opacity:0;position:absolute;top:50%;transform:translate(-50%,-200%);transition:transform .15s ease,opacity .1s ease}.m-80d6d844{--button-border-width:calc(.0625rem*var(--mantine-scale));display:flex}.m-80d6d844[data-orientation=horizontal]{flex-direction:row}.m-80d6d844[data-orientation=horizontal] .m-77c9d27d:not(:only-child):first-child{border-bottom-right-radius:0;border-right-width:calc(var(--button-border-width)/2);border-top-right-radius:0}.m-80d6d844[data-orientation=horizontal] .m-77c9d27d:not(:only-child):last-child{border-bottom-left-radius:0;border-left-width:calc(var(--button-border-width)/2);border-top-left-radius:0}.m-80d6d844[data-orientation=horizontal] .m-77c9d27d:not(:only-child):not(:first-child):not(:last-child){border-left-width:calc(var(--button-border-width)/2);border-radius:0;border-right-width:calc(var(--button-border-width)/2)}[dir=rtl] .m-80d6d844[data-orientation=horizontal] .m-77c9d27d:not(:only-child):first-child{border:var(--_button-bd,var(--button-bd,calc(.0625rem*var(--mantine-scale)) solid transparent));border-radius:var(--button-radius,var(--mantine-radius-default));border-bottom-left-radius:0;border-left-width:calc(var(--button-border-width)/2);border-top-left-radius:0}[dir=rtl] .m-80d6d844[data-orientation=horizontal] .m-77c9d27d:not(:only-child):last-child{border:var(--_button-bd,var(--button-bd,calc(.0625rem*var(--mantine-scale)) solid transparent));border-radius:var(--button-radius,var(--mantine-radius-default));border-bottom-right-radius:0;border-right-width:calc(var(--button-border-width)/2);border-top-right-radius:0}.m-80d6d844[data-orientation=vertical]{flex-direction:column}.m-80d6d844[data-orientation=vertical] .m-77c9d27d:not(:only-child):first-child{border-bottom-left-radius:0;border-bottom-right-radius:0;border-bottom-width:calc(var(--button-border-width)/2)}.m-80d6d844[data-orientation=vertical] .m-77c9d27d:not(:only-child):last-child{border-top-left-radius:0;border-top-right-radius:0;border-top-width:calc(var(--button-border-width)/2)}.m-80d6d844[data-orientation=vertical] .m-77c9d27d:not(:only-child):not(:first-child):not(:last-child){border-bottom-width:calc(var(--button-border-width)/2);border-radius:0;border-top-width:calc(var(--button-border-width)/2)}.m-e615b15f{--card-padding:var(--mantine-spacing-md);color:var(--mantine-color-text);display:flex;flex-direction:column;overflow:hidden;padding:var(--card-padding);position:relative}:where([data-mantine-color-scheme=light]) .m-e615b15f{background-color:var(--mantine-color-white)}:where([data-mantine-color-scheme=dark]) .m-e615b15f{background-color:var(--mantine-color-dark-6)}.m-599a2148{display:block;margin-left:calc(var(--card-padding)*-1);margin-right:calc(var(--card-padding)*-1)}.m-599a2148:where([data-first-section]){border-top:none!important;margin-top:calc(var(--card-padding)*-1)}.m-599a2148:where([data-last-section]){border-bottom:none!important;margin-bottom:calc(var(--card-padding)*-1)}.m-599a2148:where([data-inherit-padding]){padding-left:var(--card-padding);padding-right:var(--card-padding)}.m-599a2148:where([data-with-border]){border-bottom:calc(.0625rem*var(--mantine-scale)) solid;border-top:calc(.0625rem*var(--mantine-scale)) solid}:where([data-mantine-color-scheme=light]) .m-599a2148{border-color:var(--mantine-color-gray-3)}:where([data-mantine-color-scheme=dark]) .m-599a2148{border-color:var(--mantine-color-dark-4)}.m-599a2148+.m-599a2148{border-top:none!important}.m-4451eb3a{align-items:center;display:flex;justify-content:center}.m-4451eb3a:where([data-inline]){display:inline-flex}.m-f59ffda3{--chip-size-xs:calc(1.4375rem*var(--mantine-scale));--chip-size-sm:calc(1.75rem*var(--mantine-scale));--chip-size-md:calc(2rem*var(--mantine-scale));--chip-size-lg:calc(2.25rem*var(--mantine-scale));--chip-size-xl:calc(2.5rem*var(--mantine-scale));--chip-icon-size-xs:calc(.625rem*var(--mantine-scale));--chip-icon-size-sm:calc(.75rem*var(--mantine-scale));--chip-icon-size-md:calc(.875rem*var(--mantine-scale));--chip-icon-size-lg:calc(1rem*var(--mantine-scale));--chip-icon-size-xl:calc(1.125rem*var(--mantine-scale));--chip-padding-xs:calc(1rem*var(--mantine-scale));--chip-padding-sm:calc(1.25rem*var(--mantine-scale));--chip-padding-md:calc(1.5rem*var(--mantine-scale));--chip-padding-lg:calc(1.75rem*var(--mantine-scale));--chip-padding-xl:calc(2rem*var(--mantine-scale));--chip-checked-padding-xs:calc(.46875rem*var(--mantine-scale));--chip-checked-padding-sm:calc(.625rem*var(--mantine-scale));--chip-checked-padding-md:calc(.73125rem*var(--mantine-scale));--chip-checked-padding-lg:calc(.84375rem*var(--mantine-scale));--chip-checked-padding-xl:calc(.78125rem*var(--mantine-scale));--chip-spacing-xs:calc(.625rem*var(--mantine-scale));--chip-spacing-sm:calc(.75rem*var(--mantine-scale));--chip-spacing-md:calc(1rem*var(--mantine-scale));--chip-spacing-lg:calc(1.25rem*var(--mantine-scale));--chip-spacing-xl:calc(1.375rem*var(--mantine-scale));--chip-size:var(--chip-size-sm);--chip-icon-size:var(--chip-icon-size-sm);--chip-padding:var(--chip-padding-sm);--chip-spacing:var(--chip-spacing-sm);--chip-checked-padding:var(--chip-checked-padding-sm);--chip-bg:var(--mantine-primary-color-filled);--chip-hover:var(--mantine-primary-color-filled-hover);--chip-color:var(--mantine-color-white);--chip-bd:calc(.0625rem*var(--mantine-scale)) solid transparent}.m-be049a53{-webkit-tap-highlight-color:transparent;align-items:center;background-color:var(--_chip-bg);border:calc(.0625rem*var(--mantine-scale)) solid transparent;border-radius:var(--chip-radius,calc(62.5rem*var(--mantine-scale)));color:var(--_chip-color,var(--mantine-color-text));cursor:var(--_chip-cursor,pointer);display:inline-flex;font-size:var(--chip-fz,var(--mantine-font-size-sm));height:var(--chip-size);line-height:calc(var(--chip-size) - .125rem*var(--mantine-scale));padding-left:var(--_chip-padding,var(--chip-padding));padding-right:var(--_chip-padding,var(--chip-padding));-webkit-user-select:none;user-select:none;white-space:nowrap}.m-be049a53[data-checked]{--_chip-padding:var(--chip-checked-padding)}[data-mantine-color-scheme=light] .m-be049a53[data-disabled]{--_chip-bg:var(--mantine-color-gray-2);--_chip-color:var(--mantine-color-gray-5)}[data-mantine-color-scheme=dark] .m-be049a53[data-disabled]{--_chip-bg:var(--mantine-color-dark-6);--_chip-color:var(--mantine-color-dark-3)}.m-be049a53[data-disabled]{--_chip-cursor:not-allowed}.m-3904c1af:not([data-disabled]){background-color:var(--_chip-bg);border:var(--_chip-bd)}@media (hover:hover){[data-mantine-color-scheme=light] .m-3904c1af:not([data-disabled]):hover{--_chip-bg:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-3904c1af:not([data-disabled]):hover{--_chip-bg:var(--mantine-color-dark-5)}}@media (hover:none){[data-mantine-color-scheme=light] .m-3904c1af:not([data-disabled]):active{--_chip-bg:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-3904c1af:not([data-disabled]):active{--_chip-bg:var(--mantine-color-dark-5)}}[data-mantine-color-scheme=light] .m-3904c1af:not([data-disabled]){--_chip-bg:var(--mantine-color-white);--_chip-bd:calc(.0625rem*var(--mantine-scale)) solid var(--mantine-color-gray-3)}[data-mantine-color-scheme=dark] .m-3904c1af:not([data-disabled]){--_chip-bg:var(--mantine-color-dark-6);--_chip-bd:calc(.0625rem*var(--mantine-scale)) solid var(--mantine-color-dark-4)}[data-mantine-color-scheme] .m-3904c1af:not([data-disabled])[data-checked]{--_chip-bd:var(--chip-bd);--_chip-icon-color:var(--chip-color)}@media (hover:hover){[data-mantine-color-scheme] .m-3904c1af:not([data-disabled])[data-checked]:hover{--_chip-bg:var(--chip-hover)}}@media (hover:none){[data-mantine-color-scheme] .m-3904c1af:not([data-disabled])[data-checked]:active{--_chip-bg:var(--chip-hover)}}.m-f7e165c3:not([data-disabled]),.m-fa109255:not([data-disabled]){background-color:var(--_chip-bg);border:calc(.0625rem*var(--mantine-scale)) solid transparent;color:var(--_chip-color,var(--mantine-color-text))}@media (hover:hover){[data-mantine-color-scheme=light] .m-f7e165c3:not([data-disabled]):hover,[data-mantine-color-scheme=light] .m-fa109255:not([data-disabled]):hover{--_chip-bg:var(--mantine-color-gray-2)}[data-mantine-color-scheme=dark] .m-f7e165c3:not([data-disabled]):hover,[data-mantine-color-scheme=dark] .m-fa109255:not([data-disabled]):hover{--_chip-bg:var(--mantine-color-dark-4)}}@media (hover:none){[data-mantine-color-scheme=light] .m-f7e165c3:not([data-disabled]):active,[data-mantine-color-scheme=light] .m-fa109255:not([data-disabled]):active{--_chip-bg:var(--mantine-color-gray-2)}[data-mantine-color-scheme=dark] .m-f7e165c3:not([data-disabled]):active,[data-mantine-color-scheme=dark] .m-fa109255:not([data-disabled]):active{--_chip-bg:var(--mantine-color-dark-4)}}[data-mantine-color-scheme=light] .m-f7e165c3:not([data-disabled]),[data-mantine-color-scheme=light] .m-fa109255:not([data-disabled]){--_chip-bg:var(--mantine-color-gray-1)}[data-mantine-color-scheme=dark] .m-f7e165c3:not([data-disabled]),[data-mantine-color-scheme=dark] .m-fa109255:not([data-disabled]){--_chip-bg:var(--mantine-color-dark-5)}[data-mantine-color-scheme] .m-f7e165c3:not([data-disabled])[data-checked],[data-mantine-color-scheme] .m-fa109255:not([data-disabled])[data-checked]{--_chip-icon-color:var(--chip-color);--_chip-color:var(--chip-color);--_chip-bg:var(--chip-bg)}@media (hover:hover){[data-mantine-color-scheme] .m-f7e165c3:not([data-disabled])[data-checked]:hover,[data-mantine-color-scheme] .m-fa109255:not([data-disabled])[data-checked]:hover{--_chip-bg:var(--chip-hover)}}@media (hover:none){[data-mantine-color-scheme] .m-f7e165c3:not([data-disabled])[data-checked]:active,[data-mantine-color-scheme] .m-fa109255:not([data-disabled])[data-checked]:active{--_chip-bg:var(--chip-hover)}}.m-9ac86df9{align-items:center;display:flex;max-width:calc(var(--chip-icon-size) + var(--chip-spacing)/1.5);overflow:hidden;width:calc(var(--chip-icon-size) + var(--chip-spacing)/1.5)}.m-9ac86df9,.m-d6d72580{height:var(--chip-icon-size)}.m-d6d72580{color:var(--_chip-icon-color,inherit);display:block;width:var(--chip-icon-size)}.m-bde07329{height:0;margin:0;opacity:0;padding:0;width:0}.m-bde07329:focus-visible+.m-be049a53{outline:calc(.125rem*var(--mantine-scale)) solid var(--mantine-primary-color-filled);outline-offset:calc(.125rem*var(--mantine-scale))}.m-b183c0a2{border-radius:var(--mantine-radius-sm);font-family:var(--mantine-font-family-monospace);font-size:var(--mantine-font-size-xs);line-height:var(--mantine-line-height);margin:0;overflow:auto;padding:calc(.125rem*var(--mantine-scale)) calc(var(--mantine-spacing-xs)/2)}[data-mantine-color-scheme=light] .m-b183c0a2{background-color:var(--code-bg,var(--mantine-color-gray-1));color:var(--mantine-color-black)}[data-mantine-color-scheme=dark] .m-b183c0a2{background-color:var(--code-bg,var(--mantine-color-dark-5));color:var(--mantine-color-white)}.m-b183c0a2[data-block]{padding:var(--mantine-spacing-xs)}.m-de3d2490{--cs-size:calc(1.75rem*var(--mantine-scale));--cs-radius:calc(62.5rem*var(--mantine-scale));-webkit-tap-highlight-color:transparent;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;border-radius:var(--cs-radius);color:inherit;display:block;height:var(--cs-size);line-height:1;min-height:var(--cs-size);min-width:var(--cs-size);position:relative;text-decoration:none;width:var(--cs-size)}[data-mantine-color-scheme=light] .m-de3d2490{--alpha-overlay-color:var(--mantine-color-gray-3);--alpha-overlay-bg:var(--mantine-color-white)}[data-mantine-color-scheme=dark] .m-de3d2490{--alpha-overlay-color:var(--mantine-color-dark-4);--alpha-overlay-bg:var(--mantine-color-dark-7)}.m-862f3d1b,.m-98ae7f22{border-radius:var(--cs-radius);top:0;right:0;bottom:0;left:0;position:absolute}.m-98ae7f22{box-shadow:#0000001a 0 0 0 calc(.0625rem*var(--mantine-scale)) inset,#00000026 0 0 calc(.25rem*var(--mantine-scale)) inset;z-index:1}.m-95709ac0{background-image:linear-gradient(45deg,var(--alpha-overlay-color) 25%,transparent 25%),linear-gradient(-45deg,var(--alpha-overlay-color) 25%,transparent 25%),linear-gradient(45deg,transparent 75%,var(--alpha-overlay-color) 75%),linear-gradient(-45deg,var(--alpha-overlay-bg) 75%,var(--alpha-overlay-color) 75%);background-position:0 0,0 calc(.25rem*var(--mantine-scale)),calc(.25rem*var(--mantine-scale)) calc(-.25rem*var(--mantine-scale)),calc(-.25rem*var(--mantine-scale)) 0;background-size:calc(.5rem*var(--mantine-scale)) calc(.5rem*var(--mantine-scale))}.m-93e74e3,.m-95709ac0{border-radius:var(--cs-radius);top:0;right:0;bottom:0;left:0;position:absolute}.m-93e74e3{align-items:center;display:flex;justify-content:center;z-index:2}.m-fee9c77{--cp-width-xs:calc(11.25rem*var(--mantine-scale));--cp-width-sm:calc(12.5rem*var(--mantine-scale));--cp-width-md:calc(15rem*var(--mantine-scale));--cp-width-lg:calc(17.5rem*var(--mantine-scale));--cp-width-xl:calc(20rem*var(--mantine-scale));--cp-preview-size-xs:calc(1.625rem*var(--mantine-scale));--cp-preview-size-sm:calc(2.125rem*var(--mantine-scale));--cp-preview-size-md:calc(2.625rem*var(--mantine-scale));--cp-preview-size-lg:calc(3.125rem*var(--mantine-scale));--cp-preview-size-xl:calc(3.375rem*var(--mantine-scale));--cp-thumb-size-xs:calc(.5rem*var(--mantine-scale));--cp-thumb-size-sm:calc(.75rem*var(--mantine-scale));--cp-thumb-size-md:calc(1rem*var(--mantine-scale));--cp-thumb-size-lg:calc(1.25rem*var(--mantine-scale));--cp-thumb-size-xl:calc(1.375rem*var(--mantine-scale));--cp-saturation-height-xs:calc(6.25rem*var(--mantine-scale));--cp-saturation-height-sm:calc(6.875rem*var(--mantine-scale));--cp-saturation-height-md:calc(7.5rem*var(--mantine-scale));--cp-saturation-height-lg:calc(8.75rem*var(--mantine-scale));--cp-saturation-height-xl:calc(10rem*var(--mantine-scale));--cp-preview-size:var(--cp-preview-size-sm);--cp-thumb-size:var(--cp-thumb-size-sm);--cp-saturation-height:var(--cp-saturation-height-sm);--cp-width:var(--cp-width-sm);--cp-body-spacing:var(--mantine-spacing-sm);padding:calc(.0625rem*var(--mantine-scale));width:var(--_cp-width,var(--cp-width))}.m-fee9c77[data-full-width]{--_cp-width:100%}.m-9dddfbac{height:var(--cp-preview-size);width:var(--cp-preview-size)}.m-bffecc3e{display:flex;padding-top:calc(var(--cp-body-spacing)/2)}.m-3283bb96{flex:1}.m-3283bb96:not(:only-child){margin-right:var(--mantine-spacing-xs)}.m-40d572ba{border:calc(.125rem*var(--mantine-scale)) solid var(--mantine-color-white);border-radius:var(--_cp-thumb-size);box-shadow:0 0 calc(.0625rem*var(--mantine-scale)) #0009;height:var(--_cp-thumb-size);left:calc(var(--_thumb-x-offset) - var(--_cp-thumb-size)/2);outline:var(--_outline);overflow:hidden;position:absolute;top:calc(var(--_thumb-y-offset) - var(--_cp-thumb-size)/2);width:var(--_cp-thumb-size)}.m-d8ee6fd8{cursor:pointer;flex:0 0 calc(var(--cp-swatch-size) - .25rem*var(--mantine-scale));height:unset!important;margin:calc(.125rem*var(--mantine-scale));min-height:0!important;min-width:0!important;padding-bottom:calc(var(--cp-swatch-size) - .25rem*var(--mantine-scale));width:unset!important}.m-5711e686{display:flex;flex-wrap:wrap;margin-left:calc(-.125rem*var(--mantine-scale));margin-right:calc(-.125rem*var(--mantine-scale));margin-top:calc(.3125rem*var(--mantine-scale))}.m-202a296e{--cp-thumb-size-xs:calc(.5rem*var(--mantine-scale));--cp-thumb-size-sm:calc(.75rem*var(--mantine-scale));--cp-thumb-size-md:calc(1rem*var(--mantine-scale));--cp-thumb-size-lg:calc(1.25rem*var(--mantine-scale));--cp-thumb-size-xl:calc(1.375rem*var(--mantine-scale));--_cp-thumb-size:var(--cp-thumb-size,calc(.75rem*var(--mantine-scale)));-webkit-tap-highlight-color:transparent;border-radius:var(--mantine-radius-sm);height:var(--cp-saturation-height);margin:calc(var(--cp-thumb-size)/2);position:relative}.m-202a296e[data-focus-ring=auto]:focus:focus-visible .m-40d572ba{--_outline:calc(.125rem*var(--mantine-scale)) solid var(--mantine-color-blue-filled)}.m-202a296e[data-focus-ring=always]:focus .m-40d572ba{--_outline:calc(.125rem*var(--mantine-scale)) solid var(--mantine-color-blue-filled)}.m-11b3db02{border-radius:var(--mantine-radius-sm);inset:calc(var(--cp-thumb-size)*-1/2 - .0625rem*var(--mantine-scale));position:absolute}.m-d856d47d{--cp-thumb-size-xs:calc(.5rem*var(--mantine-scale));--cp-thumb-size-sm:calc(.75rem*var(--mantine-scale));--cp-thumb-size-md:calc(1rem*var(--mantine-scale));--cp-thumb-size-lg:calc(1.25rem*var(--mantine-scale));--cp-thumb-size-xl:calc(1.375rem*var(--mantine-scale));--_cp-thumb-size:var(--cp-thumb-size,calc(.75rem*var(--mantine-scale)));height:calc(var(--_cp-thumb-size) + .125rem*var(--mantine-scale));margin-left:calc(var(--_cp-thumb-size)/2);margin-right:calc(var(--_cp-thumb-size)/2);outline:none;position:relative}.m-d856d47d+.m-d856d47d{margin-top:calc(.375rem*var(--mantine-scale))}.m-d856d47d[data-focus-ring=auto]:focus:focus-visible .m-40d572ba{--_outline:calc(.125rem*var(--mantine-scale)) solid var(--mantine-color-blue-filled)}.m-d856d47d[data-focus-ring=always]:focus .m-40d572ba{--_outline:calc(.125rem*var(--mantine-scale)) solid var(--mantine-color-blue-filled)}[data-mantine-color-scheme=light] .m-d856d47d{--_slider-checkers:var(--mantine-color-gray-3)}[data-mantine-color-scheme=dark] .m-d856d47d{--_slider-checkers:var(--mantine-color-dark-4)}.m-8f327113{border-radius:10000rem;bottom:0;left:calc(var(--_cp-thumb-size)*-1/2 - .0625rem*var(--mantine-scale));position:absolute;right:calc(var(--_cp-thumb-size)*-1/2 - .0625rem*var(--mantine-scale));top:0}.m-b077c2bc{--ci-eye-dropper-icon-size-xs:calc(.875rem*var(--mantine-scale));--ci-eye-dropper-icon-size-sm:calc(1rem*var(--mantine-scale));--ci-eye-dropper-icon-size-md:calc(1.125rem*var(--mantine-scale));--ci-eye-dropper-icon-size-lg:calc(1.25rem*var(--mantine-scale));--ci-eye-dropper-icon-size-xl:calc(1.375rem*var(--mantine-scale));--ci-eye-dropper-icon-size:var(--ci-eye-dropper-icon-size-sm)}.m-c5ccdcab{--ci-preview-size-xs:calc(1rem*var(--mantine-scale));--ci-preview-size-sm:calc(1.125rem*var(--mantine-scale));--ci-preview-size-md:calc(1.375rem*var(--mantine-scale));--ci-preview-size-lg:calc(1.75rem*var(--mantine-scale));--ci-preview-size-xl:calc(2.25rem*var(--mantine-scale));--ci-preview-size:var(--ci-preview-size-sm)}.m-5ece2cd7{padding:calc(.5rem*var(--mantine-scale))}.m-7485cace{--container-size-xs:calc(33.75rem*var(--mantine-scale));--container-size-sm:calc(45rem*var(--mantine-scale));--container-size-md:calc(60rem*var(--mantine-scale));--container-size-lg:calc(71.25rem*var(--mantine-scale));--container-size-xl:calc(82.5rem*var(--mantine-scale));--container-size:var(--container-size-md);margin-left:auto;margin-right:auto;max-width:var(--container-size);padding-left:var(--mantine-spacing-md);padding-right:var(--mantine-spacing-md)}.m-7485cace:where([data-fluid]){max-width:100%}.m-e2125a27{--dialog-size-xs:calc(10rem*var(--mantine-scale));--dialog-size-sm:calc(12.5rem*var(--mantine-scale));--dialog-size-md:calc(21.25rem*var(--mantine-scale));--dialog-size-lg:calc(25rem*var(--mantine-scale));--dialog-size-xl:calc(31.25rem*var(--mantine-scale));--dialog-size:var(--dialog-size-md);max-width:calc(100vw - var(--mantine-spacing-xl)*2);min-height:calc(3.125rem*var(--mantine-scale));position:relative;width:var(--dialog-size)}.m-5abab665{left:auto;position:absolute;right:calc(var(--mantine-spacing-md)/2);top:calc(var(--mantine-spacing-md)/2)}:where([dir=rtl]) .m-5abab665{left:calc(var(--mantine-spacing-md)/2);right:auto}.m-3eebeb36{--divider-size-xs:calc(.0625rem*var(--mantine-scale));--divider-size-sm:calc(.125rem*var(--mantine-scale));--divider-size-md:calc(.1875rem*var(--mantine-scale));--divider-size-lg:calc(.25rem*var(--mantine-scale));--divider-size-xl:calc(.3125rem*var(--mantine-scale));--divider-size:var(--divider-size-xs)}:where([data-mantine-color-scheme=light]) .m-3eebeb36{--divider-color:var(--mantine-color-gray-3)}:where([data-mantine-color-scheme=dark]) .m-3eebeb36{--divider-color:var(--mantine-color-dark-4)}.m-3eebeb36:where([data-orientation=horizontal]){border-top:var(--divider-size) var(--divider-border-style,solid) var(--divider-color)}.m-3eebeb36:where([data-orientation=vertical]){align-self:stretch;border-left:var(--divider-size) var(--divider-border-style,solid) var(--divider-color);height:auto}.m-3eebeb36:where([data-with-label]){border:0}.m-9e365f20{align-items:center;color:var(--mantine-color-dimmed);display:flex;font-size:var(--mantine-font-size-xs);white-space:nowrap}.m-9e365f20:where([data-position=left]):before{display:none}.m-9e365f20:where([data-position=right]):after{display:none}.m-9e365f20:before{border-top:var(--divider-size) var(--divider-border-style,solid) var(--divider-color,var(--_divider-color));content:"";flex:1;height:calc(.0625rem*var(--mantine-scale));margin-right:var(--mantine-spacing-xs)}[dir=rtl] .m-9e365f20:before{margin-left:var(--mantine-spacing-xs);margin-right:0}.m-9e365f20:after{border-top:var(--divider-size) var(--divider-border-style,solid) var(--divider-color,var(--_divider-color));content:"";flex:1;height:calc(.0625rem*var(--mantine-scale));margin-left:var(--mantine-spacing-xs)}:where([dir=rtl]) .m-9e365f20:after{margin-left:0;margin-right:var(--mantine-spacing-xs)}.m-f11b401e{--drawer-size-xs:calc(20rem*var(--mantine-scale));--drawer-size-sm:calc(23.75rem*var(--mantine-scale));--drawer-size-md:calc(27.5rem*var(--mantine-scale));--drawer-size-lg:calc(38.75rem*var(--mantine-scale));--drawer-size-xl:calc(48.75rem*var(--mantine-scale));--drawer-size:var(--drawer-size-md);--drawer-offset:0rem}.m-5a7c2c9{z-index:1000}.m-b8a05bbd{flex:var(--drawer-flex,0 0 var(--drawer-size));height:var(--drawer-height,calc(100% - var(--drawer-offset)*2));margin:var(--drawer-offset);max-height:100%;max-width:100%;overflow-y:auto}.m-31cd769a{align-items:var(--drawer-align,flex-start);display:flex;justify-content:var(--drawer-justify,flex-start)}.m-e9408a47{border-radius:var(--fieldset-radius,var(--mantine-radius-default));min-inline-size:auto;padding:var(--mantine-spacing-lg);padding-top:var(--mantine-spacing-xs)}.m-84c9523a{border:calc(.0625rem*var(--mantine-scale)) solid}:where([data-mantine-color-scheme=light]) .m-84c9523a{background-color:var(--mantine-color-white);border-color:var(--mantine-color-gray-3)}:where([data-mantine-color-scheme=dark]) .m-84c9523a{background-color:var(--mantine-color-dark-7);border-color:var(--mantine-color-dark-4)}.m-ef274e49{border:calc(.0625rem*var(--mantine-scale)) solid}:where([data-mantine-color-scheme=light]) .m-ef274e49{background-color:var(--mantine-color-gray-0);border-color:var(--mantine-color-gray-3)}:where([data-mantine-color-scheme=dark]) .m-ef274e49{background-color:var(--mantine-color-dark-6);border-color:var(--mantine-color-dark-4)}.m-eda993d3{border:0;border-radius:0;padding:0}.m-90794832{font-size:var(--mantine-font-size-sm)}.m-74ca27fe{margin-bottom:var(--mantine-spacing-sm);padding:0}.m-410352e9{--grid-overflow:visible;--grid-margin:calc(var(--grid-gutter)/-2);--grid-col-padding:calc(var(--grid-gutter)/2);overflow:var(--grid-overflow)}.m-dee7bd2f{align-items:var(--grid-align);display:flex;flex-wrap:wrap;justify-content:var(--grid-justify);margin:var(--grid-margin);width:calc(100% + var(--grid-gutter))}.m-96bdd299{--col-flex-grow:0;--col-offset:0rem;flex-basis:var(--col-flex-basis);flex-grow:var(--col-flex-grow);flex-shrink:0;margin-left:var(--col-offset);margin-right:0;max-width:var(--col-max-width);order:var(--col-order);padding:var(--grid-col-padding);width:var(--col-width)}:where([dir=rtl]) .m-96bdd299{margin-left:0;margin-right:var(--col-offset)}.m-bcb3f3c2{color:var(--mantine-color-black)}:where([data-mantine-color-scheme=light]) .m-bcb3f3c2{background-color:var(--mark-bg-light)}:where([data-mantine-color-scheme=dark]) .m-bcb3f3c2{background-color:var(--mark-bg-dark)}.m-9e117634{border-radius:var(--image-radius,0);display:block;flex:0;object-fit:var(--image-object-fit,cover);width:100%}@keyframes m-885901b1{0%{box-shadow:0 0 0 0 var(--indicator-color);opacity:.6}to{box-shadow:0 0 0 calc(.5rem*var(--mantine-scale)) var(--indicator-color);opacity:0}}.m-e5262200{--indicator-size:calc(.625rem*var(--mantine-scale));--indicator-color:var(--mantine-primary-color-filled);display:block;position:relative}.m-e5262200:where([data-inline]){display:inline-block}.m-760d1fb1{align-items:center;bottom:var(--indicator-bottom);color:var(--indicator-text-color,var(--mantine-color-white));display:flex;font-size:var(--mantine-font-size-xs);height:var(--indicator-size);justify-content:center;left:var(--indicator-left);min-width:var(--indicator-size);right:var(--indicator-right);top:var(--indicator-top);transform:translate(var(--indicator-translate-x),var(--indicator-translate-y));white-space:nowrap;z-index:var(--indicator-z-index,200)}.m-760d1fb1,.m-760d1fb1:before{background-color:var(--indicator-color);border-radius:var(--indicator-radius,calc(62.5rem*var(--mantine-scale)));position:absolute}.m-760d1fb1:before{content:"";top:0;right:0;bottom:0;left:0;z-index:-1}.m-760d1fb1:where([data-with-label]){padding-left:calc(var(--mantine-spacing-xs)/2);padding-right:calc(var(--mantine-spacing-xs)/2)}.m-760d1fb1:where([data-with-border]){border:calc(.125rem*var(--mantine-scale)) solid var(--mantine-color-body)}.m-760d1fb1[data-processing]:before{animation:m-885901b1 1s linear infinite}.m-dc6f14e2{--kbd-fz-xs:calc(.625rem*var(--mantine-scale));--kbd-fz-sm:calc(.75rem*var(--mantine-scale));--kbd-fz-md:calc(.875rem*var(--mantine-scale));--kbd-fz-lg:calc(1rem*var(--mantine-scale));--kbd-fz-xl:calc(1.25rem*var(--mantine-scale));--kbd-fz:var(--kbd-fz-sm);--kbd-padding-xs:calc(.125rem*var(--mantine-scale)) calc(.25rem*var(--mantine-scale));--kbd-padding-sm:calc(.1875rem*var(--mantine-scale)) calc(.3125rem*var(--mantine-scale));--kbd-padding-md:calc(.25rem*var(--mantine-scale)) calc(.4375rem*var(--mantine-scale));--kbd-padding-lg:calc(.3125rem*var(--mantine-scale)) calc(.5625rem*var(--mantine-scale));--kbd-padding-xl:calc(.5rem*var(--mantine-scale)) calc(.875rem*var(--mantine-scale));--kbd-padding:var(--kbd-padding-sm);border:calc(.0625rem*var(--mantine-scale)) solid;border-bottom-width:calc(.1875rem*var(--mantine-scale));border-radius:var(--mantine-radius-sm);font-family:var(--mantine-font-family-monospace);font-size:var(--kbd-fz);font-weight:700;line-height:var(--mantine-line-height);padding:var(--kbd-padding);unicode-bidi:embed}:where([data-mantine-color-scheme=light]) .m-dc6f14e2{background-color:var(--mantine-color-gray-0);border-color:var(--mantine-color-gray-3);color:var(--mantine-color-gray-7)}[data-mantine-color-scheme=dark] .m-dc6f14e2{background-color:var(--mantine-color-dark-6);border-color:var(--mantine-color-dark-4);color:var(--mantine-color-dark-0)}.m-abbac491{--list-fz:var(--mantine-font-size-md);--list-lh:var(--mantine-line-height-md);font-size:var(--list-fz);line-height:var(--list-lh);list-style-position:inside;margin:0;padding:0}.m-abbac491:where([data-with-padding]){padding-left:var(--mantine-spacing-md)}[dir=rtl] .m-abbac491:where([data-with-padding]){padding-left:0;padding-right:var(--mantine-spacing-md)}.m-abb6bec2{line-height:var(--list-lh);white-space:nowrap}.m-abb6bec2:where([data-with-icon]){list-style:none}.m-abb6bec2:where([data-with-icon]) .m-75cd9f71{--li-direction:row;--li-align:center}.m-abb6bec2:where(:not(:first-of-type)){margin-top:var(--list-spacing,0)}.m-abb6bec2:where([data-centered]){line-height:1}.m-75cd9f71{align-items:var(--li-align,flex-start);display:inline-flex;flex-direction:var(--li-direction,column);white-space:normal}.m-60f83e5b{display:inline-block;margin-left:0;margin-right:var(--mantine-spacing-sm);vertical-align:middle}[dir=rtl] .m-60f83e5b{margin-left:var(--mantine-spacing-sm);margin-right:0}.m-6e45937b{align-items:center;display:flex;top:0;right:0;bottom:0;left:0;justify-content:center;overflow:hidden;position:absolute;z-index:var(--lo-z-index)}.m-e8eb006c{position:relative;z-index:calc(var(--lo-z-index) + 1)}.m-df587f17{z-index:var(--lo-z-index)}.m-dc9b7c9f{padding:calc(.25rem*var(--mantine-scale))}.m-9bfac126{color:var(--mantine-color-dimmed);cursor:default;font-size:var(--mantine-font-size-xs);font-weight:500;padding:calc(var(--mantine-spacing-xs)/2) var(--mantine-spacing-sm)}.m-efdf90cb{border-top:calc(.0625rem*var(--mantine-scale)) solid;margin-bottom:calc(.25rem*var(--mantine-scale));margin-top:calc(.25rem*var(--mantine-scale))}[data-mantine-color-scheme=light] .m-efdf90cb{border-color:var(--mantine-color-gray-2)}[data-mantine-color-scheme=dark] .m-efdf90cb{border-color:var(--mantine-color-dark-4)}.m-99ac2aa1{align-items:center;background-color:var(--_item-bg,transparent);border-radius:var(--popover-radius,var(--mantine-radius-default));color:var(--menu-item-color,var(--mantine-color-text));display:flex;font-size:var(--mantine-font-size-sm);padding:calc(var(--mantine-spacing-xs)/1.5) var(--mantine-spacing-sm);-webkit-user-select:none;user-select:none;width:100%}.m-99ac2aa1:where([data-disabled],:disabled){color:var(--mantine-color-dimmed);opacity:.6;pointer-events:none}:where([data-mantine-color-scheme=light]) .m-99ac2aa1:where([data-hovered]){background-color:var(--menu-item-hover,var(--mantine-color-gray-1))}:where([data-mantine-color-scheme=dark]) .m-99ac2aa1:where([data-hovered]){background-color:var(--menu-item-hover,var(--mantine-color-dark-4))}.m-5476e0d3{flex:1}[dir=rtl] .m-5476e0d3{text-align:right}.m-8b75e504{align-items:center;display:flex;justify-content:center}.m-8b75e504:where([data-position=left]){margin-left:0;margin-right:var(--mantine-spacing-xs)}:where([dir=rtl]) .m-8b75e504:where([data-position=left]){margin-left:var(--mantine-spacing-xs);margin-right:0}.m-8b75e504:where([data-position=right]){margin-left:var(--mantine-spacing-xs);margin-right:0}:where([dir=rtl]) .m-8b75e504:where([data-position=right]){margin-left:0;margin-right:var(--mantine-spacing-xs)}.m-9df02822{--modal-size-xs:calc(20rem*var(--mantine-scale));--modal-size-sm:calc(23.75rem*var(--mantine-scale));--modal-size-md:calc(27.5rem*var(--mantine-scale));--modal-size-lg:calc(38.75rem*var(--mantine-scale));--modal-size-xl:calc(48.75rem*var(--mantine-scale));--modal-size:var(--modal-size-md);--modal-y-offset:5dvh;--modal-x-offset:5vw}.m-9df02822[data-full-screen]{--modal-border-radius:0!important}.m-9df02822[data-full-screen] .m-54c44539{--_content-flex:0 0 100%;--_content-max-height:auto;--_content-height:100dvh}.m-9df02822[data-full-screen] .m-1f958f16{--_inner-y-offset:0;--_inner-x-offset:0}.m-9df02822[data-centered] .m-1f958f16{--_inner-align:center}.m-d0e2b9cd{border-top-left-radius:var(--modal-radius,var(--mantine-radius-default));border-top-right-radius:var(--modal-radius,var(--mantine-radius-default))}.m-54c44539{flex:var(--_content-flex,0 0 var(--modal-size));height:var(--_content-height,auto);max-height:var(--_content-max-height,calc(100dvh - var(--modal-y-offset)*2));max-width:100%;overflow-y:auto}.m-54c44539[data-full-screen]{border-radius:0}.m-1f958f16{align-items:var(--_inner-align,flex-start);display:flex;justify-content:center;padding:var(--_inner-y-offset,var(--modal-y-offset)) var(--_inner-x-offset,var(--modal-x-offset))}.m-7cda1cd6{--pill-fz-xs:calc(.625rem*var(--mantine-scale));--pill-fz-sm:calc(.75rem*var(--mantine-scale));--pill-fz-md:calc(.875rem*var(--mantine-scale));--pill-fz-lg:calc(1rem*var(--mantine-scale));--pill-fz-xl:calc(1.125rem*var(--mantine-scale));--pill-height-xs:calc(1.125rem*var(--mantine-scale));--pill-height-sm:calc(1.375rem*var(--mantine-scale));--pill-height-md:calc(1.5625rem*var(--mantine-scale));--pill-height-lg:calc(1.75rem*var(--mantine-scale));--pill-height-xl:calc(2rem*var(--mantine-scale));--pill-fz:var(--pill-fz-sm);--pill-height:var(--pill-height-sm);align-items:center;border-radius:var(--pill-radius,calc(62.5rem*var(--mantine-scale)));display:inline-flex;flex:0;font-size:var(--pill-fz);height:var(--pill-height);line-height:1;max-width:100%;padding-left:.8em;padding-right:.8em;user-select:none;-webkit-user-select:none;white-space:nowrap}:where([data-mantine-color-scheme=dark]) .m-7cda1cd6{background-color:var(--mantine-color-dark-7);color:var(--mantine-color-dark-0)}:where([data-mantine-color-scheme=light]) .m-7cda1cd6{color:var(--mantine-color-black)}:where([dir=rtl]) .m-7cda1cd6{padding-left:.8em;padding-right:.8em}.m-7cda1cd6:where([data-with-remove]){padding-right:0}.m-7cda1cd6:where([data-disabled],:has(button:disabled)){cursor:not-allowed}:where([data-mantine-color-scheme=light]) .m-44da308b{background-color:var(--mantine-color-gray-1)}:where([data-mantine-color-scheme=light]) .m-44da308b:where([data-disabled],:has(button:disabled)){background-color:var(--mantine-color-gray-3)}:where([data-mantine-color-scheme=light]) .m-e3a01f8{background-color:var(--mantine-color-white)}:where([data-mantine-color-scheme=light]) .m-e3a01f8:where([data-disabled],:has(button:disabled)){background-color:var(--mantine-color-gray-3)}.m-1e0e6180{cursor:inherit;height:100%;line-height:var(--pill-height);overflow:hidden;text-overflow:ellipsis}.m-ae386778{border-radius:0;color:inherit;flex:0;font-size:inherit;height:100%;min-height:unset;min-width:2em;padding-left:.1em;padding-right:.3em;width:unset}.m-7cda1cd6[data-disabled]>.m-ae386778,.m-ae386778:disabled{background-color:transparent;cursor:not-allowed;min-width:.8em;padding:0;width:.8em}.m-7cda1cd6[data-disabled]>.m-ae386778>svg,.m-ae386778:disabled>svg{display:none}.m-ae386778>svg{pointer-events:none}.m-1dcfd90b{--pg-gap-xs:calc(.375rem*var(--mantine-scale));--pg-gap-sm:calc(.5rem*var(--mantine-scale));--pg-gap-md:calc(.625rem*var(--mantine-scale));--pg-gap-lg:calc(.75rem*var(--mantine-scale));--pg-gap-xl:calc(.75rem*var(--mantine-scale));--pg-gap:var(--pg-gap-sm);align-items:center;display:flex;flex-wrap:wrap;gap:var(--pg-gap)}.m-45c4369d{-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:transparent;border:0;color:inherit;flex:1;font-size:inherit;height:1.6em;min-width:calc(6.25rem*var(--mantine-scale));padding:0}.m-45c4369d::placeholder{color:var(--_input-placeholder-color);opacity:1}.m-45c4369d:where([data-type=hidden],[data-type=auto]){height:calc(.0625rem*var(--mantine-scale));left:0;opacity:0;pointer-events:none;position:absolute;top:0;width:calc(.0625rem*var(--mantine-scale))}.m-45c4369d:focus{outline:none}.m-45c4369d:where([data-type=auto]:focus){height:1.6em;opacity:1;position:static;visibility:visible}.m-45c4369d:where([data-pointer]:not([data-disabled],:disabled)){cursor:pointer}.m-45c4369d:where([data-disabled],:disabled){cursor:not-allowed}.m-f0824112{--nl-bg:var(--mantine-primary-color-light);--nl-hover:var(--mantine-primary-color-light-hover);--nl-color:var(--mantine-primary-color-light-color);align-items:center;background:var(--_nav-link-bg);color:var(--_nav-link-color);display:flex;opacity:var(--_nav-link-opacity,1);padding:calc(.5rem*var(--mantine-scale)) var(--mantine-spacing-sm);pointer-events:var(--_nav-link-pointer-events,auto);-webkit-user-select:none;user-select:none;width:100%}@media (hover:hover){[data-mantine-color-scheme=light] .m-f0824112:hover{--_nav-link-bg:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-f0824112:hover{--_nav-link-bg:var(--mantine-color-dark-6)}}@media (hover:none){[data-mantine-color-scheme=light] .m-f0824112:active{--_nav-link-bg:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-f0824112:active{--_nav-link-bg:var(--mantine-color-dark-6)}}.m-f0824112[data-disabled]{--_nav-link-opacity:.4;--_nav-link-pointer-events:none}.m-f0824112[data-active]{--_nav-link-bg:var(--nl-bg);--_nav-link-color:var(--nl-color)}@media (hover:hover){.m-f0824112[data-active]:hover{--_nav-link-bg:var(--nl-hover)}}@media (hover:none){.m-f0824112[data-active]:active{--_nav-link-bg:var(--nl-hover)}}.m-f0824112[data-active] .m-57492dcc{--_description-opacity:.9;--_description-color:var(--nl-color)}.m-690090b5{align-items:center;display:flex;justify-content:center;margin-left:var(--_section-ml);margin-right:var(--_section-mr);transform:var(--_section-transform,none);transition:transform .15s ease}.m-690090b5>svg{display:block}.m-690090b5[data-position=left]{--_section-ml:0;--_section-mr:var(--mantine-spacing-sm)}.m-690090b5[data-position=right],[dir=rtl] .m-690090b5[data-position=left]{--_section-ml:var(--mantine-spacing-sm);--_section-mr:0}[dir=rtl] .m-690090b5[data-position=right]{--_section-ml:0;--_section-mr:var(--mantine-spacing-sm)}.m-690090b5[data-rotate]{--_section-transform:rotate(90deg)}.m-1f6ac4c4{font-size:var(--mantine-font-size-sm)}.m-f07af9d2{flex:1;overflow:hidden;text-overflow:ellipsis;white-space:var(--_body-white-space,auto)}.m-f07af9d2[data-no-wrap]{--_body-white-space:nowrap}.m-57492dcc{color:var(--_description-color,var(--mantine-color-dimmed));display:block;font-size:var(--mantine-font-size-xs);opacity:var(--_description-opacity,1);overflow:hidden;text-overflow:ellipsis;white-space:var(--_body-white-space,auto)}.m-e17b862f{padding-left:var(--_children-pl,var(--nl-offset,var(--mantine-spacing-lg)));padding-right:var(--_children-pr,0)}[dir=rtl] .m-e17b862f{--_children-pl:0;--_children-pr:var(--nl-offset,var(--mantine-spacing-lg))}.m-1fd8a00b{transform:rotate(-90deg)}.m-a513464{--notification-radius:var(--mantine-radius-default);--notification-color:var(--mantine-primary-color-filled);align-items:center;box-shadow:var(--mantine-shadow-lg);box-sizing:border-box;display:flex;overflow:hidden;padding:var(--mantine-spacing-xs) var(--mantine-spacing-xs) var(--mantine-spacing-xs) calc(1.375rem*var(--mantine-scale));position:relative}.m-a513464,.m-a513464:before{border-radius:var(--notification-radius)}.m-a513464:before{background-color:var(--notification-color);bottom:var(--notification-radius);content:"";display:block;left:calc(.25rem*var(--mantine-scale));position:absolute;top:var(--notification-radius);width:calc(.375rem*var(--mantine-scale))}:where([dir=rtl]) .m-a513464:before{left:auto;right:calc(.25rem*var(--mantine-scale))}:where([data-mantine-color-scheme=light]) .m-a513464{background-color:var(--mantine-color-white)}:where([data-mantine-color-scheme=dark]) .m-a513464{background-color:var(--mantine-color-dark-6)}.m-a513464:where([data-with-icon]){padding-left:var(--mantine-spacing-xs)}:where([dir=rtl]) .m-a513464:where([data-with-icon]){padding-right:var(--mantine-spacing-xs)}.m-a513464:where([data-with-icon]):before{display:none}:where([data-mantine-color-scheme=light]) .m-a513464:where([data-with-border]){border:calc(.0625rem*var(--mantine-scale)) solid var(--mantine-color-gray-3)}:where([data-mantine-color-scheme=dark]) .m-a513464:where([data-with-border]){border:calc(.0625rem*var(--mantine-scale)) solid var(--mantine-color-dark-4)}:where([dir=rtl]) .m-a513464{padding-left:var(--mantine-spacing-xs);padding-right:calc(1.375rem*var(--mantine-scale))}.m-a4ceffb{align-items:center;background-color:var(--notification-color);border-radius:calc(1.75rem*var(--mantine-scale));box-sizing:border-box;color:var(--mantine-color-white);display:flex;height:calc(1.75rem*var(--mantine-scale));justify-content:center;margin-right:var(--mantine-spacing-md);width:calc(1.75rem*var(--mantine-scale))}:where([dir=rtl]) .m-a4ceffb{margin-left:var(--mantine-spacing-md);margin-right:0}.m-b0920b15{margin-right:var(--mantine-spacing-md)}:where([dir=rtl]) .m-b0920b15{margin-left:var(--mantine-spacing-md);margin-right:0}.m-a49ed24{flex:1;margin-right:var(--mantine-spacing-xs);overflow:hidden}:where([dir=rtl]) .m-a49ed24{margin-left:var(--mantine-spacing-xs);margin-right:0}.m-3feedf16{font-size:var(--mantine-font-size-sm);font-weight:500;line-height:var(--mantine-line-height-sm);margin-bottom:calc(.125rem*var(--mantine-scale));overflow:hidden;text-overflow:ellipsis}:where([data-mantine-color-scheme=light]) .m-3feedf16{color:var(--mantine-color-gray-9)}:where([data-mantine-color-scheme=dark]) .m-3feedf16{color:var(--mantine-color-white)}.m-3d733a3a{color:var(--_description-color);font-size:var(--mantine-font-size-sm);line-height:var(--mantine-line-height-sm);overflow:hidden;text-overflow:ellipsis}[data-mantine-color-scheme=light] .m-3d733a3a{color:var(--mantine-color-black)}[data-mantine-color-scheme=dark] .m-3d733a3a{color:var(--mantine-color-dark-0)}[data-mantine-color-scheme=light] .m-3d733a3a:where([data-with-title]){color:var(--mantine-color-gray-6)}[data-mantine-color-scheme=dark] .m-3d733a3a:where([data-with-title]){color:var(--mantine-color-dark-2)}@media (hover:hover){[data-mantine-color-scheme=light] .m-919a4d88:hover{background-color:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-919a4d88:hover{background-color:var(--mantine-color-dark-8)}}@media (hover:none){[data-mantine-color-scheme=light] .m-919a4d88:active{background-color:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-919a4d88:active{background-color:var(--mantine-color-dark-8)}}.m-e2f5cd4e{--ni-right-section-width-xs:calc(1.0625rem*var(--mantine-scale));--ni-right-section-width-sm:calc(1.5rem*var(--mantine-scale));--ni-right-section-width-md:calc(1.6875rem*var(--mantine-scale));--ni-right-section-width-lg:calc(1.9375rem*var(--mantine-scale));--ni-right-section-width-xl:calc(2.125rem*var(--mantine-scale))}.m-95e17d22{--ni-chevron-size-xs:calc(.625rem*var(--mantine-scale));--ni-chevron-size-sm:calc(.875rem*var(--mantine-scale));--ni-chevron-size-md:calc(1rem*var(--mantine-scale));--ni-chevron-size-lg:calc(1.125rem*var(--mantine-scale));--ni-chevron-size-xl:calc(1.25rem*var(--mantine-scale));--ni-chevron-size:var(--ni-chevron-size-sm);display:flex;flex-direction:column;height:calc(var(--_input-height) - .125rem*var(--mantine-scale));margin-left:auto;margin-right:0;max-width:calc(var(--ni-chevron-size)*1.7);width:100%}:where([dir=rtl]) .m-95e17d22{margin-left:0;margin-right:auto}.m-80b4b171{--control-border:calc(.0625rem*var(--mantine-scale)) solid var(--_input-bd);--control-radius:calc(var(--_input-radius) - .0625rem*var(--mantine-scale));align-items:center;background-color:transparent;border-left:var(--control-border);color:var(--mantine-color-text);cursor:pointer;display:flex;flex:0 0 50%;height:calc(var(--_input-height)/2 - .0625rem*var(--mantine-scale));justify-content:center;padding:0;width:100%}.m-80b4b171:where(:disabled){background-color:transparent;cursor:not-allowed;opacity:.6}:where([data-mantine-color-scheme=light]) .m-80b4b171:where(:disabled){color:var(--mantine-color-gray-4)}:where([data-mantine-color-scheme=dark]) .m-80b4b171:where(:disabled){color:var(--mantine-color-dark-3)}.m-e2f5cd4e[data-error] :where(.m-80b4b171){color:var(--mantine-color-error)}:where([dir=rtl]) .m-80b4b171{border-left:none;border-right:var(--control-border)}@media (hover:hover){:where([data-mantine-color-scheme=light]) .m-80b4b171:hover{background-color:var(--mantine-color-gray-0)}:where([data-mantine-color-scheme=dark]) .m-80b4b171:hover{background-color:var(--mantine-color-dark-4)}}@media (hover:none){:where([data-mantine-color-scheme=light]) .m-80b4b171:active{background-color:var(--mantine-color-gray-0)}:where([data-mantine-color-scheme=dark]) .m-80b4b171:active{background-color:var(--mantine-color-dark-4)}}.m-80b4b171:where(:first-of-type){border-bottom:calc(.03125rem*var(--mantine-scale)) solid var(--_input-bd);border-radius:0 var(--control-radius) 0 0}:where([dir=rtl]) .m-80b4b171:where(:first-of-type){border-radius:var(--control-radius) 0 0 0}.m-80b4b171:last-of-type{border-radius:0 0 var(--control-radius) 0;border-top:calc(.03125rem*var(--mantine-scale)) solid var(--_input-bd)}[dir=rtl] .m-80b4b171:last-of-type{border-radius:0 0 0 var(--control-radius)}.m-4addd315{--pagination-control-size-xs:calc(1.375rem*var(--mantine-scale));--pagination-control-size-sm:calc(1.625rem*var(--mantine-scale));--pagination-control-size-md:calc(2rem*var(--mantine-scale));--pagination-control-size-lg:calc(2.375rem*var(--mantine-scale));--pagination-control-size-xl:calc(2.75rem*var(--mantine-scale));--pagination-control-size:var(--pagination-control-size-md);--pagination-control-fz:var(--mantine-font-size-md);--pagination-active-bg:var(--mantine-primary-color-filled)}.m-326d024a{align-items:center;border:calc(.0625rem*var(--mantine-scale)) solid;border-radius:var(--pagination-control-radius,var(--mantine-radius-default));color:var(--mantine-color-text);cursor:pointer;display:flex;font-size:var(--pagination-control-fz);height:var(--pagination-control-size);justify-content:center;line-height:1;min-width:var(--pagination-control-size)}.m-326d024a:where([data-with-padding]){padding:calc(var(--pagination-control-size)/4)}.m-326d024a:where(:disabled,[data-disabled]){cursor:not-allowed;opacity:.4}:where([data-mantine-color-scheme=light]) .m-326d024a{background-color:var(--mantine-color-white);border-color:var(--mantine-color-gray-4)}@media (hover:hover){:where([data-mantine-color-scheme=light]) .m-326d024a:hover:where(:not(:disabled,[data-disabled])){background-color:var(--mantine-color-gray-0)}}@media (hover:none){:where([data-mantine-color-scheme=light]) .m-326d024a:active:where(:not(:disabled,[data-disabled])){background-color:var(--mantine-color-gray-0)}}:where([data-mantine-color-scheme=dark]) .m-326d024a{background-color:var(--mantine-color-dark-6);border-color:var(--mantine-color-dark-4)}@media (hover:hover){:where([data-mantine-color-scheme=dark]) .m-326d024a:hover:where(:not(:disabled,[data-disabled])){background-color:var(--mantine-color-dark-5)}}@media (hover:none){:where([data-mantine-color-scheme=dark]) .m-326d024a:active:where(:not(:disabled,[data-disabled])){background-color:var(--mantine-color-dark-5)}}.m-326d024a:where([data-active]){background-color:var(--pagination-active-bg);border-color:var(--pagination-active-bg);color:var(--pagination-active-color,var(--mantine-color-white))}@media (hover:hover){.m-326d024a:where([data-active]):hover{background-color:var(--pagination-active-bg)}}@media (hover:none){.m-326d024a:where([data-active]):active{background-color:var(--pagination-active-bg)}}[dir=rtl] .m-326d024a>svg{transform:rotate(180deg)}.m-4ad7767d{align-items:center;display:flex;height:var(--pagination-control-size);justify-content:center;min-width:var(--pagination-control-size);pointer-events:none}.m-f61ca620{--psi-button-size-xs:calc(1.375rem*var(--mantine-scale));--psi-button-size-sm:calc(1.625rem*var(--mantine-scale));--psi-button-size-md:calc(1.75rem*var(--mantine-scale));--psi-button-size-lg:calc(2rem*var(--mantine-scale));--psi-button-size-xl:calc(2.5rem*var(--mantine-scale));--psi-icon-size-xs:calc(.75rem*var(--mantine-scale));--psi-icon-size-sm:calc(.9375rem*var(--mantine-scale));--psi-icon-size-md:calc(1.0625rem*var(--mantine-scale));--psi-icon-size-lg:calc(1.1875rem*var(--mantine-scale));--psi-icon-size-xl:calc(1.3125rem*var(--mantine-scale));--psi-button-size:var(--psi-button-size-sm);--psi-icon-size:var(--psi-icon-size-sm)}.m-ccf8da4c{overflow:hidden;position:relative}.m-f2d85dd2{background-color:transparent;border:0;color:inherit;font-family:var(--mantine-font-family);font-size:inherit;height:100%;top:0;right:0;bottom:0;left:0;line-height:var(--mantine-line-height);outline:0;padding-left:var(--_input-padding-left);padding-right:var(--_input-padding-right);position:absolute;width:100%}.m-ccf8da4c[data-disabled] .m-f2d85dd2,.m-f2d85dd2:disabled{cursor:not-allowed}.m-f2d85dd2::placeholder{color:var(--_input-placeholder-color);opacity:1}.m-b1072d44{height:var(--psi-button-size);min-height:var(--psi-button-size);min-width:var(--psi-button-size);width:var(--psi-button-size)}.m-b1072d44:disabled{display:none}.m-f1cb205a{--pin-input-size-xs:calc(1.875rem*var(--mantine-scale));--pin-input-size-sm:calc(2.25rem*var(--mantine-scale));--pin-input-size-md:calc(2.625rem*var(--mantine-scale));--pin-input-size-lg:calc(3.125rem*var(--mantine-scale));--pin-input-size-xl:calc(3.75rem*var(--mantine-scale));--pin-input-size:var(--pin-input-size-sm)}.m-cb288ead{height:var(--pin-input-size);width:var(--pin-input-size)}@keyframes m-81a374bd{0%{background-position:0 0}to{background-position:calc(2.5rem*var(--mantine-scale)) 0}}.m-db6d6462{--progress-radius:var(--mantine-radius-default);--progress-size:var(--progress-size-md);--progress-size-xs:calc(.1875rem*var(--mantine-scale));--progress-size-sm:calc(.3125rem*var(--mantine-scale));--progress-size-md:calc(.5rem*var(--mantine-scale));--progress-size-lg:calc(.75rem*var(--mantine-scale));--progress-size-xl:calc(1rem*var(--mantine-scale));border-radius:var(--progress-radius);display:flex;height:var(--progress-size);overflow:hidden;position:relative}:where([data-mantine-color-scheme=light]) .m-db6d6462{background-color:var(--mantine-color-gray-2)}:where([data-mantine-color-scheme=dark]) .m-db6d6462{background-color:var(--mantine-color-dark-4)}.m-2242eb65{align-items:center;background-color:var(--progress-section-color);background-size:calc(1.25rem*var(--mantine-scale)) calc(1.25rem*var(--mantine-scale));display:flex;height:100%;justify-content:center;overflow:hidden;transition:width var(--progress-transition-duration,.1s) ease;width:var(--progress-section-width)}.m-2242eb65:where([data-striped]){background-image:linear-gradient(45deg,hsla(0,0%,100%,.15) 25%,transparent 0,transparent 50%,hsla(0,0%,100%,.15) 0,hsla(0,0%,100%,.15) 75%,transparent 0,transparent)}.m-2242eb65:where([data-animated]){animation:m-81a374bd 1s linear infinite}.m-2242eb65:where(:last-of-type){border-radius:0 var(--progress-radius) var(--progress-radius) 0}:where([dir=rtl]) .m-2242eb65:where(:last-of-type){border-radius:var(--progress-radius) 0 0 var(--progress-radius)}.m-2242eb65:where(:first-of-type){border-radius:var(--progress-radius) 0 0 var(--progress-radius)}:where([dir=rtl]) .m-2242eb65:where(:first-of-type){border-radius:0 var(--progress-radius) var(--progress-radius) 0}.m-91e40b74{color:var(--progress-label-color,var(--mantine-color-white));font-size:min(calc(var(--progress-size)*.65),calc(1.125rem*var(--mantine-scale)));font-weight:700;line-height:1;overflow:hidden;padding-left:calc(.25rem*var(--mantine-scale));padding-right:calc(.25rem*var(--mantine-scale));text-overflow:ellipsis;-webkit-user-select:none;user-select:none;white-space:nowrap}.m-f3f1af94{--radio-size-xs:calc(1rem*var(--mantine-scale));--radio-size-sm:calc(1.25rem*var(--mantine-scale));--radio-size-md:calc(1.5rem*var(--mantine-scale));--radio-size-lg:calc(1.875rem*var(--mantine-scale));--radio-size-xl:calc(2.25rem*var(--mantine-scale));--radio-size:var(--radio-size-sm);--radio-icon-size-xs:calc(.375rem*var(--mantine-scale));--radio-icon-size-sm:calc(.5rem*var(--mantine-scale));--radio-icon-size-md:calc(.625rem*var(--mantine-scale));--radio-icon-size-lg:calc(.875rem*var(--mantine-scale));--radio-icon-size-xl:calc(1rem*var(--mantine-scale));--radio-icon-size:var(--radio-icon-size-sm);--radio-icon-color:var(--mantine-color-white)}.m-89c4f5e4{height:var(--radio-size);order:var(--_radio-order,1);position:relative;width:var(--radio-size)}.m-89c4f5e4[data-label-position=left]{--_radio-order:2}.m-f3ed6b2b{color:var(--_radio-icon-color,var(--radio-icon-color));height:var(--radio-icon-size);left:calc(50% - var(--radio-icon-size)/2);opacity:var(--_radio-icon-opacity,0);pointer-events:none;position:absolute;top:calc(50% - var(--radio-icon-size)/2);transform:var(--_radio-icon-transform,scale(.2) translateY(calc(.625rem*var(--mantine-scale))));transition:opacity .1s ease,transform .2s ease;width:var(--radio-icon-size)}.m-8a3dbb89{-webkit-tap-highlight-color:transparent;align-items:center;-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:var(--_radio-bg);border:calc(.0625rem*var(--mantine-scale)) solid var(--_radio-bd-color);border-radius:var(--radio-radius,var(--radio-size));cursor:var(--_cursor,var(--mantine-cursor-type));display:flex;height:var(--radio-size);justify-content:center;margin:0;position:relative;transition-duration:.1s;transition-property:background-color,border-color;transition-timing-function:ease;width:var(--radio-size)}[data-mantine-color-scheme=light] .m-8a3dbb89{--_radio-bg:var(--mantine-color-white);--_radio-bd-color:var(--mantine-color-gray-4)}[data-mantine-color-scheme=dark] .m-8a3dbb89{--_radio-bg:var(--mantine-color-dark-6);--_radio-bd-color:var(--mantine-color-dark-4)}.m-8a3dbb89:checked{--_radio-bg:var(--radio-color,var(--mantine-primary-color-filled));--_radio-bd-color:var(--radio-color,var(--mantine-primary-color-filled))}.m-8a3dbb89:checked+.m-f3ed6b2b{--_radio-icon-opacity:1;--_radio-icon-transform:scale(1)}.m-8a3dbb89:disabled{--_cursor:not-allowed}[data-mantine-color-scheme=light] .m-8a3dbb89:disabled{--_radio-bg:var(--mantine-color-gray-1);--_radio-bd-color:var(--mantine-color-gray-2)}[data-mantine-color-scheme=light] .m-8a3dbb89:disabled+.m-f3ed6b2b{--_radio-icon-color:var(--mantine-color-gray-3)}[data-mantine-color-scheme=dark] .m-8a3dbb89:disabled{--_radio-bg:var(--mantine-color-dark-5);--_radio-bd-color:var(--mantine-color-dark-4)}[data-mantine-color-scheme=dark] .m-8a3dbb89:disabled+.m-f3ed6b2b{--_radio-icon-color:var(--mantine-color-dark-7)}.m-8a3dbb89[data-error]{--_radio-bd-color:var(--mantine-color-error)}.m-1bfe9d39+.m-f3ed6b2b{--_radio-icon-color:var(--radio-color)}[data-mantine-color-scheme] .m-1bfe9d39:checked:not(:disabled){--_radio-bg:transparent;--_radio-bd-color:var(--radio-color)}[data-mantine-color-scheme] .m-1bfe9d39:checked:not(:disabled)+.m-f3ed6b2b{--_radio-icon-color:var(--radio-color);--_radio-icon-opacity:1;--_radio-icon-transform:none}.m-f8d312f2{--rating-size-xs:calc(.875rem*var(--mantine-scale));--rating-size-sm:calc(1.125rem*var(--mantine-scale));--rating-size-md:calc(1.25rem*var(--mantine-scale));--rating-size-lg:calc(1.75rem*var(--mantine-scale));--rating-size-xl:calc(2rem*var(--mantine-scale));display:flex;width:max-content}.m-f8d312f2:where(:has(input:disabled)){pointer-events:none}.m-61734bb7{position:relative;transition:transform .1s ease}.m-61734bb7:where([data-active]){transform:scale(1.1);z-index:1}.m-5662a89a{display:block;height:var(--rating-size);width:var(--rating-size)}:where([data-mantine-color-scheme=light]) .m-5662a89a{fill:var(--mantine-color-gray-3);stroke:var(--mantine-color-gray-3)}:where([data-mantine-color-scheme=dark]) .m-5662a89a{fill:var(--mantine-color-dark-3);stroke:var(--mantine-color-dark-3)}.m-5662a89a:where([data-filled]){fill:var(--rating-color);stroke:var(--rating-color)}.m-211007ba{-webkit-tap-highlight-color:transparent;height:0;opacity:0;overflow:hidden;position:absolute;white-space:nowrap;width:0}.m-211007ba:focus-visible+label{outline:calc(.125rem*var(--mantine-scale)) solid var(--mantine-primary-color-filled);outline-offset:calc(.125rem*var(--mantine-scale))}.m-21342ee4{-webkit-tap-highlight-color:transparent;cursor:pointer;display:block;left:0;position:absolute;top:0;z-index:var(--rating-item-z-index,0)}.m-21342ee4:where([data-read-only]){cursor:default}.m-21342ee4:where(:last-of-type){position:relative}.m-fae05d6a{clip-path:var(--rating-symbol-clip-path)}.m-1b3c8819{--tooltip-radius:var(--mantine-radius-default);border-radius:var(--tooltip-radius);font-size:var(--mantine-font-size-sm);padding:calc(var(--mantine-spacing-xs)/2) var(--mantine-spacing-xs);pointer-events:none;position:absolute;white-space:nowrap}:where([data-mantine-color-scheme=light]) .m-1b3c8819{background-color:var(--tooltip-bg,var(--mantine-color-gray-9));color:var(--tooltip-color,var(--mantine-color-white))}:where([data-mantine-color-scheme=dark]) .m-1b3c8819{background-color:var(--tooltip-bg,var(--mantine-color-gray-2));color:var(--tooltip-color,var(--mantine-color-black))}.m-1b3c8819:where([data-multiline]){white-space:normal}.m-f898399f{background-color:inherit;border:0;z-index:1}.m-b32e4812{position:relative}.m-b32e4812,.m-d43b5134{height:var(--rp-size);min-height:var(--rp-size);min-width:var(--rp-size);width:var(--rp-size)}.m-d43b5134{transform:rotate(-90deg)}.m-b1ca1fbf{stroke:var(--curve-color,var(--rp-curve-root-color))}[data-mantine-color-scheme=light] .m-b1ca1fbf{--rp-curve-root-color:var(--mantine-color-gray-2)}[data-mantine-color-scheme=dark] .m-b1ca1fbf{--rp-curve-root-color:var(--mantine-color-dark-4)}.m-b23f9dc4{left:var(--rp-label-offset);position:absolute;right:var(--rp-label-offset);top:50%;transform:translateY(-50%)}.m-cf365364{--sc-padding-xs:calc(.1875rem*var(--mantine-scale)) calc(.375rem*var(--mantine-scale));--sc-padding-sm:calc(.3125rem*var(--mantine-scale)) calc(.625rem*var(--mantine-scale));--sc-padding-md:calc(.4375rem*var(--mantine-scale)) calc(.875rem*var(--mantine-scale));--sc-padding-lg:calc(.5625rem*var(--mantine-scale)) calc(1rem*var(--mantine-scale));--sc-padding-xl:calc(.75rem*var(--mantine-scale)) calc(1.25rem*var(--mantine-scale));--sc-transition-duration:.2s;--sc-padding:var(--sc-padding-sm);--sc-transition-timing-function:ease;--sc-font-size:var(--mantine-font-size-sm);background-color:var(--_bg);border-radius:var(--sc-radius,var(--mantine-radius-default));display:var(--_display,inline-flex);flex-direction:var(--_flex-direction,row);overflow:hidden;padding:4px;position:relative;width:var(--_width,auto)}.m-cf365364[data-initialization]{--sc-transition-duration:0ms!important}.m-cf365364[data-full-width]{--_display:flex}.m-cf365364[data-orientation=vertical]{--_display:flex;--_flex-direction:column;--_width:max-content}.m-cf365364[data-orientation=vertical][data-full-width]{--_width:auto}[data-mantine-color-scheme=light] .m-cf365364{--_bg:var(--mantine-color-gray-1)}[data-mantine-color-scheme=dark] .m-cf365364{--_bg:var(--mantine-color-dark-8)}.m-9e182ccd{background-color:var(--_bg);border-radius:var(--sc-radius,var(--mantine-radius-default));box-shadow:var(--_box-shadow);display:block;height:var(--sc-indicator-height);position:absolute;transform:var(--sc-indicator-transform);transition:transform var(--sc-transition-duration) var(--sc-transition-timing-function),width var(--sc-transition-duration) var(--sc-transition-timing-function);width:var(--sc-indicator-width);z-index:1}[data-mantine-color-scheme=light] .m-9e182ccd{--_box-shadow:var(--sc-shadow,none);--_bg:var(--sc-color,var(--mantine-color-white))}[data-mantine-color-scheme=dark] .m-9e182ccd{--_box-shadow:none;--_bg:var(--sc-color,var(--mantine-color-dark-5))}.m-1738fcb2{-webkit-tap-highlight-color:transparent;border-radius:var(--sc-radius,var(--mantine-radius-default));color:var(--_color);cursor:var(--_cursor,pointer);display:block;font-size:var(--sc-font-size);font-weight:500;outline:var(--_outline,none);overflow:hidden;padding:var(--sc-padding);text-align:center;text-overflow:ellipsis;transition:color var(--sc-transition-duration) var(--sc-transition-timing-function);-webkit-user-select:none;user-select:none;white-space:nowrap}.m-1738fcb2[data-read-only]{--_cursor:default}.m-1738fcb2[data-disabled],fieldset:disabled .m-1738fcb2{--_cursor:not-allowed}[data-mantine-color-scheme=light] .m-1738fcb2[data-disabled],[data-mantine-color-scheme=light] fieldset:disabled .m-1738fcb2{--_color:var(--mantine-color-gray-5)}[data-mantine-color-scheme=dark] .m-1738fcb2[data-disabled],[data-mantine-color-scheme=dark] fieldset:disabled .m-1738fcb2{--_color:var(--mantine-color-dark-3)}[data-mantine-color-scheme=light] .m-1738fcb2[data-active]{--_color:var(--sc-label-color,var(--mantine-color-black))}[data-mantine-color-scheme=dark] .m-1738fcb2[data-active]{--_color:var(--sc-label-color,var(--mantine-color-white))}@media (hover:hover){[data-mantine-color-scheme=light] .m-1738fcb2:not([data-disabled],[data-active],[data-read-only]):hover{--_color:var(--mantine-color-black)}[data-mantine-color-scheme=dark] .m-1738fcb2:not([data-disabled],[data-active],[data-read-only]):hover{--_color:var(--mantine-color-white)}}@media (hover:none){[data-mantine-color-scheme=light] .m-1738fcb2:not([data-disabled],[data-active],[data-read-only]):active{--_color:var(--mantine-color-black)}[data-mantine-color-scheme=dark] .m-1738fcb2:not([data-disabled],[data-active],[data-read-only]):active{--_color:var(--mantine-color-white)}}@media (hover:hover){[data-mantine-color-scheme=light] fieldset:disabled .m-1738fcb2:hover{--_color:var(--mantine-color-gray-5)!important}[data-mantine-color-scheme=dark] fieldset:disabled .m-1738fcb2:hover{--_color:var(--mantine-color-dark-3)!important}}@media (hover:none){[data-mantine-color-scheme=light] fieldset:disabled .m-1738fcb2:active{--_color:var(--mantine-color-gray-5)!important}[data-mantine-color-scheme=dark] fieldset:disabled .m-1738fcb2:active{--_color:var(--mantine-color-dark-3)!important}}[data-mantine-color-scheme=light] .m-1738fcb2{--_color:var(--mantine-color-gray-7)}[data-mantine-color-scheme=dark] .m-1738fcb2{--_color:var(--mantine-color-dark-1)}.m-1714d588{height:0;opacity:0;overflow:hidden;position:absolute;white-space:nowrap;width:0}.m-1714d588[data-focus-ring=auto]:focus:focus-visible+.m-1738fcb2{--_outline:calc(.125rem*var(--mantine-scale)) solid var(--mantine-color-blue-filled)}.m-1714d588[data-focus-ring=always]:focus+.m-1738fcb2{--_outline:calc(.125rem*var(--mantine-scale)) solid var(--mantine-color-blue-filled)}.m-69686b9b{flex:1;position:relative;transition:border-color var(--sc-transition-duration) var(--sc-transition-timing-function);z-index:2}.m-cf365364[data-with-items-borders] :where(.m-69686b9b):before{background-color:var(--_separator-color);bottom:0;content:"";left:0;position:absolute;top:0;transition:background-color var(--sc-transition-duration) var(--sc-transition-timing-function);width:calc(.0625rem*var(--mantine-scale))}[dir=rtl] .m-cf365364[data-with-items-borders] :where(.m-69686b9b):before{left:auto;right:0}.m-69686b9b[data-orientation=vertical]:before{bottom:auto;height:calc(.0625rem*var(--mantine-scale));left:0;right:0;top:0;width:auto}[data-mantine-color-scheme=light] .m-69686b9b{--_separator-color:var(--mantine-color-gray-3)}[data-mantine-color-scheme=dark] .m-69686b9b{--_separator-color:var(--mantine-color-dark-4)}.m-69686b9b:first-of-type:before,[data-mantine-color-scheme] .m-69686b9b[data-active]+.m-69686b9b:before,[data-mantine-color-scheme] .m-69686b9b[data-active]:before{--_separator-color:transparent}.m-2415a157{display:grid;gap:var(--sg-spacing-y) var(--sg-spacing-x);grid-template-columns:repeat(var(--sg-cols),minmax(0,1fr))}@keyframes m-299c329c{0%,to{opacity:.4}50%{opacity:1}}.m-18320242{border-radius:var(--skeleton-radius,var(--mantine-radius-default));height:var(--skeleton-height,auto);position:relative;transform:translateZ(0);-webkit-transform:translateZ(0);width:var(--skeleton-width,100%)}.m-18320242:where([data-animate]):after{animation:m-299c329c 1.5s linear infinite}.m-18320242:where([data-visible]){overflow:hidden}.m-18320242:where([data-visible]):before{background-color:var(--mantine-color-body);content:"";top:0;right:0;bottom:0;left:0;position:absolute;z-index:10}.m-18320242:where([data-visible]):after{content:"";top:0;right:0;bottom:0;left:0;position:absolute;z-index:11}:where([data-mantine-color-scheme=light]) .m-18320242:where([data-visible]):after{background-color:var(--mantine-color-gray-3)}:where([data-mantine-color-scheme=dark]) .m-18320242:where([data-visible]):after{background-color:var(--mantine-color-dark-4)}.m-dd36362e{--slider-size-xs:calc(.25rem*var(--mantine-scale));--slider-size-sm:calc(.375rem*var(--mantine-scale));--slider-size-md:calc(.5rem*var(--mantine-scale));--slider-size-lg:calc(.625rem*var(--mantine-scale));--slider-size-xl:calc(.75rem*var(--mantine-scale));--slider-size:var(--slider-size-md);--slider-radius:calc(62.5rem*var(--mantine-scale));--slider-color:var(--mantine-primary-color-filled);-webkit-tap-highlight-color:transparent;align-items:center;display:flex;flex-direction:column;height:calc(var(--slider-size)*2);outline:none;padding-left:var(--slider-size);padding-right:var(--slider-size);position:relative;touch-action:none}[data-mantine-color-scheme=light] .m-dd36362e{--slider-track-bg:var(--mantine-color-gray-2);--slider-track-disabled-bg:var(--mantine-color-gray-4)}[data-mantine-color-scheme=dark] .m-dd36362e{--slider-track-bg:var(--mantine-color-dark-4);--slider-track-disabled-bg:var(--mantine-color-dark-3)}.m-c9357328{background-color:var(--_label-bg);border-radius:var(--mantine-radius-sm);color:var(--mantine-color-white);font-size:var(--mantine-font-size-xs);padding:calc(var(--mantine-spacing-xs)/2);pointer-events:none;position:absolute;top:calc(-2.25rem*var(--mantine-scale));touch-action:none;-webkit-user-select:none;user-select:none;white-space:nowrap}[data-mantine-color-scheme=light] .m-c9357328{--_label-bg:var(--mantine-color-gray-9)}[data-mantine-color-scheme=dark] .m-c9357328{--_label-bg:var(--mantine-color-dark-4)}.m-c9a9a60a{align-items:center;background-color:var(--_thumb-bg);border:calc(.25rem*var(--mantine-scale)) solid var(--_thumb-bd);border-radius:var(--slider-radius);box-shadow:var(--_thumb-box-shadow,none);color:var(--_thumb-bd);cursor:pointer;display:var(--_thumb-display,flex);height:var(--slider-thumb-size);justify-content:center;left:var(--slider-thumb-offset);outline-offset:calc(.125rem*var(--mantine-scale));position:absolute;top:50%;touch-action:none;transform:var(--_thumb-transform,translate(-50%,-50%));transition:box-shadow .1s ease,transform .1s ease;-webkit-user-select:none;user-select:none;width:var(--slider-thumb-size);z-index:3}[dir=rtl] .m-c9a9a60a{left:auto;right:calc(var(--slider-thumb-offset) - var(--slider-thumb-size))}.m-c9a9a60a[data-disabled],fieldset:disabled .m-c9a9a60a{--_thumb-display:none}.m-c9a9a60a[data-dragging]{--_thumb-transform:translate(-50%,-50%) scale(1.05);--_thumb-box-shadow:var(--mantine-shadow-sm)}[data-mantine-color-scheme=light] .m-c9a9a60a{--_thumb-bd:var(--slider-color);--_thumb-bg:var(--mantine-color-white)}[data-mantine-color-scheme=dark] .m-c9a9a60a{--_thumb-bd:var(--mantine-color-white);--_thumb-bg:var(--slider-color)}.m-a8645c2{align-items:center;cursor:var(--_track-cursor,pointer);display:flex;height:calc(var(--slider-size)*2);width:100%}.m-a8645c2[data-disabled],fieldset:disabled .m-a8645c2{--_track-cursor:not-allowed}.m-c9ade57f{height:var(--slider-size);position:relative;width:100%}.m-c9ade57f[data-inverted]:not([data-disabled]){--_track-bg:var(--slider-color)}.m-c9ade57f[data-inverted][data-disabled],fieldset:disabled .m-c9ade57f[data-inverted]{--_track-bg:var(--slider-track-disabled-bg)}.m-c9ade57f:before{background-color:var(--_track-bg,var(--slider-track-bg));content:"";left:calc(var(--slider-size)*-1);right:calc(var(--slider-size)*-1);z-index:0}.m-38aeed47,.m-c9ade57f:before{border-radius:var(--slider-radius);bottom:0;position:absolute;top:0}.m-38aeed47{background-color:var(--_bar-bg,var(--slider-color));left:var(--slider-bar-offset);width:var(--slider-bar-width);z-index:1}[dir=rtl] .m-38aeed47{left:auto;right:var(--slider-bar-offset)}.m-38aeed47[data-inverted]{--_bar-bg:var(--slider-track-bg)}.m-38aeed47[data-disabled]:not([data-inverted]),fieldset:disabled .m-38aeed47:not([data-inverted]){--_bar-bg:var(--_bar-disabled-bg)}[data-mantine-color-scheme=light] .m-38aeed47{--_bar-disabled-bg:var(--mantine-color-gray-4)}[data-mantine-color-scheme=dark] .m-38aeed47{--_bar-disabled-bg:var(--mantine-color-dark-3)}.m-b7b0423a{height:0;left:calc(var(--mark-offset) - var(--slider-size)/2);pointer-events:none;position:absolute;top:0;z-index:2}[dir=rtl] .m-b7b0423a{left:unset;right:calc(var(--mark-offset) - var(--slider-size)/2)}.m-dd33bc19{background-color:var(--_mark-bg,var(--mantine-color-white));border:calc(.125rem*var(--mantine-scale)) solid var(--_mark-bd);border-radius:calc(62.5rem*var(--mantine-scale));height:var(--slider-size);pointer-events:none;transform:translate((calc(var(--slider-size)/-2)));width:var(--slider-size)}[data-mantine-color-scheme] .m-dd33bc19[data-filled]{--_mark-bd:var(--slider-color)}[data-mantine-color-scheme=light] .m-dd33bc19[data-filled][data-disabled]{--_mark-bd:var(--mantine-color-gray-4)}[data-mantine-color-scheme=dark] .m-dd33bc19[data-filled][data-disabled]{--_mark-bd:var(--mantine-color-dark-3)}[data-mantine-color-scheme=light] .m-dd33bc19{--_mark-bd:var(--mantine-color-gray-2)}[data-mantine-color-scheme=dark] .m-dd33bc19{--_mark-bd:var(--mantine-color-dark-4)}.m-68c77a5b{color:var(--_mark-label-color);cursor:pointer;font-size:var(--mantine-font-size-sm);transform:translate(calc(-50% + var(--slider-size)/2),calc(var(--mantine-spacing-xs)/2));-webkit-user-select:none;user-select:none;white-space:nowrap}[data-mantine-color-scheme=light] .m-68c77a5b{--_mark-label-color:var(--mantine-color-gray-6)}[data-mantine-color-scheme=dark] .m-68c77a5b{--_mark-label-color:var(--mantine-color-dark-2)}.m-559cce2d{margin-bottom:var(--_spoiler-margin-bottom);position:relative}.m-559cce2d[data-has-spoiler]{--_spoiler-margin-bottom:calc(1.5rem*var(--mantine-scale))}.m-b912df4e{display:flex;flex-direction:column;overflow:hidden;transition:max-height var(--spoiler-transition-duration,.2s) ease}.m-b9131032{height:calc(1.5rem*var(--mantine-scale));left:0;position:absolute;top:100%}[dir=rtl] .m-b9131032{left:auto;right:0}.m-6d731127{align-items:var(--stack-align,stretch);display:flex;flex-direction:column;gap:var(--stack-gap,var(--mantine-spacing-md));justify-content:var(--stack-justify,flex-start)}.m-cbb4ea7e{--stepper-icon-size-xs:calc(2.125rem*var(--mantine-scale));--stepper-icon-size-sm:calc(2.25rem*var(--mantine-scale));--stepper-icon-size-md:calc(2.625rem*var(--mantine-scale));--stepper-icon-size-lg:calc(3rem*var(--mantine-scale));--stepper-icon-size-xl:calc(3.25rem*var(--mantine-scale));--stepper-icon-size:var(--stepper-icon-size-md);--stepper-color:var(--mantine-primary-color-filled);--stepper-content-padding:var(--mantine-spacing-md);--stepper-spacing:var(--mantine-spacing-md);--stepper-radius:calc(62.5rem*var(--mantine-scale));--stepper-fz:var(--mantine-font-size-md)}.m-aaf89d0b{align-items:var(--_steps-align-items,center);display:flex;flex-direction:var(--_steps-direction);flex-wrap:var(--_steps-wrap,nowrap);gap:var(--_steps-gap)}.m-aaf89d0b[data-wrap]{--_steps-wrap:wrap;--_steps-gap:var(--mantine-spacing-md) 0}.m-aaf89d0b[data-orientation=vertical]{--_steps-direction:column}.m-aaf89d0b[data-orientation=vertical][data-icon-position=left]{--_steps-align-items:flex-start}.m-aaf89d0b[data-orientation=vertical][data-icon-position=right]{--_steps-align-items:flex-end}.m-aaf89d0b[data-orientation=horizontal]{--_steps-direction:row}.m-2a371ac9{--_separator-offset:calc(var(--stepper-icon-size)/2 - .0625rem*var(--mantine-scale));background-color:var(--_separator-bg);flex:1;height:var(--_separator-height);margin:var(--_separator-mt) var(--_separator-mr) var(--_separator-mb) var(--_separator-ml);transition:background-color .15s ease;width:var(--_separator-width)}[data-mantine-color-scheme=light] .m-2a371ac9{--_separator-bg:var(--mantine-color-gray-2)}[data-mantine-color-scheme=dark] .m-2a371ac9{--_separator-bg:var(--mantine-color-dark-2)}.m-2a371ac9[data-active]{--_separator-bg:var(--stepper-color)}.m-2a371ac9[data-orientation=horizontal]{--_separator-height:calc(.125rem*var(--mantine-scale));--_separator-ml:var(--mantine-spacing-md);--_separator-mr:var(--mantine-spacing-md);--_separator-mt:0;--_separator-mb:0}.m-2a371ac9[data-orientation=vertical]{--_separator-width:calc(.125rem*var(--mantine-scale));--_separator-mt:calc(var(--mantine-spacing-xs)/2);--_separator-mb:calc(var(--mantine-spacing-xs) - .125rem*var(--mantine-scale))}.m-2a371ac9[data-orientation=vertical][data-icon-position=left]{--_separator-ml:var(--_separator-offset);--_separator-mr:0}.m-2a371ac9[data-orientation=vertical][data-icon-position=right],[dir=rtl] .m-2a371ac9[data-orientation=vertical][data-icon-position=left]{--_separator-ml:0;--_separator-mr:var(--_separator-offset)}[dir=rtl] .m-2a371ac9[data-orientation=vertical][data-icon-position=right]{--_separator-ml:var(--_separator-offset);--_separator-mr:0}.m-78da155d{padding-top:var(--stepper-content-padding)}.m-cbb57068{--_step-color:var(--step-color,var(--stepper-color));cursor:var(--_step-cursor,default);display:flex;flex-direction:var(--_step-direction)}.m-cbb57068[data-allow-click]{--_step-cursor:pointer}.m-cbb57068[data-icon-position=left]{--_step-direction:row}.m-cbb57068[data-icon-position=right]{--_step-direction:row-reverse}.m-f56b1e2c{align-items:center;flex-direction:var(--_step-direction)}.m-833edb7e{--_separator-spacing:calc(var(--mantine-spacing-xs)/2);justify-content:flex-start;margin-top:var(--_step-mt,var(--_separator-spacing));min-height:calc(var(--stepper-icon-size) + var(--mantine-spacing-xl) + var(--_separator-spacing));overflow:hidden}.m-833edb7e:first-of-type{--_step-mt:0}.m-833edb7e:last-of-type .m-6496b3f3{display:none}.m-818e70b{position:relative}.m-6496b3f3{border-left:calc(.125rem*var(--mantine-scale)) solid var(--_separator-border-color);height:100vh;left:calc(var(--stepper-icon-size)/2);position:absolute;top:calc(var(--stepper-icon-size) + var(--_separator-spacing))}[data-mantine-color-scheme=light] .m-6496b3f3{--_separator-border-color:var(--mantine-color-gray-1)}[data-mantine-color-scheme=dark] .m-6496b3f3{--_separator-border-color:var(--mantine-color-dark-5)}[data-mantine-color-scheme] .m-6496b3f3[data-active]{--_separator-border-color:var(--stepper-color)}.m-1959ad01{align-items:center;background-color:var(--_step-icon-bg);border:calc(.125rem*var(--mantine-scale)) solid var(--_step-icon-border-color);border-radius:var(--stepper-radius);color:var(--_step-icon-color);display:flex;font-size:var(--stepper-fz);font-weight:700;height:var(--stepper-icon-size);justify-content:center;min-height:var(--stepper-icon-size);min-width:var(--stepper-icon-size);position:relative;transition:background-color .15s ease,border-color .15s ease;width:var(--stepper-icon-size)}[data-mantine-color-scheme=light] .m-1959ad01{--_step-icon-bg:var(--mantine-color-gray-1);--_step-icon-border-color:var(--mantine-color-gray-1);--_step-icon-color:var(--mantine-color-gray-7)}[data-mantine-color-scheme=dark] .m-1959ad01{--_step-icon-bg:var(--mantine-color-dark-5);--_step-icon-border-color:var(--mantine-color-dark-5);--_step-icon-color:var(--mantine-color-dark-1)}[data-mantine-color-scheme] .m-1959ad01[data-progress]{--_step-icon-border-color:var(--_step-color)}[data-mantine-color-scheme] .m-1959ad01[data-completed]{--_step-icon-color:var(--stepper-icon-color,var(--mantine-color-white));--_step-icon-bg:var(--_step-color);--_step-icon-border-color:var(--_step-color)}.m-a79331dc{align-items:center;color:var(--stepper-icon-color,var(--mantine-color-white));display:flex;top:0;right:0;bottom:0;left:0;justify-content:center;position:absolute}.m-1956aa2a{display:flex;flex-direction:column;margin-left:var(--_step-body-ml);margin-right:var(--_step-body-mr);margin-top:var(--_step-body-mt);text-align:var(--_step-body-ta)}.m-1956aa2a[data-icon-position=left]{--_step-body-ta:left;--_step-body-ml:var(--mantine-spacing-sm)}[dir=rtl] .m-1956aa2a[data-icon-position=left]{--_step-body-ta:right;--_step-body-ml:0;--_step-body-mr:var(--mantine-spacing-sm)}.m-1956aa2a[data-icon-position=right]{--_step-body-ta:right;--_step-body-mr:var(--mantine-spacing-sm)}[dir=rtl] .m-1956aa2a[data-icon-position=right]{--_step-body-ta:left;--_step-body-ml:var(--mantine-spacing-sm);--_step-body-mr:0}.m-12051f6c{font-size:var(--stepper-fz);font-weight:500;line-height:1}.m-164eea74{color:var(--mantine-color-dimmed);font-size:calc(var(--stepper-fz) - .125rem*var(--mantine-scale));line-height:1;margin-bottom:calc(var(--stepper-spacing)/3);margin-top:calc(var(--stepper-spacing)/3)}.m-5f93f3bb{--switch-height-xs:calc(1rem*var(--mantine-scale));--switch-height-sm:calc(1.25rem*var(--mantine-scale));--switch-height-md:calc(1.5rem*var(--mantine-scale));--switch-height-lg:calc(1.875rem*var(--mantine-scale));--switch-height-xl:calc(2.25rem*var(--mantine-scale));--switch-width-xs:calc(2rem*var(--mantine-scale));--switch-width-sm:calc(2.375rem*var(--mantine-scale));--switch-width-md:calc(2.875rem*var(--mantine-scale));--switch-width-lg:calc(3.5rem*var(--mantine-scale));--switch-width-xl:calc(4.5rem*var(--mantine-scale));--switch-thumb-size-xs:calc(.75rem*var(--mantine-scale));--switch-thumb-size-sm:calc(.875rem*var(--mantine-scale));--switch-thumb-size-md:calc(1.125rem*var(--mantine-scale));--switch-thumb-size-lg:calc(1.375rem*var(--mantine-scale));--switch-thumb-size-xl:calc(1.75rem*var(--mantine-scale));--switch-label-font-size-xs:calc(.3125rem*var(--mantine-scale));--switch-label-font-size-sm:calc(.375rem*var(--mantine-scale));--switch-label-font-size-md:calc(.4375rem*var(--mantine-scale));--switch-label-font-size-lg:calc(.5625rem*var(--mantine-scale));--switch-label-font-size-xl:calc(.6875rem*var(--mantine-scale));--switch-track-label-padding-xs:calc(.0625rem*var(--mantine-scale));--switch-track-label-padding-sm:calc(.125rem*var(--mantine-scale));--switch-track-label-padding-md:calc(.125rem*var(--mantine-scale));--switch-track-label-padding-lg:calc(.1875rem*var(--mantine-scale));--switch-track-label-padding-xl:calc(.1875rem*var(--mantine-scale));--switch-height:var(--switch-height-sm);--switch-width:var(--switch-width-sm);--switch-thumb-size:var(--switch-thumb-size-sm);--switch-label-font-size:var(--switch-label-font-size-sm);--switch-track-label-padding:var(--switch-track-label-padding-sm);--switch-radius:calc(62.5rem*var(--mantine-scale));--switch-color:var(--mantine-primary-color-filled);position:relative}.m-926b4011{height:0;opacity:0;padding:0;position:absolute;white-space:nowrap;width:0}.m-926b4011,.m-9307d992{margin:0;overflow:hidden}.m-9307d992{-webkit-tap-highlight-color:transparent;align-items:center;-webkit-appearance:none;-moz-appearance:none;appearance:none;background-color:var(--_switch-bg);border:calc(.0625rem*var(--mantine-scale)) solid var(--_switch-bd);border-radius:var(--switch-radius);color:var(--_switch-color);cursor:var(--_switch-cursor,var(--mantine-cursor-type));display:flex;font-size:var(--switch-label-font-size);font-weight:600;height:var(--switch-height);line-height:0;min-width:var(--switch-width);order:var(--_switch-order,1);position:relative;transition:background-color .15s ease,border-color .15s ease;-webkit-user-select:none;user-select:none;z-index:0}.m-926b4011:focus-visible+.m-9307d992{outline:calc(.125rem*var(--mantine-scale)) solid var(--mantine-primary-color-filled);outline-offset:calc(.125rem*var(--mantine-scale))}.m-926b4011:checked+.m-9307d992{--_switch-bg:var(--switch-color);--_switch-bd:var(--switch-color);--_switch-color:var(--mantine-color-white)}.m-926b4011:disabled+.m-9307d992,.m-926b4011[data-disabled]+.m-9307d992{--_switch-bg:var(--_switch-disabled-color);--_switch-bd:var(--_switch-disabled-color);--_switch-cursor:not-allowed}[data-mantine-color-scheme=light] .m-9307d992{--_switch-bg:var(--mantine-color-gray-2);--_switch-bd:var(--mantine-color-gray-3);--_switch-color:var(--mantine-color-gray-6);--_switch-disabled-color:var(--mantine-color-gray-2)}[data-mantine-color-scheme=dark] .m-9307d992{--_switch-bg:var(--mantine-color-dark-6);--_switch-bd:var(--mantine-color-dark-4);--_switch-color:var(--mantine-color-dark-1);--_switch-disabled-color:var(--mantine-color-dark-4)}.m-9307d992[data-error]{--_switch-bd:var(--mantine-color-error)}.m-9307d992[data-label-position=left]{--_switch-order:2}.m-93039a1d{background-color:var(--_switch-thumb-bg,var(--mantine-color-white));border:calc(.0625rem*var(--mantine-scale)) solid var(--_switch-thumb-bd);border-radius:var(--switch-radius);display:flex;height:var(--switch-thumb-size);left:var(--_switch-thumb-left,var(--switch-track-label-padding));position:absolute;transition:left .15s ease;width:var(--switch-thumb-size);z-index:1}[dir=rtl] .m-93039a1d{left:unset;right:var(--_switch-thumb-left,var(--switch-track-label-padding));transition:right .15s ease}.m-93039a1d>*{margin:auto}.m-926b4011:checked+*>.m-93039a1d{--_switch-thumb-left:calc(100% - var(--switch-thumb-size) - var(--switch-track-label-padding));--_switch-thumb-bd:var(--mantine-color-white)}.m-926b4011:disabled+*>.m-93039a1d,.m-926b4011[data-disabled]+*>.m-93039a1d{--_switch-thumb-bd:var(--_switch-thumb-bg-disabled);--_switch-thumb-bg:var(--_switch-thumb-bg-disabled)}[data-mantine-color-scheme=light] .m-93039a1d{--_switch-thumb-bd:var(--mantine-color-gray-3);--_switch-thumb-bg-disabled:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-93039a1d{--_switch-thumb-bd:var(--mantine-color-white);--_switch-thumb-bg-disabled:var(--mantine-color-dark-3)}.m-8277e082{display:grid;height:100%;margin:0 0 0 calc(var(--switch-thumb-size) + var(--switch-track-label-padding));min-width:calc(var(--switch-width) - var(--switch-thumb-size));padding-inline:var(--switch-track-label-padding);place-content:center;transition:margin .15s ease}.m-926b4011:checked+*>.m-8277e082,[dir=rtl] .m-8277e082{margin:0 calc(var(--switch-thumb-size) + var(--switch-track-label-padding)) 0 0}[dir=rtl] .m-926b4011:checked+*>.m-8277e082{margin:0 0 0 calc(var(--switch-thumb-size) + var(--switch-track-label-padding))}.m-b23fa0ef{border:var(--_table-border,none);border-collapse:collapse;caption-side:var(--table-caption-side,bottom);font-size:var(--mantine-font-size-sm);line-height:var(--mantine-line-height);table-layout:var(--table-layout,auto);width:100%}[data-mantine-color-scheme=light] .m-b23fa0ef{--_table-hover-color:var(--table-highlight-on-hover-color,var(--mantine-color-gray-1));--_table-striped-color:var(--table-striped-color,var(--mantine-color-gray-0));--_table-border-color:var(--table-border-color,var(--mantine-color-gray-3))}[data-mantine-color-scheme=dark] .m-b23fa0ef{--_table-hover-color:var(--table-highlight-on-hover-color,var(--mantine-color-dark-5));--_table-striped-color:var(--table-striped-color,var(--mantine-color-dark-6));--_table-border-color:var(--table-border-color,var(--mantine-color-dark-4))}.m-b23fa0ef[data-with-table-border]{--_table-border:calc(.0625rem*var(--mantine-scale)) solid var(--_table-border-color)}.m-4e7aa4f3{text-align:var(--_th-text-align,left)}[dir=rtl] .m-4e7aa4f3{--_th-text-align:right}.m-4e7aa4fd{background-color:var(--_tr-bg,transparent);border-bottom:var(--_tr-border-bottom,none)}@media (hover:hover){[data-mantine-color-scheme] .m-4e7aa4fd:hover[data-hover]{--_tr-bg:var(--_tr-hover-bg)!important}}@media (hover:none){[data-mantine-color-scheme] .m-4e7aa4fd:active[data-hover]{--_tr-bg:var(--_tr-hover-bg)!important}}.m-4e7aa4fd[data-with-row-border]{--_tr-border-bottom:calc(.0625rem*var(--mantine-scale)) solid var(--_table-border-color)}.m-4e7aa4ef,.m-4e7aa4f3{--_border-right:none;--_border-left:none;border-left:var(--_border-left);border-right:var(--_border-right);padding:var(--table-vertical-spacing) var(--table-horizontal-spacing,var(--mantine-spacing-xs))}.m-4e7aa4ef[data-with-column-border]:not(:last-child),.m-4e7aa4f3[data-with-column-border]:not(:last-child){--_border-right:calc(.0625rem*var(--mantine-scale)) solid var(--_table-border-color)}[dir=rtl] .m-4e7aa4ef[data-with-column-border]:not(:last-child),[dir=rtl] .m-4e7aa4f3[data-with-column-border]:not(:last-child){--_border-left:calc(.0625rem*var(--mantine-scale)) solid var(--_table-border-color);--_border-right:none}.m-b2404537>.m-4e7aa4fd:last-of-type[data-with-row-border]{--_tr-border-bottom:none}.m-b2404537>.m-4e7aa4fd[data-striped=even]:nth-of-type(2n),.m-b2404537>.m-4e7aa4fd[data-striped=odd]:nth-of-type(odd){--_tr-bg:var(--_table-striped-color)}.m-b2404537>.m-4e7aa4fd[data-hover]{--_tr-hover-bg:var(--_table-hover-color)}.m-b242d975{background-color:var(--_thead-bg,transparent);position:var(--_thead-position,static);top:var(--table-sticky-header-offset,0);z-index:1}.m-b242d975[data-sticky]{--_thead-position:sticky;--_thead-bg:var(--mantine-color-body)}.m-9e5a3ac7{color:var(--mantine-color-dimmed);margin-bottom:var(--_margin-bottom,0);margin-top:var(--_margin-top,0)}.m-9e5a3ac7[data-side=top]{--_margin-bottom:var(--mantine-spacing-xs)}.m-9e5a3ac7[data-side=bottom]{--_margin-top:var(--mantine-spacing-xs)}.m-a100c15{overflow-x:var(--table-overflow)}.m-62259741{min-width:var(--table-min-width)}.m-89d60db1{--_tab-justify:flex-start;--_list-direction:row;--_panel-grow:unset;--_tabs-display:block;--_tabs-flex-direction:row;--_list-border-width:0;--_list-border-size:0 0 var(--_list-border-width) 0;--_list-gap:unset;--_list-line-bottom:0;--_list-line-top:unset;--_list-line-left:0;--_list-line-right:0;--_tab-radius:var(--tabs-radius) var(--tabs-radius) 0 0;--_tab-border-width:0 0 var(--_list-border-width) 0;display:var(--_tabs-display);flex-direction:var(--_tabs-flex-direction)}.m-89d60db1[data-inverted]{--_list-line-bottom:unset;--_list-line-top:0;--_tab-radius:0 0 var(--tabs-radius) var(--tabs-radius);--_tab-border-width:var(--_list-border-width) 0 0 0}.m-89d60db1[data-inverted] .m-576c9d4:before{bottom:unset;top:0}.m-89d60db1[data-orientation=vertical]{--_list-line-left:unset;--_list-line-right:0;--_list-line-top:0;--_list-line-bottom:0;--_list-border-size:0 var(--_list-border-width) 0 0;--_tab-border-width:0 var(--_list-border-width) 0 0;--_tab-radius:var(--tabs-radius) 0 0 var(--tabs-radius);--_list-direction:column;--_panel-grow:1;--_tabs-display:flex}[dir=rtl] .m-89d60db1[data-orientation=vertical]{--_list-line-left:0;--_list-line-right:unset;--_list-border-size:0 0 0 var(--_list-border-width);--_tab-border-width:0 0 0 var(--_list-border-width);--_tab-radius:0 var(--tabs-radius) var(--tabs-radius) 0}.m-89d60db1[data-orientation=vertical][data-placement=right]{--_tabs-flex-direction:row-reverse;--_list-line-left:0;--_list-line-right:unset;--_list-border-size:0 0 0 var(--_list-border-width);--_tab-border-width:0 0 0 var(--_list-border-width);--_tab-radius:0 var(--tabs-radius) var(--tabs-radius) 0}[dir=rtl] .m-89d60db1[data-orientation=vertical][data-placement=right]{--_list-line-left:unset;--_list-line-right:0;--_list-border-size:0 var(--_list-border-width) 0 0;--_tab-border-width:0 var(--_list-border-width) 0 0;--_tab-radius:var(--tabs-radius) 0 0 var(--tabs-radius)}[data-mantine-color-scheme=light] .m-89d60db1{--_tab-border-color:var(--mantine-color-gray-3)}[data-mantine-color-scheme=dark] .m-89d60db1{--_tab-border-color:var(--mantine-color-dark-4)}.m-89d60db1[data-orientation=horizontal]{--_tab-justify:center}.m-89d60db1[data-variant=default]{--_list-border-width:calc(.125rem*var(--mantine-scale))}[data-mantine-color-scheme=light] .m-89d60db1[data-variant=default]{--_tab-hover-color:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-89d60db1[data-variant=default]{--_tab-hover-color:var(--mantine-color-dark-6)}.m-89d60db1[data-variant=outline]{--_list-border-width:calc(.0625rem*var(--mantine-scale))}.m-89d60db1[data-variant=pills]{--_list-gap:calc(var(--mantine-spacing-sm)/2)}[data-mantine-color-scheme=light] .m-89d60db1[data-variant=pills]{--_tab-hover-color:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-89d60db1[data-variant=pills]{--_tab-hover-color:var(--mantine-color-dark-6)}.m-89d33d6d{--_tab-grow:unset;display:flex;flex-direction:var(--_list-direction);flex-wrap:wrap;gap:var(--_list-gap);justify-content:var(--tabs-justify,flex-start)}.m-89d33d6d[data-grow]{--_tab-grow:1}.m-b0c91715{flex-grow:var(--_panel-grow)}.m-4ec4dce6{align-items:center;display:flex;flex-grow:var(--_tab-grow);font-size:var(--mantine-font-size-sm);justify-content:var(--_tab-justify);line-height:1;padding:var(--mantine-spacing-xs) var(--mantine-spacing-md);position:relative;-webkit-user-select:none;user-select:none;white-space:nowrap;z-index:0}.m-4ec4dce6:disabled,.m-4ec4dce6[data-disabled]{cursor:not-allowed;opacity:.5}.m-4ec4dce6:focus{z-index:1}.m-fc420b1f{align-items:center;display:flex;justify-content:center;margin-left:var(--_tab-section-margin-left,0);margin-right:var(--_tab-section-margin-right,0)}.m-fc420b1f[data-position=left]:not(:only-child){--_tab-section-margin-right:var(--mantine-spacing-xs)}[dir=rtl] .m-fc420b1f[data-position=left]:not(:only-child){--_tab-section-margin-right:0rem;--_tab-section-margin-left:var(--mantine-spacing-xs)}.m-fc420b1f[data-position=right]:not(:only-child){--_tab-section-margin-left:var(--mantine-spacing-xs)}[dir=rtl] .m-fc420b1f[data-position=right]:not(:only-child){--_tab-section-margin-left:0rem;--_tab-section-margin-right:var(--mantine-spacing-xs)}.m-576c9d4{position:relative}.m-576c9d4:before{border-color:var(--_tab-border-color);border-style:solid;border-width:var(--_list-border-size);bottom:var(--_list-line-bottom);content:"";left:var(--_list-line-left);position:absolute;right:var(--_list-line-right);top:var(--_list-line-top)}.m-539e827b{--__tab-border-color:transparent;--_tab-bg:transparent;background-color:var(--_tab-bg);border-color:var(--__tab-border-color);border-radius:var(--_tab-radius);border-style:solid;border-width:var(--_tab-border-width)}.m-539e827b[data-active]{--__tab-border-color:var(--tabs-color)}@media (hover:hover){.m-539e827b:hover{--_tab-bg:var(--_tab-hover-color)}.m-539e827b:hover:not([data-active]){--__tab-border-color:var(--_tab-border-color)}}@media (hover:none){.m-539e827b:active{--_tab-bg:var(--_tab-hover-color)}.m-539e827b:active:not([data-active]){--__tab-border-color:var(--_tab-border-color)}}@media (hover:hover){.m-539e827b:disabled:hover,.m-539e827b[data-disabled]:hover{--_tab-bg:transparent}}@media (hover:none){.m-539e827b:disabled:active,.m-539e827b[data-disabled]:active{--_tab-bg:transparent}}.m-6772fbd5{position:relative}.m-6772fbd5:before{border-color:var(--_tab-border-color);border-style:solid;border-width:var(--_list-border-size);bottom:var(--_list-line-bottom);content:"";left:var(--_list-line-left);position:absolute;right:var(--_list-line-right);top:var(--_list-line-top)}.m-b59ab47c{--_tab-border-bottom-color:transparent;--_tab-border-top-color:transparent;--_tab-border-right-color:transparent;--_tab-border-left-color:transparent;border-color:transparent;border-bottom:calc(.0625rem*var(--mantine-scale)) solid var(--_tab-border-bottom-color);border-left:calc(.0625rem*var(--mantine-scale)) solid var(--_tab-border-left-color);border-radius:var(--_tab-radius);border-right:calc(.0625rem*var(--mantine-scale)) solid var(--_tab-border-right-color);border-top:calc(.0625rem*var(--mantine-scale)) solid var(--_tab-border-top-color);position:relative}.m-b59ab47c[data-active]:before{bottom:var(--_tab-before-bottom,calc(-.0625rem*var(--mantine-scale)));left:var(--_tab-before-left,calc(-.0625rem*var(--mantine-scale)));right:var(--_tab-before-right,auto);top:var(--_tab-before-top,auto)}.m-b59ab47c[data-active]:after,.m-b59ab47c[data-active]:before{background-color:var(--_tab-border-color);content:"";height:calc(.0625rem*var(--mantine-scale));position:absolute;width:calc(.0625rem*var(--mantine-scale))}.m-b59ab47c[data-active]:after{bottom:var(--_tab-after-bottom,calc(-.0625rem*var(--mantine-scale)));left:var(--_tab-after-left,auto);right:var(--_tab-after-right,calc(-.0625rem*var(--mantine-scale)));top:var(--_tab-after-top,auto)}.m-b59ab47c[data-active]{--_tab-border-top-color:var(--_tab-border-color);--_tab-border-left-color:var(--_tab-border-color);--_tab-border-right-color:var(--_tab-border-color);--_tab-border-bottom-color:var(--mantine-color-body)}.m-b59ab47c[data-active][data-inverted]{--_tab-border-bottom-color:var(--_tab-border-color);--_tab-border-top-color:var(--mantine-color-body);--_tab-before-bottom:auto;--_tab-before-top:calc(-.0625rem*var(--mantine-scale));--_tab-after-bottom:auto;--_tab-after-top:calc(-.0625rem*var(--mantine-scale))}.m-b59ab47c[data-active][data-orientation=vertical][data-placement=left]{--_tab-border-right-color:var(--mantine-color-body);--_tab-border-left-color:var(--_tab-border-color);--_tab-border-bottom-color:var(--_tab-border-color);--_tab-before-right:calc(-.0625rem*var(--mantine-scale));--_tab-before-left:auto;--_tab-before-bottom:auto;--_tab-before-top:calc(-.0625rem*var(--mantine-scale));--_tab-after-left:auto;--_tab-after-right:calc(-.0625rem*var(--mantine-scale))}[dir=rtl] .m-b59ab47c[data-active][data-orientation=vertical][data-placement=left]{--_tab-border-right-color:var(--_tab-border-color);--_tab-border-left-color:var(--mantine-color-body);--_tab-before-right:auto;--_tab-before-left:calc(-.0625rem*var(--mantine-scale));--_tab-after-left:calc(-.0625rem*var(--mantine-scale));--_tab-after-right:auto}.m-b59ab47c[data-active][data-orientation=vertical][data-placement=right]{--_tab-border-left-color:var(--mantine-color-body);--_tab-border-right-color:var(--_tab-border-color);--_tab-border-bottom-color:var(--_tab-border-color);--_tab-before-left:calc(-.0625rem*var(--mantine-scale));--_tab-before-right:auto;--_tab-before-bottom:auto;--_tab-before-top:calc(-.0625rem*var(--mantine-scale));--_tab-after-right:auto;--_tab-after-left:calc(-.0625rem*var(--mantine-scale))}[dir=rtl] .m-b59ab47c[data-active][data-orientation=vertical][data-placement=right]{--_tab-border-left-color:var(--_tab-border-color);--_tab-border-right-color:var(--mantine-color-body);--_tab-before-left:auto;--_tab-before-right:calc(-.0625rem*var(--mantine-scale));--_tab-after-right:calc(-.0625rem*var(--mantine-scale));--_tab-after-left:auto}.m-c3381914{--_tab-bg:transparent;--_tab-color:inherit;background-color:var(--_tab-bg);border-radius:var(--tabs-radius);color:var(--_tab-color)}@media (hover:hover){.m-c3381914:not([data-disabled]):hover{--_tab-bg:var(--_tab-hover-color)}}@media (hover:none){.m-c3381914:not([data-disabled]):active{--_tab-bg:var(--_tab-hover-color)}}.m-c3381914[data-active][data-active]{--_tab-bg:var(--tabs-color);--_tab-color:var(--tabs-text-color,var(--mantine-color-white))}@media (hover:hover){.m-c3381914[data-active][data-active]:hover{--_tab-bg:var(--tabs-color)}}@media (hover:none){.m-c3381914[data-active][data-active]:active{--_tab-bg:var(--tabs-color)}}.m-7341320d{--ti-size-xs:calc(1.125rem*var(--mantine-scale));--ti-size-sm:calc(1.375rem*var(--mantine-scale));--ti-size-md:calc(1.75rem*var(--mantine-scale));--ti-size-lg:calc(2.125rem*var(--mantine-scale));--ti-size-xl:calc(2.75rem*var(--mantine-scale));--ti-size:var(--ti-size-md);align-items:center;background:var(--ti-bg,var(--mantine-primary-color-filled));border:var(--ti-bd,calc(.0625rem*var(--mantine-scale)) solid transparent);border-radius:var(--ti-radius,var(--mantine-radius-default));color:var(--ti-color,var(--mantine-color-white));display:inline-flex;height:var(--ti-size);justify-content:center;line-height:1;min-height:var(--ti-size);min-width:var(--ti-size);position:relative;-webkit-user-select:none;user-select:none;width:var(--ti-size)}.m-43657ece{--offset:calc(var(--tl-bullet-size)/2 + var(--tl-line-width)/2);--tl-bullet-size:calc(1.25rem*var(--mantine-scale));--tl-line-width:calc(.25rem*var(--mantine-scale));--tl-radius:calc(62.5rem*var(--mantine-scale));--tl-color:var(--mantine-primary-color-filled);padding-left:var(--_tl-pl,0);padding-right:var(--_tl-pr,0)}.m-43657ece[data-align=left]{--_tl-pl:var(--offset)}[dir=rtl] .m-43657ece[data-align=left]{--_tl-pl:0;--_tl-pr:var(--offset)}.m-43657ece[data-align=right]{--_tl-pr:var(--offset)}[dir=rtl] .m-43657ece[data-align=right]{--_tl-pl:var(--offset);--_tl-pr:0}.m-2ebe8099{font-weight:500;line-height:1;margin-bottom:calc(var(--mantine-spacing-xs)/2)}.m-436178ff{--item-border:var(--tl-line-width) var(--tli-border-style,solid) var(--_item-border-color);color:var(--mantine-color-text);margin-top:var(--_item-mt);padding-left:var(--_item-pl,0);padding-right:var(--_item-pr,0);position:relative;text-align:var(--_item-ta)}.m-436178ff:before{border-left:var(--_line-border-left,var(--item-border));border-right:var(--_line-border-right,0);bottom:calc(var(--mantine-spacing-xl)*-1);content:"";display:var(--_line-display,none);left:var(--_line-left,0);pointer-events:none;position:absolute;right:var(--_line-right,0);top:0}[dir=rtl] .m-436178ff:before{--_line-border-left:0;--_line-border-right:var(--item-border)}.m-43657ece[data-align=left] .m-436178ff:before{--_line-left:calc(var(--tl-line-width)*-1);--_line-right:auto}.m-43657ece[data-align=right] .m-436178ff:before,[dir=rtl] .m-43657ece[data-align=left] .m-436178ff:before{--_line-left:auto;--_line-right:calc(var(--tl-line-width)*-1)}[dir=rtl] .m-43657ece[data-align=right] .m-436178ff:before{--_line-left:calc(var(--tl-line-width)*-1);--_line-right:auto}.m-43657ece[data-align=left] .m-436178ff{--_item-pl:var(--offset);--_item-ta:left}[dir=rtl] .m-43657ece[data-align=left] .m-436178ff{--_item-pl:0;--_item-pr:var(--offset)}.m-43657ece[data-align=right] .m-436178ff{--_item-pr:var(--offset);--_item-ta:right}[dir=rtl] .m-43657ece[data-align=right] .m-436178ff{--_item-pl:var(--offset);--_item-pr:0}[data-mantine-color-scheme=light] .m-436178ff{--_item-border-color:var(--mantine-color-gray-3)}[data-mantine-color-scheme=dark] .m-436178ff{--_item-border-color:var(--mantine-color-dark-4)}[data-mantine-color-scheme] .m-436178ff[data-line-active]:before{border-color:var(--tli-color,var(--tl-color))}.m-436178ff:not(:last-of-type){--_line-display:block}.m-436178ff:not(:first-of-type){--_item-mt:var(--mantine-spacing-xl)}.m-8affcee1{align-items:center;background-color:var(--_bullet-bg-color,var(--mantine-color-body));border:var(--_bullet-border-width,var(--tl-line-width)) solid var(--_bullet-border-color);border-radius:var(--tli-radius,var(--tl-radius));color:var(--_bullet-color,var(--mantine-color-text));display:flex;height:var(--tl-bullet-size);justify-content:center;left:var(--_bullet-left,0);position:absolute;right:var(--_bullet-right,0);top:0;width:var(--tl-bullet-size)}[data-mantine-color-scheme=light] .m-8affcee1{--_bullet-border-color:var(--mantine-color-gray-3)}[data-mantine-color-scheme=dark] .m-8affcee1{--_bullet-border-color:var(--mantine-color-dark-4)}.m-43657ece[data-align=left] .m-8affcee1{--_bullet-left:calc(var(--tl-bullet-size)/2*-1 + var(--tl-line-width)/2*-1);--_bullet-right:auto}.m-43657ece[data-align=right] .m-8affcee1,[dir=rtl] .m-43657ece[data-align=left] .m-8affcee1{--_bullet-left:auto;--_bullet-right:calc(var(--tl-bullet-size)/2*-1 + var(--tl-line-width)/2*-1)}[dir=rtl] .m-43657ece[data-align=right] .m-8affcee1{--_bullet-left:calc(var(--tl-bullet-size)/2*-1 + var(--tl-line-width)/2*-1);--_bullet-right:auto}.m-8affcee1[data-with-child]{--_bullet-border-width:var(--tl-line-width)}[data-mantine-color-scheme=light] .m-8affcee1[data-with-child]{--_bullet-bg-color:var(--mantine-color-gray-3)}[data-mantine-color-scheme=dark] .m-8affcee1[data-with-child]{--_bullet-bg-color:var(--mantine-color-dark-4)}.m-8affcee1[data-active]{--_bullet-border-color:var(--tli-color,var(--tl-color));--_bullet-bg-color:var(--mantine-color-white);--_bullet-color:var(--tl-icon-color,var(--mantine-color-white))}.m-8affcee1[data-active][data-with-child]{--_bullet-bg-color:var(--tli-color,var(--tl-color));--_bullet-color:var(--tl-icon-color,var(--mantine-color-white))}.m-540e8f41{padding-left:var(--_body-pl,0);padding-right:var(--_body-pr,0);text-align:var(--_body-ta)}.m-43657ece[data-align=left] .m-540e8f41{--_body-pl:var(--offset);--_body-ta:left}[dir=rtl] .m-43657ece[data-align=left] .m-540e8f41{--_body-pl:0;--_body-pr:var(--offset);--_body-ta:right}.m-43657ece[data-align=right] .m-540e8f41{--_body-pr:var(--offset);--_body-ta:right}[dir=rtl] .m-43657ece[data-align=right] .m-540e8f41{--_body-pl:var(--offset);--_body-pr:0;--_body-ta:left}.m-8a5d1357{text-wrap:var(--title-text-wrap,var(--mantine-heading-text-wrap));font-family:var(--mantine-font-family-headings);font-size:var(--title-fz);font-weight:var(--title-fw);line-height:var(--title-lh);margin:0}.m-8a5d1357:where([data-line-clamp]){-webkit-line-clamp:var(--title-line-clamp);-webkit-box-orient:vertical;display:-webkit-box;overflow:hidden;text-overflow:ellipsis}.m-d6493fad :first-child{margin-top:0}.m-d6493fad :last-child{margin-bottom:0}.m-d6493fad :where(h1,h2,h3,h4,h5,h6){text-wrap:var(--mantine-heading-text-wrap);margin-bottom:var(--mantine-spacing-xs)}.m-d6493fad :where(h1){font-size:var(--mantine-h1-font-size);font-weight:var(--mantine-h1-font-weight);line-height:var(--mantine-h1-line-height);margin-top:calc(var(--mantine-spacing-xl)*1.5)}.m-d6493fad :where(h2){font-size:var(--mantine-h2-font-size);font-weight:var(--mantine-h2-font-weight);line-height:var(--mantine-h2-line-height);margin-top:var(--mantine-spacing-xl)}.m-d6493fad :where(h3){font-size:var(--mantine-h3-font-size);font-weight:var(--mantine-h3-font-weight);line-height:var(--mantine-h3-line-height);margin-top:calc(var(--mantine-spacing-xl)*.8)}.m-d6493fad :where(h4){font-size:var(--mantine-h4-font-size);font-weight:var(--mantine-h4-font-weight);line-height:var(--mantine-h4-line-height);margin-top:calc(var(--mantine-spacing-xl)*.8)}.m-d6493fad :where(h5){font-size:var(--mantine-h5-font-size);font-weight:var(--mantine-h5-font-weight);line-height:var(--mantine-h5-line-height);margin-top:calc(var(--mantine-spacing-xl)*.5)}.m-d6493fad :where(h6){font-size:var(--mantine-h6-font-size);font-weight:var(--mantine-h6-font-weight);line-height:var(--mantine-h6-line-height);margin-top:calc(var(--mantine-spacing-xl)*.5)}.m-d6493fad :where(img){margin-bottom:var(--mantine-spacing-xs);max-width:100%}.m-d6493fad :where(p){margin-bottom:var(--mantine-spacing-lg);margin-top:0}[data-mantine-color-scheme=light] .m-d6493fad :where(mark){background-color:var(--mantine-color-yellow-2);color:inherit}[data-mantine-color-scheme=dark] .m-d6493fad :where(mark){background-color:var(--mantine-color-yellow-5);color:var(--mantine-color-black)}.m-d6493fad :where(a){color:var(--mantine-color-anchor);text-decoration:none}@media (hover:hover){.m-d6493fad :where(a):hover{text-decoration:underline}}@media (hover:none){.m-d6493fad :where(a):active{text-decoration:underline}}.m-d6493fad :where(hr){border:0;border-top:calc(.0625rem*var(--mantine-scale)) solid;margin-bottom:var(--mantine-spacing-md);margin-top:var(--mantine-spacing-md)}[data-mantine-color-scheme=light] .m-d6493fad :where(hr){border-color:var(--mantine-color-gray-3)}[data-mantine-color-scheme=dark] .m-d6493fad :where(hr){border-color:var(--mantine-color-dark-3)}.m-d6493fad :where(pre){border-radius:var(--mantine-radius-sm);font-family:var(--mantine-font-family-monospace);font-size:var(--mantine-font-size-xs);line-height:var(--mantine-line-height);margin:0;margin-bottom:var(--mantine-spacing-md);margin-top:var(--mantine-spacing-md);overflow-x:auto;padding:var(--mantine-spacing-xs)}[data-mantine-color-scheme=light] .m-d6493fad :where(pre){background-color:var(--mantine-color-gray-0)}[data-mantine-color-scheme=dark] .m-d6493fad :where(pre){background-color:var(--mantine-color-dark-8)}.m-d6493fad :where(pre) :where(code){background-color:transparent;border:0;border-radius:0;color:inherit;padding:0}.m-d6493fad :where(kbd){--kbd-fz:calc(.75rem*var(--mantine-scale));--kbd-padding:calc(.1875rem*var(--mantine-scale)) calc(.3125rem*var(--mantine-scale));border:calc(.0625rem*var(--mantine-scale)) solid;border-bottom-width:calc(.1875rem*var(--mantine-scale));border-radius:var(--mantine-radius-sm);font-family:var(--mantine-font-family-monospace);font-size:var(--kbd-fz);font-weight:700;line-height:var(--mantine-line-height);padding:var(--kbd-padding)}:where([data-mantine-color-scheme=light]) .m-d6493fad :where(kbd){background-color:var(--mantine-color-gray-0);border-color:var(--mantine-color-gray-3);color:var(--mantine-color-gray-7)}[data-mantine-color-scheme=dark] .m-d6493fad :where(kbd){background-color:var(--mantine-color-dark-5);border-color:var(--mantine-color-dark-3);color:var(--mantine-color-dark-0)}.m-d6493fad :where(code){border-radius:var(--mantine-radius-sm);font-family:var(--mantine-font-family-monospace);font-size:var(--mantine-font-size-xs);line-height:var(--mantine-line-height);padding:calc(.0625rem*var(--mantine-scale)) calc(.3125rem*var(--mantine-scale))}[data-mantine-color-scheme=light] .m-d6493fad :where(code){background-color:var(--mantine-color-gray-0);color:var(--mantine-color-black)}[data-mantine-color-scheme=dark] .m-d6493fad :where(code){background-color:var(--mantine-color-dark-5);color:var(--mantine-color-white)}.m-d6493fad :where(ul,ol){margin-bottom:var(--mantine-spacing-md);padding-left:calc(2.375rem*var(--mantine-scale))}.m-d6493fad :where(ul,ol) :where(li){margin-bottom:var(--mantine-spacing-xs)}.m-d6493fad :where(table){border-collapse:collapse;caption-side:bottom;margin-bottom:var(--mantine-spacing-md);width:100%}.m-d6493fad :where(table) :where(caption){color:var(--mantine-color-gray-6);font-size:var(--mantine-font-size-sm);margin-top:var(--mantine-spacing-xs)}.m-d6493fad :where(table) :where(th){color:var(--mantine-color-gray-7);font-size:var(--mantine-font-size-sm);font-weight:700;padding:var(--mantine-spacing-xs) var(--mantine-spacing-sm);text-align:left}.m-d6493fad :where(table) :where(thead th){border-bottom:calc(.0625rem*var(--mantine-scale)) solid;border-color:var(--mantine-color-gray-3)}.m-d6493fad :where(table) :where(tfoot th){border-top:calc(.0625rem*var(--mantine-scale)) solid;border-color:var(--mantine-color-gray-3)}.m-d6493fad :where(table) :where(td){border-bottom:calc(.0625rem*var(--mantine-scale)) solid;border-color:var(--mantine-color-gray-3);font-size:var(--mantine-font-size-sm);padding:var(--mantine-spacing-xs) var(--mantine-spacing-sm)}.m-d6493fad :where(table) :where(tr:last-of-type td){border-bottom:0}.m-d6493fad :where(blockquote){border-radius:var(--mantine-radius-sm);font-size:var(--mantine-font-size-lg);line-height:var(--mantine-line-height);margin:var(--mantine-spacing-md) 0;padding:var(--mantine-spacing-md) var(--mantine-spacing-lg)}:where([data-mantine-color-scheme=light]) .m-d6493fad :where(blockquote){background-color:var(--mantine-color-gray-0)}:where([data-mantine-color-scheme=dark]) .m-d6493fad :where(blockquote){background-color:var(--mantine-color-dark-8)}
`),
            document.head.appendChild(zi);
        function Ko(e, t) {
            for (var n = 0; n < t.length; n++) {
                const r = t[n];
                if (typeof r != "string" && !Array.isArray(r)) {
                    for (const o in r)
                        if (o !== "default" && !(o in e)) {
                            const i = Object.getOwnPropertyDescriptor(r, o);
                            i &&
                            Object.defineProperty(
                                e,
                                o,
                                i.get ? i : {enumerable: !0, get: () => r[o]}
                            );
                        }
                }
            }
            return Object.freeze(
                Object.defineProperty(e, Symbol.toStringTag, {value: "Module"})
            );
        }
        var lt =
            typeof globalThis < "u"
                ? globalThis
                : typeof window < "u"
                    ? window
                    : typeof global < "u"
                        ? global
                        : typeof self < "u"
                            ? self
                            : {};
        function Da(e) {
            return e &&
            e.__esModule &&
            Object.prototype.hasOwnProperty.call(e, "default")
                ? e.default
                : e;
        }
        var v_ = {exports: {}},
            Bh = {},
            b_ = {exports: {}},
            ke = {};
        /**
         * @license React
         * react.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */ var Qc = Symbol.for("react.element"),
            vz = Symbol.for("react.portal"),
            bz = Symbol.for("react.fragment"),
            yz = Symbol.for("react.strict_mode"),
            wz = Symbol.for("react.profiler"),
            xz = Symbol.for("react.provider"),
            Sz = Symbol.for("react.context"),
            _z = Symbol.for("react.forward_ref"),
            kz = Symbol.for("react.suspense"),
            Cz = Symbol.for("react.memo"),
            Ez = Symbol.for("react.lazy"),
            y_ = Symbol.iterator;
        function Pz(e) {
            return e === null || typeof e != "object"
                ? null
                : ((e = (y_ && e[y_]) || e["@@iterator"]),
                    typeof e == "function" ? e : null);
        }
        var w_ = {
                isMounted: function () {
                    return !1;
                },
                enqueueForceUpdate: function () {},
                enqueueReplaceState: function () {},
                enqueueSetState: function () {},
            },
            x_ = Object.assign,
            S_ = {};
        function Ks(e, t, n) {
            (this.props = e),
                (this.context = t),
                (this.refs = S_),
                (this.updater = n || w_);
        }
        (Ks.prototype.isReactComponent = {}),
            (Ks.prototype.setState = function (e, t) {
                if (typeof e != "object" && typeof e != "function" && e != null)
                    throw Error(
                        "setState(...): takes an object of state variables to update or a function which returns an object of state variables."
                    );
                this.updater.enqueueSetState(this, e, t, "setState");
            }),
            (Ks.prototype.forceUpdate = function (e) {
                this.updater.enqueueForceUpdate(this, e, "forceUpdate");
            });
        function __() {}
        __.prototype = Ks.prototype;
        function qv(e, t, n) {
            (this.props = e),
                (this.context = t),
                (this.refs = S_),
                (this.updater = n || w_);
        }
        var Zv = (qv.prototype = new __());
        (Zv.constructor = qv), x_(Zv, Ks.prototype), (Zv.isPureReactComponent = !0);
        var k_ = Array.isArray,
            C_ = Object.prototype.hasOwnProperty,
            Qv = {current: null},
            E_ = {key: !0, ref: !0, __self: !0, __source: !0};
        function P_(e, t, n) {
            var r,
                o = {},
                i = null,
                a = null;
            if (t != null)
                for (r in (t.ref !== void 0 && (a = t.ref),
                t.key !== void 0 && (i = "" + t.key),
                    t))
                    C_.call(t, r) && !E_.hasOwnProperty(r) && (o[r] = t[r]);
            var s = arguments.length - 2;
            if (s === 1) o.children = n;
            else if (1 < s) {
                for (var l = Array(s), c = 0; c < s; c++) l[c] = arguments[c + 2];
                o.children = l;
            }
            if (e && e.defaultProps)
                for (r in ((s = e.defaultProps), s))
                    o[r] === void 0 && (o[r] = s[r]);
            return {
                $$typeof: Qc,
                type: e,
                key: i,
                ref: a,
                props: o,
                _owner: Qv.current,
            };
        }
        function Iz(e, t) {
            return {
                $$typeof: Qc,
                type: e.type,
                key: t,
                ref: e.ref,
                props: e.props,
                _owner: e._owner,
            };
        }
        function Jv(e) {
            return typeof e == "object" && e !== null && e.$$typeof === Qc;
        }
        function Tz(e) {
            var t = {"=": "=0", ":": "=2"};
            return (
                "$" +
                e.replace(/[=:]/g, function (n) {
                    return t[n];
                })
            );
        }
        var I_ = /\/+/g;
        function e0(e, t) {
            return typeof e == "object" && e !== null && e.key != null
                ? Tz("" + e.key)
                : t.toString(36);
        }
        function Uh(e, t, n, r, o) {
            var i = typeof e;
            (i === "undefined" || i === "boolean") && (e = null);
            var a = !1;
            if (e === null) a = !0;
            else
                switch (i) {
                    case "string":
                    case "number":
                        a = !0;
                        break;
                    case "object":
                        switch (e.$$typeof) {
                            case Qc:
                            case vz:
                                a = !0;
                        }
                }
            if (a)
                return (
                    (a = e),
                        (o = o(a)),
                        (e = r === "" ? "." + e0(a, 0) : r),
                        k_(o)
                            ? ((n = ""),
                            e != null && (n = e.replace(I_, "$&/") + "/"),
                                Uh(o, t, n, "", function (c) {
                                    return c;
                                }))
                            : o != null &&
                            (Jv(o) &&
                            (o = Iz(
                                o,
                                n +
                                (!o.key || (a && a.key === o.key)
                                    ? ""
                                    : ("" + o.key).replace(I_, "$&/") + "/") +
                                e
                            )),
                                t.push(o)),
                        1
                );
            if (((a = 0), (r = r === "" ? "." : r + ":"), k_(e)))
                for (var s = 0; s < e.length; s++) {
                    i = e[s];
                    var l = r + e0(i, s);
                    a += Uh(i, t, n, l, o);
                }
            else if (((l = Pz(e)), typeof l == "function"))
                for (e = l.call(e), s = 0; !(i = e.next()).done; )
                    (i = i.value), (l = r + e0(i, s++)), (a += Uh(i, t, n, l, o));
            else if (i === "object")
                throw (
                    ((t = String(e)),
                        Error(
                            "Objects are not valid as a React child (found: " +
                            (t === "[object Object]"
                                ? "object with keys {" +
                                Object.keys(e).join(", ") +
                                "}"
                                : t) +
                            "). If you meant to render a collection of children, use an array instead."
                        ))
                );
            return a;
        }
        function Hh(e, t, n) {
            if (e == null) return e;
            var r = [],
                o = 0;
            return (
                Uh(e, r, "", "", function (i) {
                    return t.call(n, i, o++);
                }),
                    r
            );
        }
        function $z(e) {
            if (e._status === -1) {
                var t = e._result;
                (t = t()),
                    t.then(
                        function (n) {
                            (e._status === 0 || e._status === -1) &&
                            ((e._status = 1), (e._result = n));
                        },
                        function (n) {
                            (e._status === 0 || e._status === -1) &&
                            ((e._status = 2), (e._result = n));
                        }
                    ),
                e._status === -1 && ((e._status = 0), (e._result = t));
            }
            if (e._status === 1) return e._result.default;
            throw e._result;
        }
        var Cn = {current: null},
            Vh = {transition: null},
            Az = {
                ReactCurrentDispatcher: Cn,
                ReactCurrentBatchConfig: Vh,
                ReactCurrentOwner: Qv,
            };
        (ke.Children = {
            map: Hh,
            forEach: function (e, t, n) {
                Hh(
                    e,
                    function () {
                        t.apply(this, arguments);
                    },
                    n
                );
            },
            count: function (e) {
                var t = 0;
                return (
                    Hh(e, function () {
                        t++;
                    }),
                        t
                );
            },
            toArray: function (e) {
                return (
                    Hh(e, function (t) {
                        return t;
                    }) || []
                );
            },
            only: function (e) {
                if (!Jv(e))
                    throw Error(
                        "React.Children.only expected to receive a single React element child."
                    );
                return e;
            },
        }),
            (ke.Component = Ks),
            (ke.Fragment = bz),
            (ke.Profiler = wz),
            (ke.PureComponent = qv),
            (ke.StrictMode = yz),
            (ke.Suspense = kz),
            (ke.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Az),
            (ke.cloneElement = function (e, t, n) {
                if (e == null)
                    throw Error(
                        "React.cloneElement(...): The argument must be a React element, but you passed " +
                        e +
                        "."
                    );
                var r = x_({}, e.props),
                    o = e.key,
                    i = e.ref,
                    a = e._owner;
                if (t != null) {
                    if (
                        (t.ref !== void 0 && ((i = t.ref), (a = Qv.current)),
                        t.key !== void 0 && (o = "" + t.key),
                        e.type && e.type.defaultProps)
                    )
                        var s = e.type.defaultProps;
                    for (l in t)
                        C_.call(t, l) &&
                        !E_.hasOwnProperty(l) &&
                        (r[l] = t[l] === void 0 && s !== void 0 ? s[l] : t[l]);
                }
                var l = arguments.length - 2;
                if (l === 1) r.children = n;
                else if (1 < l) {
                    s = Array(l);
                    for (var c = 0; c < l; c++) s[c] = arguments[c + 2];
                    r.children = s;
                }
                return {
                    $$typeof: Qc,
                    type: e.type,
                    key: o,
                    ref: i,
                    props: r,
                    _owner: a,
                };
            }),
            (ke.createContext = function (e) {
                return (
                    (e = {
                        $$typeof: Sz,
                        _currentValue: e,
                        _currentValue2: e,
                        _threadCount: 0,
                        Provider: null,
                        Consumer: null,
                        _defaultValue: null,
                        _globalName: null,
                    }),
                        (e.Provider = {$$typeof: xz, _context: e}),
                        (e.Consumer = e)
                );
            }),
            (ke.createElement = P_),
            (ke.createFactory = function (e) {
                var t = P_.bind(null, e);
                return (t.type = e), t;
            }),
            (ke.createRef = function () {
                return {current: null};
            }),
            (ke.forwardRef = function (e) {
                return {$$typeof: _z, render: e};
            }),
            (ke.isValidElement = Jv),
            (ke.lazy = function (e) {
                return {
                    $$typeof: Ez,
                    _payload: {_status: -1, _result: e},
                    _init: $z,
                };
            }),
            (ke.memo = function (e, t) {
                return {$$typeof: Cz, type: e, compare: t === void 0 ? null : t};
            }),
            (ke.startTransition = function (e) {
                var t = Vh.transition;
                Vh.transition = {};
                try {
                    e();
                } finally {
                    Vh.transition = t;
                }
            }),
            (ke.unstable_act = function () {
                throw Error(
                    "act(...) is not supported in production builds of React."
                );
            }),
            (ke.useCallback = function (e, t) {
                return Cn.current.useCallback(e, t);
            }),
            (ke.useContext = function (e) {
                return Cn.current.useContext(e);
            }),
            (ke.useDebugValue = function () {}),
            (ke.useDeferredValue = function (e) {
                return Cn.current.useDeferredValue(e);
            }),
            (ke.useEffect = function (e, t) {
                return Cn.current.useEffect(e, t);
            }),
            (ke.useId = function () {
                return Cn.current.useId();
            }),
            (ke.useImperativeHandle = function (e, t, n) {
                return Cn.current.useImperativeHandle(e, t, n);
            }),
            (ke.useInsertionEffect = function (e, t) {
                return Cn.current.useInsertionEffect(e, t);
            }),
            (ke.useLayoutEffect = function (e, t) {
                return Cn.current.useLayoutEffect(e, t);
            }),
            (ke.useMemo = function (e, t) {
                return Cn.current.useMemo(e, t);
            }),
            (ke.useReducer = function (e, t, n) {
                return Cn.current.useReducer(e, t, n);
            }),
            (ke.useRef = function (e) {
                return Cn.current.useRef(e);
            }),
            (ke.useState = function (e) {
                return Cn.current.useState(e);
            }),
            (ke.useSyncExternalStore = function (e, t, n) {
                return Cn.current.useSyncExternalStore(e, t, n);
            }),
            (ke.useTransition = function () {
                return Cn.current.useTransition();
            }),
            (ke.version = "18.2.0"),
            (b_.exports = ke);
        var y = b_.exports;
        const N = Da(y),
            t0 = Ko({__proto__: null, default: N}, [y]);
        /**
         * @license React
         * react-jsx-runtime.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */ var Mz = y,
            zz = Symbol.for("react.element"),
            Rz = Symbol.for("react.fragment"),
            Oz = Object.prototype.hasOwnProperty,
            Dz =
                Mz.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED
                    .ReactCurrentOwner,
            Lz = {key: !0, ref: !0, __self: !0, __source: !0};
        function T_(e, t, n) {
            var r,
                o = {},
                i = null,
                a = null;
            n !== void 0 && (i = "" + n),
            t.key !== void 0 && (i = "" + t.key),
            t.ref !== void 0 && (a = t.ref);
            for (r in t) Oz.call(t, r) && !Lz.hasOwnProperty(r) && (o[r] = t[r]);
            if (e && e.defaultProps)
                for (r in ((t = e.defaultProps), t))
                    o[r] === void 0 && (o[r] = t[r]);
            return {
                $$typeof: zz,
                type: e,
                key: i,
                ref: a,
                props: o,
                _owner: Dz.current,
            };
        }
        (Bh.Fragment = Rz), (Bh.jsx = T_), (Bh.jsxs = T_), (v_.exports = Bh);
        var v = v_.exports,
            n0 = {},
            $_ = {exports: {}},
            Xn = {},
            A_ = {exports: {}},
            M_ = {};
        /**
         * @license React
         * scheduler.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */ (function (e) {
            function t(V, B) {
                var H = V.length;
                V.push(B);
                e: for (; 0 < H; ) {
                    var G = (H - 1) >>> 1,
                        ee = V[G];
                    if (0 < o(ee, B)) (V[G] = B), (V[H] = ee), (H = G);
                    else break e;
                }
            }
            function n(V) {
                return V.length === 0 ? null : V[0];
            }
            function r(V) {
                if (V.length === 0) return null;
                var B = V[0],
                    H = V.pop();
                if (H !== B) {
                    V[0] = H;
                    e: for (var G = 0, ee = V.length, fe = ee >>> 1; G < fe; ) {
                        var Se = 2 * (G + 1) - 1,
                            te = V[Se],
                            ye = Se + 1,
                            Ae = V[ye];
                        if (0 > o(te, H))
                            ye < ee && 0 > o(Ae, te)
                                ? ((V[G] = Ae), (V[ye] = H), (G = ye))
                                : ((V[G] = te), (V[Se] = H), (G = Se));
                        else if (ye < ee && 0 > o(Ae, H))
                            (V[G] = Ae), (V[ye] = H), (G = ye);
                        else break e;
                    }
                }
                return B;
            }
            function o(V, B) {
                var H = V.sortIndex - B.sortIndex;
                return H !== 0 ? H : V.id - B.id;
            }
            if (
                typeof performance == "object" &&
                typeof performance.now == "function"
            ) {
                var i = performance;
                e.unstable_now = function () {
                    return i.now();
                };
            } else {
                var a = Date,
                    s = a.now();
                e.unstable_now = function () {
                    return a.now() - s;
                };
            }
            var l = [],
                c = [],
                d = 1,
                u = null,
                h = 3,
                p = !1,
                m = !1,
                f = !1,
                g = typeof setTimeout == "function" ? setTimeout : null,
                b = typeof clearTimeout == "function" ? clearTimeout : null,
                x = typeof setImmediate < "u" ? setImmediate : null;
            typeof navigator < "u" &&
            navigator.scheduling !== void 0 &&
            navigator.scheduling.isInputPending !== void 0 &&
            navigator.scheduling.isInputPending.bind(navigator.scheduling);
            function S(V) {
                for (var B = n(c); B !== null; ) {
                    if (B.callback === null) r(c);
                    else if (B.startTime <= V)
                        r(c), (B.sortIndex = B.expirationTime), t(l, B);
                    else break;
                    B = n(c);
                }
            }
            function _(V) {
                if (((f = !1), S(V), !m))
                    if (n(l) !== null) (m = !0), F(k);
                    else {
                        var B = n(c);
                        B !== null && K(_, B.startTime - V);
                    }
            }
            function k(V, B) {
                (m = !1), f && ((f = !1), b(I), (I = -1)), (p = !0);
                var H = h;
                try {
                    for (
                        S(B), u = n(l);
                        u !== null && (!(u.expirationTime > B) || (V && !R()));

                    ) {
                        var G = u.callback;
                        if (typeof G == "function") {
                            (u.callback = null), (h = u.priorityLevel);
                            var ee = G(u.expirationTime <= B);
                            (B = e.unstable_now()),
                                typeof ee == "function"
                                    ? (u.callback = ee)
                                    : u === n(l) && r(l),
                                S(B);
                        } else r(l);
                        u = n(l);
                    }
                    if (u !== null) var fe = !0;
                    else {
                        var Se = n(c);
                        Se !== null && K(_, Se.startTime - B), (fe = !1);
                    }
                    return fe;
                } finally {
                    (u = null), (h = H), (p = !1);
                }
            }
            var C = !1,
                P = null,
                I = -1,
                $ = 5,
                T = -1;
            function R() {
                return !(e.unstable_now() - T < $);
            }
            function D() {
                if (P !== null) {
                    var V = e.unstable_now();
                    T = V;
                    var B = !0;
                    try {
                        B = P(!0, V);
                    } finally {
                        B ? j() : ((C = !1), (P = null));
                    }
                } else C = !1;
            }
            var j;
            if (typeof x == "function")
                j = function () {
                    x(D);
                };
            else if (typeof MessageChannel < "u") {
                var z = new MessageChannel(),
                    O = z.port2;
                (z.port1.onmessage = D),
                    (j = function () {
                        O.postMessage(null);
                    });
            } else
                j = function () {
                    g(D, 0);
                };
            function F(V) {
                (P = V), C || ((C = !0), j());
            }
            function K(V, B) {
                I = g(function () {
                    V(e.unstable_now());
                }, B);
            }
            (e.unstable_IdlePriority = 5),
                (e.unstable_ImmediatePriority = 1),
                (e.unstable_LowPriority = 4),
                (e.unstable_NormalPriority = 3),
                (e.unstable_Profiling = null),
                (e.unstable_UserBlockingPriority = 2),
                (e.unstable_cancelCallback = function (V) {
                    V.callback = null;
                }),
                (e.unstable_continueExecution = function () {
                    m || p || ((m = !0), F(k));
                }),
                (e.unstable_forceFrameRate = function (V) {
                    0 > V || 125 < V
                        ? console.error(
                            "forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"
                        )
                        : ($ = 0 < V ? Math.floor(1e3 / V) : 5);
                }),
                (e.unstable_getCurrentPriorityLevel = function () {
                    return h;
                }),
                (e.unstable_getFirstCallbackNode = function () {
                    return n(l);
                }),
                (e.unstable_next = function (V) {
                    switch (h) {
                        case 1:
                        case 2:
                        case 3:
                            var B = 3;
                            break;
                        default:
                            B = h;
                    }
                    var H = h;
                    h = B;
                    try {
                        return V();
                    } finally {
                        h = H;
                    }
                }),
                (e.unstable_pauseExecution = function () {}),
                (e.unstable_requestPaint = function () {}),
                (e.unstable_runWithPriority = function (V, B) {
                    switch (V) {
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                            break;
                        default:
                            V = 3;
                    }
                    var H = h;
                    h = V;
                    try {
                        return B();
                    } finally {
                        h = H;
                    }
                }),
                (e.unstable_scheduleCallback = function (V, B, H) {
                    var G = e.unstable_now();
                    switch (
                        (typeof H == "object" && H !== null
                            ? ((H = H.delay),
                                (H = typeof H == "number" && 0 < H ? G + H : G))
                            : (H = G),
                            V)
                        ) {
                        case 1:
                            var ee = -1;
                            break;
                        case 2:
                            ee = 250;
                            break;
                        case 5:
                            ee = 1073741823;
                            break;
                        case 4:
                            ee = 1e4;
                            break;
                        default:
                            ee = 5e3;
                    }
                    return (
                        (ee = H + ee),
                            (V = {
                                id: d++,
                                callback: B,
                                priorityLevel: V,
                                startTime: H,
                                expirationTime: ee,
                                sortIndex: -1,
                            }),
                            H > G
                                ? ((V.sortIndex = H),
                                    t(c, V),
                                n(l) === null &&
                                V === n(c) &&
                                (f ? (b(I), (I = -1)) : (f = !0), K(_, H - G)))
                                : ((V.sortIndex = ee),
                                    t(l, V),
                                m || p || ((m = !0), F(k))),
                            V
                    );
                }),
                (e.unstable_shouldYield = R),
                (e.unstable_wrapCallback = function (V) {
                    var B = h;
                    return function () {
                        var H = h;
                        h = B;
                        try {
                            return V.apply(this, arguments);
                        } finally {
                            h = H;
                        }
                    };
                });
        })(M_),
            (A_.exports = M_);
        var jz = A_.exports;
        /**
         * @license React
         * react-dom.production.min.js
         *
         * Copyright (c) Facebook, Inc. and its affiliates.
         *
         * This source code is licensed under the MIT license found in the
         * LICENSE file in the root directory of this source tree.
         */ var z_ = y,
            qn = jz;
        function Z(e) {
            for (
                var t =
                        "https://reactjs.org/docs/error-decoder.html?invariant=" +
                        e,
                    n = 1;
                n < arguments.length;
                n++
            )
                t += "&args[]=" + encodeURIComponent(arguments[n]);
            return (
                "Minified React error #" +
                e +
                "; visit " +
                t +
                " for the full message or use the non-minified dev environment for full errors and additional helpful warnings."
            );
        }
        var R_ = new Set(),
            Jc = {};
        function La(e, t) {
            Ws(e, t), Ws(e + "Capture", t);
        }
        function Ws(e, t) {
            for (Jc[e] = t, e = 0; e < t.length; e++) R_.add(t[e]);
        }
        var Wo = !(
                typeof window > "u" ||
                typeof window.document > "u" ||
                typeof window.document.createElement > "u"
            ),
            r0 = Object.prototype.hasOwnProperty,
            Nz =
                /^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,
            O_ = {},
            D_ = {};
        function Fz(e) {
            return r0.call(D_, e)
                ? !0
                : r0.call(O_, e)
                    ? !1
                    : Nz.test(e)
                        ? (D_[e] = !0)
                        : ((O_[e] = !0), !1);
        }
        function Bz(e, t, n, r) {
            if (n !== null && n.type === 0) return !1;
            switch (typeof t) {
                case "function":
                case "symbol":
                    return !0;
                case "boolean":
                    return r
                        ? !1
                        : n !== null
                            ? !n.acceptsBooleans
                            : ((e = e.toLowerCase().slice(0, 5)),
                            e !== "data-" && e !== "aria-");
                default:
                    return !1;
            }
        }
        function Uz(e, t, n, r) {
            if (t === null || typeof t > "u" || Bz(e, t, n, r)) return !0;
            if (r) return !1;
            if (n !== null)
                switch (n.type) {
                    case 3:
                        return !t;
                    case 4:
                        return t === !1;
                    case 5:
                        return isNaN(t);
                    case 6:
                        return isNaN(t) || 1 > t;
                }
            return !1;
        }
        function En(e, t, n, r, o, i, a) {
            (this.acceptsBooleans = t === 2 || t === 3 || t === 4),
                (this.attributeName = r),
                (this.attributeNamespace = o),
                (this.mustUseProperty = n),
                (this.propertyName = e),
                (this.type = t),
                (this.sanitizeURL = i),
                (this.removeEmptyString = a);
        }
        var Bt = {};
        "children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style"
            .split(" ")
            .forEach(function (e) {
                Bt[e] = new En(e, 0, !1, e, null, !1, !1);
            }),
            [
                ["acceptCharset", "accept-charset"],
                ["className", "class"],
                ["htmlFor", "for"],
                ["httpEquiv", "http-equiv"],
            ].forEach(function (e) {
                var t = e[0];
                Bt[t] = new En(t, 1, !1, e[1], null, !1, !1);
            }),
            ["contentEditable", "draggable", "spellCheck", "value"].forEach(
                function (e) {
                    Bt[e] = new En(e, 2, !1, e.toLowerCase(), null, !1, !1);
                }
            ),
            [
                "autoReverse",
                "externalResourcesRequired",
                "focusable",
                "preserveAlpha",
            ].forEach(function (e) {
                Bt[e] = new En(e, 2, !1, e, null, !1, !1);
            }),
            "allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope"
                .split(" ")
                .forEach(function (e) {
                    Bt[e] = new En(e, 3, !1, e.toLowerCase(), null, !1, !1);
                }),
            ["checked", "multiple", "muted", "selected"].forEach(function (e) {
                Bt[e] = new En(e, 3, !0, e, null, !1, !1);
            }),
            ["capture", "download"].forEach(function (e) {
                Bt[e] = new En(e, 4, !1, e, null, !1, !1);
            }),
            ["cols", "rows", "size", "span"].forEach(function (e) {
                Bt[e] = new En(e, 6, !1, e, null, !1, !1);
            }),
            ["rowSpan", "start"].forEach(function (e) {
                Bt[e] = new En(e, 5, !1, e.toLowerCase(), null, !1, !1);
            });
        var o0 = /[\-:]([a-z])/g;
        function i0(e) {
            return e[1].toUpperCase();
        }
        "accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height"
            .split(" ")
            .forEach(function (e) {
                var t = e.replace(o0, i0);
                Bt[t] = new En(t, 1, !1, e, null, !1, !1);
            }),
            "xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type"
                .split(" ")
                .forEach(function (e) {
                    var t = e.replace(o0, i0);
                    Bt[t] = new En(
                        t,
                        1,
                        !1,
                        e,
                        "http://www.w3.org/1999/xlink",
                        !1,
                        !1
                    );
                }),
            ["xml:base", "xml:lang", "xml:space"].forEach(function (e) {
                var t = e.replace(o0, i0);
                Bt[t] = new En(
                    t,
                    1,
                    !1,
                    e,
                    "http://www.w3.org/XML/1998/namespace",
                    !1,
                    !1
                );
            }),
            ["tabIndex", "crossOrigin"].forEach(function (e) {
                Bt[e] = new En(e, 1, !1, e.toLowerCase(), null, !1, !1);
            }),
            (Bt.xlinkHref = new En(
                "xlinkHref",
                1,
                !1,
                "xlink:href",
                "http://www.w3.org/1999/xlink",
                !0,
                !1
            )),
            ["src", "href", "action", "formAction"].forEach(function (e) {
                Bt[e] = new En(e, 1, !1, e.toLowerCase(), null, !0, !0);
            });
        function a0(e, t, n, r) {
            var o = Bt.hasOwnProperty(t) ? Bt[t] : null;
            (o !== null
                ? o.type !== 0
                : r ||
                !(2 < t.length) ||
                (t[0] !== "o" && t[0] !== "O") ||
                (t[1] !== "n" && t[1] !== "N")) &&
            (Uz(t, n, o, r) && (n = null),
                r || o === null
                    ? Fz(t) &&
                    (n === null
                        ? e.removeAttribute(t)
                        : e.setAttribute(t, "" + n))
                    : o.mustUseProperty
                        ? (e[o.propertyName] =
                            n === null ? (o.type === 3 ? !1 : "") : n)
                        : ((t = o.attributeName),
                            (r = o.attributeNamespace),
                            n === null
                                ? e.removeAttribute(t)
                                : ((o = o.type),
                                    (n = o === 3 || (o === 4 && n === !0) ? "" : "" + n),
                                    r ? e.setAttributeNS(r, t, n) : e.setAttribute(t, n))));
        }
        var Yo = z_.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,
            Kh = Symbol.for("react.element"),
            Ys = Symbol.for("react.portal"),
            Gs = Symbol.for("react.fragment"),
            s0 = Symbol.for("react.strict_mode"),
            l0 = Symbol.for("react.profiler"),
            L_ = Symbol.for("react.provider"),
            j_ = Symbol.for("react.context"),
            c0 = Symbol.for("react.forward_ref"),
            d0 = Symbol.for("react.suspense"),
            u0 = Symbol.for("react.suspense_list"),
            h0 = Symbol.for("react.memo"),
            Ri = Symbol.for("react.lazy"),
            N_ = Symbol.for("react.offscreen"),
            F_ = Symbol.iterator;
        function ed(e) {
            return e === null || typeof e != "object"
                ? null
                : ((e = (F_ && e[F_]) || e["@@iterator"]),
                    typeof e == "function" ? e : null);
        }
        var ct = Object.assign,
            p0;
        function td(e) {
            if (p0 === void 0)
                try {
                    throw Error();
                } catch (n) {
                    var t = n.stack.trim().match(/\n( *(at )?)/);
                    p0 = (t && t[1]) || "";
                }
            return (
                `
` +
                p0 +
                e
            );
        }
        var f0 = !1;
        function m0(e, t) {
            if (!e || f0) return "";
            f0 = !0;
            var n = Error.prepareStackTrace;
            Error.prepareStackTrace = void 0;
            try {
                if (t)
                    if (
                        ((t = function () {
                            throw Error();
                        }),
                            Object.defineProperty(t.prototype, "props", {
                                set: function () {
                                    throw Error();
                                },
                            }),
                        typeof Reflect == "object" && Reflect.construct)
                    ) {
                        try {
                            Reflect.construct(t, []);
                        } catch (c) {
                            var r = c;
                        }
                        Reflect.construct(e, [], t);
                    } else {
                        try {
                            t.call();
                        } catch (c) {
                            r = c;
                        }
                        e.call(t.prototype);
                    }
                else {
                    try {
                        throw Error();
                    } catch (c) {
                        r = c;
                    }
                    e();
                }
            } catch (c) {
                if (c && r && typeof c.stack == "string") {
                    for (
                        var o = c.stack.split(`
`),
                            i = r.stack.split(`
`),
                            a = o.length - 1,
                            s = i.length - 1;
                        1 <= a && 0 <= s && o[a] !== i[s];

                    )
                        s--;
                    for (; 1 <= a && 0 <= s; a--, s--)
                        if (o[a] !== i[s]) {
                            if (a !== 1 || s !== 1)
                                do
                                    if ((a--, s--, 0 > s || o[a] !== i[s])) {
                                        var l =
                                            `
` + o[a].replace(" at new ", " at ");
                                        return (
                                            e.displayName &&
                                            l.includes("<anonymous>") &&
                                            (l = l.replace(
                                                "<anonymous>",
                                                e.displayName
                                            )),
                                                l
                                        );
                                    }
                                while (1 <= a && 0 <= s);
                            break;
                        }
                }
            } finally {
                (f0 = !1), (Error.prepareStackTrace = n);
            }
            return (e = e ? e.displayName || e.name : "") ? td(e) : "";
        }
        function Hz(e) {
            switch (e.tag) {
                case 5:
                    return td(e.type);
                case 16:
                    return td("Lazy");
                case 13:
                    return td("Suspense");
                case 19:
                    return td("SuspenseList");
                case 0:
                case 2:
                case 15:
                    return (e = m0(e.type, !1)), e;
                case 11:
                    return (e = m0(e.type.render, !1)), e;
                case 1:
                    return (e = m0(e.type, !0)), e;
                default:
                    return "";
            }
        }
        function g0(e) {
            if (e == null) return null;
            if (typeof e == "function") return e.displayName || e.name || null;
            if (typeof e == "string") return e;
            switch (e) {
                case Gs:
                    return "Fragment";
                case Ys:
                    return "Portal";
                case l0:
                    return "Profiler";
                case s0:
                    return "StrictMode";
                case d0:
                    return "Suspense";
                case u0:
                    return "SuspenseList";
            }
            if (typeof e == "object")
                switch (e.$$typeof) {
                    case j_:
                        return (e.displayName || "Context") + ".Consumer";
                    case L_:
                        return (e._context.displayName || "Context") + ".Provider";
                    case c0:
                        var t = e.render;
                        return (
                            (e = e.displayName),
                            e ||
                            ((e = t.displayName || t.name || ""),
                                (e =
                                    e !== ""
                                        ? "ForwardRef(" + e + ")"
                                        : "ForwardRef")),
                                e
                        );
                    case h0:
                        return (
                            (t = e.displayName || null),
                                t !== null ? t : g0(e.type) || "Memo"
                        );
                    case Ri:
                        (t = e._payload), (e = e._init);
                        try {
                            return g0(e(t));
                        } catch {}
                }
            return null;
        }
        function Vz(e) {
            var t = e.type;
            switch (e.tag) {
                case 24:
                    return "Cache";
                case 9:
                    return (t.displayName || "Context") + ".Consumer";
                case 10:
                    return (t._context.displayName || "Context") + ".Provider";
                case 18:
                    return "DehydratedFragment";
                case 11:
                    return (
                        (e = t.render),
                            (e = e.displayName || e.name || ""),
                        t.displayName ||
                        (e !== "" ? "ForwardRef(" + e + ")" : "ForwardRef")
                    );
                case 7:
                    return "Fragment";
                case 5:
                    return t;
                case 4:
                    return "Portal";
                case 3:
                    return "Root";
                case 6:
                    return "Text";
                case 16:
                    return g0(t);
                case 8:
                    return t === s0 ? "StrictMode" : "Mode";
                case 22:
                    return "Offscreen";
                case 12:
                    return "Profiler";
                case 21:
                    return "Scope";
                case 13:
                    return "Suspense";
                case 19:
                    return "SuspenseList";
                case 25:
                    return "TracingMarker";
                case 1:
                case 0:
                case 17:
                case 2:
                case 14:
                case 15:
                    if (typeof t == "function")
                        return t.displayName || t.name || null;
                    if (typeof t == "string") return t;
            }
            return null;
        }
        function Oi(e) {
            switch (typeof e) {
                case "boolean":
                case "number":
                case "string":
                case "undefined":
                    return e;
                case "object":
                    return e;
                default:
                    return "";
            }
        }
        function B_(e) {
            var t = e.type;
            return (
                (e = e.nodeName) &&
                e.toLowerCase() === "input" &&
                (t === "checkbox" || t === "radio")
            );
        }
        function Kz(e) {
            var t = B_(e) ? "checked" : "value",
                n = Object.getOwnPropertyDescriptor(e.constructor.prototype, t),
                r = "" + e[t];
            if (
                !e.hasOwnProperty(t) &&
                typeof n < "u" &&
                typeof n.get == "function" &&
                typeof n.set == "function"
            ) {
                var o = n.get,
                    i = n.set;
                return (
                    Object.defineProperty(e, t, {
                        configurable: !0,
                        get: function () {
                            return o.call(this);
                        },
                        set: function (a) {
                            (r = "" + a), i.call(this, a);
                        },
                    }),
                        Object.defineProperty(e, t, {enumerable: n.enumerable}),
                        {
                            getValue: function () {
                                return r;
                            },
                            setValue: function (a) {
                                r = "" + a;
                            },
                            stopTracking: function () {
                                (e._valueTracker = null), delete e[t];
                            },
                        }
                );
            }
        }
        function Wh(e) {
            e._valueTracker || (e._valueTracker = Kz(e));
        }
        function U_(e) {
            if (!e) return !1;
            var t = e._valueTracker;
            if (!t) return !0;
            var n = t.getValue(),
                r = "";
            return (
                e && (r = B_(e) ? (e.checked ? "true" : "false") : e.value),
                    (e = r),
                    e !== n ? (t.setValue(e), !0) : !1
            );
        }
        function Yh(e) {
            if (
                ((e = e || (typeof document < "u" ? document : void 0)),
                typeof e > "u")
            )
                return null;
            try {
                return e.activeElement || e.body;
            } catch {
                return e.body;
            }
        }
        function v0(e, t) {
            var n = t.checked;
            return ct({}, t, {
                defaultChecked: void 0,
                defaultValue: void 0,
                value: void 0,
                checked: n ?? e._wrapperState.initialChecked,
            });
        }
        function H_(e, t) {
            var n = t.defaultValue == null ? "" : t.defaultValue,
                r = t.checked != null ? t.checked : t.defaultChecked;
            (n = Oi(t.value != null ? t.value : n)),
                (e._wrapperState = {
                    initialChecked: r,
                    initialValue: n,
                    controlled:
                        t.type === "checkbox" || t.type === "radio"
                            ? t.checked != null
                            : t.value != null,
                });
        }
        function V_(e, t) {
            (t = t.checked), t != null && a0(e, "checked", t, !1);
        }
        function b0(e, t) {
            V_(e, t);
            var n = Oi(t.value),
                r = t.type;
            if (n != null)
                r === "number"
                    ? ((n === 0 && e.value === "") || e.value != n) &&
                    (e.value = "" + n)
                    : e.value !== "" + n && (e.value = "" + n);
            else if (r === "submit" || r === "reset") {
                e.removeAttribute("value");
                return;
            }
            t.hasOwnProperty("value")
                ? y0(e, t.type, n)
                : t.hasOwnProperty("defaultValue") &&
                y0(e, t.type, Oi(t.defaultValue)),
            t.checked == null &&
            t.defaultChecked != null &&
            (e.defaultChecked = !!t.defaultChecked);
        }
        function K_(e, t, n) {
            if (t.hasOwnProperty("value") || t.hasOwnProperty("defaultValue")) {
                var r = t.type;
                if (
                    !(
                        (r !== "submit" && r !== "reset") ||
                        (t.value !== void 0 && t.value !== null)
                    )
                )
                    return;
                (t = "" + e._wrapperState.initialValue),
                n || t === e.value || (e.value = t),
                    (e.defaultValue = t);
            }
            (n = e.name),
            n !== "" && (e.name = ""),
                (e.defaultChecked = !!e._wrapperState.initialChecked),
            n !== "" && (e.name = n);
        }
        function y0(e, t, n) {
            (t !== "number" || Yh(e.ownerDocument) !== e) &&
            (n == null
                ? (e.defaultValue = "" + e._wrapperState.initialValue)
                : e.defaultValue !== "" + n && (e.defaultValue = "" + n));
        }
        var nd = Array.isArray;
        function Xs(e, t, n, r) {
            if (((e = e.options), t)) {
                t = {};
                for (var o = 0; o < n.length; o++) t["$" + n[o]] = !0;
                for (n = 0; n < e.length; n++)
                    (o = t.hasOwnProperty("$" + e[n].value)),
                    e[n].selected !== o && (e[n].selected = o),
                    o && r && (e[n].defaultSelected = !0);
            } else {
                for (n = "" + Oi(n), t = null, o = 0; o < e.length; o++) {
                    if (e[o].value === n) {
                        (e[o].selected = !0), r && (e[o].defaultSelected = !0);
                        return;
                    }
                    t !== null || e[o].disabled || (t = e[o]);
                }
                t !== null && (t.selected = !0);
            }
        }
        function w0(e, t) {
            if (t.dangerouslySetInnerHTML != null) throw Error(Z(91));
            return ct({}, t, {
                value: void 0,
                defaultValue: void 0,
                children: "" + e._wrapperState.initialValue,
            });
        }
        function W_(e, t) {
            var n = t.value;
            if (n == null) {
                if (((n = t.children), (t = t.defaultValue), n != null)) {
                    if (t != null) throw Error(Z(92));
                    if (nd(n)) {
                        if (1 < n.length) throw Error(Z(93));
                        n = n[0];
                    }
                    t = n;
                }
                t == null && (t = ""), (n = t);
            }
            e._wrapperState = {initialValue: Oi(n)};
        }
        function Y_(e, t) {
            var n = Oi(t.value),
                r = Oi(t.defaultValue);
            n != null &&
            ((n = "" + n),
            n !== e.value && (e.value = n),
            t.defaultValue == null &&
            e.defaultValue !== n &&
            (e.defaultValue = n)),
            r != null && (e.defaultValue = "" + r);
        }
        function G_(e) {
            var t = e.textContent;
            t === e._wrapperState.initialValue &&
            t !== "" &&
            t !== null &&
            (e.value = t);
        }
        function X_(e) {
            switch (e) {
                case "svg":
                    return "http://www.w3.org/2000/svg";
                case "math":
                    return "http://www.w3.org/1998/Math/MathML";
                default:
                    return "http://www.w3.org/1999/xhtml";
            }
        }
        function x0(e, t) {
            return e == null || e === "http://www.w3.org/1999/xhtml"
                ? X_(t)
                : e === "http://www.w3.org/2000/svg" && t === "foreignObject"
                    ? "http://www.w3.org/1999/xhtml"
                    : e;
        }
        var Gh,
            q_ = (function (e) {
                return typeof MSApp < "u" && MSApp.execUnsafeLocalFunction
                    ? function (t, n, r, o) {
                        MSApp.execUnsafeLocalFunction(function () {
                            return e(t, n, r, o);
                        });
                    }
                    : e;
            })(function (e, t) {
                if (
                    e.namespaceURI !== "http://www.w3.org/2000/svg" ||
                    "innerHTML" in e
                )
                    e.innerHTML = t;
                else {
                    for (
                        Gh = Gh || document.createElement("div"),
                            Gh.innerHTML =
                                "<svg>" + t.valueOf().toString() + "</svg>",
                            t = Gh.firstChild;
                        e.firstChild;

                    )
                        e.removeChild(e.firstChild);
                    for (; t.firstChild; ) e.appendChild(t.firstChild);
                }
            });
        function rd(e, t) {
            if (t) {
                var n = e.firstChild;
                if (n && n === e.lastChild && n.nodeType === 3) {
                    n.nodeValue = t;
                    return;
                }
            }
            e.textContent = t;
        }
        var od = {
                animationIterationCount: !0,
                aspectRatio: !0,
                borderImageOutset: !0,
                borderImageSlice: !0,
                borderImageWidth: !0,
                boxFlex: !0,
                boxFlexGroup: !0,
                boxOrdinalGroup: !0,
                columnCount: !0,
                columns: !0,
                flex: !0,
                flexGrow: !0,
                flexPositive: !0,
                flexShrink: !0,
                flexNegative: !0,
                flexOrder: !0,
                gridArea: !0,
                gridRow: !0,
                gridRowEnd: !0,
                gridRowSpan: !0,
                gridRowStart: !0,
                gridColumn: !0,
                gridColumnEnd: !0,
                gridColumnSpan: !0,
                gridColumnStart: !0,
                fontWeight: !0,
                lineClamp: !0,
                lineHeight: !0,
                opacity: !0,
                order: !0,
                orphans: !0,
                tabSize: !0,
                widows: !0,
                zIndex: !0,
                zoom: !0,
                fillOpacity: !0,
                floodOpacity: !0,
                stopOpacity: !0,
                strokeDasharray: !0,
                strokeDashoffset: !0,
                strokeMiterlimit: !0,
                strokeOpacity: !0,
                strokeWidth: !0,
            },
            Wz = ["Webkit", "ms", "Moz", "O"];
        Object.keys(od).forEach(function (e) {
            Wz.forEach(function (t) {
                (t = t + e.charAt(0).toUpperCase() + e.substring(1)),
                    (od[t] = od[e]);
            });
        });
        function Z_(e, t, n) {
            return t == null || typeof t == "boolean" || t === ""
                ? ""
                : n ||
                typeof t != "number" ||
                t === 0 ||
                (od.hasOwnProperty(e) && od[e])
                    ? ("" + t).trim()
                    : t + "px";
        }
        function Q_(e, t) {
            e = e.style;
            for (var n in t)
                if (t.hasOwnProperty(n)) {
                    var r = n.indexOf("--") === 0,
                        o = Z_(n, t[n], r);
                    n === "float" && (n = "cssFloat"),
                        r ? e.setProperty(n, o) : (e[n] = o);
                }
        }
        var Yz = ct(
            {menuitem: !0},
            {
                area: !0,
                base: !0,
                br: !0,
                col: !0,
                embed: !0,
                hr: !0,
                img: !0,
                input: !0,
                keygen: !0,
                link: !0,
                meta: !0,
                param: !0,
                source: !0,
                track: !0,
                wbr: !0,
            }
        );
        function S0(e, t) {
            if (t) {
                if (
                    Yz[e] &&
                    (t.children != null || t.dangerouslySetInnerHTML != null)
                )
                    throw Error(Z(137, e));
                if (t.dangerouslySetInnerHTML != null) {
                    if (t.children != null) throw Error(Z(60));
                    if (
                        typeof t.dangerouslySetInnerHTML != "object" ||
                        !("__html" in t.dangerouslySetInnerHTML)
                    )
                        throw Error(Z(61));
                }
                if (t.style != null && typeof t.style != "object")
                    throw Error(Z(62));
            }
        }
        function _0(e, t) {
            if (e.indexOf("-") === -1) return typeof t.is == "string";
            switch (e) {
                case "annotation-xml":
                case "color-profile":
                case "font-face":
                case "font-face-src":
                case "font-face-uri":
                case "font-face-format":
                case "font-face-name":
                case "missing-glyph":
                    return !1;
                default:
                    return !0;
            }
        }
        var k0 = null;
        function C0(e) {
            return (
                (e = e.target || e.srcElement || window),
                e.correspondingUseElement && (e = e.correspondingUseElement),
                    e.nodeType === 3 ? e.parentNode : e
            );
        }
        var E0 = null,
            qs = null,
            Zs = null;
        function J_(e) {
            if ((e = Ed(e))) {
                if (typeof E0 != "function") throw Error(Z(280));
                var t = e.stateNode;
                t && ((t = vp(t)), E0(e.stateNode, e.type, t));
            }
        }
        function ek(e) {
            qs ? (Zs ? Zs.push(e) : (Zs = [e])) : (qs = e);
        }
        function tk() {
            if (qs) {
                var e = qs,
                    t = Zs;
                if (((Zs = qs = null), J_(e), t))
                    for (e = 0; e < t.length; e++) J_(t[e]);
            }
        }
        function nk(e, t) {
            return e(t);
        }
        function rk() {}
        var P0 = !1;
        function ok(e, t, n) {
            if (P0) return e(t, n);
            P0 = !0;
            try {
                return nk(e, t, n);
            } finally {
                (P0 = !1), (qs !== null || Zs !== null) && (rk(), tk());
            }
        }
        function id(e, t) {
            var n = e.stateNode;
            if (n === null) return null;
            var r = vp(n);
            if (r === null) return null;
            n = r[t];
            e: switch (t) {
                case "onClick":
                case "onClickCapture":
                case "onDoubleClick":
                case "onDoubleClickCapture":
                case "onMouseDown":
                case "onMouseDownCapture":
                case "onMouseMove":
                case "onMouseMoveCapture":
                case "onMouseUp":
                case "onMouseUpCapture":
                case "onMouseEnter":
                    (r = !r.disabled) ||
                    ((e = e.type),
                        (r = !(
                            e === "button" ||
                            e === "input" ||
                            e === "select" ||
                            e === "textarea"
                        ))),
                        (e = !r);
                    break e;
                default:
                    e = !1;
            }
            if (e) return null;
            if (n && typeof n != "function") throw Error(Z(231, t, typeof n));
            return n;
        }
        var I0 = !1;
        if (Wo)
            try {
                var ad = {};
                Object.defineProperty(ad, "passive", {
                    get: function () {
                        I0 = !0;
                    },
                }),
                    window.addEventListener("test", ad, ad),
                    window.removeEventListener("test", ad, ad);
            } catch {
                I0 = !1;
            }
        function Gz(e, t, n, r, o, i, a, s, l) {
            var c = Array.prototype.slice.call(arguments, 3);
            try {
                t.apply(n, c);
            } catch (d) {
                this.onError(d);
            }
        }
        var sd = !1,
            Xh = null,
            qh = !1,
            T0 = null,
            Xz = {
                onError: function (e) {
                    (sd = !0), (Xh = e);
                },
            };
        function qz(e, t, n, r, o, i, a, s, l) {
            (sd = !1), (Xh = null), Gz.apply(Xz, arguments);
        }
        function Zz(e, t, n, r, o, i, a, s, l) {
            if ((qz.apply(this, arguments), sd)) {
                if (sd) {
                    var c = Xh;
                    (sd = !1), (Xh = null);
                } else throw Error(Z(198));
                qh || ((qh = !0), (T0 = c));
            }
        }
        function ja(e) {
            var t = e,
                n = e;
            if (e.alternate) for (; t.return; ) t = t.return;
            else {
                e = t;
                do (t = e), t.flags & 4098 && (n = t.return), (e = t.return);
                while (e);
            }
            return t.tag === 3 ? n : null;
        }
        function ik(e) {
            if (e.tag === 13) {
                var t = e.memoizedState;
                if (
                    (t === null &&
                    ((e = e.alternate), e !== null && (t = e.memoizedState)),
                    t !== null)
                )
                    return t.dehydrated;
            }
            return null;
        }
        function ak(e) {
            if (ja(e) !== e) throw Error(Z(188));
        }
        function Qz(e) {
            var t = e.alternate;
            if (!t) {
                if (((t = ja(e)), t === null)) throw Error(Z(188));
                return t !== e ? null : e;
            }
            for (var n = e, r = t; ; ) {
                var o = n.return;
                if (o === null) break;
                var i = o.alternate;
                if (i === null) {
                    if (((r = o.return), r !== null)) {
                        n = r;
                        continue;
                    }
                    break;
                }
                if (o.child === i.child) {
                    for (i = o.child; i; ) {
                        if (i === n) return ak(o), e;
                        if (i === r) return ak(o), t;
                        i = i.sibling;
                    }
                    throw Error(Z(188));
                }
                if (n.return !== r.return) (n = o), (r = i);
                else {
                    for (var a = !1, s = o.child; s; ) {
                        if (s === n) {
                            (a = !0), (n = o), (r = i);
                            break;
                        }
                        if (s === r) {
                            (a = !0), (r = o), (n = i);
                            break;
                        }
                        s = s.sibling;
                    }
                    if (!a) {
                        for (s = i.child; s; ) {
                            if (s === n) {
                                (a = !0), (n = i), (r = o);
                                break;
                            }
                            if (s === r) {
                                (a = !0), (r = i), (n = o);
                                break;
                            }
                            s = s.sibling;
                        }
                        if (!a) throw Error(Z(189));
                    }
                }
                if (n.alternate !== r) throw Error(Z(190));
            }
            if (n.tag !== 3) throw Error(Z(188));
            return n.stateNode.current === n ? e : t;
        }
        function sk(e) {
            return (e = Qz(e)), e !== null ? lk(e) : null;
        }
        function lk(e) {
            if (e.tag === 5 || e.tag === 6) return e;
            for (e = e.child; e !== null; ) {
                var t = lk(e);
                if (t !== null) return t;
                e = e.sibling;
            }
            return null;
        }
        var ck = qn.unstable_scheduleCallback,
            dk = qn.unstable_cancelCallback,
            Jz = qn.unstable_shouldYield,
            eR = qn.unstable_requestPaint,
            St = qn.unstable_now,
            tR = qn.unstable_getCurrentPriorityLevel,
            $0 = qn.unstable_ImmediatePriority,
            uk = qn.unstable_UserBlockingPriority,
            Zh = qn.unstable_NormalPriority,
            nR = qn.unstable_LowPriority,
            hk = qn.unstable_IdlePriority,
            Qh = null,
            ho = null;
        function rR(e) {
            if (ho && typeof ho.onCommitFiberRoot == "function")
                try {
                    ho.onCommitFiberRoot(
                        Qh,
                        e,
                        void 0,
                        (e.current.flags & 128) === 128
                    );
                } catch {}
        }
        var jr = Math.clz32 ? Math.clz32 : aR,
            oR = Math.log,
            iR = Math.LN2;
        function aR(e) {
            return (e >>>= 0), e === 0 ? 32 : (31 - ((oR(e) / iR) | 0)) | 0;
        }
        var Jh = 64,
            ep = 4194304;
        function ld(e) {
            switch (e & -e) {
                case 1:
                    return 1;
                case 2:
                    return 2;
                case 4:
                    return 4;
                case 8:
                    return 8;
                case 16:
                    return 16;
                case 32:
                    return 32;
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                    return e & 4194240;
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    return e & 130023424;
                case 134217728:
                    return 134217728;
                case 268435456:
                    return 268435456;
                case 536870912:
                    return 536870912;
                case 1073741824:
                    return 1073741824;
                default:
                    return e;
            }
        }
        function tp(e, t) {
            var n = e.pendingLanes;
            if (n === 0) return 0;
            var r = 0,
                o = e.suspendedLanes,
                i = e.pingedLanes,
                a = n & 268435455;
            if (a !== 0) {
                var s = a & ~o;
                s !== 0 ? (r = ld(s)) : ((i &= a), i !== 0 && (r = ld(i)));
            } else (a = n & ~o), a !== 0 ? (r = ld(a)) : i !== 0 && (r = ld(i));
            if (r === 0) return 0;
            if (
                t !== 0 &&
                t !== r &&
                !(t & o) &&
                ((o = r & -r),
                    (i = t & -t),
                o >= i || (o === 16 && (i & 4194240) !== 0))
            )
                return t;
            if ((r & 4 && (r |= n & 16), (t = e.entangledLanes), t !== 0))
                for (e = e.entanglements, t &= r; 0 < t; )
                    (n = 31 - jr(t)), (o = 1 << n), (r |= e[n]), (t &= ~o);
            return r;
        }
        function sR(e, t) {
            switch (e) {
                case 1:
                case 2:
                case 4:
                    return t + 250;
                case 8:
                case 16:
                case 32:
                case 64:
                case 128:
                case 256:
                case 512:
                case 1024:
                case 2048:
                case 4096:
                case 8192:
                case 16384:
                case 32768:
                case 65536:
                case 131072:
                case 262144:
                case 524288:
                case 1048576:
                case 2097152:
                    return t + 5e3;
                case 4194304:
                case 8388608:
                case 16777216:
                case 33554432:
                case 67108864:
                    return -1;
                case 134217728:
                case 268435456:
                case 536870912:
                case 1073741824:
                    return -1;
                default:
                    return -1;
            }
        }
        function lR(e, t) {
            for (
                var n = e.suspendedLanes,
                    r = e.pingedLanes,
                    o = e.expirationTimes,
                    i = e.pendingLanes;
                0 < i;

            ) {
                var a = 31 - jr(i),
                    s = 1 << a,
                    l = o[a];
                l === -1
                    ? (!(s & n) || s & r) && (o[a] = sR(s, t))
                    : l <= t && (e.expiredLanes |= s),
                    (i &= ~s);
            }
        }
        function A0(e) {
            return (
                (e = e.pendingLanes & -1073741825),
                    e !== 0 ? e : e & 1073741824 ? 1073741824 : 0
            );
        }
        function pk() {
            var e = Jh;
            return (Jh <<= 1), !(Jh & 4194240) && (Jh = 64), e;
        }
        function M0(e) {
            for (var t = [], n = 0; 31 > n; n++) t.push(e);
            return t;
        }
        function cd(e, t, n) {
            (e.pendingLanes |= t),
            t !== 536870912 && ((e.suspendedLanes = 0), (e.pingedLanes = 0)),
                (e = e.eventTimes),
                (t = 31 - jr(t)),
                (e[t] = n);
        }
        function cR(e, t) {
            var n = e.pendingLanes & ~t;
            (e.pendingLanes = t),
                (e.suspendedLanes = 0),
                (e.pingedLanes = 0),
                (e.expiredLanes &= t),
                (e.mutableReadLanes &= t),
                (e.entangledLanes &= t),
                (t = e.entanglements);
            var r = e.eventTimes;
            for (e = e.expirationTimes; 0 < n; ) {
                var o = 31 - jr(n),
                    i = 1 << o;
                (t[o] = 0), (r[o] = -1), (e[o] = -1), (n &= ~i);
            }
        }
        function z0(e, t) {
            var n = (e.entangledLanes |= t);
            for (e = e.entanglements; n; ) {
                var r = 31 - jr(n),
                    o = 1 << r;
                (o & t) | (e[r] & t) && (e[r] |= t), (n &= ~o);
            }
        }
        var Ne = 0;
        function fk(e) {
            return (
                (e &= -e),
                    1 < e ? (4 < e ? (e & 268435455 ? 16 : 536870912) : 4) : 1
            );
        }
        var mk,
            R0,
            gk,
            vk,
            bk,
            O0 = !1,
            np = [],
            Di = null,
            Li = null,
            ji = null,
            dd = new Map(),
            ud = new Map(),
            Ni = [],
            dR =
                "mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(
                    " "
                );
        function yk(e, t) {
            switch (e) {
                case "focusin":
                case "focusout":
                    Di = null;
                    break;
                case "dragenter":
                case "dragleave":
                    Li = null;
                    break;
                case "mouseover":
                case "mouseout":
                    ji = null;
                    break;
                case "pointerover":
                case "pointerout":
                    dd.delete(t.pointerId);
                    break;
                case "gotpointercapture":
                case "lostpointercapture":
                    ud.delete(t.pointerId);
            }
        }
        function hd(e, t, n, r, o, i) {
            return e === null || e.nativeEvent !== i
                ? ((e = {
                    blockedOn: t,
                    domEventName: n,
                    eventSystemFlags: r,
                    nativeEvent: i,
                    targetContainers: [o],
                }),
                t !== null && ((t = Ed(t)), t !== null && R0(t)),
                    e)
                : ((e.eventSystemFlags |= r),
                    (t = e.targetContainers),
                o !== null && t.indexOf(o) === -1 && t.push(o),
                    e);
        }
        function uR(e, t, n, r, o) {
            switch (t) {
                case "focusin":
                    return (Di = hd(Di, e, t, n, r, o)), !0;
                case "dragenter":
                    return (Li = hd(Li, e, t, n, r, o)), !0;
                case "mouseover":
                    return (ji = hd(ji, e, t, n, r, o)), !0;
                case "pointerover":
                    var i = o.pointerId;
                    return dd.set(i, hd(dd.get(i) || null, e, t, n, r, o)), !0;
                case "gotpointercapture":
                    return (
                        (i = o.pointerId),
                            ud.set(i, hd(ud.get(i) || null, e, t, n, r, o)),
                            !0
                    );
            }
            return !1;
        }
        function wk(e) {
            var t = Na(e.target);
            if (t !== null) {
                var n = ja(t);
                if (n !== null) {
                    if (((t = n.tag), t === 13)) {
                        if (((t = ik(n)), t !== null)) {
                            (e.blockedOn = t),
                                bk(e.priority, function () {
                                    gk(n);
                                });
                            return;
                        }
                    } else if (
                        t === 3 &&
                        n.stateNode.current.memoizedState.isDehydrated
                    ) {
                        e.blockedOn =
                            n.tag === 3 ? n.stateNode.containerInfo : null;
                        return;
                    }
                }
            }
            e.blockedOn = null;
        }
        function rp(e) {
            if (e.blockedOn !== null) return !1;
            for (var t = e.targetContainers; 0 < t.length; ) {
                var n = L0(e.domEventName, e.eventSystemFlags, t[0], e.nativeEvent);
                if (n === null) {
                    n = e.nativeEvent;
                    var r = new n.constructor(n.type, n);
                    (k0 = r), n.target.dispatchEvent(r), (k0 = null);
                } else
                    return (t = Ed(n)), t !== null && R0(t), (e.blockedOn = n), !1;
                t.shift();
            }
            return !0;
        }
        function xk(e, t, n) {
            rp(e) && n.delete(t);
        }
        function hR() {
            (O0 = !1),
            Di !== null && rp(Di) && (Di = null),
            Li !== null && rp(Li) && (Li = null),
            ji !== null && rp(ji) && (ji = null),
                dd.forEach(xk),
                ud.forEach(xk);
        }
        function pd(e, t) {
            e.blockedOn === t &&
            ((e.blockedOn = null),
            O0 ||
            ((O0 = !0),
                qn.unstable_scheduleCallback(qn.unstable_NormalPriority, hR)));
        }
        function fd(e) {
            function t(o) {
                return pd(o, e);
            }
            if (0 < np.length) {
                pd(np[0], e);
                for (var n = 1; n < np.length; n++) {
                    var r = np[n];
                    r.blockedOn === e && (r.blockedOn = null);
                }
            }
            for (
                Di !== null && pd(Di, e),
                Li !== null && pd(Li, e),
                ji !== null && pd(ji, e),
                    dd.forEach(t),
                    ud.forEach(t),
                    n = 0;
                n < Ni.length;
                n++
            )
                (r = Ni[n]), r.blockedOn === e && (r.blockedOn = null);
            for (; 0 < Ni.length && ((n = Ni[0]), n.blockedOn === null); )
                wk(n), n.blockedOn === null && Ni.shift();
        }
        var Qs = Yo.ReactCurrentBatchConfig,
            op = !0;
        function pR(e, t, n, r) {
            var o = Ne,
                i = Qs.transition;
            Qs.transition = null;
            try {
                (Ne = 1), D0(e, t, n, r);
            } finally {
                (Ne = o), (Qs.transition = i);
            }
        }
        function fR(e, t, n, r) {
            var o = Ne,
                i = Qs.transition;
            Qs.transition = null;
            try {
                (Ne = 4), D0(e, t, n, r);
            } finally {
                (Ne = o), (Qs.transition = i);
            }
        }
        function D0(e, t, n, r) {
            if (op) {
                var o = L0(e, t, n, r);
                if (o === null) eb(e, t, r, ip, n), yk(e, r);
                else if (uR(o, e, t, n, r)) r.stopPropagation();
                else if ((yk(e, r), t & 4 && -1 < dR.indexOf(e))) {
                    for (; o !== null; ) {
                        var i = Ed(o);
                        if (
                            (i !== null && mk(i),
                                (i = L0(e, t, n, r)),
                            i === null && eb(e, t, r, ip, n),
                            i === o)
                        )
                            break;
                        o = i;
                    }
                    o !== null && r.stopPropagation();
                } else eb(e, t, r, null, n);
            }
        }
        var ip = null;
        function L0(e, t, n, r) {
            if (((ip = null), (e = C0(r)), (e = Na(e)), e !== null))
                if (((t = ja(e)), t === null)) e = null;
                else if (((n = t.tag), n === 13)) {
                    if (((e = ik(t)), e !== null)) return e;
                    e = null;
                } else if (n === 3) {
                    if (t.stateNode.current.memoizedState.isDehydrated)
                        return t.tag === 3 ? t.stateNode.containerInfo : null;
                    e = null;
                } else t !== e && (e = null);
            return (ip = e), null;
        }
        function Sk(e) {
            switch (e) {
                case "cancel":
                case "click":
                case "close":
                case "contextmenu":
                case "copy":
                case "cut":
                case "auxclick":
                case "dblclick":
                case "dragend":
                case "dragstart":
                case "drop":
                case "focusin":
                case "focusout":
                case "input":
                case "invalid":
                case "keydown":
                case "keypress":
                case "keyup":
                case "mousedown":
                case "mouseup":
                case "paste":
                case "pause":
                case "play":
                case "pointercancel":
                case "pointerdown":
                case "pointerup":
                case "ratechange":
                case "reset":
                case "resize":
                case "seeked":
                case "submit":
                case "touchcancel":
                case "touchend":
                case "touchstart":
                case "volumechange":
                case "change":
                case "selectionchange":
                case "textInput":
                case "compositionstart":
                case "compositionend":
                case "compositionupdate":
                case "beforeblur":
                case "afterblur":
                case "beforeinput":
                case "blur":
                case "fullscreenchange":
                case "focus":
                case "hashchange":
                case "popstate":
                case "select":
                case "selectstart":
                    return 1;
                case "drag":
                case "dragenter":
                case "dragexit":
                case "dragleave":
                case "dragover":
                case "mousemove":
                case "mouseout":
                case "mouseover":
                case "pointermove":
                case "pointerout":
                case "pointerover":
                case "scroll":
                case "toggle":
                case "touchmove":
                case "wheel":
                case "mouseenter":
                case "mouseleave":
                case "pointerenter":
                case "pointerleave":
                    return 4;
                case "message":
                    switch (tR()) {
                        case $0:
                            return 1;
                        case uk:
                            return 4;
                        case Zh:
                        case nR:
                            return 16;
                        case hk:
                            return 536870912;
                        default:
                            return 16;
                    }
                default:
                    return 16;
            }
        }
        var Fi = null,
            j0 = null,
            ap = null;
        function _k() {
            if (ap) return ap;
            var e,
                t = j0,
                n = t.length,
                r,
                o = "value" in Fi ? Fi.value : Fi.textContent,
                i = o.length;
            for (e = 0; e < n && t[e] === o[e]; e++);
            var a = n - e;
            for (r = 1; r <= a && t[n - r] === o[i - r]; r++);
            return (ap = o.slice(e, 1 < r ? 1 - r : void 0));
        }
        function sp(e) {
            var t = e.keyCode;
            return (
                "charCode" in e
                    ? ((e = e.charCode), e === 0 && t === 13 && (e = 13))
                    : (e = t),
                e === 10 && (e = 13),
                    32 <= e || e === 13 ? e : 0
            );
        }
        function lp() {
            return !0;
        }
        function kk() {
            return !1;
        }
        function Zn(e) {
            function t(n, r, o, i, a) {
                (this._reactName = n),
                    (this._targetInst = o),
                    (this.type = r),
                    (this.nativeEvent = i),
                    (this.target = a),
                    (this.currentTarget = null);
                for (var s in e)
                    e.hasOwnProperty(s) &&
                    ((n = e[s]), (this[s] = n ? n(i) : i[s]));
                return (
                    (this.isDefaultPrevented = (
                        i.defaultPrevented != null
                            ? i.defaultPrevented
                            : i.returnValue === !1
                    )
                        ? lp
                        : kk),
                        (this.isPropagationStopped = kk),
                        this
                );
            }
            return (
                ct(t.prototype, {
                    preventDefault: function () {
                        this.defaultPrevented = !0;
                        var n = this.nativeEvent;
                        n &&
                        (n.preventDefault
                            ? n.preventDefault()
                            : typeof n.returnValue != "unknown" &&
                            (n.returnValue = !1),
                            (this.isDefaultPrevented = lp));
                    },
                    stopPropagation: function () {
                        var n = this.nativeEvent;
                        n &&
                        (n.stopPropagation
                            ? n.stopPropagation()
                            : typeof n.cancelBubble != "unknown" &&
                            (n.cancelBubble = !0),
                            (this.isPropagationStopped = lp));
                    },
                    persist: function () {},
                    isPersistent: lp,
                }),
                    t
            );
        }
        var Js = {
                eventPhase: 0,
                bubbles: 0,
                cancelable: 0,
                timeStamp: function (e) {
                    return e.timeStamp || Date.now();
                },
                defaultPrevented: 0,
                isTrusted: 0,
            },
            N0 = Zn(Js),
            md = ct({}, Js, {view: 0, detail: 0}),
            mR = Zn(md),
            F0,
            B0,
            gd,
            cp = ct({}, md, {
                screenX: 0,
                screenY: 0,
                clientX: 0,
                clientY: 0,
                pageX: 0,
                pageY: 0,
                ctrlKey: 0,
                shiftKey: 0,
                altKey: 0,
                metaKey: 0,
                getModifierState: H0,
                button: 0,
                buttons: 0,
                relatedTarget: function (e) {
                    return e.relatedTarget === void 0
                        ? e.fromElement === e.srcElement
                            ? e.toElement
                            : e.fromElement
                        : e.relatedTarget;
                },
                movementX: function (e) {
                    return "movementX" in e
                        ? e.movementX
                        : (e !== gd &&
                        (gd && e.type === "mousemove"
                            ? ((F0 = e.screenX - gd.screenX),
                                (B0 = e.screenY - gd.screenY))
                            : (B0 = F0 = 0),
                            (gd = e)),
                            F0);
                },
                movementY: function (e) {
                    return "movementY" in e ? e.movementY : B0;
                },
            }),
            Ck = Zn(cp),
            gR = ct({}, cp, {dataTransfer: 0}),
            vR = Zn(gR),
            bR = ct({}, md, {relatedTarget: 0}),
            U0 = Zn(bR),
            yR = ct({}, Js, {animationName: 0, elapsedTime: 0, pseudoElement: 0}),
            wR = Zn(yR),
            xR = ct({}, Js, {
                clipboardData: function (e) {
                    return "clipboardData" in e
                        ? e.clipboardData
                        : window.clipboardData;
                },
            }),
            SR = Zn(xR),
            _R = ct({}, Js, {data: 0}),
            Ek = Zn(_R),
            kR = {
                Esc: "Escape",
                Spacebar: " ",
                Left: "ArrowLeft",
                Up: "ArrowUp",
                Right: "ArrowRight",
                Down: "ArrowDown",
                Del: "Delete",
                Win: "OS",
                Menu: "ContextMenu",
                Apps: "ContextMenu",
                Scroll: "ScrollLock",
                MozPrintableKey: "Unidentified",
            },
            CR = {
                8: "Backspace",
                9: "Tab",
                12: "Clear",
                13: "Enter",
                16: "Shift",
                17: "Control",
                18: "Alt",
                19: "Pause",
                20: "CapsLock",
                27: "Escape",
                32: " ",
                33: "PageUp",
                34: "PageDown",
                35: "End",
                36: "Home",
                37: "ArrowLeft",
                38: "ArrowUp",
                39: "ArrowRight",
                40: "ArrowDown",
                45: "Insert",
                46: "Delete",
                112: "F1",
                113: "F2",
                114: "F3",
                115: "F4",
                116: "F5",
                117: "F6",
                118: "F7",
                119: "F8",
                120: "F9",
                121: "F10",
                122: "F11",
                123: "F12",
                144: "NumLock",
                145: "ScrollLock",
                224: "Meta",
            },
            ER = {
                Alt: "altKey",
                Control: "ctrlKey",
                Meta: "metaKey",
                Shift: "shiftKey",
            };
        function PR(e) {
            var t = this.nativeEvent;
            return t.getModifierState
                ? t.getModifierState(e)
                : (e = ER[e])
                    ? !!t[e]
                    : !1;
        }
        function H0() {
            return PR;
        }
        var IR = ct({}, md, {
                key: function (e) {
                    if (e.key) {
                        var t = kR[e.key] || e.key;
                        if (t !== "Unidentified") return t;
                    }
                    return e.type === "keypress"
                        ? ((e = sp(e)), e === 13 ? "Enter" : String.fromCharCode(e))
                        : e.type === "keydown" || e.type === "keyup"
                            ? CR[e.keyCode] || "Unidentified"
                            : "";
                },
                code: 0,
                location: 0,
                ctrlKey: 0,
                shiftKey: 0,
                altKey: 0,
                metaKey: 0,
                repeat: 0,
                locale: 0,
                getModifierState: H0,
                charCode: function (e) {
                    return e.type === "keypress" ? sp(e) : 0;
                },
                keyCode: function (e) {
                    return e.type === "keydown" || e.type === "keyup"
                        ? e.keyCode
                        : 0;
                },
                which: function (e) {
                    return e.type === "keypress"
                        ? sp(e)
                        : e.type === "keydown" || e.type === "keyup"
                            ? e.keyCode
                            : 0;
                },
            }),
            TR = Zn(IR),
            $R = ct({}, cp, {
                pointerId: 0,
                width: 0,
                height: 0,
                pressure: 0,
                tangentialPressure: 0,
                tiltX: 0,
                tiltY: 0,
                twist: 0,
                pointerType: 0,
                isPrimary: 0,
            }),
            Pk = Zn($R),
            AR = ct({}, md, {
                touches: 0,
                targetTouches: 0,
                changedTouches: 0,
                altKey: 0,
                metaKey: 0,
                ctrlKey: 0,
                shiftKey: 0,
                getModifierState: H0,
            }),
            MR = Zn(AR),
            zR = ct({}, Js, {propertyName: 0, elapsedTime: 0, pseudoElement: 0}),
            RR = Zn(zR),
            OR = ct({}, cp, {
                deltaX: function (e) {
                    return "deltaX" in e
                        ? e.deltaX
                        : "wheelDeltaX" in e
                            ? -e.wheelDeltaX
                            : 0;
                },
                deltaY: function (e) {
                    return "deltaY" in e
                        ? e.deltaY
                        : "wheelDeltaY" in e
                            ? -e.wheelDeltaY
                            : "wheelDelta" in e
                                ? -e.wheelDelta
                                : 0;
                },
                deltaZ: 0,
                deltaMode: 0,
            }),
            DR = Zn(OR),
            LR = [9, 13, 27, 32],
            V0 = Wo && "CompositionEvent" in window,
            vd = null;
        Wo && "documentMode" in document && (vd = document.documentMode);
        var jR = Wo && "TextEvent" in window && !vd,
            Ik = Wo && (!V0 || (vd && 8 < vd && 11 >= vd)),
            Tk = " ",
            $k = !1;
        function Ak(e, t) {
            switch (e) {
                case "keyup":
                    return LR.indexOf(t.keyCode) !== -1;
                case "keydown":
                    return t.keyCode !== 229;
                case "keypress":
                case "mousedown":
                case "focusout":
                    return !0;
                default:
                    return !1;
            }
        }
        function Mk(e) {
            return (
                (e = e.detail), typeof e == "object" && "data" in e ? e.data : null
            );
        }
        var el = !1;
        function NR(e, t) {
            switch (e) {
                case "compositionend":
                    return Mk(t);
                case "keypress":
                    return t.which !== 32 ? null : (($k = !0), Tk);
                case "textInput":
                    return (e = t.data), e === Tk && $k ? null : e;
                default:
                    return null;
            }
        }
        function FR(e, t) {
            if (el)
                return e === "compositionend" || (!V0 && Ak(e, t))
                    ? ((e = _k()), (ap = j0 = Fi = null), (el = !1), e)
                    : null;
            switch (e) {
                case "paste":
                    return null;
                case "keypress":
                    if (
                        !(t.ctrlKey || t.altKey || t.metaKey) ||
                        (t.ctrlKey && t.altKey)
                    ) {
                        if (t.char && 1 < t.char.length) return t.char;
                        if (t.which) return String.fromCharCode(t.which);
                    }
                    return null;
                case "compositionend":
                    return Ik && t.locale !== "ko" ? null : t.data;
                default:
                    return null;
            }
        }
        var BR = {
            color: !0,
            date: !0,
            datetime: !0,
            "datetime-local": !0,
            email: !0,
            month: !0,
            number: !0,
            password: !0,
            range: !0,
            search: !0,
            tel: !0,
            text: !0,
            time: !0,
            url: !0,
            week: !0,
        };
        function zk(e) {
            var t = e && e.nodeName && e.nodeName.toLowerCase();
            return t === "input" ? !!BR[e.type] : t === "textarea";
        }
        function Rk(e, t, n, r) {
            ek(r),
                (t = fp(t, "onChange")),
            0 < t.length &&
            ((n = new N0("onChange", "change", null, n, r)),
                e.push({event: n, listeners: t}));
        }
        var bd = null,
            yd = null;
        function UR(e) {
            Qk(e, 0);
        }
        function dp(e) {
            var t = il(e);
            if (U_(t)) return e;
        }
        function HR(e, t) {
            if (e === "change") return t;
        }
        var Ok = !1;
        if (Wo) {
            var K0;
            if (Wo) {
                var W0 = "oninput" in document;
                if (!W0) {
                    var Dk = document.createElement("div");
                    Dk.setAttribute("oninput", "return;"),
                        (W0 = typeof Dk.oninput == "function");
                }
                K0 = W0;
            } else K0 = !1;
            Ok = K0 && (!document.documentMode || 9 < document.documentMode);
        }
        function Lk() {
            bd && (bd.detachEvent("onpropertychange", jk), (yd = bd = null));
        }
        function jk(e) {
            if (e.propertyName === "value" && dp(yd)) {
                var t = [];
                Rk(t, yd, e, C0(e)), ok(UR, t);
            }
        }
        function VR(e, t, n) {
            e === "focusin"
                ? (Lk(), (bd = t), (yd = n), bd.attachEvent("onpropertychange", jk))
                : e === "focusout" && Lk();
        }
        function KR(e) {
            if (e === "selectionchange" || e === "keyup" || e === "keydown")
                return dp(yd);
        }
        function WR(e, t) {
            if (e === "click") return dp(t);
        }
        function YR(e, t) {
            if (e === "input" || e === "change") return dp(t);
        }
        function GR(e, t) {
            return (
                (e === t && (e !== 0 || 1 / e === 1 / t)) || (e !== e && t !== t)
            );
        }
        var Nr = typeof Object.is == "function" ? Object.is : GR;
        function wd(e, t) {
            if (Nr(e, t)) return !0;
            if (
                typeof e != "object" ||
                e === null ||
                typeof t != "object" ||
                t === null
            )
                return !1;
            var n = Object.keys(e),
                r = Object.keys(t);
            if (n.length !== r.length) return !1;
            for (r = 0; r < n.length; r++) {
                var o = n[r];
                if (!r0.call(t, o) || !Nr(e[o], t[o])) return !1;
            }
            return !0;
        }
        function Nk(e) {
            for (; e && e.firstChild; ) e = e.firstChild;
            return e;
        }
        function Fk(e, t) {
            var n = Nk(e);
            e = 0;
            for (var r; n; ) {
                if (n.nodeType === 3) {
                    if (((r = e + n.textContent.length), e <= t && r >= t))
                        return {node: n, offset: t - e};
                    e = r;
                }
                e: {
                    for (; n; ) {
                        if (n.nextSibling) {
                            n = n.nextSibling;
                            break e;
                        }
                        n = n.parentNode;
                    }
                    n = void 0;
                }
                n = Nk(n);
            }
        }
        function Bk(e, t) {
            return e && t
                ? e === t
                    ? !0
                    : e && e.nodeType === 3
                        ? !1
                        : t && t.nodeType === 3
                            ? Bk(e, t.parentNode)
                            : "contains" in e
                                ? e.contains(t)
                                : e.compareDocumentPosition
                                    ? !!(e.compareDocumentPosition(t) & 16)
                                    : !1
                : !1;
        }
        function Uk() {
            for (var e = window, t = Yh(); t instanceof e.HTMLIFrameElement; ) {
                try {
                    var n = typeof t.contentWindow.location.href == "string";
                } catch {
                    n = !1;
                }
                if (n) e = t.contentWindow;
                else break;
                t = Yh(e.document);
            }
            return t;
        }
        function Y0(e) {
            var t = e && e.nodeName && e.nodeName.toLowerCase();
            return (
                t &&
                ((t === "input" &&
                        (e.type === "text" ||
                            e.type === "search" ||
                            e.type === "tel" ||
                            e.type === "url" ||
                            e.type === "password")) ||
                    t === "textarea" ||
                    e.contentEditable === "true")
            );
        }
        function XR(e) {
            var t = Uk(),
                n = e.focusedElem,
                r = e.selectionRange;
            if (
                t !== n &&
                n &&
                n.ownerDocument &&
                Bk(n.ownerDocument.documentElement, n)
            ) {
                if (r !== null && Y0(n)) {
                    if (
                        ((t = r.start),
                            (e = r.end),
                        e === void 0 && (e = t),
                        "selectionStart" in n)
                    )
                        (n.selectionStart = t),
                            (n.selectionEnd = Math.min(e, n.value.length));
                    else if (
                        ((e =
                            ((t = n.ownerDocument || document) && t.defaultView) ||
                            window),
                            e.getSelection)
                    ) {
                        e = e.getSelection();
                        var o = n.textContent.length,
                            i = Math.min(r.start, o);
                        (r = r.end === void 0 ? i : Math.min(r.end, o)),
                        !e.extend && i > r && ((o = r), (r = i), (i = o)),
                            (o = Fk(n, i));
                        var a = Fk(n, r);
                        o &&
                        a &&
                        (e.rangeCount !== 1 ||
                            e.anchorNode !== o.node ||
                            e.anchorOffset !== o.offset ||
                            e.focusNode !== a.node ||
                            e.focusOffset !== a.offset) &&
                        ((t = t.createRange()),
                            t.setStart(o.node, o.offset),
                            e.removeAllRanges(),
                            i > r
                                ? (e.addRange(t), e.extend(a.node, a.offset))
                                : (t.setEnd(a.node, a.offset), e.addRange(t)));
                    }
                }
                for (t = [], e = n; (e = e.parentNode); )
                    e.nodeType === 1 &&
                    t.push({element: e, left: e.scrollLeft, top: e.scrollTop});
                for (
                    typeof n.focus == "function" && n.focus(), n = 0;
                    n < t.length;
                    n++
                )
                    (e = t[n]),
                        (e.element.scrollLeft = e.left),
                        (e.element.scrollTop = e.top);
            }
        }
        var qR = Wo && "documentMode" in document && 11 >= document.documentMode,
            tl = null,
            G0 = null,
            xd = null,
            X0 = !1;
        function Hk(e, t, n) {
            var r =
                n.window === n
                    ? n.document
                    : n.nodeType === 9
                        ? n
                        : n.ownerDocument;
            X0 ||
            tl == null ||
            tl !== Yh(r) ||
            ((r = tl),
                "selectionStart" in r && Y0(r)
                    ? (r = {start: r.selectionStart, end: r.selectionEnd})
                    : ((r = (
                        (r.ownerDocument && r.ownerDocument.defaultView) ||
                        window
                    ).getSelection()),
                        (r = {
                            anchorNode: r.anchorNode,
                            anchorOffset: r.anchorOffset,
                            focusNode: r.focusNode,
                            focusOffset: r.focusOffset,
                        })),
            (xd && wd(xd, r)) ||
            ((xd = r),
                (r = fp(G0, "onSelect")),
            0 < r.length &&
            ((t = new N0("onSelect", "select", null, t, n)),
                e.push({event: t, listeners: r}),
                (t.target = tl))));
        }
        function up(e, t) {
            var n = {};
            return (
                (n[e.toLowerCase()] = t.toLowerCase()),
                    (n["Webkit" + e] = "webkit" + t),
                    (n["Moz" + e] = "moz" + t),
                    n
            );
        }
        var nl = {
                animationend: up("Animation", "AnimationEnd"),
                animationiteration: up("Animation", "AnimationIteration"),
                animationstart: up("Animation", "AnimationStart"),
                transitionend: up("Transition", "TransitionEnd"),
            },
            q0 = {},
            Vk = {};
        Wo &&
        ((Vk = document.createElement("div").style),
        "AnimationEvent" in window ||
        (delete nl.animationend.animation,
            delete nl.animationiteration.animation,
            delete nl.animationstart.animation),
        "TransitionEvent" in window || delete nl.transitionend.transition);
        function hp(e) {
            if (q0[e]) return q0[e];
            if (!nl[e]) return e;
            var t = nl[e],
                n;
            for (n in t) if (t.hasOwnProperty(n) && n in Vk) return (q0[e] = t[n]);
            return e;
        }
        var Kk = hp("animationend"),
            Wk = hp("animationiteration"),
            Yk = hp("animationstart"),
            Gk = hp("transitionend"),
            Xk = new Map(),
            qk =
                "abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(
                    " "
                );
        function Bi(e, t) {
            Xk.set(e, t), La(t, [e]);
        }
        for (var Z0 = 0; Z0 < qk.length; Z0++) {
            var Q0 = qk[Z0],
                ZR = Q0.toLowerCase(),
                QR = Q0[0].toUpperCase() + Q0.slice(1);
            Bi(ZR, "on" + QR);
        }
        Bi(Kk, "onAnimationEnd"),
            Bi(Wk, "onAnimationIteration"),
            Bi(Yk, "onAnimationStart"),
            Bi("dblclick", "onDoubleClick"),
            Bi("focusin", "onFocus"),
            Bi("focusout", "onBlur"),
            Bi(Gk, "onTransitionEnd"),
            Ws("onMouseEnter", ["mouseout", "mouseover"]),
            Ws("onMouseLeave", ["mouseout", "mouseover"]),
            Ws("onPointerEnter", ["pointerout", "pointerover"]),
            Ws("onPointerLeave", ["pointerout", "pointerover"]),
            La(
                "onChange",
                "change click focusin focusout input keydown keyup selectionchange".split(
                    " "
                )
            ),
            La(
                "onSelect",
                "focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(
                    " "
                )
            ),
            La("onBeforeInput", [
                "compositionend",
                "keypress",
                "textInput",
                "paste",
            ]),
            La(
                "onCompositionEnd",
                "compositionend focusout keydown keypress keyup mousedown".split(
                    " "
                )
            ),
            La(
                "onCompositionStart",
                "compositionstart focusout keydown keypress keyup mousedown".split(
                    " "
                )
            ),
            La(
                "onCompositionUpdate",
                "compositionupdate focusout keydown keypress keyup mousedown".split(
                    " "
                )
            );
        var Sd =
                "abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(
                    " "
                ),
            JR = new Set(
                "cancel close invalid load scroll toggle".split(" ").concat(Sd)
            );
        function Zk(e, t, n) {
            var r = e.type || "unknown-event";
            (e.currentTarget = n), Zz(r, t, void 0, e), (e.currentTarget = null);
        }
        function Qk(e, t) {
            t = (t & 4) !== 0;
            for (var n = 0; n < e.length; n++) {
                var r = e[n],
                    o = r.event;
                r = r.listeners;
                e: {
                    var i = void 0;
                    if (t)
                        for (var a = r.length - 1; 0 <= a; a--) {
                            var s = r[a],
                                l = s.instance,
                                c = s.currentTarget;
                            if (
                                ((s = s.listener),
                                l !== i && o.isPropagationStopped())
                            )
                                break e;
                            Zk(o, s, c), (i = l);
                        }
                    else
                        for (a = 0; a < r.length; a++) {
                            if (
                                ((s = r[a]),
                                    (l = s.instance),
                                    (c = s.currentTarget),
                                    (s = s.listener),
                                l !== i && o.isPropagationStopped())
                            )
                                break e;
                            Zk(o, s, c), (i = l);
                        }
                }
            }
            if (qh) throw ((e = T0), (qh = !1), (T0 = null), e);
        }
        function nt(e, t) {
            var n = t[ab];
            n === void 0 && (n = t[ab] = new Set());
            var r = e + "__bubble";
            n.has(r) || (Jk(t, e, 2, !1), n.add(r));
        }
        function J0(e, t, n) {
            var r = 0;
            t && (r |= 4), Jk(n, e, r, t);
        }
        var pp = "_reactListening" + Math.random().toString(36).slice(2);
        function _d(e) {
            if (!e[pp]) {
                (e[pp] = !0),
                    R_.forEach(function (n) {
                        n !== "selectionchange" &&
                        (JR.has(n) || J0(n, !1, e), J0(n, !0, e));
                    });
                var t = e.nodeType === 9 ? e : e.ownerDocument;
                t === null || t[pp] || ((t[pp] = !0), J0("selectionchange", !1, t));
            }
        }
        function Jk(e, t, n, r) {
            switch (Sk(t)) {
                case 1:
                    var o = pR;
                    break;
                case 4:
                    o = fR;
                    break;
                default:
                    o = D0;
            }
            (n = o.bind(null, t, n, e)),
                (o = void 0),
            !I0 ||
            (t !== "touchstart" && t !== "touchmove" && t !== "wheel") ||
            (o = !0),
                r
                    ? o !== void 0
                        ? e.addEventListener(t, n, {capture: !0, passive: o})
                        : e.addEventListener(t, n, !0)
                    : o !== void 0
                        ? e.addEventListener(t, n, {passive: o})
                        : e.addEventListener(t, n, !1);
        }
        function eb(e, t, n, r, o) {
            var i = r;
            if (!(t & 1) && !(t & 2) && r !== null)
                e: for (;;) {
                    if (r === null) return;
                    var a = r.tag;
                    if (a === 3 || a === 4) {
                        var s = r.stateNode.containerInfo;
                        if (s === o || (s.nodeType === 8 && s.parentNode === o))
                            break;
                        if (a === 4)
                            for (a = r.return; a !== null; ) {
                                var l = a.tag;
                                if (
                                    (l === 3 || l === 4) &&
                                    ((l = a.stateNode.containerInfo),
                                    l === o ||
                                    (l.nodeType === 8 && l.parentNode === o))
                                )
                                    return;
                                a = a.return;
                            }
                        for (; s !== null; ) {
                            if (((a = Na(s)), a === null)) return;
                            if (((l = a.tag), l === 5 || l === 6)) {
                                r = i = a;
                                continue e;
                            }
                            s = s.parentNode;
                        }
                    }
                    r = r.return;
                }
            ok(function () {
                var c = i,
                    d = C0(n),
                    u = [];
                e: {
                    var h = Xk.get(e);
                    if (h !== void 0) {
                        var p = N0,
                            m = e;
                        switch (e) {
                            case "keypress":
                                if (sp(n) === 0) break e;
                            case "keydown":
                            case "keyup":
                                p = TR;
                                break;
                            case "focusin":
                                (m = "focus"), (p = U0);
                                break;
                            case "focusout":
                                (m = "blur"), (p = U0);
                                break;
                            case "beforeblur":
                            case "afterblur":
                                p = U0;
                                break;
                            case "click":
                                if (n.button === 2) break e;
                            case "auxclick":
                            case "dblclick":
                            case "mousedown":
                            case "mousemove":
                            case "mouseup":
                            case "mouseout":
                            case "mouseover":
                            case "contextmenu":
                                p = Ck;
                                break;
                            case "drag":
                            case "dragend":
                            case "dragenter":
                            case "dragexit":
                            case "dragleave":
                            case "dragover":
                            case "dragstart":
                            case "drop":
                                p = vR;
                                break;
                            case "touchcancel":
                            case "touchend":
                            case "touchmove":
                            case "touchstart":
                                p = MR;
                                break;
                            case Kk:
                            case Wk:
                            case Yk:
                                p = wR;
                                break;
                            case Gk:
                                p = RR;
                                break;
                            case "scroll":
                                p = mR;
                                break;
                            case "wheel":
                                p = DR;
                                break;
                            case "copy":
                            case "cut":
                            case "paste":
                                p = SR;
                                break;
                            case "gotpointercapture":
                            case "lostpointercapture":
                            case "pointercancel":
                            case "pointerdown":
                            case "pointermove":
                            case "pointerout":
                            case "pointerover":
                            case "pointerup":
                                p = Pk;
                        }
                        var f = (t & 4) !== 0,
                            g = !f && e === "scroll",
                            b = f ? (h !== null ? h + "Capture" : null) : h;
                        f = [];
                        for (var x = c, S; x !== null; ) {
                            S = x;
                            var _ = S.stateNode;
                            if (
                                (S.tag === 5 &&
                                _ !== null &&
                                ((S = _),
                                b !== null &&
                                ((_ = id(x, b)),
                                _ != null && f.push(kd(x, _, S)))),
                                    g)
                            )
                                break;
                            x = x.return;
                        }
                        0 < f.length &&
                        ((h = new p(h, m, null, n, d)),
                            u.push({event: h, listeners: f}));
                    }
                }
                if (!(t & 7)) {
                    e: {
                        if (
                            ((h = e === "mouseover" || e === "pointerover"),
                                (p = e === "mouseout" || e === "pointerout"),
                            h &&
                            n !== k0 &&
                            (m = n.relatedTarget || n.fromElement) &&
                            (Na(m) || m[Go]))
                        )
                            break e;
                        if (
                            (p || h) &&
                            ((h =
                                d.window === d
                                    ? d
                                    : (h = d.ownerDocument)
                                        ? h.defaultView || h.parentWindow
                                        : window),
                                p
                                    ? ((m = n.relatedTarget || n.toElement),
                                        (p = c),
                                        (m = m ? Na(m) : null),
                                    m !== null &&
                                    ((g = ja(m)),
                                    m !== g || (m.tag !== 5 && m.tag !== 6)) &&
                                    (m = null))
                                    : ((p = null), (m = c)),
                            p !== m)
                        ) {
                            if (
                                ((f = Ck),
                                    (_ = "onMouseLeave"),
                                    (b = "onMouseEnter"),
                                    (x = "mouse"),
                                (e === "pointerout" || e === "pointerover") &&
                                ((f = Pk),
                                    (_ = "onPointerLeave"),
                                    (b = "onPointerEnter"),
                                    (x = "pointer")),
                                    (g = p == null ? h : il(p)),
                                    (S = m == null ? h : il(m)),
                                    (h = new f(_, x + "leave", p, n, d)),
                                    (h.target = g),
                                    (h.relatedTarget = S),
                                    (_ = null),
                                Na(d) === c &&
                                ((f = new f(b, x + "enter", m, n, d)),
                                    (f.target = S),
                                    (f.relatedTarget = g),
                                    (_ = f)),
                                    (g = _),
                                p && m)
                            )
                                t: {
                                    for (f = p, b = m, x = 0, S = f; S; S = rl(S))
                                        x++;
                                    for (S = 0, _ = b; _; _ = rl(_)) S++;
                                    for (; 0 < x - S; ) (f = rl(f)), x--;
                                    for (; 0 < S - x; ) (b = rl(b)), S--;
                                    for (; x--; ) {
                                        if (
                                            f === b ||
                                            (b !== null && f === b.alternate)
                                        )
                                            break t;
                                        (f = rl(f)), (b = rl(b));
                                    }
                                    f = null;
                                }
                            else f = null;
                            p !== null && e5(u, h, p, f, !1),
                            m !== null && g !== null && e5(u, g, m, f, !0);
                        }
                    }
                    e: {
                        if (
                            ((h = c ? il(c) : window),
                                (p = h.nodeName && h.nodeName.toLowerCase()),
                            p === "select" || (p === "input" && h.type === "file"))
                        )
                            var k = HR;
                        else if (zk(h))
                            if (Ok) k = YR;
                            else {
                                k = KR;
                                var C = VR;
                            }
                        else
                            (p = h.nodeName) &&
                            p.toLowerCase() === "input" &&
                            (h.type === "checkbox" || h.type === "radio") &&
                            (k = WR);
                        if (k && (k = k(e, c))) {
                            Rk(u, k, n, d);
                            break e;
                        }
                        C && C(e, h, c),
                        e === "focusout" &&
                        (C = h._wrapperState) &&
                        C.controlled &&
                        h.type === "number" &&
                        y0(h, "number", h.value);
                    }
                    switch (((C = c ? il(c) : window), e)) {
                        case "focusin":
                            (zk(C) || C.contentEditable === "true") &&
                            ((tl = C), (G0 = c), (xd = null));
                            break;
                        case "focusout":
                            xd = G0 = tl = null;
                            break;
                        case "mousedown":
                            X0 = !0;
                            break;
                        case "contextmenu":
                        case "mouseup":
                        case "dragend":
                            (X0 = !1), Hk(u, n, d);
                            break;
                        case "selectionchange":
                            if (qR) break;
                        case "keydown":
                        case "keyup":
                            Hk(u, n, d);
                    }
                    var P;
                    if (V0)
                        e: {
                            switch (e) {
                                case "compositionstart":
                                    var I = "onCompositionStart";
                                    break e;
                                case "compositionend":
                                    I = "onCompositionEnd";
                                    break e;
                                case "compositionupdate":
                                    I = "onCompositionUpdate";
                                    break e;
                            }
                            I = void 0;
                        }
                    else
                        el
                            ? Ak(e, n) && (I = "onCompositionEnd")
                            : e === "keydown" &&
                            n.keyCode === 229 &&
                            (I = "onCompositionStart");
                    I &&
                    (Ik &&
                    n.locale !== "ko" &&
                    (el || I !== "onCompositionStart"
                        ? I === "onCompositionEnd" && el && (P = _k())
                        : ((Fi = d),
                            (j0 = "value" in Fi ? Fi.value : Fi.textContent),
                            (el = !0))),
                        (C = fp(c, I)),
                    0 < C.length &&
                    ((I = new Ek(I, e, null, n, d)),
                        u.push({event: I, listeners: C}),
                        P
                            ? (I.data = P)
                            : ((P = Mk(n)), P !== null && (I.data = P)))),
                    (P = jR ? NR(e, n) : FR(e, n)) &&
                    ((c = fp(c, "onBeforeInput")),
                    0 < c.length &&
                    ((d = new Ek(
                        "onBeforeInput",
                        "beforeinput",
                        null,
                        n,
                        d
                    )),
                        u.push({event: d, listeners: c}),
                        (d.data = P)));
                }
                Qk(u, t);
            });
        }
        function kd(e, t, n) {
            return {instance: e, listener: t, currentTarget: n};
        }
        function fp(e, t) {
            for (var n = t + "Capture", r = []; e !== null; ) {
                var o = e,
                    i = o.stateNode;
                o.tag === 5 &&
                i !== null &&
                ((o = i),
                    (i = id(e, n)),
                i != null && r.unshift(kd(e, i, o)),
                    (i = id(e, t)),
                i != null && r.push(kd(e, i, o))),
                    (e = e.return);
            }
            return r;
        }
        function rl(e) {
            if (e === null) return null;
            do e = e.return;
            while (e && e.tag !== 5);
            return e || null;
        }
        function e5(e, t, n, r, o) {
            for (var i = t._reactName, a = []; n !== null && n !== r; ) {
                var s = n,
                    l = s.alternate,
                    c = s.stateNode;
                if (l !== null && l === r) break;
                s.tag === 5 &&
                c !== null &&
                ((s = c),
                    o
                        ? ((l = id(n, i)), l != null && a.unshift(kd(n, l, s)))
                        : o || ((l = id(n, i)), l != null && a.push(kd(n, l, s)))),
                    (n = n.return);
            }
            a.length !== 0 && e.push({event: t, listeners: a});
        }
        var eO = /\r\n?/g,
            tO = /\u0000|\uFFFD/g;
        function t5(e) {
            return (typeof e == "string" ? e : "" + e)
                .replace(
                    eO,
                    `
`
                )
                .replace(tO, "");
        }
        function mp(e, t, n) {
            if (((t = t5(t)), t5(e) !== t && n)) throw Error(Z(425));
        }
        function gp() {}
        var tb = null,
            nb = null;
        function rb(e, t) {
            return (
                e === "textarea" ||
                e === "noscript" ||
                typeof t.children == "string" ||
                typeof t.children == "number" ||
                (typeof t.dangerouslySetInnerHTML == "object" &&
                    t.dangerouslySetInnerHTML !== null &&
                    t.dangerouslySetInnerHTML.__html != null)
            );
        }
        var ob = typeof setTimeout == "function" ? setTimeout : void 0,
            nO = typeof clearTimeout == "function" ? clearTimeout : void 0,
            n5 = typeof Promise == "function" ? Promise : void 0,
            rO =
                typeof queueMicrotask == "function"
                    ? queueMicrotask
                    : typeof n5 < "u"
                        ? function (e) {
                            return n5.resolve(null).then(e).catch(oO);
                        }
                        : ob;
        function oO(e) {
            setTimeout(function () {
                throw e;
            });
        }
        function ib(e, t) {
            var n = t,
                r = 0;
            do {
                var o = n.nextSibling;
                if ((e.removeChild(n), o && o.nodeType === 8))
                    if (((n = o.data), n === "/$")) {
                        if (r === 0) {
                            e.removeChild(o), fd(t);
                            return;
                        }
                        r--;
                    } else (n !== "$" && n !== "$?" && n !== "$!") || r++;
                n = o;
            } while (n);
            fd(t);
        }
        function Ui(e) {
            for (; e != null; e = e.nextSibling) {
                var t = e.nodeType;
                if (t === 1 || t === 3) break;
                if (t === 8) {
                    if (((t = e.data), t === "$" || t === "$!" || t === "$?"))
                        break;
                    if (t === "/$") return null;
                }
            }
            return e;
        }
        function r5(e) {
            e = e.previousSibling;
            for (var t = 0; e; ) {
                if (e.nodeType === 8) {
                    var n = e.data;
                    if (n === "$" || n === "$!" || n === "$?") {
                        if (t === 0) return e;
                        t--;
                    } else n === "/$" && t++;
                }
                e = e.previousSibling;
            }
            return null;
        }
        var ol = Math.random().toString(36).slice(2),
            po = "__reactFiber$" + ol,
            Cd = "__reactProps$" + ol,
            Go = "__reactContainer$" + ol,
            ab = "__reactEvents$" + ol,
            iO = "__reactListeners$" + ol,
            aO = "__reactHandles$" + ol;
        function Na(e) {
            var t = e[po];
            if (t) return t;
            for (var n = e.parentNode; n; ) {
                if ((t = n[Go] || n[po])) {
                    if (
                        ((n = t.alternate),
                        t.child !== null || (n !== null && n.child !== null))
                    )
                        for (e = r5(e); e !== null; ) {
                            if ((n = e[po])) return n;
                            e = r5(e);
                        }
                    return t;
                }
                (e = n), (n = e.parentNode);
            }
            return null;
        }
        function Ed(e) {
            return (
                (e = e[po] || e[Go]),
                    !e || (e.tag !== 5 && e.tag !== 6 && e.tag !== 13 && e.tag !== 3)
                        ? null
                        : e
            );
        }
        function il(e) {
            if (e.tag === 5 || e.tag === 6) return e.stateNode;
            throw Error(Z(33));
        }
        function vp(e) {
            return e[Cd] || null;
        }
        var sb = [],
            al = -1;
        function Hi(e) {
            return {current: e};
        }
        function rt(e) {
            0 > al || ((e.current = sb[al]), (sb[al] = null), al--);
        }
        function Ye(e, t) {
            al++, (sb[al] = e.current), (e.current = t);
        }
        var Vi = {},
            tn = Hi(Vi),
            Dn = Hi(!1),
            Fa = Vi;
        function sl(e, t) {
            var n = e.type.contextTypes;
            if (!n) return Vi;
            var r = e.stateNode;
            if (r && r.__reactInternalMemoizedUnmaskedChildContext === t)
                return r.__reactInternalMemoizedMaskedChildContext;
            var o = {},
                i;
            for (i in n) o[i] = t[i];
            return (
                r &&
                ((e = e.stateNode),
                    (e.__reactInternalMemoizedUnmaskedChildContext = t),
                    (e.__reactInternalMemoizedMaskedChildContext = o)),
                    o
            );
        }
        function Ln(e) {
            return (e = e.childContextTypes), e != null;
        }
        function bp() {
            rt(Dn), rt(tn);
        }
        function o5(e, t, n) {
            if (tn.current !== Vi) throw Error(Z(168));
            Ye(tn, t), Ye(Dn, n);
        }
        function i5(e, t, n) {
            var r = e.stateNode;
            if (((t = t.childContextTypes), typeof r.getChildContext != "function"))
                return n;
            r = r.getChildContext();
            for (var o in r)
                if (!(o in t)) throw Error(Z(108, Vz(e) || "Unknown", o));
            return ct({}, n, r);
        }
        function yp(e) {
            return (
                (e =
                    ((e = e.stateNode) &&
                        e.__reactInternalMemoizedMergedChildContext) ||
                    Vi),
                    (Fa = tn.current),
                    Ye(tn, e),
                    Ye(Dn, Dn.current),
                    !0
            );
        }
        function a5(e, t, n) {
            var r = e.stateNode;
            if (!r) throw Error(Z(169));
            n
                ? ((e = i5(e, t, Fa)),
                    (r.__reactInternalMemoizedMergedChildContext = e),
                    rt(Dn),
                    rt(tn),
                    Ye(tn, e))
                : rt(Dn),
                Ye(Dn, n);
        }
        var Xo = null,
            wp = !1,
            lb = !1;
        function s5(e) {
            Xo === null ? (Xo = [e]) : Xo.push(e);
        }
        function sO(e) {
            (wp = !0), s5(e);
        }
        function Ki() {
            if (!lb && Xo !== null) {
                lb = !0;
                var e = 0,
                    t = Ne;
                try {
                    var n = Xo;
                    for (Ne = 1; e < n.length; e++) {
                        var r = n[e];
                        do r = r(!0);
                        while (r !== null);
                    }
                    (Xo = null), (wp = !1);
                } catch (o) {
                    throw (Xo !== null && (Xo = Xo.slice(e + 1)), ck($0, Ki), o);
                } finally {
                    (Ne = t), (lb = !1);
                }
            }
            return null;
        }
        var ll = [],
            cl = 0,
            xp = null,
            Sp = 0,
            vr = [],
            br = 0,
            Ba = null,
            qo = 1,
            Zo = "";
        function Ua(e, t) {
            (ll[cl++] = Sp), (ll[cl++] = xp), (xp = e), (Sp = t);
        }
        function l5(e, t, n) {
            (vr[br++] = qo), (vr[br++] = Zo), (vr[br++] = Ba), (Ba = e);
            var r = qo;
            e = Zo;
            var o = 32 - jr(r) - 1;
            (r &= ~(1 << o)), (n += 1);
            var i = 32 - jr(t) + o;
            if (30 < i) {
                var a = o - (o % 5);
                (i = (r & ((1 << a) - 1)).toString(32)),
                    (r >>= a),
                    (o -= a),
                    (qo = (1 << (32 - jr(t) + o)) | (n << o) | r),
                    (Zo = i + e);
            } else (qo = (1 << i) | (n << o) | r), (Zo = e);
        }
        function cb(e) {
            e.return !== null && (Ua(e, 1), l5(e, 1, 0));
        }
        function db(e) {
            for (; e === xp; )
                (xp = ll[--cl]), (ll[cl] = null), (Sp = ll[--cl]), (ll[cl] = null);
            for (; e === Ba; )
                (Ba = vr[--br]),
                    (vr[br] = null),
                    (Zo = vr[--br]),
                    (vr[br] = null),
                    (qo = vr[--br]),
                    (vr[br] = null);
        }
        var Qn = null,
            Jn = null,
            st = !1,
            Fr = null;
        function c5(e, t) {
            var n = Sr(5, null, null, 0);
            (n.elementType = "DELETED"),
                (n.stateNode = t),
                (n.return = e),
                (t = e.deletions),
                t === null ? ((e.deletions = [n]), (e.flags |= 16)) : t.push(n);
        }
        function d5(e, t) {
            switch (e.tag) {
                case 5:
                    var n = e.type;
                    return (
                        (t =
                            t.nodeType !== 1 ||
                            n.toLowerCase() !== t.nodeName.toLowerCase()
                                ? null
                                : t),
                            t !== null
                                ? ((e.stateNode = t),
                                    (Qn = e),
                                    (Jn = Ui(t.firstChild)),
                                    !0)
                                : !1
                    );
                case 6:
                    return (
                        (t = e.pendingProps === "" || t.nodeType !== 3 ? null : t),
                            t !== null
                                ? ((e.stateNode = t), (Qn = e), (Jn = null), !0)
                                : !1
                    );
                case 13:
                    return (
                        (t = t.nodeType !== 8 ? null : t),
                            t !== null
                                ? ((n = Ba !== null ? {id: qo, overflow: Zo} : null),
                                    (e.memoizedState = {
                                        dehydrated: t,
                                        treeContext: n,
                                        retryLane: 1073741824,
                                    }),
                                    (n = Sr(18, null, null, 0)),
                                    (n.stateNode = t),
                                    (n.return = e),
                                    (e.child = n),
                                    (Qn = e),
                                    (Jn = null),
                                    !0)
                                : !1
                    );
                default:
                    return !1;
            }
        }
        function ub(e) {
            return (e.mode & 1) !== 0 && (e.flags & 128) === 0;
        }
        function hb(e) {
            if (st) {
                var t = Jn;
                if (t) {
                    var n = t;
                    if (!d5(e, t)) {
                        if (ub(e)) throw Error(Z(418));
                        t = Ui(n.nextSibling);
                        var r = Qn;
                        t && d5(e, t)
                            ? c5(r, n)
                            : ((e.flags = (e.flags & -4097) | 2),
                                (st = !1),
                                (Qn = e));
                    }
                } else {
                    if (ub(e)) throw Error(Z(418));
                    (e.flags = (e.flags & -4097) | 2), (st = !1), (Qn = e);
                }
            }
        }
        function u5(e) {
            for (
                e = e.return;
                e !== null && e.tag !== 5 && e.tag !== 3 && e.tag !== 13;

            )
                e = e.return;
            Qn = e;
        }
        function _p(e) {
            if (e !== Qn) return !1;
            if (!st) return u5(e), (st = !0), !1;
            var t;
            if (
                ((t = e.tag !== 3) &&
                !(t = e.tag !== 5) &&
                ((t = e.type),
                    (t =
                        t !== "head" &&
                        t !== "body" &&
                        !rb(e.type, e.memoizedProps))),
                t && (t = Jn))
            ) {
                if (ub(e)) throw (h5(), Error(Z(418)));
                for (; t; ) c5(e, t), (t = Ui(t.nextSibling));
            }
            if ((u5(e), e.tag === 13)) {
                if (
                    ((e = e.memoizedState),
                        (e = e !== null ? e.dehydrated : null),
                        !e)
                )
                    throw Error(Z(317));
                e: {
                    for (e = e.nextSibling, t = 0; e; ) {
                        if (e.nodeType === 8) {
                            var n = e.data;
                            if (n === "/$") {
                                if (t === 0) {
                                    Jn = Ui(e.nextSibling);
                                    break e;
                                }
                                t--;
                            } else (n !== "$" && n !== "$!" && n !== "$?") || t++;
                        }
                        e = e.nextSibling;
                    }
                    Jn = null;
                }
            } else Jn = Qn ? Ui(e.stateNode.nextSibling) : null;
            return !0;
        }
        function h5() {
            for (var e = Jn; e; ) e = Ui(e.nextSibling);
        }
        function dl() {
            (Jn = Qn = null), (st = !1);
        }
        function pb(e) {
            Fr === null ? (Fr = [e]) : Fr.push(e);
        }
        var lO = Yo.ReactCurrentBatchConfig;
        function Br(e, t) {
            if (e && e.defaultProps) {
                (t = ct({}, t)), (e = e.defaultProps);
                for (var n in e) t[n] === void 0 && (t[n] = e[n]);
                return t;
            }
            return t;
        }
        var kp = Hi(null),
            Cp = null,
            ul = null,
            fb = null;
        function mb() {
            fb = ul = Cp = null;
        }
        function gb(e) {
            var t = kp.current;
            rt(kp), (e._currentValue = t);
        }
        function vb(e, t, n) {
            for (; e !== null; ) {
                var r = e.alternate;
                if (
                    ((e.childLanes & t) !== t
                        ? ((e.childLanes |= t), r !== null && (r.childLanes |= t))
                        : r !== null &&
                        (r.childLanes & t) !== t &&
                        (r.childLanes |= t),
                    e === n)
                )
                    break;
                e = e.return;
            }
        }
        function hl(e, t) {
            (Cp = e),
                (fb = ul = null),
                (e = e.dependencies),
            e !== null &&
            e.firstContext !== null &&
            (e.lanes & t && (jn = !0), (e.firstContext = null));
        }
        function yr(e) {
            var t = e._currentValue;
            if (fb !== e)
                if (
                    ((e = {context: e, memoizedValue: t, next: null}), ul === null)
                ) {
                    if (Cp === null) throw Error(Z(308));
                    (ul = e), (Cp.dependencies = {lanes: 0, firstContext: e});
                } else ul = ul.next = e;
            return t;
        }
        var Ha = null;
        function bb(e) {
            Ha === null ? (Ha = [e]) : Ha.push(e);
        }
        function p5(e, t, n, r) {
            var o = t.interleaved;
            return (
                o === null
                    ? ((n.next = n), bb(t))
                    : ((n.next = o.next), (o.next = n)),
                    (t.interleaved = n),
                    Qo(e, r)
            );
        }
        function Qo(e, t) {
            e.lanes |= t;
            var n = e.alternate;
            for (n !== null && (n.lanes |= t), n = e, e = e.return; e !== null; )
                (e.childLanes |= t),
                    (n = e.alternate),
                n !== null && (n.childLanes |= t),
                    (n = e),
                    (e = e.return);
            return n.tag === 3 ? n.stateNode : null;
        }
        var Wi = !1;
        function yb(e) {
            e.updateQueue = {
                baseState: e.memoizedState,
                firstBaseUpdate: null,
                lastBaseUpdate: null,
                shared: {pending: null, interleaved: null, lanes: 0},
                effects: null,
            };
        }
        function f5(e, t) {
            (e = e.updateQueue),
            t.updateQueue === e &&
            (t.updateQueue = {
                baseState: e.baseState,
                firstBaseUpdate: e.firstBaseUpdate,
                lastBaseUpdate: e.lastBaseUpdate,
                shared: e.shared,
                effects: e.effects,
            });
        }
        function Jo(e, t) {
            return {
                eventTime: e,
                lane: t,
                tag: 0,
                payload: null,
                callback: null,
                next: null,
            };
        }
        function Yi(e, t, n) {
            var r = e.updateQueue;
            if (r === null) return null;
            if (((r = r.shared), Te & 2)) {
                var o = r.pending;
                return (
                    o === null ? (t.next = t) : ((t.next = o.next), (o.next = t)),
                        (r.pending = t),
                        Qo(e, n)
                );
            }
            return (
                (o = r.interleaved),
                    o === null
                        ? ((t.next = t), bb(r))
                        : ((t.next = o.next), (o.next = t)),
                    (r.interleaved = t),
                    Qo(e, n)
            );
        }
        function Ep(e, t, n) {
            if (
                ((t = t.updateQueue),
                t !== null && ((t = t.shared), (n & 4194240) !== 0))
            ) {
                var r = t.lanes;
                (r &= e.pendingLanes), (n |= r), (t.lanes = n), z0(e, n);
            }
        }
        function m5(e, t) {
            var n = e.updateQueue,
                r = e.alternate;
            if (r !== null && ((r = r.updateQueue), n === r)) {
                var o = null,
                    i = null;
                if (((n = n.firstBaseUpdate), n !== null)) {
                    do {
                        var a = {
                            eventTime: n.eventTime,
                            lane: n.lane,
                            tag: n.tag,
                            payload: n.payload,
                            callback: n.callback,
                            next: null,
                        };
                        i === null ? (o = i = a) : (i = i.next = a), (n = n.next);
                    } while (n !== null);
                    i === null ? (o = i = t) : (i = i.next = t);
                } else o = i = t;
                (n = {
                    baseState: r.baseState,
                    firstBaseUpdate: o,
                    lastBaseUpdate: i,
                    shared: r.shared,
                    effects: r.effects,
                }),
                    (e.updateQueue = n);
                return;
            }
            (e = n.lastBaseUpdate),
                e === null ? (n.firstBaseUpdate = t) : (e.next = t),
                (n.lastBaseUpdate = t);
        }
        function Pp(e, t, n, r) {
            var o = e.updateQueue;
            Wi = !1;
            var i = o.firstBaseUpdate,
                a = o.lastBaseUpdate,
                s = o.shared.pending;
            if (s !== null) {
                o.shared.pending = null;
                var l = s,
                    c = l.next;
                (l.next = null), a === null ? (i = c) : (a.next = c), (a = l);
                var d = e.alternate;
                d !== null &&
                ((d = d.updateQueue),
                    (s = d.lastBaseUpdate),
                s !== a &&
                (s === null ? (d.firstBaseUpdate = c) : (s.next = c),
                    (d.lastBaseUpdate = l)));
            }
            if (i !== null) {
                var u = o.baseState;
                (a = 0), (d = c = l = null), (s = i);
                do {
                    var h = s.lane,
                        p = s.eventTime;
                    if ((r & h) === h) {
                        d !== null &&
                        (d = d.next =
                            {
                                eventTime: p,
                                lane: 0,
                                tag: s.tag,
                                payload: s.payload,
                                callback: s.callback,
                                next: null,
                            });
                        e: {
                            var m = e,
                                f = s;
                            switch (((h = t), (p = n), f.tag)) {
                                case 1:
                                    if (((m = f.payload), typeof m == "function")) {
                                        u = m.call(p, u, h);
                                        break e;
                                    }
                                    u = m;
                                    break e;
                                case 3:
                                    m.flags = (m.flags & -65537) | 128;
                                case 0:
                                    if (
                                        ((m = f.payload),
                                            (h =
                                                typeof m == "function"
                                                    ? m.call(p, u, h)
                                                    : m),
                                        h == null)
                                    )
                                        break e;
                                    u = ct({}, u, h);
                                    break e;
                                case 2:
                                    Wi = !0;
                            }
                        }
                        s.callback !== null &&
                        s.lane !== 0 &&
                        ((e.flags |= 64),
                            (h = o.effects),
                            h === null ? (o.effects = [s]) : h.push(s));
                    } else
                        (p = {
                            eventTime: p,
                            lane: h,
                            tag: s.tag,
                            payload: s.payload,
                            callback: s.callback,
                            next: null,
                        }),
                            d === null ? ((c = d = p), (l = u)) : (d = d.next = p),
                            (a |= h);
                    if (((s = s.next), s === null)) {
                        if (((s = o.shared.pending), s === null)) break;
                        (h = s),
                            (s = h.next),
                            (h.next = null),
                            (o.lastBaseUpdate = h),
                            (o.shared.pending = null);
                    }
                } while (!0);
                if (
                    (d === null && (l = u),
                        (o.baseState = l),
                        (o.firstBaseUpdate = c),
                        (o.lastBaseUpdate = d),
                        (t = o.shared.interleaved),
                    t !== null)
                ) {
                    o = t;
                    do (a |= o.lane), (o = o.next);
                    while (o !== t);
                } else i === null && (o.shared.lanes = 0);
                (Wa |= a), (e.lanes = a), (e.memoizedState = u);
            }
        }
        function g5(e, t, n) {
            if (((e = t.effects), (t.effects = null), e !== null))
                for (t = 0; t < e.length; t++) {
                    var r = e[t],
                        o = r.callback;
                    if (o !== null) {
                        if (((r.callback = null), (r = n), typeof o != "function"))
                            throw Error(Z(191, o));
                        o.call(r);
                    }
                }
        }
        var v5 = new z_.Component().refs;
        function wb(e, t, n, r) {
            (t = e.memoizedState),
                (n = n(r, t)),
                (n = n == null ? t : ct({}, t, n)),
                (e.memoizedState = n),
            e.lanes === 0 && (e.updateQueue.baseState = n);
        }
        var Ip = {
            isMounted: function (e) {
                return (e = e._reactInternals) ? ja(e) === e : !1;
            },
            enqueueSetState: function (e, t, n) {
                e = e._reactInternals;
                var r = In(),
                    o = Zi(e),
                    i = Jo(r, o);
                (i.payload = t),
                n != null && (i.callback = n),
                    (t = Yi(e, i, o)),
                t !== null && (Vr(t, e, o, r), Ep(t, e, o));
            },
            enqueueReplaceState: function (e, t, n) {
                e = e._reactInternals;
                var r = In(),
                    o = Zi(e),
                    i = Jo(r, o);
                (i.tag = 1),
                    (i.payload = t),
                n != null && (i.callback = n),
                    (t = Yi(e, i, o)),
                t !== null && (Vr(t, e, o, r), Ep(t, e, o));
            },
            enqueueForceUpdate: function (e, t) {
                e = e._reactInternals;
                var n = In(),
                    r = Zi(e),
                    o = Jo(n, r);
                (o.tag = 2),
                t != null && (o.callback = t),
                    (t = Yi(e, o, r)),
                t !== null && (Vr(t, e, r, n), Ep(t, e, r));
            },
        };
        function b5(e, t, n, r, o, i, a) {
            return (
                (e = e.stateNode),
                    typeof e.shouldComponentUpdate == "function"
                        ? e.shouldComponentUpdate(r, i, a)
                        : t.prototype && t.prototype.isPureReactComponent
                            ? !wd(n, r) || !wd(o, i)
                            : !0
            );
        }
        function y5(e, t, n) {
            var r = !1,
                o = Vi,
                i = t.contextType;
            return (
                typeof i == "object" && i !== null
                    ? (i = yr(i))
                    : ((o = Ln(t) ? Fa : tn.current),
                        (r = t.contextTypes),
                        (i = (r = r != null) ? sl(e, o) : Vi)),
                    (t = new t(n, i)),
                    (e.memoizedState =
                        t.state !== null && t.state !== void 0 ? t.state : null),
                    (t.updater = Ip),
                    (e.stateNode = t),
                    (t._reactInternals = e),
                r &&
                ((e = e.stateNode),
                    (e.__reactInternalMemoizedUnmaskedChildContext = o),
                    (e.__reactInternalMemoizedMaskedChildContext = i)),
                    t
            );
        }
        function w5(e, t, n, r) {
            (e = t.state),
            typeof t.componentWillReceiveProps == "function" &&
            t.componentWillReceiveProps(n, r),
            typeof t.UNSAFE_componentWillReceiveProps == "function" &&
            t.UNSAFE_componentWillReceiveProps(n, r),
            t.state !== e && Ip.enqueueReplaceState(t, t.state, null);
        }
        function xb(e, t, n, r) {
            var o = e.stateNode;
            (o.props = n), (o.state = e.memoizedState), (o.refs = v5), yb(e);
            var i = t.contextType;
            typeof i == "object" && i !== null
                ? (o.context = yr(i))
                : ((i = Ln(t) ? Fa : tn.current), (o.context = sl(e, i))),
                (o.state = e.memoizedState),
                (i = t.getDerivedStateFromProps),
            typeof i == "function" &&
            (wb(e, t, i, n), (o.state = e.memoizedState)),
            typeof t.getDerivedStateFromProps == "function" ||
            typeof o.getSnapshotBeforeUpdate == "function" ||
            (typeof o.UNSAFE_componentWillMount != "function" &&
                typeof o.componentWillMount != "function") ||
            ((t = o.state),
            typeof o.componentWillMount == "function" &&
            o.componentWillMount(),
            typeof o.UNSAFE_componentWillMount == "function" &&
            o.UNSAFE_componentWillMount(),
            t !== o.state && Ip.enqueueReplaceState(o, o.state, null),
                Pp(e, n, o, r),
                (o.state = e.memoizedState)),
            typeof o.componentDidMount == "function" && (e.flags |= 4194308);
        }
        function Pd(e, t, n) {
            if (
                ((e = n.ref),
                e !== null && typeof e != "function" && typeof e != "object")
            ) {
                if (n._owner) {
                    if (((n = n._owner), n)) {
                        if (n.tag !== 1) throw Error(Z(309));
                        var r = n.stateNode;
                    }
                    if (!r) throw Error(Z(147, e));
                    var o = r,
                        i = "" + e;
                    return t !== null &&
                    t.ref !== null &&
                    typeof t.ref == "function" &&
                    t.ref._stringRef === i
                        ? t.ref
                        : ((t = function (a) {
                            var s = o.refs;
                            s === v5 && (s = o.refs = {}),
                                a === null ? delete s[i] : (s[i] = a);
                        }),
                            (t._stringRef = i),
                            t);
                }
                if (typeof e != "string") throw Error(Z(284));
                if (!n._owner) throw Error(Z(290, e));
            }
            return e;
        }
        function Tp(e, t) {
            throw (
                ((e = Object.prototype.toString.call(t)),
                    Error(
                        Z(
                            31,
                            e === "[object Object]"
                                ? "object with keys {" + Object.keys(t).join(", ") + "}"
                                : e
                        )
                    ))
            );
        }
        function x5(e) {
            var t = e._init;
            return t(e._payload);
        }
        function S5(e) {
            function t(b, x) {
                if (e) {
                    var S = b.deletions;
                    S === null ? ((b.deletions = [x]), (b.flags |= 16)) : S.push(x);
                }
            }
            function n(b, x) {
                if (!e) return null;
                for (; x !== null; ) t(b, x), (x = x.sibling);
                return null;
            }
            function r(b, x) {
                for (b = new Map(); x !== null; )
                    x.key !== null ? b.set(x.key, x) : b.set(x.index, x),
                        (x = x.sibling);
                return b;
            }
            function o(b, x) {
                return (b = Ji(b, x)), (b.index = 0), (b.sibling = null), b;
            }
            function i(b, x, S) {
                return (
                    (b.index = S),
                        e
                            ? ((S = b.alternate),
                                S !== null
                                    ? ((S = S.index), S < x ? ((b.flags |= 2), x) : S)
                                    : ((b.flags |= 2), x))
                            : ((b.flags |= 1048576), x)
                );
            }
            function a(b) {
                return e && b.alternate === null && (b.flags |= 2), b;
            }
            function s(b, x, S, _) {
                return x === null || x.tag !== 6
                    ? ((x = oy(S, b.mode, _)), (x.return = b), x)
                    : ((x = o(x, S)), (x.return = b), x);
            }
            function l(b, x, S, _) {
                var k = S.type;
                return k === Gs
                    ? d(b, x, S.props.children, _, S.key)
                    : x !== null &&
                    (x.elementType === k ||
                        (typeof k == "object" &&
                            k !== null &&
                            k.$$typeof === Ri &&
                            x5(k) === x.type))
                        ? ((_ = o(x, S.props)),
                            (_.ref = Pd(b, x, S)),
                            (_.return = b),
                            _)
                        : ((_ = Gp(S.type, S.key, S.props, null, b.mode, _)),
                            (_.ref = Pd(b, x, S)),
                            (_.return = b),
                            _);
            }
            function c(b, x, S, _) {
                return x === null ||
                x.tag !== 4 ||
                x.stateNode.containerInfo !== S.containerInfo ||
                x.stateNode.implementation !== S.implementation
                    ? ((x = iy(S, b.mode, _)), (x.return = b), x)
                    : ((x = o(x, S.children || [])), (x.return = b), x);
            }
            function d(b, x, S, _, k) {
                return x === null || x.tag !== 7
                    ? ((x = qa(S, b.mode, _, k)), (x.return = b), x)
                    : ((x = o(x, S)), (x.return = b), x);
            }
            function u(b, x, S) {
                if ((typeof x == "string" && x !== "") || typeof x == "number")
                    return (x = oy("" + x, b.mode, S)), (x.return = b), x;
                if (typeof x == "object" && x !== null) {
                    switch (x.$$typeof) {
                        case Kh:
                            return (
                                (S = Gp(x.type, x.key, x.props, null, b.mode, S)),
                                    (S.ref = Pd(b, null, x)),
                                    (S.return = b),
                                    S
                            );
                        case Ys:
                            return (x = iy(x, b.mode, S)), (x.return = b), x;
                        case Ri:
                            var _ = x._init;
                            return u(b, _(x._payload), S);
                    }
                    if (nd(x) || ed(x))
                        return (x = qa(x, b.mode, S, null)), (x.return = b), x;
                    Tp(b, x);
                }
                return null;
            }
            function h(b, x, S, _) {
                var k = x !== null ? x.key : null;
                if ((typeof S == "string" && S !== "") || typeof S == "number")
                    return k !== null ? null : s(b, x, "" + S, _);
                if (typeof S == "object" && S !== null) {
                    switch (S.$$typeof) {
                        case Kh:
                            return S.key === k ? l(b, x, S, _) : null;
                        case Ys:
                            return S.key === k ? c(b, x, S, _) : null;
                        case Ri:
                            return (k = S._init), h(b, x, k(S._payload), _);
                    }
                    if (nd(S) || ed(S))
                        return k !== null ? null : d(b, x, S, _, null);
                    Tp(b, S);
                }
                return null;
            }
            function p(b, x, S, _, k) {
                if ((typeof _ == "string" && _ !== "") || typeof _ == "number")
                    return (b = b.get(S) || null), s(x, b, "" + _, k);
                if (typeof _ == "object" && _ !== null) {
                    switch (_.$$typeof) {
                        case Kh:
                            return (
                                (b = b.get(_.key === null ? S : _.key) || null),
                                    l(x, b, _, k)
                            );
                        case Ys:
                            return (
                                (b = b.get(_.key === null ? S : _.key) || null),
                                    c(x, b, _, k)
                            );
                        case Ri:
                            var C = _._init;
                            return p(b, x, S, C(_._payload), k);
                    }
                    if (nd(_) || ed(_))
                        return (b = b.get(S) || null), d(x, b, _, k, null);
                    Tp(x, _);
                }
                return null;
            }
            function m(b, x, S, _) {
                for (
                    var k = null, C = null, P = x, I = (x = 0), $ = null;
                    P !== null && I < S.length;
                    I++
                ) {
                    P.index > I ? (($ = P), (P = null)) : ($ = P.sibling);
                    var T = h(b, P, S[I], _);
                    if (T === null) {
                        P === null && (P = $);
                        break;
                    }
                    e && P && T.alternate === null && t(b, P),
                        (x = i(T, x, I)),
                        C === null ? (k = T) : (C.sibling = T),
                        (C = T),
                        (P = $);
                }
                if (I === S.length) return n(b, P), st && Ua(b, I), k;
                if (P === null) {
                    for (; I < S.length; I++)
                        (P = u(b, S[I], _)),
                        P !== null &&
                        ((x = i(P, x, I)),
                            C === null ? (k = P) : (C.sibling = P),
                            (C = P));
                    return st && Ua(b, I), k;
                }
                for (P = r(b, P); I < S.length; I++)
                    ($ = p(P, b, I, S[I], _)),
                    $ !== null &&
                    (e &&
                    $.alternate !== null &&
                    P.delete($.key === null ? I : $.key),
                        (x = i($, x, I)),
                        C === null ? (k = $) : (C.sibling = $),
                        (C = $));
                return (
                    e &&
                    P.forEach(function (R) {
                        return t(b, R);
                    }),
                    st && Ua(b, I),
                        k
                );
            }
            function f(b, x, S, _) {
                var k = ed(S);
                if (typeof k != "function") throw Error(Z(150));
                if (((S = k.call(S)), S == null)) throw Error(Z(151));
                for (
                    var C = (k = null), P = x, I = (x = 0), $ = null, T = S.next();
                    P !== null && !T.done;
                    I++, T = S.next()
                ) {
                    P.index > I ? (($ = P), (P = null)) : ($ = P.sibling);
                    var R = h(b, P, T.value, _);
                    if (R === null) {
                        P === null && (P = $);
                        break;
                    }
                    e && P && R.alternate === null && t(b, P),
                        (x = i(R, x, I)),
                        C === null ? (k = R) : (C.sibling = R),
                        (C = R),
                        (P = $);
                }
                if (T.done) return n(b, P), st && Ua(b, I), k;
                if (P === null) {
                    for (; !T.done; I++, T = S.next())
                        (T = u(b, T.value, _)),
                        T !== null &&
                        ((x = i(T, x, I)),
                            C === null ? (k = T) : (C.sibling = T),
                            (C = T));
                    return st && Ua(b, I), k;
                }
                for (P = r(b, P); !T.done; I++, T = S.next())
                    (T = p(P, b, I, T.value, _)),
                    T !== null &&
                    (e &&
                    T.alternate !== null &&
                    P.delete(T.key === null ? I : T.key),
                        (x = i(T, x, I)),
                        C === null ? (k = T) : (C.sibling = T),
                        (C = T));
                return (
                    e &&
                    P.forEach(function (D) {
                        return t(b, D);
                    }),
                    st && Ua(b, I),
                        k
                );
            }
            function g(b, x, S, _) {
                if (
                    (typeof S == "object" &&
                    S !== null &&
                    S.type === Gs &&
                    S.key === null &&
                    (S = S.props.children),
                    typeof S == "object" && S !== null)
                ) {
                    switch (S.$$typeof) {
                        case Kh:
                            e: {
                                for (var k = S.key, C = x; C !== null; ) {
                                    if (C.key === k) {
                                        if (((k = S.type), k === Gs)) {
                                            if (C.tag === 7) {
                                                n(b, C.sibling),
                                                    (x = o(C, S.props.children)),
                                                    (x.return = b),
                                                    (b = x);
                                                break e;
                                            }
                                        } else if (
                                            C.elementType === k ||
                                            (typeof k == "object" &&
                                                k !== null &&
                                                k.$$typeof === Ri &&
                                                x5(k) === C.type)
                                        ) {
                                            n(b, C.sibling),
                                                (x = o(C, S.props)),
                                                (x.ref = Pd(b, C, S)),
                                                (x.return = b),
                                                (b = x);
                                            break e;
                                        }
                                        n(b, C);
                                        break;
                                    } else t(b, C);
                                    C = C.sibling;
                                }
                                S.type === Gs
                                    ? ((x = qa(S.props.children, b.mode, _, S.key)),
                                        (x.return = b),
                                        (b = x))
                                    : ((_ = Gp(
                                        S.type,
                                        S.key,
                                        S.props,
                                        null,
                                        b.mode,
                                        _
                                    )),
                                        (_.ref = Pd(b, x, S)),
                                        (_.return = b),
                                        (b = _));
                            }
                            return a(b);
                        case Ys:
                            e: {
                                for (C = S.key; x !== null; ) {
                                    if (x.key === C)
                                        if (
                                            x.tag === 4 &&
                                            x.stateNode.containerInfo ===
                                            S.containerInfo &&
                                            x.stateNode.implementation ===
                                            S.implementation
                                        ) {
                                            n(b, x.sibling),
                                                (x = o(x, S.children || [])),
                                                (x.return = b),
                                                (b = x);
                                            break e;
                                        } else {
                                            n(b, x);
                                            break;
                                        }
                                    else t(b, x);
                                    x = x.sibling;
                                }
                                (x = iy(S, b.mode, _)), (x.return = b), (b = x);
                            }
                            return a(b);
                        case Ri:
                            return (C = S._init), g(b, x, C(S._payload), _);
                    }
                    if (nd(S)) return m(b, x, S, _);
                    if (ed(S)) return f(b, x, S, _);
                    Tp(b, S);
                }
                return (typeof S == "string" && S !== "") || typeof S == "number"
                    ? ((S = "" + S),
                        x !== null && x.tag === 6
                            ? (n(b, x.sibling),
                                (x = o(x, S)),
                                (x.return = b),
                                (b = x))
                            : (n(b, x),
                                (x = oy(S, b.mode, _)),
                                (x.return = b),
                                (b = x)),
                        a(b))
                    : n(b, x);
            }
            return g;
        }
        var pl = S5(!0),
            _5 = S5(!1),
            Id = {},
            fo = Hi(Id),
            Td = Hi(Id),
            $d = Hi(Id);
        function Va(e) {
            if (e === Id) throw Error(Z(174));
            return e;
        }
        function Sb(e, t) {
            switch ((Ye($d, t), Ye(Td, e), Ye(fo, Id), (e = t.nodeType), e)) {
                case 9:
                case 11:
                    t = (t = t.documentElement) ? t.namespaceURI : x0(null, "");
                    break;
                default:
                    (e = e === 8 ? t.parentNode : t),
                        (t = e.namespaceURI || null),
                        (e = e.tagName),
                        (t = x0(t, e));
            }
            rt(fo), Ye(fo, t);
        }
        function fl() {
            rt(fo), rt(Td), rt($d);
        }
        function k5(e) {
            Va($d.current);
            var t = Va(fo.current),
                n = x0(t, e.type);
            t !== n && (Ye(Td, e), Ye(fo, n));
        }
        function _b(e) {
            Td.current === e && (rt(fo), rt(Td));
        }
        var dt = Hi(0);
        function $p(e) {
            for (var t = e; t !== null; ) {
                if (t.tag === 13) {
                    var n = t.memoizedState;
                    if (
                        n !== null &&
                        ((n = n.dehydrated),
                        n === null || n.data === "$?" || n.data === "$!")
                    )
                        return t;
                } else if (t.tag === 19 && t.memoizedProps.revealOrder !== void 0) {
                    if (t.flags & 128) return t;
                } else if (t.child !== null) {
                    (t.child.return = t), (t = t.child);
                    continue;
                }
                if (t === e) break;
                for (; t.sibling === null; ) {
                    if (t.return === null || t.return === e) return null;
                    t = t.return;
                }
                (t.sibling.return = t.return), (t = t.sibling);
            }
            return null;
        }
        var kb = [];
        function Cb() {
            for (var e = 0; e < kb.length; e++)
                kb[e]._workInProgressVersionPrimary = null;
            kb.length = 0;
        }
        var Ap = Yo.ReactCurrentDispatcher,
            Eb = Yo.ReactCurrentBatchConfig,
            Ka = 0,
            ut = null,
            Et = null,
            At = null,
            Mp = !1,
            Ad = !1,
            Md = 0,
            cO = 0;
        function nn() {
            throw Error(Z(321));
        }
        function Pb(e, t) {
            if (t === null) return !1;
            for (var n = 0; n < t.length && n < e.length; n++)
                if (!Nr(e[n], t[n])) return !1;
            return !0;
        }
        function Ib(e, t, n, r, o, i) {
            if (
                ((Ka = i),
                    (ut = t),
                    (t.memoizedState = null),
                    (t.updateQueue = null),
                    (t.lanes = 0),
                    (Ap.current = e === null || e.memoizedState === null ? pO : fO),
                    (e = n(r, o)),
                    Ad)
            ) {
                i = 0;
                do {
                    if (((Ad = !1), (Md = 0), 25 <= i)) throw Error(Z(301));
                    (i += 1),
                        (At = Et = null),
                        (t.updateQueue = null),
                        (Ap.current = mO),
                        (e = n(r, o));
                } while (Ad);
            }
            if (
                ((Ap.current = Op),
                    (t = Et !== null && Et.next !== null),
                    (Ka = 0),
                    (At = Et = ut = null),
                    (Mp = !1),
                    t)
            )
                throw Error(Z(300));
            return e;
        }
        function Tb() {
            var e = Md !== 0;
            return (Md = 0), e;
        }
        function mo() {
            var e = {
                memoizedState: null,
                baseState: null,
                baseQueue: null,
                queue: null,
                next: null,
            };
            return (
                At === null ? (ut.memoizedState = At = e) : (At = At.next = e), At
            );
        }
        function wr() {
            if (Et === null) {
                var e = ut.alternate;
                e = e !== null ? e.memoizedState : null;
            } else e = Et.next;
            var t = At === null ? ut.memoizedState : At.next;
            if (t !== null) (At = t), (Et = e);
            else {
                if (e === null) throw Error(Z(310));
                (Et = e),
                    (e = {
                        memoizedState: Et.memoizedState,
                        baseState: Et.baseState,
                        baseQueue: Et.baseQueue,
                        queue: Et.queue,
                        next: null,
                    }),
                    At === null ? (ut.memoizedState = At = e) : (At = At.next = e);
            }
            return At;
        }
        function zd(e, t) {
            return typeof t == "function" ? t(e) : t;
        }
        function $b(e) {
            var t = wr(),
                n = t.queue;
            if (n === null) throw Error(Z(311));
            n.lastRenderedReducer = e;
            var r = Et,
                o = r.baseQueue,
                i = n.pending;
            if (i !== null) {
                if (o !== null) {
                    var a = o.next;
                    (o.next = i.next), (i.next = a);
                }
                (r.baseQueue = o = i), (n.pending = null);
            }
            if (o !== null) {
                (i = o.next), (r = r.baseState);
                var s = (a = null),
                    l = null,
                    c = i;
                do {
                    var d = c.lane;
                    if ((Ka & d) === d)
                        l !== null &&
                        (l = l.next =
                            {
                                lane: 0,
                                action: c.action,
                                hasEagerState: c.hasEagerState,
                                eagerState: c.eagerState,
                                next: null,
                            }),
                            (r = c.hasEagerState ? c.eagerState : e(r, c.action));
                    else {
                        var u = {
                            lane: d,
                            action: c.action,
                            hasEagerState: c.hasEagerState,
                            eagerState: c.eagerState,
                            next: null,
                        };
                        l === null ? ((s = l = u), (a = r)) : (l = l.next = u),
                            (ut.lanes |= d),
                            (Wa |= d);
                    }
                    c = c.next;
                } while (c !== null && c !== i);
                l === null ? (a = r) : (l.next = s),
                Nr(r, t.memoizedState) || (jn = !0),
                    (t.memoizedState = r),
                    (t.baseState = a),
                    (t.baseQueue = l),
                    (n.lastRenderedState = r);
            }
            if (((e = n.interleaved), e !== null)) {
                o = e;
                do (i = o.lane), (ut.lanes |= i), (Wa |= i), (o = o.next);
                while (o !== e);
            } else o === null && (n.lanes = 0);
            return [t.memoizedState, n.dispatch];
        }
        function Ab(e) {
            var t = wr(),
                n = t.queue;
            if (n === null) throw Error(Z(311));
            n.lastRenderedReducer = e;
            var r = n.dispatch,
                o = n.pending,
                i = t.memoizedState;
            if (o !== null) {
                n.pending = null;
                var a = (o = o.next);
                do (i = e(i, a.action)), (a = a.next);
                while (a !== o);
                Nr(i, t.memoizedState) || (jn = !0),
                    (t.memoizedState = i),
                t.baseQueue === null && (t.baseState = i),
                    (n.lastRenderedState = i);
            }
            return [i, r];
        }
        function C5() {}
        function E5(e, t) {
            var n = ut,
                r = wr(),
                o = t(),
                i = !Nr(r.memoizedState, o);
            if (
                (i && ((r.memoizedState = o), (jn = !0)),
                    (r = r.queue),
                    Mb(T5.bind(null, n, r, e), [e]),
                r.getSnapshot !== t ||
                i ||
                (At !== null && At.memoizedState.tag & 1))
            ) {
                if (
                    ((n.flags |= 2048),
                        Rd(9, I5.bind(null, n, r, o, t), void 0, null),
                    Mt === null)
                )
                    throw Error(Z(349));
                Ka & 30 || P5(n, t, o);
            }
            return o;
        }
        function P5(e, t, n) {
            (e.flags |= 16384),
                (e = {getSnapshot: t, value: n}),
                (t = ut.updateQueue),
                t === null
                    ? ((t = {lastEffect: null, stores: null}),
                        (ut.updateQueue = t),
                        (t.stores = [e]))
                    : ((n = t.stores), n === null ? (t.stores = [e]) : n.push(e));
        }
        function I5(e, t, n, r) {
            (t.value = n), (t.getSnapshot = r), $5(t) && A5(e);
        }
        function T5(e, t, n) {
            return n(function () {
                $5(t) && A5(e);
            });
        }
        function $5(e) {
            var t = e.getSnapshot;
            e = e.value;
            try {
                var n = t();
                return !Nr(e, n);
            } catch {
                return !0;
            }
        }
        function A5(e) {
            var t = Qo(e, 1);
            t !== null && Vr(t, e, 1, -1);
        }
        function M5(e) {
            var t = mo();
            return (
                typeof e == "function" && (e = e()),
                    (t.memoizedState = t.baseState = e),
                    (e = {
                        pending: null,
                        interleaved: null,
                        lanes: 0,
                        dispatch: null,
                        lastRenderedReducer: zd,
                        lastRenderedState: e,
                    }),
                    (t.queue = e),
                    (e = e.dispatch = hO.bind(null, ut, e)),
                    [t.memoizedState, e]
            );
        }
        function Rd(e, t, n, r) {
            return (
                (e = {tag: e, create: t, destroy: n, deps: r, next: null}),
                    (t = ut.updateQueue),
                    t === null
                        ? ((t = {lastEffect: null, stores: null}),
                            (ut.updateQueue = t),
                            (t.lastEffect = e.next = e))
                        : ((n = t.lastEffect),
                            n === null
                                ? (t.lastEffect = e.next = e)
                                : ((r = n.next),
                                    (n.next = e),
                                    (e.next = r),
                                    (t.lastEffect = e))),
                    e
            );
        }
        function z5() {
            return wr().memoizedState;
        }
        function zp(e, t, n, r) {
            var o = mo();
            (ut.flags |= e),
                (o.memoizedState = Rd(1 | t, n, void 0, r === void 0 ? null : r));
        }
        function Rp(e, t, n, r) {
            var o = wr();
            r = r === void 0 ? null : r;
            var i = void 0;
            if (Et !== null) {
                var a = Et.memoizedState;
                if (((i = a.destroy), r !== null && Pb(r, a.deps))) {
                    o.memoizedState = Rd(t, n, i, r);
                    return;
                }
            }
            (ut.flags |= e), (o.memoizedState = Rd(1 | t, n, i, r));
        }
        function R5(e, t) {
            return zp(8390656, 8, e, t);
        }
        function Mb(e, t) {
            return Rp(2048, 8, e, t);
        }
        function O5(e, t) {
            return Rp(4, 2, e, t);
        }
        function D5(e, t) {
            return Rp(4, 4, e, t);
        }
        function L5(e, t) {
            if (typeof t == "function")
                return (
                    (e = e()),
                        t(e),
                        function () {
                            t(null);
                        }
                );
            if (t != null)
                return (
                    (e = e()),
                        (t.current = e),
                        function () {
                            t.current = null;
                        }
                );
        }
        function j5(e, t, n) {
            return (
                (n = n != null ? n.concat([e]) : null),
                    Rp(4, 4, L5.bind(null, t, e), n)
            );
        }
        function zb() {}
        function N5(e, t) {
            var n = wr();
            t = t === void 0 ? null : t;
            var r = n.memoizedState;
            return r !== null && t !== null && Pb(t, r[1])
                ? r[0]
                : ((n.memoizedState = [e, t]), e);
        }
        function F5(e, t) {
            var n = wr();
            t = t === void 0 ? null : t;
            var r = n.memoizedState;
            return r !== null && t !== null && Pb(t, r[1])
                ? r[0]
                : ((e = e()), (n.memoizedState = [e, t]), e);
        }
        function B5(e, t, n) {
            return Ka & 21
                ? (Nr(n, t) ||
                ((n = pk()), (ut.lanes |= n), (Wa |= n), (e.baseState = !0)),
                    t)
                : (e.baseState && ((e.baseState = !1), (jn = !0)),
                    (e.memoizedState = n));
        }
        function dO(e, t) {
            var n = Ne;
            (Ne = n !== 0 && 4 > n ? n : 4), e(!0);
            var r = Eb.transition;
            Eb.transition = {};
            try {
                e(!1), t();
            } finally {
                (Ne = n), (Eb.transition = r);
            }
        }
        function U5() {
            return wr().memoizedState;
        }
        function uO(e, t, n) {
            var r = Zi(e);
            if (
                ((n = {
                    lane: r,
                    action: n,
                    hasEagerState: !1,
                    eagerState: null,
                    next: null,
                }),
                    H5(e))
            )
                V5(t, n);
            else if (((n = p5(e, t, n, r)), n !== null)) {
                var o = In();
                Vr(n, e, r, o), K5(n, t, r);
            }
        }
        function hO(e, t, n) {
            var r = Zi(e),
                o = {
                    lane: r,
                    action: n,
                    hasEagerState: !1,
                    eagerState: null,
                    next: null,
                };
            if (H5(e)) V5(t, o);
            else {
                var i = e.alternate;
                if (
                    e.lanes === 0 &&
                    (i === null || i.lanes === 0) &&
                    ((i = t.lastRenderedReducer), i !== null)
                )
                    try {
                        var a = t.lastRenderedState,
                            s = i(a, n);
                        if (
                            ((o.hasEagerState = !0), (o.eagerState = s), Nr(s, a))
                        ) {
                            var l = t.interleaved;
                            l === null
                                ? ((o.next = o), bb(t))
                                : ((o.next = l.next), (l.next = o)),
                                (t.interleaved = o);
                            return;
                        }
                    } catch {
                    } finally {
                    }
                (n = p5(e, t, o, r)),
                n !== null && ((o = In()), Vr(n, e, r, o), K5(n, t, r));
            }
        }
        function H5(e) {
            var t = e.alternate;
            return e === ut || (t !== null && t === ut);
        }
        function V5(e, t) {
            Ad = Mp = !0;
            var n = e.pending;
            n === null ? (t.next = t) : ((t.next = n.next), (n.next = t)),
                (e.pending = t);
        }
        function K5(e, t, n) {
            if (n & 4194240) {
                var r = t.lanes;
                (r &= e.pendingLanes), (n |= r), (t.lanes = n), z0(e, n);
            }
        }
        var Op = {
                readContext: yr,
                useCallback: nn,
                useContext: nn,
                useEffect: nn,
                useImperativeHandle: nn,
                useInsertionEffect: nn,
                useLayoutEffect: nn,
                useMemo: nn,
                useReducer: nn,
                useRef: nn,
                useState: nn,
                useDebugValue: nn,
                useDeferredValue: nn,
                useTransition: nn,
                useMutableSource: nn,
                useSyncExternalStore: nn,
                useId: nn,
                unstable_isNewReconciler: !1,
            },
            pO = {
                readContext: yr,
                useCallback: function (e, t) {
                    return (mo().memoizedState = [e, t === void 0 ? null : t]), e;
                },
                useContext: yr,
                useEffect: R5,
                useImperativeHandle: function (e, t, n) {
                    return (
                        (n = n != null ? n.concat([e]) : null),
                            zp(4194308, 4, L5.bind(null, t, e), n)
                    );
                },
                useLayoutEffect: function (e, t) {
                    return zp(4194308, 4, e, t);
                },
                useInsertionEffect: function (e, t) {
                    return zp(4, 2, e, t);
                },
                useMemo: function (e, t) {
                    var n = mo();
                    return (
                        (t = t === void 0 ? null : t),
                            (e = e()),
                            (n.memoizedState = [e, t]),
                            e
                    );
                },
                useReducer: function (e, t, n) {
                    var r = mo();
                    return (
                        (t = n !== void 0 ? n(t) : t),
                            (r.memoizedState = r.baseState = t),
                            (e = {
                                pending: null,
                                interleaved: null,
                                lanes: 0,
                                dispatch: null,
                                lastRenderedReducer: e,
                                lastRenderedState: t,
                            }),
                            (r.queue = e),
                            (e = e.dispatch = uO.bind(null, ut, e)),
                            [r.memoizedState, e]
                    );
                },
                useRef: function (e) {
                    var t = mo();
                    return (e = {current: e}), (t.memoizedState = e);
                },
                useState: M5,
                useDebugValue: zb,
                useDeferredValue: function (e) {
                    return (mo().memoizedState = e);
                },
                useTransition: function () {
                    var e = M5(!1),
                        t = e[0];
                    return (
                        (e = dO.bind(null, e[1])), (mo().memoizedState = e), [t, e]
                    );
                },
                useMutableSource: function () {},
                useSyncExternalStore: function (e, t, n) {
                    var r = ut,
                        o = mo();
                    if (st) {
                        if (n === void 0) throw Error(Z(407));
                        n = n();
                    } else {
                        if (((n = t()), Mt === null)) throw Error(Z(349));
                        Ka & 30 || P5(r, t, n);
                    }
                    o.memoizedState = n;
                    var i = {value: n, getSnapshot: t};
                    return (
                        (o.queue = i),
                            R5(T5.bind(null, r, i, e), [e]),
                            (r.flags |= 2048),
                            Rd(9, I5.bind(null, r, i, n, t), void 0, null),
                            n
                    );
                },
                useId: function () {
                    var e = mo(),
                        t = Mt.identifierPrefix;
                    if (st) {
                        var n = Zo,
                            r = qo;
                        (n = (r & ~(1 << (32 - jr(r) - 1))).toString(32) + n),
                            (t = ":" + t + "R" + n),
                            (n = Md++),
                        0 < n && (t += "H" + n.toString(32)),
                            (t += ":");
                    } else (n = cO++), (t = ":" + t + "r" + n.toString(32) + ":");
                    return (e.memoizedState = t);
                },
                unstable_isNewReconciler: !1,
            },
            fO = {
                readContext: yr,
                useCallback: N5,
                useContext: yr,
                useEffect: Mb,
                useImperativeHandle: j5,
                useInsertionEffect: O5,
                useLayoutEffect: D5,
                useMemo: F5,
                useReducer: $b,
                useRef: z5,
                useState: function () {
                    return $b(zd);
                },
                useDebugValue: zb,
                useDeferredValue: function (e) {
                    var t = wr();
                    return B5(t, Et.memoizedState, e);
                },
                useTransition: function () {
                    var e = $b(zd)[0],
                        t = wr().memoizedState;
                    return [e, t];
                },
                useMutableSource: C5,
                useSyncExternalStore: E5,
                useId: U5,
                unstable_isNewReconciler: !1,
            },
            mO = {
                readContext: yr,
                useCallback: N5,
                useContext: yr,
                useEffect: Mb,
                useImperativeHandle: j5,
                useInsertionEffect: O5,
                useLayoutEffect: D5,
                useMemo: F5,
                useReducer: Ab,
                useRef: z5,
                useState: function () {
                    return Ab(zd);
                },
                useDebugValue: zb,
                useDeferredValue: function (e) {
                    var t = wr();
                    return Et === null
                        ? (t.memoizedState = e)
                        : B5(t, Et.memoizedState, e);
                },
                useTransition: function () {
                    var e = Ab(zd)[0],
                        t = wr().memoizedState;
                    return [e, t];
                },
                useMutableSource: C5,
                useSyncExternalStore: E5,
                useId: U5,
                unstable_isNewReconciler: !1,
            };
        function ml(e, t) {
            try {
                var n = "",
                    r = t;
                do (n += Hz(r)), (r = r.return);
                while (r);
                var o = n;
            } catch (i) {
                o =
                    `
Error generating stack: ` +
                    i.message +
                    `
` +
                    i.stack;
            }
            return {value: e, source: t, stack: o, digest: null};
        }
        function Rb(e, t, n) {
            return {value: e, source: null, stack: n ?? null, digest: t ?? null};
        }
        function Ob(e, t) {
            try {
                console.error(t.value);
            } catch (n) {
                setTimeout(function () {
                    throw n;
                });
            }
        }
        var gO = typeof WeakMap == "function" ? WeakMap : Map;
        function W5(e, t, n) {
            (n = Jo(-1, n)), (n.tag = 3), (n.payload = {element: null});
            var r = t.value;
            return (
                (n.callback = function () {
                    Up || ((Up = !0), (qb = r)), Ob(e, t);
                }),
                    n
            );
        }
        function Y5(e, t, n) {
            (n = Jo(-1, n)), (n.tag = 3);
            var r = e.type.getDerivedStateFromError;
            if (typeof r == "function") {
                var o = t.value;
                (n.payload = function () {
                    return r(o);
                }),
                    (n.callback = function () {
                        Ob(e, t);
                    });
            }
            var i = e.stateNode;
            return (
                i !== null &&
                typeof i.componentDidCatch == "function" &&
                (n.callback = function () {
                    Ob(e, t),
                    typeof r != "function" &&
                    (Xi === null
                        ? (Xi = new Set([this]))
                        : Xi.add(this));
                    var a = t.stack;
                    this.componentDidCatch(t.value, {
                        componentStack: a !== null ? a : "",
                    });
                }),
                    n
            );
        }
        function G5(e, t, n) {
            var r = e.pingCache;
            if (r === null) {
                r = e.pingCache = new gO();
                var o = new Set();
                r.set(t, o);
            } else (o = r.get(t)), o === void 0 && ((o = new Set()), r.set(t, o));
            o.has(n) || (o.add(n), (e = $O.bind(null, e, t, n)), t.then(e, e));
        }
        function X5(e) {
            do {
                var t;
                if (
                    ((t = e.tag === 13) &&
                    ((t = e.memoizedState),
                        (t = t !== null ? t.dehydrated !== null : !0)),
                        t)
                )
                    return e;
                e = e.return;
            } while (e !== null);
            return null;
        }
        function q5(e, t, n, r, o) {
            return e.mode & 1
                ? ((e.flags |= 65536), (e.lanes = o), e)
                : (e === t
                    ? (e.flags |= 65536)
                    : ((e.flags |= 128),
                        (n.flags |= 131072),
                        (n.flags &= -52805),
                    n.tag === 1 &&
                    (n.alternate === null
                        ? (n.tag = 17)
                        : ((t = Jo(-1, 1)), (t.tag = 2), Yi(n, t, 1))),
                        (n.lanes |= 1)),
                    e);
        }
        var vO = Yo.ReactCurrentOwner,
            jn = !1;
        function Pn(e, t, n, r) {
            t.child = e === null ? _5(t, null, n, r) : pl(t, e.child, n, r);
        }
        function Z5(e, t, n, r, o) {
            n = n.render;
            var i = t.ref;
            return (
                hl(t, o),
                    (r = Ib(e, t, n, r, i, o)),
                    (n = Tb()),
                    e !== null && !jn
                        ? ((t.updateQueue = e.updateQueue),
                            (t.flags &= -2053),
                            (e.lanes &= ~o),
                            ei(e, t, o))
                        : (st && n && cb(t), (t.flags |= 1), Pn(e, t, r, o), t.child)
            );
        }
        function Q5(e, t, n, r, o) {
            if (e === null) {
                var i = n.type;
                return typeof i == "function" &&
                !ry(i) &&
                i.defaultProps === void 0 &&
                n.compare === null &&
                n.defaultProps === void 0
                    ? ((t.tag = 15), (t.type = i), J5(e, t, i, r, o))
                    : ((e = Gp(n.type, null, r, t, t.mode, o)),
                        (e.ref = t.ref),
                        (e.return = t),
                        (t.child = e));
            }
            if (((i = e.child), !(e.lanes & o))) {
                var a = i.memoizedProps;
                if (
                    ((n = n.compare),
                        (n = n !== null ? n : wd),
                    n(a, r) && e.ref === t.ref)
                )
                    return ei(e, t, o);
            }
            return (
                (t.flags |= 1),
                    (e = Ji(i, r)),
                    (e.ref = t.ref),
                    (e.return = t),
                    (t.child = e)
            );
        }
        function J5(e, t, n, r, o) {
            if (e !== null) {
                var i = e.memoizedProps;
                if (wd(i, r) && e.ref === t.ref)
                    if (((jn = !1), (t.pendingProps = r = i), (e.lanes & o) !== 0))
                        e.flags & 131072 && (jn = !0);
                    else return (t.lanes = e.lanes), ei(e, t, o);
            }
            return Db(e, t, n, r, o);
        }
        function e3(e, t, n) {
            var r = t.pendingProps,
                o = r.children,
                i = e !== null ? e.memoizedState : null;
            if (r.mode === "hidden")
                if (!(t.mode & 1))
                    (t.memoizedState = {
                        baseLanes: 0,
                        cachePool: null,
                        transitions: null,
                    }),
                        Ye(vl, er),
                        (er |= n);
                else {
                    if (!(n & 1073741824))
                        return (
                            (e = i !== null ? i.baseLanes | n : n),
                                (t.lanes = t.childLanes = 1073741824),
                                (t.memoizedState = {
                                    baseLanes: e,
                                    cachePool: null,
                                    transitions: null,
                                }),
                                (t.updateQueue = null),
                                Ye(vl, er),
                                (er |= e),
                                null
                        );
                    (t.memoizedState = {
                        baseLanes: 0,
                        cachePool: null,
                        transitions: null,
                    }),
                        (r = i !== null ? i.baseLanes : n),
                        Ye(vl, er),
                        (er |= r);
                }
            else
                i !== null
                    ? ((r = i.baseLanes | n), (t.memoizedState = null))
                    : (r = n),
                    Ye(vl, er),
                    (er |= r);
            return Pn(e, t, o, n), t.child;
        }
        function t3(e, t) {
            var n = t.ref;
            ((e === null && n !== null) || (e !== null && e.ref !== n)) &&
            ((t.flags |= 512), (t.flags |= 2097152));
        }
        function Db(e, t, n, r, o) {
            var i = Ln(n) ? Fa : tn.current;
            return (
                (i = sl(t, i)),
                    hl(t, o),
                    (n = Ib(e, t, n, r, i, o)),
                    (r = Tb()),
                    e !== null && !jn
                        ? ((t.updateQueue = e.updateQueue),
                            (t.flags &= -2053),
                            (e.lanes &= ~o),
                            ei(e, t, o))
                        : (st && r && cb(t), (t.flags |= 1), Pn(e, t, n, o), t.child)
            );
        }
        function n3(e, t, n, r, o) {
            if (Ln(n)) {
                var i = !0;
                yp(t);
            } else i = !1;
            if ((hl(t, o), t.stateNode === null))
                Lp(e, t), y5(t, n, r), xb(t, n, r, o), (r = !0);
            else if (e === null) {
                var a = t.stateNode,
                    s = t.memoizedProps;
                a.props = s;
                var l = a.context,
                    c = n.contextType;
                typeof c == "object" && c !== null
                    ? (c = yr(c))
                    : ((c = Ln(n) ? Fa : tn.current), (c = sl(t, c)));
                var d = n.getDerivedStateFromProps,
                    u =
                        typeof d == "function" ||
                        typeof a.getSnapshotBeforeUpdate == "function";
                u ||
                (typeof a.UNSAFE_componentWillReceiveProps != "function" &&
                    typeof a.componentWillReceiveProps != "function") ||
                ((s !== r || l !== c) && w5(t, a, r, c)),
                    (Wi = !1);
                var h = t.memoizedState;
                (a.state = h),
                    Pp(t, r, a, o),
                    (l = t.memoizedState),
                    s !== r || h !== l || Dn.current || Wi
                        ? (typeof d == "function" &&
                        (wb(t, n, d, r), (l = t.memoizedState)),
                            (s = Wi || b5(t, n, s, r, h, l, c))
                                ? (u ||
                                (typeof a.UNSAFE_componentWillMount !=
                                    "function" &&
                                    typeof a.componentWillMount !=
                                    "function") ||
                                (typeof a.componentWillMount == "function" &&
                                a.componentWillMount(),
                                typeof a.UNSAFE_componentWillMount ==
                                "function" &&
                                a.UNSAFE_componentWillMount()),
                                typeof a.componentDidMount == "function" &&
                                (t.flags |= 4194308))
                                : (typeof a.componentDidMount == "function" &&
                                (t.flags |= 4194308),
                                    (t.memoizedProps = r),
                                    (t.memoizedState = l)),
                            (a.props = r),
                            (a.state = l),
                            (a.context = c),
                            (r = s))
                        : (typeof a.componentDidMount == "function" &&
                        (t.flags |= 4194308),
                            (r = !1));
            } else {
                (a = t.stateNode),
                    f5(e, t),
                    (s = t.memoizedProps),
                    (c = t.type === t.elementType ? s : Br(t.type, s)),
                    (a.props = c),
                    (u = t.pendingProps),
                    (h = a.context),
                    (l = n.contextType),
                    typeof l == "object" && l !== null
                        ? (l = yr(l))
                        : ((l = Ln(n) ? Fa : tn.current), (l = sl(t, l)));
                var p = n.getDerivedStateFromProps;
                (d =
                    typeof p == "function" ||
                    typeof a.getSnapshotBeforeUpdate == "function") ||
                (typeof a.UNSAFE_componentWillReceiveProps != "function" &&
                    typeof a.componentWillReceiveProps != "function") ||
                ((s !== u || h !== l) && w5(t, a, r, l)),
                    (Wi = !1),
                    (h = t.memoizedState),
                    (a.state = h),
                    Pp(t, r, a, o);
                var m = t.memoizedState;
                s !== u || h !== m || Dn.current || Wi
                    ? (typeof p == "function" &&
                    (wb(t, n, p, r), (m = t.memoizedState)),
                        (c = Wi || b5(t, n, c, r, h, m, l) || !1)
                            ? (d ||
                            (typeof a.UNSAFE_componentWillUpdate !=
                                "function" &&
                                typeof a.componentWillUpdate != "function") ||
                            (typeof a.componentWillUpdate == "function" &&
                            a.componentWillUpdate(r, m, l),
                            typeof a.UNSAFE_componentWillUpdate == "function" &&
                            a.UNSAFE_componentWillUpdate(r, m, l)),
                            typeof a.componentDidUpdate == "function" &&
                            (t.flags |= 4),
                            typeof a.getSnapshotBeforeUpdate == "function" &&
                            (t.flags |= 1024))
                            : (typeof a.componentDidUpdate != "function" ||
                            (s === e.memoizedProps && h === e.memoizedState) ||
                            (t.flags |= 4),
                            typeof a.getSnapshotBeforeUpdate != "function" ||
                            (s === e.memoizedProps && h === e.memoizedState) ||
                            (t.flags |= 1024),
                                (t.memoizedProps = r),
                                (t.memoizedState = m)),
                        (a.props = r),
                        (a.state = m),
                        (a.context = l),
                        (r = c))
                    : (typeof a.componentDidUpdate != "function" ||
                    (s === e.memoizedProps && h === e.memoizedState) ||
                    (t.flags |= 4),
                    typeof a.getSnapshotBeforeUpdate != "function" ||
                    (s === e.memoizedProps && h === e.memoizedState) ||
                    (t.flags |= 1024),
                        (r = !1));
            }
            return Lb(e, t, n, r, i, o);
        }
        function Lb(e, t, n, r, o, i) {
            t3(e, t);
            var a = (t.flags & 128) !== 0;
            if (!r && !a) return o && a5(t, n, !1), ei(e, t, i);
            (r = t.stateNode), (vO.current = t);
            var s =
                a && typeof n.getDerivedStateFromError != "function"
                    ? null
                    : r.render();
            return (
                (t.flags |= 1),
                    e !== null && a
                        ? ((t.child = pl(t, e.child, null, i)),
                            (t.child = pl(t, null, s, i)))
                        : Pn(e, t, s, i),
                    (t.memoizedState = r.state),
                o && a5(t, n, !0),
                    t.child
            );
        }
        function r3(e) {
            var t = e.stateNode;
            t.pendingContext
                ? o5(e, t.pendingContext, t.pendingContext !== t.context)
                : t.context && o5(e, t.context, !1),
                Sb(e, t.containerInfo);
        }
        function o3(e, t, n, r, o) {
            return dl(), pb(o), (t.flags |= 256), Pn(e, t, n, r), t.child;
        }
        var jb = {dehydrated: null, treeContext: null, retryLane: 0};
        function Nb(e) {
            return {baseLanes: e, cachePool: null, transitions: null};
        }
        function i3(e, t, n) {
            var r = t.pendingProps,
                o = dt.current,
                i = !1,
                a = (t.flags & 128) !== 0,
                s;
            if (
                ((s = a) ||
                (s =
                    e !== null && e.memoizedState === null
                        ? !1
                        : (o & 2) !== 0),
                    s
                        ? ((i = !0), (t.flags &= -129))
                        : (e === null || e.memoizedState !== null) && (o |= 1),
                    Ye(dt, o & 1),
                e === null)
            )
                return (
                    hb(t),
                        (e = t.memoizedState),
                        e !== null && ((e = e.dehydrated), e !== null)
                            ? (t.mode & 1
                                ? e.data === "$!"
                                    ? (t.lanes = 8)
                                    : (t.lanes = 1073741824)
                                : (t.lanes = 1),
                                null)
                            : ((a = r.children),
                                (e = r.fallback),
                                i
                                    ? ((r = t.mode),
                                        (i = t.child),
                                        (a = {mode: "hidden", children: a}),
                                        !(r & 1) && i !== null
                                            ? ((i.childLanes = 0), (i.pendingProps = a))
                                            : (i = Xp(a, r, 0, null)),
                                        (e = qa(e, r, n, null)),
                                        (i.return = t),
                                        (e.return = t),
                                        (i.sibling = e),
                                        (t.child = i),
                                        (t.child.memoizedState = Nb(n)),
                                        (t.memoizedState = jb),
                                        e)
                                    : Fb(t, a))
                );
            if (
                ((o = e.memoizedState),
                o !== null && ((s = o.dehydrated), s !== null))
            )
                return bO(e, t, a, r, s, o, n);
            if (i) {
                (i = r.fallback), (a = t.mode), (o = e.child), (s = o.sibling);
                var l = {mode: "hidden", children: r.children};
                return (
                    !(a & 1) && t.child !== o
                        ? ((r = t.child),
                            (r.childLanes = 0),
                            (r.pendingProps = l),
                            (t.deletions = null))
                        : ((r = Ji(o, l)),
                            (r.subtreeFlags = o.subtreeFlags & 14680064)),
                        s !== null
                            ? (i = Ji(s, i))
                            : ((i = qa(i, a, n, null)), (i.flags |= 2)),
                        (i.return = t),
                        (r.return = t),
                        (r.sibling = i),
                        (t.child = r),
                        (r = i),
                        (i = t.child),
                        (a = e.child.memoizedState),
                        (a =
                            a === null
                                ? Nb(n)
                                : {
                                    baseLanes: a.baseLanes | n,
                                    cachePool: null,
                                    transitions: a.transitions,
                                }),
                        (i.memoizedState = a),
                        (i.childLanes = e.childLanes & ~n),
                        (t.memoizedState = jb),
                        r
                );
            }
            return (
                (i = e.child),
                    (e = i.sibling),
                    (r = Ji(i, {mode: "visible", children: r.children})),
                !(t.mode & 1) && (r.lanes = n),
                    (r.return = t),
                    (r.sibling = null),
                e !== null &&
                ((n = t.deletions),
                    n === null
                        ? ((t.deletions = [e]), (t.flags |= 16))
                        : n.push(e)),
                    (t.child = r),
                    (t.memoizedState = null),
                    r
            );
        }
        function Fb(e, t) {
            return (
                (t = Xp({mode: "visible", children: t}, e.mode, 0, null)),
                    (t.return = e),
                    (e.child = t)
            );
        }
        function Dp(e, t, n, r) {
            return (
                r !== null && pb(r),
                    pl(t, e.child, null, n),
                    (e = Fb(t, t.pendingProps.children)),
                    (e.flags |= 2),
                    (t.memoizedState = null),
                    e
            );
        }
        function bO(e, t, n, r, o, i, a) {
            if (n)
                return t.flags & 256
                    ? ((t.flags &= -257), (r = Rb(Error(Z(422)))), Dp(e, t, a, r))
                    : t.memoizedState !== null
                        ? ((t.child = e.child), (t.flags |= 128), null)
                        : ((i = r.fallback),
                            (o = t.mode),
                            (r = Xp({mode: "visible", children: r.children}, o, 0, null)),
                            (i = qa(i, o, a, null)),
                            (i.flags |= 2),
                            (r.return = t),
                            (i.return = t),
                            (r.sibling = i),
                            (t.child = r),
                        t.mode & 1 && pl(t, e.child, null, a),
                            (t.child.memoizedState = Nb(a)),
                            (t.memoizedState = jb),
                            i);
            if (!(t.mode & 1)) return Dp(e, t, a, null);
            if (o.data === "$!") {
                if (((r = o.nextSibling && o.nextSibling.dataset), r))
                    var s = r.dgst;
                return (
                    (r = s),
                        (i = Error(Z(419))),
                        (r = Rb(i, r, void 0)),
                        Dp(e, t, a, r)
                );
            }
            if (((s = (a & e.childLanes) !== 0), jn || s)) {
                if (((r = Mt), r !== null)) {
                    switch (a & -a) {
                        case 4:
                            o = 2;
                            break;
                        case 16:
                            o = 8;
                            break;
                        case 64:
                        case 128:
                        case 256:
                        case 512:
                        case 1024:
                        case 2048:
                        case 4096:
                        case 8192:
                        case 16384:
                        case 32768:
                        case 65536:
                        case 131072:
                        case 262144:
                        case 524288:
                        case 1048576:
                        case 2097152:
                        case 4194304:
                        case 8388608:
                        case 16777216:
                        case 33554432:
                        case 67108864:
                            o = 32;
                            break;
                        case 536870912:
                            o = 268435456;
                            break;
                        default:
                            o = 0;
                    }
                    (o = o & (r.suspendedLanes | a) ? 0 : o),
                    o !== 0 &&
                    o !== i.retryLane &&
                    ((i.retryLane = o), Qo(e, o), Vr(r, e, o, -1));
                }
                return ny(), (r = Rb(Error(Z(421)))), Dp(e, t, a, r);
            }
            return o.data === "$?"
                ? ((t.flags |= 128),
                    (t.child = e.child),
                    (t = AO.bind(null, e)),
                    (o._reactRetry = t),
                    null)
                : ((e = i.treeContext),
                    (Jn = Ui(o.nextSibling)),
                    (Qn = t),
                    (st = !0),
                    (Fr = null),
                e !== null &&
                ((vr[br++] = qo),
                    (vr[br++] = Zo),
                    (vr[br++] = Ba),
                    (qo = e.id),
                    (Zo = e.overflow),
                    (Ba = t)),
                    (t = Fb(t, r.children)),
                    (t.flags |= 4096),
                    t);
        }
        function a3(e, t, n) {
            e.lanes |= t;
            var r = e.alternate;
            r !== null && (r.lanes |= t), vb(e.return, t, n);
        }
        function Bb(e, t, n, r, o) {
            var i = e.memoizedState;
            i === null
                ? (e.memoizedState = {
                    isBackwards: t,
                    rendering: null,
                    renderingStartTime: 0,
                    last: r,
                    tail: n,
                    tailMode: o,
                })
                : ((i.isBackwards = t),
                    (i.rendering = null),
                    (i.renderingStartTime = 0),
                    (i.last = r),
                    (i.tail = n),
                    (i.tailMode = o));
        }
        function s3(e, t, n) {
            var r = t.pendingProps,
                o = r.revealOrder,
                i = r.tail;
            if ((Pn(e, t, r.children, n), (r = dt.current), r & 2))
                (r = (r & 1) | 2), (t.flags |= 128);
            else {
                if (e !== null && e.flags & 128)
                    e: for (e = t.child; e !== null; ) {
                        if (e.tag === 13) e.memoizedState !== null && a3(e, n, t);
                        else if (e.tag === 19) a3(e, n, t);
                        else if (e.child !== null) {
                            (e.child.return = e), (e = e.child);
                            continue;
                        }
                        if (e === t) break e;
                        for (; e.sibling === null; ) {
                            if (e.return === null || e.return === t) break e;
                            e = e.return;
                        }
                        (e.sibling.return = e.return), (e = e.sibling);
                    }
                r &= 1;
            }
            if ((Ye(dt, r), !(t.mode & 1))) t.memoizedState = null;
            else
                switch (o) {
                    case "forwards":
                        for (n = t.child, o = null; n !== null; )
                            (e = n.alternate),
                            e !== null && $p(e) === null && (o = n),
                                (n = n.sibling);
                        (n = o),
                            n === null
                                ? ((o = t.child), (t.child = null))
                                : ((o = n.sibling), (n.sibling = null)),
                            Bb(t, !1, o, n, i);
                        break;
                    case "backwards":
                        for (n = null, o = t.child, t.child = null; o !== null; ) {
                            if (((e = o.alternate), e !== null && $p(e) === null)) {
                                t.child = o;
                                break;
                            }
                            (e = o.sibling), (o.sibling = n), (n = o), (o = e);
                        }
                        Bb(t, !0, n, null, i);
                        break;
                    case "together":
                        Bb(t, !1, null, null, void 0);
                        break;
                    default:
                        t.memoizedState = null;
                }
            return t.child;
        }
        function Lp(e, t) {
            !(t.mode & 1) &&
            e !== null &&
            ((e.alternate = null), (t.alternate = null), (t.flags |= 2));
        }
        function ei(e, t, n) {
            if (
                (e !== null && (t.dependencies = e.dependencies),
                    (Wa |= t.lanes),
                    !(n & t.childLanes))
            )
                return null;
            if (e !== null && t.child !== e.child) throw Error(Z(153));
            if (t.child !== null) {
                for (
                    e = t.child,
                        n = Ji(e, e.pendingProps),
                        t.child = n,
                        n.return = t;
                    e.sibling !== null;

                )
                    (e = e.sibling),
                        (n = n.sibling = Ji(e, e.pendingProps)),
                        (n.return = t);
                n.sibling = null;
            }
            return t.child;
        }
        function yO(e, t, n) {
            switch (t.tag) {
                case 3:
                    r3(t), dl();
                    break;
                case 5:
                    k5(t);
                    break;
                case 1:
                    Ln(t.type) && yp(t);
                    break;
                case 4:
                    Sb(t, t.stateNode.containerInfo);
                    break;
                case 10:
                    var r = t.type._context,
                        o = t.memoizedProps.value;
                    Ye(kp, r._currentValue), (r._currentValue = o);
                    break;
                case 13:
                    if (((r = t.memoizedState), r !== null))
                        return r.dehydrated !== null
                            ? (Ye(dt, dt.current & 1), (t.flags |= 128), null)
                            : n & t.child.childLanes
                                ? i3(e, t, n)
                                : (Ye(dt, dt.current & 1),
                                    (e = ei(e, t, n)),
                                    e !== null ? e.sibling : null);
                    Ye(dt, dt.current & 1);
                    break;
                case 19:
                    if (((r = (n & t.childLanes) !== 0), e.flags & 128)) {
                        if (r) return s3(e, t, n);
                        t.flags |= 128;
                    }
                    if (
                        ((o = t.memoizedState),
                        o !== null &&
                        ((o.rendering = null),
                            (o.tail = null),
                            (o.lastEffect = null)),
                            Ye(dt, dt.current),
                            r)
                    )
                        break;
                    return null;
                case 22:
                case 23:
                    return (t.lanes = 0), e3(e, t, n);
            }
            return ei(e, t, n);
        }
        var l3, Ub, c3, d3;
        (l3 = function (e, t) {
            for (var n = t.child; n !== null; ) {
                if (n.tag === 5 || n.tag === 6) e.appendChild(n.stateNode);
                else if (n.tag !== 4 && n.child !== null) {
                    (n.child.return = n), (n = n.child);
                    continue;
                }
                if (n === t) break;
                for (; n.sibling === null; ) {
                    if (n.return === null || n.return === t) return;
                    n = n.return;
                }
                (n.sibling.return = n.return), (n = n.sibling);
            }
        }),
            (Ub = function () {}),
            (c3 = function (e, t, n, r) {
                var o = e.memoizedProps;
                if (o !== r) {
                    (e = t.stateNode), Va(fo.current);
                    var i = null;
                    switch (n) {
                        case "input":
                            (o = v0(e, o)), (r = v0(e, r)), (i = []);
                            break;
                        case "select":
                            (o = ct({}, o, {value: void 0})),
                                (r = ct({}, r, {value: void 0})),
                                (i = []);
                            break;
                        case "textarea":
                            (o = w0(e, o)), (r = w0(e, r)), (i = []);
                            break;
                        default:
                            typeof o.onClick != "function" &&
                            typeof r.onClick == "function" &&
                            (e.onclick = gp);
                    }
                    S0(n, r);
                    var a;
                    n = null;
                    for (c in o)
                        if (
                            !r.hasOwnProperty(c) &&
                            o.hasOwnProperty(c) &&
                            o[c] != null
                        )
                            if (c === "style") {
                                var s = o[c];
                                for (a in s)
                                    s.hasOwnProperty(a) &&
                                    (n || (n = {}), (n[a] = ""));
                            } else
                                c !== "dangerouslySetInnerHTML" &&
                                c !== "children" &&
                                c !== "suppressContentEditableWarning" &&
                                c !== "suppressHydrationWarning" &&
                                c !== "autoFocus" &&
                                (Jc.hasOwnProperty(c)
                                    ? i || (i = [])
                                    : (i = i || []).push(c, null));
                    for (c in r) {
                        var l = r[c];
                        if (
                            ((s = o != null ? o[c] : void 0),
                            r.hasOwnProperty(c) &&
                            l !== s &&
                            (l != null || s != null))
                        )
                            if (c === "style")
                                if (s) {
                                    for (a in s)
                                        !s.hasOwnProperty(a) ||
                                        (l && l.hasOwnProperty(a)) ||
                                        (n || (n = {}), (n[a] = ""));
                                    for (a in l)
                                        l.hasOwnProperty(a) &&
                                        s[a] !== l[a] &&
                                        (n || (n = {}), (n[a] = l[a]));
                                } else n || (i || (i = []), i.push(c, n)), (n = l);
                            else
                                c === "dangerouslySetInnerHTML"
                                    ? ((l = l ? l.__html : void 0),
                                        (s = s ? s.__html : void 0),
                                    l != null &&
                                    s !== l &&
                                    (i = i || []).push(c, l))
                                    : c === "children"
                                        ? (typeof l != "string" &&
                                            typeof l != "number") ||
                                        (i = i || []).push(c, "" + l)
                                        : c !== "suppressContentEditableWarning" &&
                                        c !== "suppressHydrationWarning" &&
                                        (Jc.hasOwnProperty(c)
                                            ? (l != null &&
                                            c === "onScroll" &&
                                            nt("scroll", e),
                                            i || s === l || (i = []))
                                            : (i = i || []).push(c, l));
                    }
                    n && (i = i || []).push("style", n);
                    var c = i;
                    (t.updateQueue = c) && (t.flags |= 4);
                }
            }),
            (d3 = function (e, t, n, r) {
                n !== r && (t.flags |= 4);
            });
        function Od(e, t) {
            if (!st)
                switch (e.tailMode) {
                    case "hidden":
                        t = e.tail;
                        for (var n = null; t !== null; )
                            t.alternate !== null && (n = t), (t = t.sibling);
                        n === null ? (e.tail = null) : (n.sibling = null);
                        break;
                    case "collapsed":
                        n = e.tail;
                        for (var r = null; n !== null; )
                            n.alternate !== null && (r = n), (n = n.sibling);
                        r === null
                            ? t || e.tail === null
                                ? (e.tail = null)
                                : (e.tail.sibling = null)
                            : (r.sibling = null);
                }
        }
        function rn(e) {
            var t = e.alternate !== null && e.alternate.child === e.child,
                n = 0,
                r = 0;
            if (t)
                for (var o = e.child; o !== null; )
                    (n |= o.lanes | o.childLanes),
                        (r |= o.subtreeFlags & 14680064),
                        (r |= o.flags & 14680064),
                        (o.return = e),
                        (o = o.sibling);
            else
                for (o = e.child; o !== null; )
                    (n |= o.lanes | o.childLanes),
                        (r |= o.subtreeFlags),
                        (r |= o.flags),
                        (o.return = e),
                        (o = o.sibling);
            return (e.subtreeFlags |= r), (e.childLanes = n), t;
        }
        function wO(e, t, n) {
            var r = t.pendingProps;
            switch ((db(t), t.tag)) {
                case 2:
                case 16:
                case 15:
                case 0:
                case 11:
                case 7:
                case 8:
                case 12:
                case 9:
                case 14:
                    return rn(t), null;
                case 1:
                    return Ln(t.type) && bp(), rn(t), null;
                case 3:
                    return (
                        (r = t.stateNode),
                            fl(),
                            rt(Dn),
                            rt(tn),
                            Cb(),
                        r.pendingContext &&
                        ((r.context = r.pendingContext),
                            (r.pendingContext = null)),
                        (e === null || e.child === null) &&
                        (_p(t)
                            ? (t.flags |= 4)
                            : e === null ||
                            (e.memoizedState.isDehydrated &&
                                !(t.flags & 256)) ||
                            ((t.flags |= 1024),
                            Fr !== null && (Jb(Fr), (Fr = null)))),
                            Ub(e, t),
                            rn(t),
                            null
                    );
                case 5:
                    _b(t);
                    var o = Va($d.current);
                    if (((n = t.type), e !== null && t.stateNode != null))
                        c3(e, t, n, r, o),
                        e.ref !== t.ref &&
                        ((t.flags |= 512), (t.flags |= 2097152));
                    else {
                        if (!r) {
                            if (t.stateNode === null) throw Error(Z(166));
                            return rn(t), null;
                        }
                        if (((e = Va(fo.current)), _p(t))) {
                            (r = t.stateNode), (n = t.type);
                            var i = t.memoizedProps;
                            switch (
                                ((r[po] = t),
                                    (r[Cd] = i),
                                    (e = (t.mode & 1) !== 0),
                                    n)
                                ) {
                                case "dialog":
                                    nt("cancel", r), nt("close", r);
                                    break;
                                case "iframe":
                                case "object":
                                case "embed":
                                    nt("load", r);
                                    break;
                                case "video":
                                case "audio":
                                    for (o = 0; o < Sd.length; o++) nt(Sd[o], r);
                                    break;
                                case "source":
                                    nt("error", r);
                                    break;
                                case "img":
                                case "image":
                                case "link":
                                    nt("error", r), nt("load", r);
                                    break;
                                case "details":
                                    nt("toggle", r);
                                    break;
                                case "input":
                                    H_(r, i), nt("invalid", r);
                                    break;
                                case "select":
                                    (r._wrapperState = {wasMultiple: !!i.multiple}),
                                        nt("invalid", r);
                                    break;
                                case "textarea":
                                    W_(r, i), nt("invalid", r);
                            }
                            S0(n, i), (o = null);
                            for (var a in i)
                                if (i.hasOwnProperty(a)) {
                                    var s = i[a];
                                    a === "children"
                                        ? typeof s == "string"
                                            ? r.textContent !== s &&
                                            (i.suppressHydrationWarning !== !0 &&
                                            mp(r.textContent, s, e),
                                                (o = ["children", s]))
                                            : typeof s == "number" &&
                                            r.textContent !== "" + s &&
                                            (i.suppressHydrationWarning !== !0 &&
                                            mp(r.textContent, s, e),
                                                (o = ["children", "" + s]))
                                        : Jc.hasOwnProperty(a) &&
                                        s != null &&
                                        a === "onScroll" &&
                                        nt("scroll", r);
                                }
                            switch (n) {
                                case "input":
                                    Wh(r), K_(r, i, !0);
                                    break;
                                case "textarea":
                                    Wh(r), G_(r);
                                    break;
                                case "select":
                                case "option":
                                    break;
                                default:
                                    typeof i.onClick == "function" &&
                                    (r.onclick = gp);
                            }
                            (r = o),
                                (t.updateQueue = r),
                            r !== null && (t.flags |= 4);
                        } else {
                            (a = o.nodeType === 9 ? o : o.ownerDocument),
                            e === "http://www.w3.org/1999/xhtml" && (e = X_(n)),
                                e === "http://www.w3.org/1999/xhtml"
                                    ? n === "script"
                                        ? ((e = a.createElement("div")),
                                            (e.innerHTML = "<script></script>"),
                                            (e = e.removeChild(e.firstChild)))
                                        : typeof r.is == "string"
                                            ? (e = a.createElement(n, {is: r.is}))
                                            : ((e = a.createElement(n)),
                                            n === "select" &&
                                            ((a = e),
                                                r.multiple
                                                    ? (a.multiple = !0)
                                                    : r.size && (a.size = r.size)))
                                    : (e = a.createElementNS(e, n)),
                                (e[po] = t),
                                (e[Cd] = r),
                                l3(e, t, !1, !1),
                                (t.stateNode = e);
                            e: {
                                switch (((a = _0(n, r)), n)) {
                                    case "dialog":
                                        nt("cancel", e), nt("close", e), (o = r);
                                        break;
                                    case "iframe":
                                    case "object":
                                    case "embed":
                                        nt("load", e), (o = r);
                                        break;
                                    case "video":
                                    case "audio":
                                        for (o = 0; o < Sd.length; o++)
                                            nt(Sd[o], e);
                                        o = r;
                                        break;
                                    case "source":
                                        nt("error", e), (o = r);
                                        break;
                                    case "img":
                                    case "image":
                                    case "link":
                                        nt("error", e), nt("load", e), (o = r);
                                        break;
                                    case "details":
                                        nt("toggle", e), (o = r);
                                        break;
                                    case "input":
                                        H_(e, r), (o = v0(e, r)), nt("invalid", e);
                                        break;
                                    case "option":
                                        o = r;
                                        break;
                                    case "select":
                                        (e._wrapperState = {
                                            wasMultiple: !!r.multiple,
                                        }),
                                            (o = ct({}, r, {value: void 0})),
                                            nt("invalid", e);
                                        break;
                                    case "textarea":
                                        W_(e, r), (o = w0(e, r)), nt("invalid", e);
                                        break;
                                    default:
                                        o = r;
                                }
                                S0(n, o), (s = o);
                                for (i in s)
                                    if (s.hasOwnProperty(i)) {
                                        var l = s[i];
                                        i === "style"
                                            ? Q_(e, l)
                                            : i === "dangerouslySetInnerHTML"
                                                ? ((l = l ? l.__html : void 0),
                                                l != null && q_(e, l))
                                                : i === "children"
                                                    ? typeof l == "string"
                                                        ? (n !== "textarea" || l !== "") &&
                                                        rd(e, l)
                                                        : typeof l == "number" &&
                                                        rd(e, "" + l)
                                                    : i !==
                                                    "suppressContentEditableWarning" &&
                                                    i !== "suppressHydrationWarning" &&
                                                    i !== "autoFocus" &&
                                                    (Jc.hasOwnProperty(i)
                                                        ? l != null &&
                                                        i === "onScroll" &&
                                                        nt("scroll", e)
                                                        : l != null && a0(e, i, l, a));
                                    }
                                switch (n) {
                                    case "input":
                                        Wh(e), K_(e, r, !1);
                                        break;
                                    case "textarea":
                                        Wh(e), G_(e);
                                        break;
                                    case "option":
                                        r.value != null &&
                                        e.setAttribute(
                                            "value",
                                            "" + Oi(r.value)
                                        );
                                        break;
                                    case "select":
                                        (e.multiple = !!r.multiple),
                                            (i = r.value),
                                            i != null
                                                ? Xs(e, !!r.multiple, i, !1)
                                                : r.defaultValue != null &&
                                                Xs(
                                                    e,
                                                    !!r.multiple,
                                                    r.defaultValue,
                                                    !0
                                                );
                                        break;
                                    default:
                                        typeof o.onClick == "function" &&
                                        (e.onclick = gp);
                                }
                                switch (n) {
                                    case "button":
                                    case "input":
                                    case "select":
                                    case "textarea":
                                        r = !!r.autoFocus;
                                        break e;
                                    case "img":
                                        r = !0;
                                        break e;
                                    default:
                                        r = !1;
                                }
                            }
                            r && (t.flags |= 4);
                        }
                        t.ref !== null && ((t.flags |= 512), (t.flags |= 2097152));
                    }
                    return rn(t), null;
                case 6:
                    if (e && t.stateNode != null) d3(e, t, e.memoizedProps, r);
                    else {
                        if (typeof r != "string" && t.stateNode === null)
                            throw Error(Z(166));
                        if (((n = Va($d.current)), Va(fo.current), _p(t))) {
                            if (
                                ((r = t.stateNode),
                                    (n = t.memoizedProps),
                                    (r[po] = t),
                                (i = r.nodeValue !== n) && ((e = Qn), e !== null))
                            )
                                switch (e.tag) {
                                    case 3:
                                        mp(r.nodeValue, n, (e.mode & 1) !== 0);
                                        break;
                                    case 5:
                                        e.memoizedProps.suppressHydrationWarning !==
                                        !0 &&
                                        mp(r.nodeValue, n, (e.mode & 1) !== 0);
                                }
                            i && (t.flags |= 4);
                        } else
                            (r = (
                                n.nodeType === 9 ? n : n.ownerDocument
                            ).createTextNode(r)),
                                (r[po] = t),
                                (t.stateNode = r);
                    }
                    return rn(t), null;
                case 13:
                    if (
                        (rt(dt),
                            (r = t.memoizedState),
                        e === null ||
                        (e.memoizedState !== null &&
                            e.memoizedState.dehydrated !== null))
                    ) {
                        if (st && Jn !== null && t.mode & 1 && !(t.flags & 128))
                            h5(), dl(), (t.flags |= 98560), (i = !1);
                        else if (
                            ((i = _p(t)), r !== null && r.dehydrated !== null)
                        ) {
                            if (e === null) {
                                if (!i) throw Error(Z(318));
                                if (
                                    ((i = t.memoizedState),
                                        (i = i !== null ? i.dehydrated : null),
                                        !i)
                                )
                                    throw Error(Z(317));
                                i[po] = t;
                            } else
                                dl(),
                                !(t.flags & 128) && (t.memoizedState = null),
                                    (t.flags |= 4);
                            rn(t), (i = !1);
                        } else Fr !== null && (Jb(Fr), (Fr = null)), (i = !0);
                        if (!i) return t.flags & 65536 ? t : null;
                    }
                    return t.flags & 128
                        ? ((t.lanes = n), t)
                        : ((r = r !== null),
                        r !== (e !== null && e.memoizedState !== null) &&
                        r &&
                        ((t.child.flags |= 8192),
                        t.mode & 1 &&
                        (e === null || dt.current & 1
                            ? Pt === 0 && (Pt = 3)
                            : ny())),
                        t.updateQueue !== null && (t.flags |= 4),
                            rn(t),
                            null);
                case 4:
                    return (
                        fl(),
                            Ub(e, t),
                        e === null && _d(t.stateNode.containerInfo),
                            rn(t),
                            null
                    );
                case 10:
                    return gb(t.type._context), rn(t), null;
                case 17:
                    return Ln(t.type) && bp(), rn(t), null;
                case 19:
                    if ((rt(dt), (i = t.memoizedState), i === null))
                        return rn(t), null;
                    if (
                        ((r = (t.flags & 128) !== 0), (a = i.rendering), a === null)
                    )
                        if (r) Od(i, !1);
                        else {
                            if (Pt !== 0 || (e !== null && e.flags & 128))
                                for (e = t.child; e !== null; ) {
                                    if (((a = $p(e)), a !== null)) {
                                        for (
                                            t.flags |= 128,
                                                Od(i, !1),
                                                r = a.updateQueue,
                                            r !== null &&
                                            ((t.updateQueue = r),
                                                (t.flags |= 4)),
                                                t.subtreeFlags = 0,
                                                r = n,
                                                n = t.child;
                                            n !== null;

                                        )
                                            (i = n),
                                                (e = r),
                                                (i.flags &= 14680066),
                                                (a = i.alternate),
                                                a === null
                                                    ? ((i.childLanes = 0),
                                                        (i.lanes = e),
                                                        (i.child = null),
                                                        (i.subtreeFlags = 0),
                                                        (i.memoizedProps = null),
                                                        (i.memoizedState = null),
                                                        (i.updateQueue = null),
                                                        (i.dependencies = null),
                                                        (i.stateNode = null))
                                                    : ((i.childLanes =
                                                        a.childLanes),
                                                        (i.lanes = a.lanes),
                                                        (i.child = a.child),
                                                        (i.subtreeFlags = 0),
                                                        (i.deletions = null),
                                                        (i.memoizedProps =
                                                            a.memoizedProps),
                                                        (i.memoizedState =
                                                            a.memoizedState),
                                                        (i.updateQueue =
                                                            a.updateQueue),
                                                        (i.type = a.type),
                                                        (e = a.dependencies),
                                                        (i.dependencies =
                                                            e === null
                                                                ? null
                                                                : {
                                                                    lanes: e.lanes,
                                                                    firstContext:
                                                                    e.firstContext,
                                                                })),
                                                (n = n.sibling);
                                        return (
                                            Ye(dt, (dt.current & 1) | 2), t.child
                                        );
                                    }
                                    e = e.sibling;
                                }
                            i.tail !== null &&
                            St() > bl &&
                            ((t.flags |= 128),
                                (r = !0),
                                Od(i, !1),
                                (t.lanes = 4194304));
                        }
                    else {
                        if (!r)
                            if (((e = $p(a)), e !== null)) {
                                if (
                                    ((t.flags |= 128),
                                        (r = !0),
                                        (n = e.updateQueue),
                                    n !== null &&
                                    ((t.updateQueue = n), (t.flags |= 4)),
                                        Od(i, !0),
                                    i.tail === null &&
                                    i.tailMode === "hidden" &&
                                    !a.alternate &&
                                    !st)
                                )
                                    return rn(t), null;
                            } else
                                2 * St() - i.renderingStartTime > bl &&
                                n !== 1073741824 &&
                                ((t.flags |= 128),
                                    (r = !0),
                                    Od(i, !1),
                                    (t.lanes = 4194304));
                        i.isBackwards
                            ? ((a.sibling = t.child), (t.child = a))
                            : ((n = i.last),
                                n !== null ? (n.sibling = a) : (t.child = a),
                                (i.last = a));
                    }
                    return i.tail !== null
                        ? ((t = i.tail),
                            (i.rendering = t),
                            (i.tail = t.sibling),
                            (i.renderingStartTime = St()),
                            (t.sibling = null),
                            (n = dt.current),
                            Ye(dt, r ? (n & 1) | 2 : n & 1),
                            t)
                        : (rn(t), null);
                case 22:
                case 23:
                    return (
                        ty(),
                            (r = t.memoizedState !== null),
                        e !== null &&
                        (e.memoizedState !== null) !== r &&
                        (t.flags |= 8192),
                            r && t.mode & 1
                                ? er & 1073741824 &&
                                (rn(t), t.subtreeFlags & 6 && (t.flags |= 8192))
                                : rn(t),
                            null
                    );
                case 24:
                    return null;
                case 25:
                    return null;
            }
            throw Error(Z(156, t.tag));
        }
        function xO(e, t) {
            switch ((db(t), t.tag)) {
                case 1:
                    return (
                        Ln(t.type) && bp(),
                            (e = t.flags),
                            e & 65536 ? ((t.flags = (e & -65537) | 128), t) : null
                    );
                case 3:
                    return (
                        fl(),
                            rt(Dn),
                            rt(tn),
                            Cb(),
                            (e = t.flags),
                            e & 65536 && !(e & 128)
                                ? ((t.flags = (e & -65537) | 128), t)
                                : null
                    );
                case 5:
                    return _b(t), null;
                case 13:
                    if (
                        (rt(dt),
                            (e = t.memoizedState),
                        e !== null && e.dehydrated !== null)
                    ) {
                        if (t.alternate === null) throw Error(Z(340));
                        dl();
                    }
                    return (
                        (e = t.flags),
                            e & 65536 ? ((t.flags = (e & -65537) | 128), t) : null
                    );
                case 19:
                    return rt(dt), null;
                case 4:
                    return fl(), null;
                case 10:
                    return gb(t.type._context), null;
                case 22:
                case 23:
                    return ty(), null;
                case 24:
                    return null;
                default:
                    return null;
            }
        }
        var jp = !1,
            on = !1,
            SO = typeof WeakSet == "function" ? WeakSet : Set,
            ne = null;
        function gl(e, t) {
            var n = e.ref;
            if (n !== null)
                if (typeof n == "function")
                    try {
                        n(null);
                    } catch (r) {
                        vt(e, t, r);
                    }
                else n.current = null;
        }
        function Hb(e, t, n) {
            try {
                n();
            } catch (r) {
                vt(e, t, r);
            }
        }
        var u3 = !1;
        function _O(e, t) {
            if (((tb = op), (e = Uk()), Y0(e))) {
                if ("selectionStart" in e)
                    var n = {start: e.selectionStart, end: e.selectionEnd};
                else
                    e: {
                        n = ((n = e.ownerDocument) && n.defaultView) || window;
                        var r = n.getSelection && n.getSelection();
                        if (r && r.rangeCount !== 0) {
                            n = r.anchorNode;
                            var o = r.anchorOffset,
                                i = r.focusNode;
                            r = r.focusOffset;
                            try {
                                n.nodeType, i.nodeType;
                            } catch {
                                n = null;
                                break e;
                            }
                            var a = 0,
                                s = -1,
                                l = -1,
                                c = 0,
                                d = 0,
                                u = e,
                                h = null;
                            t: for (;;) {
                                for (
                                    var p;
                                    u !== n ||
                                    (o !== 0 && u.nodeType !== 3) ||
                                    (s = a + o),
                                    u !== i ||
                                    (r !== 0 && u.nodeType !== 3) ||
                                    (l = a + r),
                                    u.nodeType === 3 &&
                                    (a += u.nodeValue.length),
                                    (p = u.firstChild) !== null;

                                )
                                    (h = u), (u = p);
                                for (;;) {
                                    if (u === e) break t;
                                    if (
                                        (h === n && ++c === o && (s = a),
                                        h === i && ++d === r && (l = a),
                                        (p = u.nextSibling) !== null)
                                    )
                                        break;
                                    (u = h), (h = u.parentNode);
                                }
                                u = p;
                            }
                            n = s === -1 || l === -1 ? null : {start: s, end: l};
                        } else n = null;
                    }
                n = n || {start: 0, end: 0};
            } else n = null;
            for (
                nb = {focusedElem: e, selectionRange: n}, op = !1, ne = t;
                ne !== null;

            )
                if (
                    ((t = ne),
                        (e = t.child),
                    (t.subtreeFlags & 1028) !== 0 && e !== null)
                )
                    (e.return = t), (ne = e);
                else
                    for (; ne !== null; ) {
                        t = ne;
                        try {
                            var m = t.alternate;
                            if (t.flags & 1024)
                                switch (t.tag) {
                                    case 0:
                                    case 11:
                                    case 15:
                                        break;
                                    case 1:
                                        if (m !== null) {
                                            var f = m.memoizedProps,
                                                g = m.memoizedState,
                                                b = t.stateNode,
                                                x = b.getSnapshotBeforeUpdate(
                                                    t.elementType === t.type
                                                        ? f
                                                        : Br(t.type, f),
                                                    g
                                                );
                                            b.__reactInternalSnapshotBeforeUpdate =
                                                x;
                                        }
                                        break;
                                    case 3:
                                        var S = t.stateNode.containerInfo;
                                        S.nodeType === 1
                                            ? (S.textContent = "")
                                            : S.nodeType === 9 &&
                                            S.documentElement &&
                                            S.removeChild(S.documentElement);
                                        break;
                                    case 5:
                                    case 6:
                                    case 4:
                                    case 17:
                                        break;
                                    default:
                                        throw Error(Z(163));
                                }
                        } catch (_) {
                            vt(t, t.return, _);
                        }
                        if (((e = t.sibling), e !== null)) {
                            (e.return = t.return), (ne = e);
                            break;
                        }
                        ne = t.return;
                    }
            return (m = u3), (u3 = !1), m;
        }
        function Dd(e, t, n) {
            var r = t.updateQueue;
            if (((r = r !== null ? r.lastEffect : null), r !== null)) {
                var o = (r = r.next);
                do {
                    if ((o.tag & e) === e) {
                        var i = o.destroy;
                        (o.destroy = void 0), i !== void 0 && Hb(t, n, i);
                    }
                    o = o.next;
                } while (o !== r);
            }
        }
        function Np(e, t) {
            if (
                ((t = t.updateQueue),
                    (t = t !== null ? t.lastEffect : null),
                t !== null)
            ) {
                var n = (t = t.next);
                do {
                    if ((n.tag & e) === e) {
                        var r = n.create;
                        n.destroy = r();
                    }
                    n = n.next;
                } while (n !== t);
            }
        }
        function Vb(e) {
            var t = e.ref;
            if (t !== null) {
                var n = e.stateNode;
                switch (e.tag) {
                    case 5:
                        e = n;
                        break;
                    default:
                        e = n;
                }
                typeof t == "function" ? t(e) : (t.current = e);
            }
        }
        function h3(e) {
            var t = e.alternate;
            t !== null && ((e.alternate = null), h3(t)),
                (e.child = null),
                (e.deletions = null),
                (e.sibling = null),
            e.tag === 5 &&
            ((t = e.stateNode),
            t !== null &&
            (delete t[po],
                delete t[Cd],
                delete t[ab],
                delete t[iO],
                delete t[aO])),
                (e.stateNode = null),
                (e.return = null),
                (e.dependencies = null),
                (e.memoizedProps = null),
                (e.memoizedState = null),
                (e.pendingProps = null),
                (e.stateNode = null),
                (e.updateQueue = null);
        }
        function p3(e) {
            return e.tag === 5 || e.tag === 3 || e.tag === 4;
        }
        function f3(e) {
            e: for (;;) {
                for (; e.sibling === null; ) {
                    if (e.return === null || p3(e.return)) return null;
                    e = e.return;
                }
                for (
                    e.sibling.return = e.return, e = e.sibling;
                    e.tag !== 5 && e.tag !== 6 && e.tag !== 18;

                ) {
                    if (e.flags & 2 || e.child === null || e.tag === 4) continue e;
                    (e.child.return = e), (e = e.child);
                }
                if (!(e.flags & 2)) return e.stateNode;
            }
        }
        function Kb(e, t, n) {
            var r = e.tag;
            if (r === 5 || r === 6)
                (e = e.stateNode),
                    t
                        ? n.nodeType === 8
                            ? n.parentNode.insertBefore(e, t)
                            : n.insertBefore(e, t)
                        : (n.nodeType === 8
                            ? ((t = n.parentNode), t.insertBefore(e, n))
                            : ((t = n), t.appendChild(e)),
                            (n = n._reactRootContainer),
                        n != null || t.onclick !== null || (t.onclick = gp));
            else if (r !== 4 && ((e = e.child), e !== null))
                for (Kb(e, t, n), e = e.sibling; e !== null; )
                    Kb(e, t, n), (e = e.sibling);
        }
        function Wb(e, t, n) {
            var r = e.tag;
            if (r === 5 || r === 6)
                (e = e.stateNode), t ? n.insertBefore(e, t) : n.appendChild(e);
            else if (r !== 4 && ((e = e.child), e !== null))
                for (Wb(e, t, n), e = e.sibling; e !== null; )
                    Wb(e, t, n), (e = e.sibling);
        }
        var Ut = null,
            Ur = !1;
        function Gi(e, t, n) {
            for (n = n.child; n !== null; ) m3(e, t, n), (n = n.sibling);
        }
        function m3(e, t, n) {
            if (ho && typeof ho.onCommitFiberUnmount == "function")
                try {
                    ho.onCommitFiberUnmount(Qh, n);
                } catch {}
            switch (n.tag) {
                case 5:
                    on || gl(n, t);
                case 6:
                    var r = Ut,
                        o = Ur;
                    (Ut = null),
                        Gi(e, t, n),
                        (Ut = r),
                        (Ur = o),
                    Ut !== null &&
                    (Ur
                        ? ((e = Ut),
                            (n = n.stateNode),
                            e.nodeType === 8
                                ? e.parentNode.removeChild(n)
                                : e.removeChild(n))
                        : Ut.removeChild(n.stateNode));
                    break;
                case 18:
                    Ut !== null &&
                    (Ur
                        ? ((e = Ut),
                            (n = n.stateNode),
                            e.nodeType === 8
                                ? ib(e.parentNode, n)
                                : e.nodeType === 1 && ib(e, n),
                            fd(e))
                        : ib(Ut, n.stateNode));
                    break;
                case 4:
                    (r = Ut),
                        (o = Ur),
                        (Ut = n.stateNode.containerInfo),
                        (Ur = !0),
                        Gi(e, t, n),
                        (Ut = r),
                        (Ur = o);
                    break;
                case 0:
                case 11:
                case 14:
                case 15:
                    if (
                        !on &&
                        ((r = n.updateQueue),
                        r !== null && ((r = r.lastEffect), r !== null))
                    ) {
                        o = r = r.next;
                        do {
                            var i = o,
                                a = i.destroy;
                            (i = i.tag),
                            a !== void 0 && (i & 2 || i & 4) && Hb(n, t, a),
                                (o = o.next);
                        } while (o !== r);
                    }
                    Gi(e, t, n);
                    break;
                case 1:
                    if (
                        !on &&
                        (gl(n, t),
                            (r = n.stateNode),
                        typeof r.componentWillUnmount == "function")
                    )
                        try {
                            (r.props = n.memoizedProps),
                                (r.state = n.memoizedState),
                                r.componentWillUnmount();
                        } catch (s) {
                            vt(n, t, s);
                        }
                    Gi(e, t, n);
                    break;
                case 21:
                    Gi(e, t, n);
                    break;
                case 22:
                    n.mode & 1
                        ? ((on = (r = on) || n.memoizedState !== null),
                            Gi(e, t, n),
                            (on = r))
                        : Gi(e, t, n);
                    break;
                default:
                    Gi(e, t, n);
            }
        }
        function g3(e) {
            var t = e.updateQueue;
            if (t !== null) {
                e.updateQueue = null;
                var n = e.stateNode;
                n === null && (n = e.stateNode = new SO()),
                    t.forEach(function (r) {
                        var o = MO.bind(null, e, r);
                        n.has(r) || (n.add(r), r.then(o, o));
                    });
            }
        }
        function Hr(e, t) {
            var n = t.deletions;
            if (n !== null)
                for (var r = 0; r < n.length; r++) {
                    var o = n[r];
                    try {
                        var i = e,
                            a = t,
                            s = a;
                        e: for (; s !== null; ) {
                            switch (s.tag) {
                                case 5:
                                    (Ut = s.stateNode), (Ur = !1);
                                    break e;
                                case 3:
                                    (Ut = s.stateNode.containerInfo), (Ur = !0);
                                    break e;
                                case 4:
                                    (Ut = s.stateNode.containerInfo), (Ur = !0);
                                    break e;
                            }
                            s = s.return;
                        }
                        if (Ut === null) throw Error(Z(160));
                        m3(i, a, o), (Ut = null), (Ur = !1);
                        var l = o.alternate;
                        l !== null && (l.return = null), (o.return = null);
                    } catch (c) {
                        vt(o, t, c);
                    }
                }
            if (t.subtreeFlags & 12854)
                for (t = t.child; t !== null; ) v3(t, e), (t = t.sibling);
        }
        function v3(e, t) {
            var n = e.alternate,
                r = e.flags;
            switch (e.tag) {
                case 0:
                case 11:
                case 14:
                case 15:
                    if ((Hr(t, e), go(e), r & 4)) {
                        try {
                            Dd(3, e, e.return), Np(3, e);
                        } catch (f) {
                            vt(e, e.return, f);
                        }
                        try {
                            Dd(5, e, e.return);
                        } catch (f) {
                            vt(e, e.return, f);
                        }
                    }
                    break;
                case 1:
                    Hr(t, e), go(e), r & 512 && n !== null && gl(n, n.return);
                    break;
                case 5:
                    if (
                        (Hr(t, e),
                            go(e),
                        r & 512 && n !== null && gl(n, n.return),
                        e.flags & 32)
                    ) {
                        var o = e.stateNode;
                        try {
                            rd(o, "");
                        } catch (f) {
                            vt(e, e.return, f);
                        }
                    }
                    if (r & 4 && ((o = e.stateNode), o != null)) {
                        var i = e.memoizedProps,
                            a = n !== null ? n.memoizedProps : i,
                            s = e.type,
                            l = e.updateQueue;
                        if (((e.updateQueue = null), l !== null))
                            try {
                                s === "input" &&
                                i.type === "radio" &&
                                i.name != null &&
                                V_(o, i),
                                    _0(s, a);
                                var c = _0(s, i);
                                for (a = 0; a < l.length; a += 2) {
                                    var d = l[a],
                                        u = l[a + 1];
                                    d === "style"
                                        ? Q_(o, u)
                                        : d === "dangerouslySetInnerHTML"
                                            ? q_(o, u)
                                            : d === "children"
                                                ? rd(o, u)
                                                : a0(o, d, u, c);
                                }
                                switch (s) {
                                    case "input":
                                        b0(o, i);
                                        break;
                                    case "textarea":
                                        Y_(o, i);
                                        break;
                                    case "select":
                                        var h = o._wrapperState.wasMultiple;
                                        o._wrapperState.wasMultiple = !!i.multiple;
                                        var p = i.value;
                                        p != null
                                            ? Xs(o, !!i.multiple, p, !1)
                                            : h !== !!i.multiple &&
                                            (i.defaultValue != null
                                                ? Xs(
                                                    o,
                                                    !!i.multiple,
                                                    i.defaultValue,
                                                    !0
                                                )
                                                : Xs(
                                                    o,
                                                    !!i.multiple,
                                                    i.multiple ? [] : "",
                                                    !1
                                                ));
                                }
                                o[Cd] = i;
                            } catch (f) {
                                vt(e, e.return, f);
                            }
                    }
                    break;
                case 6:
                    if ((Hr(t, e), go(e), r & 4)) {
                        if (e.stateNode === null) throw Error(Z(162));
                        (o = e.stateNode), (i = e.memoizedProps);
                        try {
                            o.nodeValue = i;
                        } catch (f) {
                            vt(e, e.return, f);
                        }
                    }
                    break;
                case 3:
                    if (
                        (Hr(t, e),
                            go(e),
                        r & 4 && n !== null && n.memoizedState.isDehydrated)
                    )
                        try {
                            fd(t.containerInfo);
                        } catch (f) {
                            vt(e, e.return, f);
                        }
                    break;
                case 4:
                    Hr(t, e), go(e);
                    break;
                case 13:
                    Hr(t, e),
                        go(e),
                        (o = e.child),
                    o.flags & 8192 &&
                    ((i = o.memoizedState !== null),
                        (o.stateNode.isHidden = i),
                    !i ||
                    (o.alternate !== null &&
                        o.alternate.memoizedState !== null) ||
                    (Xb = St())),
                    r & 4 && g3(e);
                    break;
                case 22:
                    if (
                        ((d = n !== null && n.memoizedState !== null),
                            e.mode & 1
                                ? ((on = (c = on) || d), Hr(t, e), (on = c))
                                : Hr(t, e),
                            go(e),
                        r & 8192)
                    ) {
                        if (
                            ((c = e.memoizedState !== null),
                            (e.stateNode.isHidden = c) && !d && e.mode & 1)
                        )
                            for (ne = e, d = e.child; d !== null; ) {
                                for (u = ne = d; ne !== null; ) {
                                    switch (((h = ne), (p = h.child), h.tag)) {
                                        case 0:
                                        case 11:
                                        case 14:
                                        case 15:
                                            Dd(4, h, h.return);
                                            break;
                                        case 1:
                                            gl(h, h.return);
                                            var m = h.stateNode;
                                            if (
                                                typeof m.componentWillUnmount ==
                                                "function"
                                            ) {
                                                (r = h), (n = h.return);
                                                try {
                                                    (t = r),
                                                        (m.props = t.memoizedProps),
                                                        (m.state = t.memoizedState),
                                                        m.componentWillUnmount();
                                                } catch (f) {
                                                    vt(r, n, f);
                                                }
                                            }
                                            break;
                                        case 5:
                                            gl(h, h.return);
                                            break;
                                        case 22:
                                            if (h.memoizedState !== null) {
                                                w3(u);
                                                continue;
                                            }
                                    }
                                    p !== null ? ((p.return = h), (ne = p)) : w3(u);
                                }
                                d = d.sibling;
                            }
                        e: for (d = null, u = e; ; ) {
                            if (u.tag === 5) {
                                if (d === null) {
                                    d = u;
                                    try {
                                        (o = u.stateNode),
                                            c
                                                ? ((i = o.style),
                                                    typeof i.setProperty == "function"
                                                        ? i.setProperty(
                                                            "display",
                                                            "none",
                                                            "important"
                                                        )
                                                        : (i.display = "none"))
                                                : ((s = u.stateNode),
                                                    (l = u.memoizedProps.style),
                                                    (a =
                                                        l != null &&
                                                        l.hasOwnProperty("display")
                                                            ? l.display
                                                            : null),
                                                    (s.style.display = Z_(
                                                        "display",
                                                        a
                                                    )));
                                    } catch (f) {
                                        vt(e, e.return, f);
                                    }
                                }
                            } else if (u.tag === 6) {
                                if (d === null)
                                    try {
                                        u.stateNode.nodeValue = c
                                            ? ""
                                            : u.memoizedProps;
                                    } catch (f) {
                                        vt(e, e.return, f);
                                    }
                            } else if (
                                ((u.tag !== 22 && u.tag !== 23) ||
                                    u.memoizedState === null ||
                                    u === e) &&
                                u.child !== null
                            ) {
                                (u.child.return = u), (u = u.child);
                                continue;
                            }
                            if (u === e) break e;
                            for (; u.sibling === null; ) {
                                if (u.return === null || u.return === e) break e;
                                d === u && (d = null), (u = u.return);
                            }
                            d === u && (d = null),
                                (u.sibling.return = u.return),
                                (u = u.sibling);
                        }
                    }
                    break;
                case 19:
                    Hr(t, e), go(e), r & 4 && g3(e);
                    break;
                case 21:
                    break;
                default:
                    Hr(t, e), go(e);
            }
        }
        function go(e) {
            var t = e.flags;
            if (t & 2) {
                try {
                    e: {
                        for (var n = e.return; n !== null; ) {
                            if (p3(n)) {
                                var r = n;
                                break e;
                            }
                            n = n.return;
                        }
                        throw Error(Z(160));
                    }
                    switch (r.tag) {
                        case 5:
                            var o = r.stateNode;
                            r.flags & 32 && (rd(o, ""), (r.flags &= -33));
                            var i = f3(e);
                            Wb(e, i, o);
                            break;
                        case 3:
                        case 4:
                            var a = r.stateNode.containerInfo,
                                s = f3(e);
                            Kb(e, s, a);
                            break;
                        default:
                            throw Error(Z(161));
                    }
                } catch (l) {
                    vt(e, e.return, l);
                }
                e.flags &= -3;
            }
            t & 4096 && (e.flags &= -4097);
        }
        function kO(e, t, n) {
            (ne = e), b3(e);
        }
        function b3(e, t, n) {
            for (var r = (e.mode & 1) !== 0; ne !== null; ) {
                var o = ne,
                    i = o.child;
                if (o.tag === 22 && r) {
                    var a = o.memoizedState !== null || jp;
                    if (!a) {
                        var s = o.alternate,
                            l = (s !== null && s.memoizedState !== null) || on;
                        s = jp;
                        var c = on;
                        if (((jp = a), (on = l) && !c))
                            for (ne = o; ne !== null; )
                                (a = ne),
                                    (l = a.child),
                                    a.tag === 22 && a.memoizedState !== null
                                        ? x3(o)
                                        : l !== null
                                            ? ((l.return = a), (ne = l))
                                            : x3(o);
                        for (; i !== null; ) (ne = i), b3(i), (i = i.sibling);
                        (ne = o), (jp = s), (on = c);
                    }
                    y3(e);
                } else
                    o.subtreeFlags & 8772 && i !== null
                        ? ((i.return = o), (ne = i))
                        : y3(e);
            }
        }
        function y3(e) {
            for (; ne !== null; ) {
                var t = ne;
                if (t.flags & 8772) {
                    var n = t.alternate;
                    try {
                        if (t.flags & 8772)
                            switch (t.tag) {
                                case 0:
                                case 11:
                                case 15:
                                    on || Np(5, t);
                                    break;
                                case 1:
                                    var r = t.stateNode;
                                    if (t.flags & 4 && !on)
                                        if (n === null) r.componentDidMount();
                                        else {
                                            var o =
                                                t.elementType === t.type
                                                    ? n.memoizedProps
                                                    : Br(t.type, n.memoizedProps);
                                            r.componentDidUpdate(
                                                o,
                                                n.memoizedState,
                                                r.__reactInternalSnapshotBeforeUpdate
                                            );
                                        }
                                    var i = t.updateQueue;
                                    i !== null && g5(t, i, r);
                                    break;
                                case 3:
                                    var a = t.updateQueue;
                                    if (a !== null) {
                                        if (((n = null), t.child !== null))
                                            switch (t.child.tag) {
                                                case 5:
                                                    n = t.child.stateNode;
                                                    break;
                                                case 1:
                                                    n = t.child.stateNode;
                                            }
                                        g5(t, a, n);
                                    }
                                    break;
                                case 5:
                                    var s = t.stateNode;
                                    if (n === null && t.flags & 4) {
                                        n = s;
                                        var l = t.memoizedProps;
                                        switch (t.type) {
                                            case "button":
                                            case "input":
                                            case "select":
                                            case "textarea":
                                                l.autoFocus && n.focus();
                                                break;
                                            case "img":
                                                l.src && (n.src = l.src);
                                        }
                                    }
                                    break;
                                case 6:
                                    break;
                                case 4:
                                    break;
                                case 12:
                                    break;
                                case 13:
                                    if (t.memoizedState === null) {
                                        var c = t.alternate;
                                        if (c !== null) {
                                            var d = c.memoizedState;
                                            if (d !== null) {
                                                var u = d.dehydrated;
                                                u !== null && fd(u);
                                            }
                                        }
                                    }
                                    break;
                                case 19:
                                case 17:
                                case 21:
                                case 22:
                                case 23:
                                case 25:
                                    break;
                                default:
                                    throw Error(Z(163));
                            }
                        on || (t.flags & 512 && Vb(t));
                    } catch (h) {
                        vt(t, t.return, h);
                    }
                }
                if (t === e) {
                    ne = null;
                    break;
                }
                if (((n = t.sibling), n !== null)) {
                    (n.return = t.return), (ne = n);
                    break;
                }
                ne = t.return;
            }
        }
        function w3(e) {
            for (; ne !== null; ) {
                var t = ne;
                if (t === e) {
                    ne = null;
                    break;
                }
                var n = t.sibling;
                if (n !== null) {
                    (n.return = t.return), (ne = n);
                    break;
                }
                ne = t.return;
            }
        }
        function x3(e) {
            for (; ne !== null; ) {
                var t = ne;
                try {
                    switch (t.tag) {
                        case 0:
                        case 11:
                        case 15:
                            var n = t.return;
                            try {
                                Np(4, t);
                            } catch (l) {
                                vt(t, n, l);
                            }
                            break;
                        case 1:
                            var r = t.stateNode;
                            if (typeof r.componentDidMount == "function") {
                                var o = t.return;
                                try {
                                    r.componentDidMount();
                                } catch (l) {
                                    vt(t, o, l);
                                }
                            }
                            var i = t.return;
                            try {
                                Vb(t);
                            } catch (l) {
                                vt(t, i, l);
                            }
                            break;
                        case 5:
                            var a = t.return;
                            try {
                                Vb(t);
                            } catch (l) {
                                vt(t, a, l);
                            }
                    }
                } catch (l) {
                    vt(t, t.return, l);
                }
                if (t === e) {
                    ne = null;
                    break;
                }
                var s = t.sibling;
                if (s !== null) {
                    (s.return = t.return), (ne = s);
                    break;
                }
                ne = t.return;
            }
        }
        var CO = Math.ceil,
            Fp = Yo.ReactCurrentDispatcher,
            Yb = Yo.ReactCurrentOwner,
            xr = Yo.ReactCurrentBatchConfig,
            Te = 0,
            Mt = null,
            Ct = null,
            Ht = 0,
            er = 0,
            vl = Hi(0),
            Pt = 0,
            Ld = null,
            Wa = 0,
            Bp = 0,
            Gb = 0,
            jd = null,
            Nn = null,
            Xb = 0,
            bl = 1 / 0,
            ti = null,
            Up = !1,
            qb = null,
            Xi = null,
            Hp = !1,
            qi = null,
            Vp = 0,
            Nd = 0,
            Zb = null,
            Kp = -1,
            Wp = 0;
        function In() {
            return Te & 6 ? St() : Kp !== -1 ? Kp : (Kp = St());
        }
        function Zi(e) {
            return e.mode & 1
                ? Te & 2 && Ht !== 0
                    ? Ht & -Ht
                    : lO.transition !== null
                        ? (Wp === 0 && (Wp = pk()), Wp)
                        : ((e = Ne),
                        e !== 0 ||
                        ((e = window.event),
                            (e = e === void 0 ? 16 : Sk(e.type))),
                            e)
                : 1;
        }
        function Vr(e, t, n, r) {
            if (50 < Nd) throw ((Nd = 0), (Zb = null), Error(Z(185)));
            cd(e, n, r),
            (!(Te & 2) || e !== Mt) &&
            (e === Mt && (!(Te & 2) && (Bp |= n), Pt === 4 && Qi(e, Ht)),
                Fn(e, r),
            n === 1 &&
            Te === 0 &&
            !(t.mode & 1) &&
            ((bl = St() + 500), wp && Ki()));
        }
        function Fn(e, t) {
            var n = e.callbackNode;
            lR(e, t);
            var r = tp(e, e === Mt ? Ht : 0);
            if (r === 0)
                n !== null && dk(n),
                    (e.callbackNode = null),
                    (e.callbackPriority = 0);
            else if (((t = r & -r), e.callbackPriority !== t)) {
                if ((n != null && dk(n), t === 1))
                    e.tag === 0 ? sO(_3.bind(null, e)) : s5(_3.bind(null, e)),
                        rO(function () {
                            !(Te & 6) && Ki();
                        }),
                        (n = null);
                else {
                    switch (fk(r)) {
                        case 1:
                            n = $0;
                            break;
                        case 4:
                            n = uk;
                            break;
                        case 16:
                            n = Zh;
                            break;
                        case 536870912:
                            n = hk;
                            break;
                        default:
                            n = Zh;
                    }
                    n = A3(n, S3.bind(null, e));
                }
                (e.callbackPriority = t), (e.callbackNode = n);
            }
        }
        function S3(e, t) {
            if (((Kp = -1), (Wp = 0), Te & 6)) throw Error(Z(327));
            var n = e.callbackNode;
            if (yl() && e.callbackNode !== n) return null;
            var r = tp(e, e === Mt ? Ht : 0);
            if (r === 0) return null;
            if (r & 30 || r & e.expiredLanes || t) t = Yp(e, r);
            else {
                t = r;
                var o = Te;
                Te |= 2;
                var i = C3();
                (Mt !== e || Ht !== t) &&
                ((ti = null), (bl = St() + 500), Ga(e, t));
                do
                    try {
                        IO();
                        break;
                    } catch (s) {
                        k3(e, s);
                    }
                while (!0);
                mb(),
                    (Fp.current = i),
                    (Te = o),
                    Ct !== null ? (t = 0) : ((Mt = null), (Ht = 0), (t = Pt));
            }
            if (t !== 0) {
                if (
                    (t === 2 && ((o = A0(e)), o !== 0 && ((r = o), (t = Qb(e, o)))),
                    t === 1)
                )
                    throw ((n = Ld), Ga(e, 0), Qi(e, r), Fn(e, St()), n);
                if (t === 6) Qi(e, r);
                else {
                    if (
                        ((o = e.current.alternate),
                        !(r & 30) &&
                        !EO(o) &&
                        ((t = Yp(e, r)),
                        t === 2 &&
                        ((i = A0(e)), i !== 0 && ((r = i), (t = Qb(e, i)))),
                        t === 1))
                    )
                        throw ((n = Ld), Ga(e, 0), Qi(e, r), Fn(e, St()), n);
                    switch (((e.finishedWork = o), (e.finishedLanes = r), t)) {
                        case 0:
                        case 1:
                            throw Error(Z(345));
                        case 2:
                            Xa(e, Nn, ti);
                            break;
                        case 3:
                            if (
                                (Qi(e, r),
                                (r & 130023424) === r &&
                                ((t = Xb + 500 - St()), 10 < t))
                            ) {
                                if (tp(e, 0) !== 0) break;
                                if (((o = e.suspendedLanes), (o & r) !== r)) {
                                    In(), (e.pingedLanes |= e.suspendedLanes & o);
                                    break;
                                }
                                e.timeoutHandle = ob(Xa.bind(null, e, Nn, ti), t);
                                break;
                            }
                            Xa(e, Nn, ti);
                            break;
                        case 4:
                            if ((Qi(e, r), (r & 4194240) === r)) break;
                            for (t = e.eventTimes, o = -1; 0 < r; ) {
                                var a = 31 - jr(r);
                                (i = 1 << a),
                                    (a = t[a]),
                                a > o && (o = a),
                                    (r &= ~i);
                            }
                            if (
                                ((r = o),
                                    (r = St() - r),
                                    (r =
                                        (120 > r
                                            ? 120
                                            : 480 > r
                                                ? 480
                                                : 1080 > r
                                                    ? 1080
                                                    : 1920 > r
                                                        ? 1920
                                                        : 3e3 > r
                                                            ? 3e3
                                                            : 4320 > r
                                                                ? 4320
                                                                : 1960 * CO(r / 1960)) - r),
                                10 < r)
                            ) {
                                e.timeoutHandle = ob(Xa.bind(null, e, Nn, ti), r);
                                break;
                            }
                            Xa(e, Nn, ti);
                            break;
                        case 5:
                            Xa(e, Nn, ti);
                            break;
                        default:
                            throw Error(Z(329));
                    }
                }
            }
            return Fn(e, St()), e.callbackNode === n ? S3.bind(null, e) : null;
        }
        function Qb(e, t) {
            var n = jd;
            return (
                e.current.memoizedState.isDehydrated && (Ga(e, t).flags |= 256),
                    (e = Yp(e, t)),
                e !== 2 && ((t = Nn), (Nn = n), t !== null && Jb(t)),
                    e
            );
        }
        function Jb(e) {
            Nn === null ? (Nn = e) : Nn.push.apply(Nn, e);
        }
        function EO(e) {
            for (var t = e; ; ) {
                if (t.flags & 16384) {
                    var n = t.updateQueue;
                    if (n !== null && ((n = n.stores), n !== null))
                        for (var r = 0; r < n.length; r++) {
                            var o = n[r],
                                i = o.getSnapshot;
                            o = o.value;
                            try {
                                if (!Nr(i(), o)) return !1;
                            } catch {
                                return !1;
                            }
                        }
                }
                if (((n = t.child), t.subtreeFlags & 16384 && n !== null))
                    (n.return = t), (t = n);
                else {
                    if (t === e) break;
                    for (; t.sibling === null; ) {
                        if (t.return === null || t.return === e) return !0;
                        t = t.return;
                    }
                    (t.sibling.return = t.return), (t = t.sibling);
                }
            }
            return !0;
        }
        function Qi(e, t) {
            for (
                t &= ~Gb,
                    t &= ~Bp,
                    e.suspendedLanes |= t,
                    e.pingedLanes &= ~t,
                    e = e.expirationTimes;
                0 < t;

            ) {
                var n = 31 - jr(t),
                    r = 1 << n;
                (e[n] = -1), (t &= ~r);
            }
        }
        function _3(e) {
            if (Te & 6) throw Error(Z(327));
            yl();
            var t = tp(e, 0);
            if (!(t & 1)) return Fn(e, St()), null;
            var n = Yp(e, t);
            if (e.tag !== 0 && n === 2) {
                var r = A0(e);
                r !== 0 && ((t = r), (n = Qb(e, r)));
            }
            if (n === 1) throw ((n = Ld), Ga(e, 0), Qi(e, t), Fn(e, St()), n);
            if (n === 6) throw Error(Z(345));
            return (
                (e.finishedWork = e.current.alternate),
                    (e.finishedLanes = t),
                    Xa(e, Nn, ti),
                    Fn(e, St()),
                    null
            );
        }
        function ey(e, t) {
            var n = Te;
            Te |= 1;
            try {
                return e(t);
            } finally {
                (Te = n), Te === 0 && ((bl = St() + 500), wp && Ki());
            }
        }
        function Ya(e) {
            qi !== null && qi.tag === 0 && !(Te & 6) && yl();
            var t = Te;
            Te |= 1;
            var n = xr.transition,
                r = Ne;
            try {
                if (((xr.transition = null), (Ne = 1), e)) return e();
            } finally {
                (Ne = r), (xr.transition = n), (Te = t), !(Te & 6) && Ki();
            }
        }
        function ty() {
            (er = vl.current), rt(vl);
        }
        function Ga(e, t) {
            (e.finishedWork = null), (e.finishedLanes = 0);
            var n = e.timeoutHandle;
            if ((n !== -1 && ((e.timeoutHandle = -1), nO(n)), Ct !== null))
                for (n = Ct.return; n !== null; ) {
                    var r = n;
                    switch ((db(r), r.tag)) {
                        case 1:
                            (r = r.type.childContextTypes), r != null && bp();
                            break;
                        case 3:
                            fl(), rt(Dn), rt(tn), Cb();
                            break;
                        case 5:
                            _b(r);
                            break;
                        case 4:
                            fl();
                            break;
                        case 13:
                            rt(dt);
                            break;
                        case 19:
                            rt(dt);
                            break;
                        case 10:
                            gb(r.type._context);
                            break;
                        case 22:
                        case 23:
                            ty();
                    }
                    n = n.return;
                }
            if (
                ((Mt = e),
                    (Ct = e = Ji(e.current, null)),
                    (Ht = er = t),
                    (Pt = 0),
                    (Ld = null),
                    (Gb = Bp = Wa = 0),
                    (Nn = jd = null),
                Ha !== null)
            ) {
                for (t = 0; t < Ha.length; t++)
                    if (((n = Ha[t]), (r = n.interleaved), r !== null)) {
                        n.interleaved = null;
                        var o = r.next,
                            i = n.pending;
                        if (i !== null) {
                            var a = i.next;
                            (i.next = o), (r.next = a);
                        }
                        n.pending = r;
                    }
                Ha = null;
            }
            return e;
        }
        function k3(e, t) {
            do {
                var n = Ct;
                try {
                    if ((mb(), (Ap.current = Op), Mp)) {
                        for (var r = ut.memoizedState; r !== null; ) {
                            var o = r.queue;
                            o !== null && (o.pending = null), (r = r.next);
                        }
                        Mp = !1;
                    }
                    if (
                        ((Ka = 0),
                            (At = Et = ut = null),
                            (Ad = !1),
                            (Md = 0),
                            (Yb.current = null),
                        n === null || n.return === null)
                    ) {
                        (Pt = 1), (Ld = t), (Ct = null);
                        break;
                    }
                    e: {
                        var i = e,
                            a = n.return,
                            s = n,
                            l = t;
                        if (
                            ((t = Ht),
                                (s.flags |= 32768),
                            l !== null &&
                            typeof l == "object" &&
                            typeof l.then == "function")
                        ) {
                            var c = l,
                                d = s,
                                u = d.tag;
                            if (
                                !(d.mode & 1) &&
                                (u === 0 || u === 11 || u === 15)
                            ) {
                                var h = d.alternate;
                                h
                                    ? ((d.updateQueue = h.updateQueue),
                                        (d.memoizedState = h.memoizedState),
                                        (d.lanes = h.lanes))
                                    : ((d.updateQueue = null),
                                        (d.memoizedState = null));
                            }
                            var p = X5(a);
                            if (p !== null) {
                                (p.flags &= -257),
                                    q5(p, a, s, i, t),
                                p.mode & 1 && G5(i, c, t),
                                    (t = p),
                                    (l = c);
                                var m = t.updateQueue;
                                if (m === null) {
                                    var f = new Set();
                                    f.add(l), (t.updateQueue = f);
                                } else m.add(l);
                                break e;
                            } else {
                                if (!(t & 1)) {
                                    G5(i, c, t), ny();
                                    break e;
                                }
                                l = Error(Z(426));
                            }
                        } else if (st && s.mode & 1) {
                            var g = X5(a);
                            if (g !== null) {
                                !(g.flags & 65536) && (g.flags |= 256),
                                    q5(g, a, s, i, t),
                                    pb(ml(l, s));
                                break e;
                            }
                        }
                        (i = l = ml(l, s)),
                        Pt !== 4 && (Pt = 2),
                            jd === null ? (jd = [i]) : jd.push(i),
                            (i = a);
                        do {
                            switch (i.tag) {
                                case 3:
                                    (i.flags |= 65536), (t &= -t), (i.lanes |= t);
                                    var b = W5(i, l, t);
                                    m5(i, b);
                                    break e;
                                case 1:
                                    s = l;
                                    var x = i.type,
                                        S = i.stateNode;
                                    if (
                                        !(i.flags & 128) &&
                                        (typeof x.getDerivedStateFromError ==
                                            "function" ||
                                            (S !== null &&
                                                typeof S.componentDidCatch ==
                                                "function" &&
                                                (Xi === null || !Xi.has(S))))
                                    ) {
                                        (i.flags |= 65536),
                                            (t &= -t),
                                            (i.lanes |= t);
                                        var _ = Y5(i, s, t);
                                        m5(i, _);
                                        break e;
                                    }
                            }
                            i = i.return;
                        } while (i !== null);
                    }
                    P3(n);
                } catch (k) {
                    (t = k), Ct === n && n !== null && (Ct = n = n.return);
                    continue;
                }
                break;
            } while (!0);
        }
        function C3() {
            var e = Fp.current;
            return (Fp.current = Op), e === null ? Op : e;
        }
        function ny() {
            (Pt === 0 || Pt === 3 || Pt === 2) && (Pt = 4),
            Mt === null ||
            (!(Wa & 268435455) && !(Bp & 268435455)) ||
            Qi(Mt, Ht);
        }
        function Yp(e, t) {
            var n = Te;
            Te |= 2;
            var r = C3();
            (Mt !== e || Ht !== t) && ((ti = null), Ga(e, t));
            do
                try {
                    PO();
                    break;
                } catch (o) {
                    k3(e, o);
                }
            while (!0);
            if ((mb(), (Te = n), (Fp.current = r), Ct !== null))
                throw Error(Z(261));
            return (Mt = null), (Ht = 0), Pt;
        }
        function PO() {
            for (; Ct !== null; ) E3(Ct);
        }
        function IO() {
            for (; Ct !== null && !Jz(); ) E3(Ct);
        }
        function E3(e) {
            var t = $3(e.alternate, e, er);
            (e.memoizedProps = e.pendingProps),
                t === null ? P3(e) : (Ct = t),
                (Yb.current = null);
        }
        function P3(e) {
            var t = e;
            do {
                var n = t.alternate;
                if (((e = t.return), t.flags & 32768)) {
                    if (((n = xO(n, t)), n !== null)) {
                        (n.flags &= 32767), (Ct = n);
                        return;
                    }
                    if (e !== null)
                        (e.flags |= 32768),
                            (e.subtreeFlags = 0),
                            (e.deletions = null);
                    else {
                        (Pt = 6), (Ct = null);
                        return;
                    }
                } else if (((n = wO(n, t, er)), n !== null)) {
                    Ct = n;
                    return;
                }
                if (((t = t.sibling), t !== null)) {
                    Ct = t;
                    return;
                }
                Ct = t = e;
            } while (t !== null);
            Pt === 0 && (Pt = 5);
        }
        function Xa(e, t, n) {
            var r = Ne,
                o = xr.transition;
            try {
                (xr.transition = null), (Ne = 1), TO(e, t, n, r);
            } finally {
                (xr.transition = o), (Ne = r);
            }
            return null;
        }
        function TO(e, t, n, r) {
            do yl();
            while (qi !== null);
            if (Te & 6) throw Error(Z(327));
            n = e.finishedWork;
            var o = e.finishedLanes;
            if (n === null) return null;
            if (((e.finishedWork = null), (e.finishedLanes = 0), n === e.current))
                throw Error(Z(177));
            (e.callbackNode = null), (e.callbackPriority = 0);
            var i = n.lanes | n.childLanes;
            if (
                (cR(e, i),
                e === Mt && ((Ct = Mt = null), (Ht = 0)),
                (!(n.subtreeFlags & 2064) && !(n.flags & 2064)) ||
                Hp ||
                ((Hp = !0),
                    A3(Zh, function () {
                        return yl(), null;
                    })),
                    (i = (n.flags & 15990) !== 0),
                n.subtreeFlags & 15990 || i)
            ) {
                (i = xr.transition), (xr.transition = null);
                var a = Ne;
                Ne = 1;
                var s = Te;
                (Te |= 4),
                    (Yb.current = null),
                    _O(e, n),
                    v3(n, e),
                    XR(nb),
                    (op = !!tb),
                    (nb = tb = null),
                    (e.current = n),
                    kO(n),
                    eR(),
                    (Te = s),
                    (Ne = a),
                    (xr.transition = i);
            } else e.current = n;
            if (
                (Hp && ((Hp = !1), (qi = e), (Vp = o)),
                    (i = e.pendingLanes),
                i === 0 && (Xi = null),
                    rR(n.stateNode),
                    Fn(e, St()),
                t !== null)
            )
                for (r = e.onRecoverableError, n = 0; n < t.length; n++)
                    (o = t[n]),
                        r(o.value, {componentStack: o.stack, digest: o.digest});
            if (Up) throw ((Up = !1), (e = qb), (qb = null), e);
            return (
                Vp & 1 && e.tag !== 0 && yl(),
                    (i = e.pendingLanes),
                    i & 1 ? (e === Zb ? Nd++ : ((Nd = 0), (Zb = e))) : (Nd = 0),
                    Ki(),
                    null
            );
        }
        function yl() {
            if (qi !== null) {
                var e = fk(Vp),
                    t = xr.transition,
                    n = Ne;
                try {
                    if (
                        ((xr.transition = null),
                            (Ne = 16 > e ? 16 : e),
                        qi === null)
                    )
                        var r = !1;
                    else {
                        if (((e = qi), (qi = null), (Vp = 0), Te & 6))
                            throw Error(Z(331));
                        var o = Te;
                        for (Te |= 4, ne = e.current; ne !== null; ) {
                            var i = ne,
                                a = i.child;
                            if (ne.flags & 16) {
                                var s = i.deletions;
                                if (s !== null) {
                                    for (var l = 0; l < s.length; l++) {
                                        var c = s[l];
                                        for (ne = c; ne !== null; ) {
                                            var d = ne;
                                            switch (d.tag) {
                                                case 0:
                                                case 11:
                                                case 15:
                                                    Dd(8, d, i);
                                            }
                                            var u = d.child;
                                            if (u !== null)
                                                (u.return = d), (ne = u);
                                            else
                                                for (; ne !== null; ) {
                                                    d = ne;
                                                    var h = d.sibling,
                                                        p = d.return;
                                                    if ((h3(d), d === c)) {
                                                        ne = null;
                                                        break;
                                                    }
                                                    if (h !== null) {
                                                        (h.return = p), (ne = h);
                                                        break;
                                                    }
                                                    ne = p;
                                                }
                                        }
                                    }
                                    var m = i.alternate;
                                    if (m !== null) {
                                        var f = m.child;
                                        if (f !== null) {
                                            m.child = null;
                                            do {
                                                var g = f.sibling;
                                                (f.sibling = null), (f = g);
                                            } while (f !== null);
                                        }
                                    }
                                    ne = i;
                                }
                            }
                            if (i.subtreeFlags & 2064 && a !== null)
                                (a.return = i), (ne = a);
                            else
                                e: for (; ne !== null; ) {
                                    if (((i = ne), i.flags & 2048))
                                        switch (i.tag) {
                                            case 0:
                                            case 11:
                                            case 15:
                                                Dd(9, i, i.return);
                                        }
                                    var b = i.sibling;
                                    if (b !== null) {
                                        (b.return = i.return), (ne = b);
                                        break e;
                                    }
                                    ne = i.return;
                                }
                        }
                        var x = e.current;
                        for (ne = x; ne !== null; ) {
                            a = ne;
                            var S = a.child;
                            if (a.subtreeFlags & 2064 && S !== null)
                                (S.return = a), (ne = S);
                            else
                                e: for (a = x; ne !== null; ) {
                                    if (((s = ne), s.flags & 2048))
                                        try {
                                            switch (s.tag) {
                                                case 0:
                                                case 11:
                                                case 15:
                                                    Np(9, s);
                                            }
                                        } catch (k) {
                                            vt(s, s.return, k);
                                        }
                                    if (s === a) {
                                        ne = null;
                                        break e;
                                    }
                                    var _ = s.sibling;
                                    if (_ !== null) {
                                        (_.return = s.return), (ne = _);
                                        break e;
                                    }
                                    ne = s.return;
                                }
                        }
                        if (
                            ((Te = o),
                                Ki(),
                            ho && typeof ho.onPostCommitFiberRoot == "function")
                        )
                            try {
                                ho.onPostCommitFiberRoot(Qh, e);
                            } catch {}
                        r = !0;
                    }
                    return r;
                } finally {
                    (Ne = n), (xr.transition = t);
                }
            }
            return !1;
        }
        function I3(e, t, n) {
            (t = ml(n, t)),
                (t = W5(e, t, 1)),
                (e = Yi(e, t, 1)),
                (t = In()),
            e !== null && (cd(e, 1, t), Fn(e, t));
        }
        function vt(e, t, n) {
            if (e.tag === 3) I3(e, e, n);
            else
                for (; t !== null; ) {
                    if (t.tag === 3) {
                        I3(t, e, n);
                        break;
                    } else if (t.tag === 1) {
                        var r = t.stateNode;
                        if (
                            typeof t.type.getDerivedStateFromError == "function" ||
                            (typeof r.componentDidCatch == "function" &&
                                (Xi === null || !Xi.has(r)))
                        ) {
                            (e = ml(n, e)),
                                (e = Y5(t, e, 1)),
                                (t = Yi(t, e, 1)),
                                (e = In()),
                            t !== null && (cd(t, 1, e), Fn(t, e));
                            break;
                        }
                    }
                    t = t.return;
                }
        }
        function $O(e, t, n) {
            var r = e.pingCache;
            r !== null && r.delete(t),
                (t = In()),
                (e.pingedLanes |= e.suspendedLanes & n),
            Mt === e &&
            (Ht & n) === n &&
            (Pt === 4 ||
            (Pt === 3 && (Ht & 130023424) === Ht && 500 > St() - Xb)
                ? Ga(e, 0)
                : (Gb |= n)),
                Fn(e, t);
        }
        function T3(e, t) {
            t === 0 &&
            (e.mode & 1
                ? ((t = ep), (ep <<= 1), !(ep & 130023424) && (ep = 4194304))
                : (t = 1));
            var n = In();
            (e = Qo(e, t)), e !== null && (cd(e, t, n), Fn(e, n));
        }
        function AO(e) {
            var t = e.memoizedState,
                n = 0;
            t !== null && (n = t.retryLane), T3(e, n);
        }
        function MO(e, t) {
            var n = 0;
            switch (e.tag) {
                case 13:
                    var r = e.stateNode,
                        o = e.memoizedState;
                    o !== null && (n = o.retryLane);
                    break;
                case 19:
                    r = e.stateNode;
                    break;
                default:
                    throw Error(Z(314));
            }
            r !== null && r.delete(t), T3(e, n);
        }
        var $3;
        $3 = function (e, t, n) {
            if (e !== null)
                if (e.memoizedProps !== t.pendingProps || Dn.current) jn = !0;
                else {
                    if (!(e.lanes & n) && !(t.flags & 128))
                        return (jn = !1), yO(e, t, n);
                    jn = !!(e.flags & 131072);
                }
            else (jn = !1), st && t.flags & 1048576 && l5(t, Sp, t.index);
            switch (((t.lanes = 0), t.tag)) {
                case 2:
                    var r = t.type;
                    Lp(e, t), (e = t.pendingProps);
                    var o = sl(t, tn.current);
                    hl(t, n), (o = Ib(null, t, r, e, o, n));
                    var i = Tb();
                    return (
                        (t.flags |= 1),
                            typeof o == "object" &&
                            o !== null &&
                            typeof o.render == "function" &&
                            o.$$typeof === void 0
                                ? ((t.tag = 1),
                                    (t.memoizedState = null),
                                    (t.updateQueue = null),
                                    Ln(r) ? ((i = !0), yp(t)) : (i = !1),
                                    (t.memoizedState =
                                        o.state !== null && o.state !== void 0
                                            ? o.state
                                            : null),
                                    yb(t),
                                    (o.updater = Ip),
                                    (t.stateNode = o),
                                    (o._reactInternals = t),
                                    xb(t, r, e, n),
                                    (t = Lb(null, t, r, !0, i, n)))
                                : ((t.tag = 0),
                                st && i && cb(t),
                                    Pn(null, t, o, n),
                                    (t = t.child)),
                            t
                    );
                case 16:
                    r = t.elementType;
                    e: {
                        switch (
                            (Lp(e, t),
                                (e = t.pendingProps),
                                (o = r._init),
                                (r = o(r._payload)),
                                (t.type = r),
                                (o = t.tag = RO(r)),
                                (e = Br(r, e)),
                                o)
                            ) {
                            case 0:
                                t = Db(null, t, r, e, n);
                                break e;
                            case 1:
                                t = n3(null, t, r, e, n);
                                break e;
                            case 11:
                                t = Z5(null, t, r, e, n);
                                break e;
                            case 14:
                                t = Q5(null, t, r, Br(r.type, e), n);
                                break e;
                        }
                        throw Error(Z(306, r, ""));
                    }
                    return t;
                case 0:
                    return (
                        (r = t.type),
                            (o = t.pendingProps),
                            (o = t.elementType === r ? o : Br(r, o)),
                            Db(e, t, r, o, n)
                    );
                case 1:
                    return (
                        (r = t.type),
                            (o = t.pendingProps),
                            (o = t.elementType === r ? o : Br(r, o)),
                            n3(e, t, r, o, n)
                    );
                case 3:
                    e: {
                        if ((r3(t), e === null)) throw Error(Z(387));
                        (r = t.pendingProps),
                            (i = t.memoizedState),
                            (o = i.element),
                            f5(e, t),
                            Pp(t, r, null, n);
                        var a = t.memoizedState;
                        if (((r = a.element), i.isDehydrated))
                            if (
                                ((i = {
                                    element: r,
                                    isDehydrated: !1,
                                    cache: a.cache,
                                    pendingSuspenseBoundaries:
                                    a.pendingSuspenseBoundaries,
                                    transitions: a.transitions,
                                }),
                                    (t.updateQueue.baseState = i),
                                    (t.memoizedState = i),
                                t.flags & 256)
                            ) {
                                (o = ml(Error(Z(423)), t)), (t = o3(e, t, r, n, o));
                                break e;
                            } else if (r !== o) {
                                (o = ml(Error(Z(424)), t)), (t = o3(e, t, r, n, o));
                                break e;
                            } else
                                for (
                                    Jn = Ui(t.stateNode.containerInfo.firstChild),
                                        Qn = t,
                                        st = !0,
                                        Fr = null,
                                        n = _5(t, null, r, n),
                                        t.child = n;
                                    n;

                                )
                                    (n.flags = (n.flags & -3) | 4096),
                                        (n = n.sibling);
                        else {
                            if ((dl(), r === o)) {
                                t = ei(e, t, n);
                                break e;
                            }
                            Pn(e, t, r, n);
                        }
                        t = t.child;
                    }
                    return t;
                case 5:
                    return (
                        k5(t),
                        e === null && hb(t),
                            (r = t.type),
                            (o = t.pendingProps),
                            (i = e !== null ? e.memoizedProps : null),
                            (a = o.children),
                            rb(r, o)
                                ? (a = null)
                                : i !== null && rb(r, i) && (t.flags |= 32),
                            t3(e, t),
                            Pn(e, t, a, n),
                            t.child
                    );
                case 6:
                    return e === null && hb(t), null;
                case 13:
                    return i3(e, t, n);
                case 4:
                    return (
                        Sb(t, t.stateNode.containerInfo),
                            (r = t.pendingProps),
                            e === null ? (t.child = pl(t, null, r, n)) : Pn(e, t, r, n),
                            t.child
                    );
                case 11:
                    return (
                        (r = t.type),
                            (o = t.pendingProps),
                            (o = t.elementType === r ? o : Br(r, o)),
                            Z5(e, t, r, o, n)
                    );
                case 7:
                    return Pn(e, t, t.pendingProps, n), t.child;
                case 8:
                    return Pn(e, t, t.pendingProps.children, n), t.child;
                case 12:
                    return Pn(e, t, t.pendingProps.children, n), t.child;
                case 10:
                    e: {
                        if (
                            ((r = t.type._context),
                                (o = t.pendingProps),
                                (i = t.memoizedProps),
                                (a = o.value),
                                Ye(kp, r._currentValue),
                                (r._currentValue = a),
                            i !== null)
                        )
                            if (Nr(i.value, a)) {
                                if (i.children === o.children && !Dn.current) {
                                    t = ei(e, t, n);
                                    break e;
                                }
                            } else
                                for (
                                    i = t.child, i !== null && (i.return = t);
                                    i !== null;

                                ) {
                                    var s = i.dependencies;
                                    if (s !== null) {
                                        a = i.child;
                                        for (var l = s.firstContext; l !== null; ) {
                                            if (l.context === r) {
                                                if (i.tag === 1) {
                                                    (l = Jo(-1, n & -n)),
                                                        (l.tag = 2);
                                                    var c = i.updateQueue;
                                                    if (c !== null) {
                                                        c = c.shared;
                                                        var d = c.pending;
                                                        d === null
                                                            ? (l.next = l)
                                                            : ((l.next = d.next),
                                                                (d.next = l)),
                                                            (c.pending = l);
                                                    }
                                                }
                                                (i.lanes |= n),
                                                    (l = i.alternate),
                                                l !== null && (l.lanes |= n),
                                                    vb(i.return, n, t),
                                                    (s.lanes |= n);
                                                break;
                                            }
                                            l = l.next;
                                        }
                                    } else if (i.tag === 10)
                                        a = i.type === t.type ? null : i.child;
                                    else if (i.tag === 18) {
                                        if (((a = i.return), a === null))
                                            throw Error(Z(341));
                                        (a.lanes |= n),
                                            (s = a.alternate),
                                        s !== null && (s.lanes |= n),
                                            vb(a, n, t),
                                            (a = i.sibling);
                                    } else a = i.child;
                                    if (a !== null) a.return = i;
                                    else
                                        for (a = i; a !== null; ) {
                                            if (a === t) {
                                                a = null;
                                                break;
                                            }
                                            if (((i = a.sibling), i !== null)) {
                                                (i.return = a.return), (a = i);
                                                break;
                                            }
                                            a = a.return;
                                        }
                                    i = a;
                                }
                        Pn(e, t, o.children, n), (t = t.child);
                    }
                    return t;
                case 9:
                    return (
                        (o = t.type),
                            (r = t.pendingProps.children),
                            hl(t, n),
                            (o = yr(o)),
                            (r = r(o)),
                            (t.flags |= 1),
                            Pn(e, t, r, n),
                            t.child
                    );
                case 14:
                    return (
                        (r = t.type),
                            (o = Br(r, t.pendingProps)),
                            (o = Br(r.type, o)),
                            Q5(e, t, r, o, n)
                    );
                case 15:
                    return J5(e, t, t.type, t.pendingProps, n);
                case 17:
                    return (
                        (r = t.type),
                            (o = t.pendingProps),
                            (o = t.elementType === r ? o : Br(r, o)),
                            Lp(e, t),
                            (t.tag = 1),
                            Ln(r) ? ((e = !0), yp(t)) : (e = !1),
                            hl(t, n),
                            y5(t, r, o),
                            xb(t, r, o, n),
                            Lb(null, t, r, !0, e, n)
                    );
                case 19:
                    return s3(e, t, n);
                case 22:
                    return e3(e, t, n);
            }
            throw Error(Z(156, t.tag));
        };
        function A3(e, t) {
            return ck(e, t);
        }
        function zO(e, t, n, r) {
            (this.tag = e),
                (this.key = n),
                (this.sibling =
                    this.child =
                        this.return =
                            this.stateNode =
                                this.type =
                                    this.elementType =
                                        null),
                (this.index = 0),
                (this.ref = null),
                (this.pendingProps = t),
                (this.dependencies =
                    this.memoizedState =
                        this.updateQueue =
                            this.memoizedProps =
                                null),
                (this.mode = r),
                (this.subtreeFlags = this.flags = 0),
                (this.deletions = null),
                (this.childLanes = this.lanes = 0),
                (this.alternate = null);
        }
        function Sr(e, t, n, r) {
            return new zO(e, t, n, r);
        }
        function ry(e) {
            return (e = e.prototype), !(!e || !e.isReactComponent);
        }
        function RO(e) {
            if (typeof e == "function") return ry(e) ? 1 : 0;
            if (e != null) {
                if (((e = e.$$typeof), e === c0)) return 11;
                if (e === h0) return 14;
            }
            return 2;
        }
        function Ji(e, t) {
            var n = e.alternate;
            return (
                n === null
                    ? ((n = Sr(e.tag, t, e.key, e.mode)),
                        (n.elementType = e.elementType),
                        (n.type = e.type),
                        (n.stateNode = e.stateNode),
                        (n.alternate = e),
                        (e.alternate = n))
                    : ((n.pendingProps = t),
                        (n.type = e.type),
                        (n.flags = 0),
                        (n.subtreeFlags = 0),
                        (n.deletions = null)),
                    (n.flags = e.flags & 14680064),
                    (n.childLanes = e.childLanes),
                    (n.lanes = e.lanes),
                    (n.child = e.child),
                    (n.memoizedProps = e.memoizedProps),
                    (n.memoizedState = e.memoizedState),
                    (n.updateQueue = e.updateQueue),
                    (t = e.dependencies),
                    (n.dependencies =
                        t === null
                            ? null
                            : {lanes: t.lanes, firstContext: t.firstContext}),
                    (n.sibling = e.sibling),
                    (n.index = e.index),
                    (n.ref = e.ref),
                    n
            );
        }
        function Gp(e, t, n, r, o, i) {
            var a = 2;
            if (((r = e), typeof e == "function")) ry(e) && (a = 1);
            else if (typeof e == "string") a = 5;
            else
                e: switch (e) {
                    case Gs:
                        return qa(n.children, o, i, t);
                    case s0:
                        (a = 8), (o |= 8);
                        break;
                    case l0:
                        return (
                            (e = Sr(12, n, t, o | 2)),
                                (e.elementType = l0),
                                (e.lanes = i),
                                e
                        );
                    case d0:
                        return (
                            (e = Sr(13, n, t, o)),
                                (e.elementType = d0),
                                (e.lanes = i),
                                e
                        );
                    case u0:
                        return (
                            (e = Sr(19, n, t, o)),
                                (e.elementType = u0),
                                (e.lanes = i),
                                e
                        );
                    case N_:
                        return Xp(n, o, i, t);
                    default:
                        if (typeof e == "object" && e !== null)
                            switch (e.$$typeof) {
                                case L_:
                                    a = 10;
                                    break e;
                                case j_:
                                    a = 9;
                                    break e;
                                case c0:
                                    a = 11;
                                    break e;
                                case h0:
                                    a = 14;
                                    break e;
                                case Ri:
                                    (a = 16), (r = null);
                                    break e;
                            }
                        throw Error(Z(130, e == null ? e : typeof e, ""));
                }
            return (
                (t = Sr(a, n, t, o)),
                    (t.elementType = e),
                    (t.type = r),
                    (t.lanes = i),
                    t
            );
        }
        function qa(e, t, n, r) {
            return (e = Sr(7, e, r, t)), (e.lanes = n), e;
        }
        function Xp(e, t, n, r) {
            return (
                (e = Sr(22, e, r, t)),
                    (e.elementType = N_),
                    (e.lanes = n),
                    (e.stateNode = {isHidden: !1}),
                    e
            );
        }
        function oy(e, t, n) {
            return (e = Sr(6, e, null, t)), (e.lanes = n), e;
        }
        function iy(e, t, n) {
            return (
                (t = Sr(4, e.children !== null ? e.children : [], e.key, t)),
                    (t.lanes = n),
                    (t.stateNode = {
                        containerInfo: e.containerInfo,
                        pendingChildren: null,
                        implementation: e.implementation,
                    }),
                    t
            );
        }
        function OO(e, t, n, r, o) {
            (this.tag = t),
                (this.containerInfo = e),
                (this.finishedWork =
                    this.pingCache =
                        this.current =
                            this.pendingChildren =
                                null),
                (this.timeoutHandle = -1),
                (this.callbackNode = this.pendingContext = this.context = null),
                (this.callbackPriority = 0),
                (this.eventTimes = M0(0)),
                (this.expirationTimes = M0(-1)),
                (this.entangledLanes =
                    this.finishedLanes =
                        this.mutableReadLanes =
                            this.expiredLanes =
                                this.pingedLanes =
                                    this.suspendedLanes =
                                        this.pendingLanes =
                                            0),
                (this.entanglements = M0(0)),
                (this.identifierPrefix = r),
                (this.onRecoverableError = o),
                (this.mutableSourceEagerHydrationData = null);
        }
        function ay(e, t, n, r, o, i, a, s, l) {
            return (
                (e = new OO(e, t, n, s, l)),
                    t === 1 ? ((t = 1), i === !0 && (t |= 8)) : (t = 0),
                    (i = Sr(3, null, null, t)),
                    (e.current = i),
                    (i.stateNode = e),
                    (i.memoizedState = {
                        element: r,
                        isDehydrated: n,
                        cache: null,
                        transitions: null,
                        pendingSuspenseBoundaries: null,
                    }),
                    yb(i),
                    e
            );
        }
        function DO(e, t, n) {
            var r =
                3 < arguments.length && arguments[3] !== void 0
                    ? arguments[3]
                    : null;
            return {
                $$typeof: Ys,
                key: r == null ? null : "" + r,
                children: e,
                containerInfo: t,
                implementation: n,
            };
        }
        function M3(e) {
            if (!e) return Vi;
            e = e._reactInternals;
            e: {
                if (ja(e) !== e || e.tag !== 1) throw Error(Z(170));
                var t = e;
                do {
                    switch (t.tag) {
                        case 3:
                            t = t.stateNode.context;
                            break e;
                        case 1:
                            if (Ln(t.type)) {
                                t =
                                    t.stateNode
                                        .__reactInternalMemoizedMergedChildContext;
                                break e;
                            }
                    }
                    t = t.return;
                } while (t !== null);
                throw Error(Z(171));
            }
            if (e.tag === 1) {
                var n = e.type;
                if (Ln(n)) return i5(e, n, t);
            }
            return t;
        }
        function z3(e, t, n, r, o, i, a, s, l) {
            return (
                (e = ay(n, r, !0, e, o, i, a, s, l)),
                    (e.context = M3(null)),
                    (n = e.current),
                    (r = In()),
                    (o = Zi(n)),
                    (i = Jo(r, o)),
                    (i.callback = t ?? null),
                    Yi(n, i, o),
                    (e.current.lanes = o),
                    cd(e, o, r),
                    Fn(e, r),
                    e
            );
        }
        function qp(e, t, n, r) {
            var o = t.current,
                i = In(),
                a = Zi(o);
            return (
                (n = M3(n)),
                    t.context === null ? (t.context = n) : (t.pendingContext = n),
                    (t = Jo(i, a)),
                    (t.payload = {element: e}),
                    (r = r === void 0 ? null : r),
                r !== null && (t.callback = r),
                    (e = Yi(o, t, a)),
                e !== null && (Vr(e, o, a, i), Ep(e, o, a)),
                    a
            );
        }
        function Zp(e) {
            if (((e = e.current), !e.child)) return null;
            switch (e.child.tag) {
                case 5:
                    return e.child.stateNode;
                default:
                    return e.child.stateNode;
            }
        }
        function R3(e, t) {
            if (((e = e.memoizedState), e !== null && e.dehydrated !== null)) {
                var n = e.retryLane;
                e.retryLane = n !== 0 && n < t ? n : t;
            }
        }
        function sy(e, t) {
            R3(e, t), (e = e.alternate) && R3(e, t);
        }
        function LO() {
            return null;
        }
        var O3 =
            typeof reportError == "function"
                ? reportError
                : function (e) {
                    console.error(e);
                };
        function ly(e) {
            this._internalRoot = e;
        }
        (Qp.prototype.render = ly.prototype.render =
            function (e) {
                var t = this._internalRoot;
                if (t === null) throw Error(Z(409));
                qp(e, t, null, null);
            }),
            (Qp.prototype.unmount = ly.prototype.unmount =
                function () {
                    var e = this._internalRoot;
                    if (e !== null) {
                        this._internalRoot = null;
                        var t = e.containerInfo;
                        Ya(function () {
                            qp(null, e, null, null);
                        }),
                            (t[Go] = null);
                    }
                });
        function Qp(e) {
            this._internalRoot = e;
        }
        Qp.prototype.unstable_scheduleHydration = function (e) {
            if (e) {
                var t = vk();
                e = {blockedOn: null, target: e, priority: t};
                for (
                    var n = 0;
                    n < Ni.length && t !== 0 && t < Ni[n].priority;
                    n++
                );
                Ni.splice(n, 0, e), n === 0 && wk(e);
            }
        };
        function cy(e) {
            return !(
                !e ||
                (e.nodeType !== 1 && e.nodeType !== 9 && e.nodeType !== 11)
            );
        }
        function Jp(e) {
            return !(
                !e ||
                (e.nodeType !== 1 &&
                    e.nodeType !== 9 &&
                    e.nodeType !== 11 &&
                    (e.nodeType !== 8 ||
                        e.nodeValue !== " react-mount-point-unstable "))
            );
        }
        function D3() {}
        function jO(e, t, n, r, o) {
            if (o) {
                if (typeof r == "function") {
                    var i = r;
                    r = function () {
                        var c = Zp(a);
                        i.call(c);
                    };
                }
                var a = z3(t, r, e, 0, null, !1, !1, "", D3);
                return (
                    (e._reactRootContainer = a),
                        (e[Go] = a.current),
                        _d(e.nodeType === 8 ? e.parentNode : e),
                        Ya(),
                        a
                );
            }
            for (; (o = e.lastChild); ) e.removeChild(o);
            if (typeof r == "function") {
                var s = r;
                r = function () {
                    var c = Zp(l);
                    s.call(c);
                };
            }
            var l = ay(e, 0, !1, null, null, !1, !1, "", D3);
            return (
                (e._reactRootContainer = l),
                    (e[Go] = l.current),
                    _d(e.nodeType === 8 ? e.parentNode : e),
                    Ya(function () {
                        qp(t, l, n, r);
                    }),
                    l
            );
        }
        function ef(e, t, n, r, o) {
            var i = n._reactRootContainer;
            if (i) {
                var a = i;
                if (typeof o == "function") {
                    var s = o;
                    o = function () {
                        var l = Zp(a);
                        s.call(l);
                    };
                }
                qp(t, a, e, o);
            } else a = jO(n, t, e, o, r);
            return Zp(a);
        }
        (mk = function (e) {
            switch (e.tag) {
                case 3:
                    var t = e.stateNode;
                    if (t.current.memoizedState.isDehydrated) {
                        var n = ld(t.pendingLanes);
                        n !== 0 &&
                        (z0(t, n | 1),
                            Fn(t, St()),
                        !(Te & 6) && ((bl = St() + 500), Ki()));
                    }
                    break;
                case 13:
                    Ya(function () {
                        var r = Qo(e, 1);
                        if (r !== null) {
                            var o = In();
                            Vr(r, e, 1, o);
                        }
                    }),
                        sy(e, 1);
            }
        }),
            (R0 = function (e) {
                if (e.tag === 13) {
                    var t = Qo(e, 134217728);
                    if (t !== null) {
                        var n = In();
                        Vr(t, e, 134217728, n);
                    }
                    sy(e, 134217728);
                }
            }),
            (gk = function (e) {
                if (e.tag === 13) {
                    var t = Zi(e),
                        n = Qo(e, t);
                    if (n !== null) {
                        var r = In();
                        Vr(n, e, t, r);
                    }
                    sy(e, t);
                }
            }),
            (vk = function () {
                return Ne;
            }),
            (bk = function (e, t) {
                var n = Ne;
                try {
                    return (Ne = e), t();
                } finally {
                    Ne = n;
                }
            }),
            (E0 = function (e, t, n) {
                switch (t) {
                    case "input":
                        if (
                            (b0(e, n),
                                (t = n.name),
                            n.type === "radio" && t != null)
                        ) {
                            for (n = e; n.parentNode; ) n = n.parentNode;
                            for (
                                n = n.querySelectorAll(
                                    "input[name=" +
                                    JSON.stringify("" + t) +
                                    '][type="radio"]'
                                ),
                                    t = 0;
                                t < n.length;
                                t++
                            ) {
                                var r = n[t];
                                if (r !== e && r.form === e.form) {
                                    var o = vp(r);
                                    if (!o) throw Error(Z(90));
                                    U_(r), b0(r, o);
                                }
                            }
                        }
                        break;
                    case "textarea":
                        Y_(e, n);
                        break;
                    case "select":
                        (t = n.value), t != null && Xs(e, !!n.multiple, t, !1);
                }
            }),
            (nk = ey),
            (rk = Ya);
        var NO = {usingClientEntryPoint: !1, Events: [Ed, il, vp, ek, tk, ey]},
            Fd = {
                findFiberByHostInstance: Na,
                bundleType: 0,
                version: "18.2.0",
                rendererPackageName: "react-dom",
            },
            FO = {
                bundleType: Fd.bundleType,
                version: Fd.version,
                rendererPackageName: Fd.rendererPackageName,
                rendererConfig: Fd.rendererConfig,
                overrideHookState: null,
                overrideHookStateDeletePath: null,
                overrideHookStateRenamePath: null,
                overrideProps: null,
                overridePropsDeletePath: null,
                overridePropsRenamePath: null,
                setErrorHandler: null,
                setSuspenseHandler: null,
                scheduleUpdate: null,
                currentDispatcherRef: Yo.ReactCurrentDispatcher,
                findHostInstanceByFiber: function (e) {
                    return (e = sk(e)), e === null ? null : e.stateNode;
                },
                findFiberByHostInstance: Fd.findFiberByHostInstance || LO,
                findHostInstancesForRefresh: null,
                scheduleRefresh: null,
                scheduleRoot: null,
                setRefreshHandler: null,
                getCurrentFiber: null,
                reconcilerVersion: "18.2.0-next-9e3b772b8-20220608",
            };
        if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ < "u") {
            var tf = __REACT_DEVTOOLS_GLOBAL_HOOK__;
            if (!tf.isDisabled && tf.supportsFiber)
                try {
                    (Qh = tf.inject(FO)), (ho = tf);
                } catch {}
        }
        (Xn.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = NO),
            (Xn.createPortal = function (e, t) {
                var n =
                    2 < arguments.length && arguments[2] !== void 0
                        ? arguments[2]
                        : null;
                if (!cy(t)) throw Error(Z(200));
                return DO(e, t, null, n);
            }),
            (Xn.createRoot = function (e, t) {
                if (!cy(e)) throw Error(Z(299));
                var n = !1,
                    r = "",
                    o = O3;
                return (
                    t != null &&
                    (t.unstable_strictMode === !0 && (n = !0),
                    t.identifierPrefix !== void 0 && (r = t.identifierPrefix),
                    t.onRecoverableError !== void 0 &&
                    (o = t.onRecoverableError)),
                        (t = ay(e, 1, !1, null, null, n, !1, r, o)),
                        (e[Go] = t.current),
                        _d(e.nodeType === 8 ? e.parentNode : e),
                        new ly(t)
                );
            }),
            (Xn.findDOMNode = function (e) {
                if (e == null) return null;
                if (e.nodeType === 1) return e;
                var t = e._reactInternals;
                if (t === void 0)
                    throw typeof e.render == "function"
                        ? Error(Z(188))
                        : ((e = Object.keys(e).join(",")), Error(Z(268, e)));
                return (e = sk(t)), (e = e === null ? null : e.stateNode), e;
            }),
            (Xn.flushSync = function (e) {
                return Ya(e);
            }),
            (Xn.hydrate = function (e, t, n) {
                if (!Jp(t)) throw Error(Z(200));
                return ef(null, e, t, !0, n);
            }),
            (Xn.hydrateRoot = function (e, t, n) {
                if (!cy(e)) throw Error(Z(405));
                var r = (n != null && n.hydratedSources) || null,
                    o = !1,
                    i = "",
                    a = O3;
                if (
                    (n != null &&
                    (n.unstable_strictMode === !0 && (o = !0),
                    n.identifierPrefix !== void 0 && (i = n.identifierPrefix),
                    n.onRecoverableError !== void 0 &&
                    (a = n.onRecoverableError)),
                        (t = z3(t, null, e, 1, n ?? null, o, !1, i, a)),
                        (e[Go] = t.current),
                        _d(e),
                        r)
                )
                    for (e = 0; e < r.length; e++)
                        (n = r[e]),
                            (o = n._getVersion),
                            (o = o(n._source)),
                            t.mutableSourceEagerHydrationData == null
                                ? (t.mutableSourceEagerHydrationData = [n, o])
                                : t.mutableSourceEagerHydrationData.push(n, o);
                return new Qp(t);
            }),
            (Xn.render = function (e, t, n) {
                if (!Jp(t)) throw Error(Z(200));
                return ef(null, e, t, !1, n);
            }),
            (Xn.unmountComponentAtNode = function (e) {
                if (!Jp(e)) throw Error(Z(40));
                return e._reactRootContainer
                    ? (Ya(function () {
                        ef(null, null, e, !1, function () {
                            (e._reactRootContainer = null), (e[Go] = null);
                        });
                    }),
                        !0)
                    : !1;
            }),
            (Xn.unstable_batchedUpdates = ey),
            (Xn.unstable_renderSubtreeIntoContainer = function (e, t, n, r) {
                if (!Jp(n)) throw Error(Z(200));
                if (e == null || e._reactInternals === void 0) throw Error(Z(38));
                return ef(e, t, n, !1, r);
            }),
            (Xn.version = "18.2.0-next-9e3b772b8-20220608");
        function L3() {
            if (
                !(
                    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ > "u" ||
                    typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE != "function"
                )
            )
                try {
                    __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(L3);
                } catch (e) {
                    console.error(e);
                }
        }
        L3(), ($_.exports = Xn);
        var Za = $_.exports;
        const BO = Da(Za);
        var j3 = Za;
        (n0.createRoot = j3.createRoot), (n0.hydrateRoot = j3.hydrateRoot);
        function N3(e) {
            return e && typeof e == "object" && "parents" in e;
        }
        function F3(e) {
            for (let t = 0, n = e.parents.length; t < n; t++)
                if (
                    (e.parents[t].__unsafe__getWithoutCapture(),
                    e.parents[t].lastChangedEpoch !== e.parentEpochs[t])
                )
                    return !0;
            return !1;
        }
        const nf = (e, t) => {
                if (e.children.remove(t) && e.children.isEmpty && N3(e))
                    for (let n = 0, r = e.parents.length; n < r; n++)
                        nf(e.parents[n], e);
            },
            dy = (e, t) => {
                if (e.children.add(t) && N3(e))
                    for (let n = 0, r = e.parents.length; n < r; n++)
                        dy(e.parents[n], e);
            };
        function B3(e, t) {
            return (
                e === t ||
                Object.is(e, t) ||
                !!(e && t && typeof e.equals == "function" && e.equals(t))
            );
        }
        function ea(e, t) {
            const n = Symbol.for(`com.tldraw.state/${e}`),
                r = globalThis;
            return r[n] ?? (r[n] = t()), r[n];
        }
        const ni = ea("empty_array", () => Object.freeze([])),
            U3 = 8;
        class H3 {
            constructor() {
                w(this, "arraySize", 0);
                w(this, "array", Array(U3));
                w(this, "set", null);
            }
            get isEmpty() {
                if (this.array) return this.arraySize === 0;
                if (this.set) return this.set.size === 0;
                throw new Error("no set or array");
            }
            add(t) {
                if (this.array)
                    return this.array.indexOf(t) !== -1
                        ? !1
                        : this.arraySize < U3
                            ? ((this.array[this.arraySize] = t), this.arraySize++, !0)
                            : ((this.set = new Set(this.array)),
                                (this.array = null),
                                this.set.add(t),
                                !0);
                if (this.set) return this.set.has(t) ? !1 : (this.set.add(t), !0);
                throw new Error("no set or array");
            }
            remove(t) {
                if (this.array) {
                    const n = this.array.indexOf(t);
                    return n === -1
                        ? !1
                        : ((this.array[n] = void 0),
                            this.arraySize--,
                        n !== this.arraySize &&
                        ((this.array[n] = this.array[this.arraySize]),
                            (this.array[this.arraySize] = void 0)),
                            !0);
                }
                if (this.set)
                    return this.set.has(t) ? (this.set.delete(t), !0) : !1;
                throw new Error("no set or array");
            }
            visit(t) {
                if (this.array) {
                    for (let n = 0; n < this.arraySize; n++) {
                        const r = this.array[n];
                        typeof r < "u" && t(r);
                    }
                    return;
                }
                if (this.set) {
                    this.set.forEach(t);
                    return;
                }
                throw new Error("no set or array");
            }
        }
        const tr = Symbol.for("com.tldraw.state/RESET_VALUE");
        class V3 {
            constructor(t) {
                w(this, "index", 0);
                w(this, "buffer");
                (this.capacity = t), (this.buffer = new Array(t));
            }
            pushEntry(t, n, r) {
                if (r !== void 0) {
                    if (r === tr) {
                        this.clear();
                        return;
                    }
                    (this.buffer[this.index] = [t, n, r]),
                        (this.index = (this.index + 1) % this.capacity);
                }
            }
            clear() {
                (this.index = 0), this.buffer.fill(void 0);
            }
            getChangesSince(t) {
                const {index: n, capacity: r, buffer: o} = this;
                for (let i = 0; i < r; i++) {
                    const a = (n - 1 + r - i) % r,
                        s = o[a];
                    if (!s) return tr;
                    const [l, c] = s;
                    if (i === 0 && t >= c) return [];
                    if (l <= t && t < c) {
                        const d = i + 1,
                            u = new Array(d);
                        for (let h = 0; h < d; h++) u[h] = o[(a + h) % r][2];
                        return u;
                    }
                }
                return tr;
            }
        }
        class UO {
            constructor(t, n) {
                w(this, "offset", 0);
                w(this, "numNewParents", 0);
                w(this, "maybeRemoved");
                (this.below = t), (this.child = n);
            }
        }
        const ot = ea("capture", () => ({stack: null}));
        function K3(e) {
            ot.stack = new UO(ot.stack, e);
        }
        function W3() {
            var n;
            const e = ot.stack;
            if (
                ((ot.stack = e.below),
                e.numNewParents > 0 || e.offset !== e.child.parents.length)
            ) {
                for (let r = e.offset; r < e.child.parents.length; r++) {
                    const o = e.child.parents[r];
                    e.child.parents.indexOf(o) >= e.offset && nf(o, e.child);
                }
                if (
                    ((e.child.parents.length = e.offset),
                        (e.child.parentEpochs.length = e.offset),
                    (n = ot.stack) != null && n.maybeRemoved)
                )
                    for (let r = 0; r < ot.stack.maybeRemoved.length; r++) {
                        const o = ot.stack.maybeRemoved[r];
                        e.child.parents.indexOf(o) === -1 && nf(o, e.child);
                    }
            }
        }
        function uy(e) {
            if (ot.stack) {
                const t = ot.stack.child.parents.indexOf(e);
                if (
                    (t < 0 &&
                    (ot.stack.numNewParents++,
                    ot.stack.child.isActivelyListening &&
                    dy(e, ot.stack.child)),
                    t < 0 || t >= ot.stack.offset)
                ) {
                    if (t !== ot.stack.offset && t > 0) {
                        const n = ot.stack.child.parents[ot.stack.offset];
                        ot.stack.maybeRemoved
                            ? ot.stack.maybeRemoved.indexOf(n) === -1 &&
                            ot.stack.maybeRemoved.push(n)
                            : (ot.stack.maybeRemoved = [n]);
                    }
                    (ot.stack.child.parents[ot.stack.offset] = e),
                        (ot.stack.child.parentEpochs[ot.stack.offset] =
                            e.lastChangedEpoch),
                        ot.stack.offset++;
                }
            }
        }
        const Qa = -1;
        class HO {
            constructor(t, n, r) {
                w(this, "_isActivelyListening", !1);
                w(this, "lastTraversedEpoch", Qa);
                w(this, "lastReactedEpoch", Qa);
                w(this, "_scheduleCount", 0);
                w(this, "parentEpochs", []);
                w(this, "parents", []);
                w(this, "_scheduleEffect");
                w(this, "maybeExecute", () => {
                    this._isActivelyListening && this.execute();
                });
                (this.name = t),
                    (this.runEffect = n),
                    (this._scheduleEffect = r == null ? void 0 : r.scheduleEffect);
            }
            get isActivelyListening() {
                return this._isActivelyListening;
            }
            get scheduleCount() {
                return this._scheduleCount;
            }
            maybeScheduleEffect() {
                if (this._isActivelyListening && this.lastReactedEpoch !== nr()) {
                    if (this.parents.length && !F3(this)) {
                        this.lastReactedEpoch = nr();
                        return;
                    }
                    this.scheduleEffect();
                }
            }
            scheduleEffect() {
                this._scheduleCount++,
                    this._scheduleEffect
                        ? this._scheduleEffect(this.maybeExecute)
                        : this.execute();
            }
            attach() {
                this._isActivelyListening = !0;
                for (let t = 0, n = this.parents.length; t < n; t++)
                    dy(this.parents[t], this);
            }
            detach() {
                this._isActivelyListening = !1;
                for (let t = 0, n = this.parents.length; t < n; t++)
                    nf(this.parents[t], this);
            }
            execute() {
                try {
                    K3(this);
                    const t = this.runEffect(this.lastReactedEpoch);
                    return (this.lastReactedEpoch = nr()), t;
                } finally {
                    W3();
                }
            }
        }
        const wl = ea("EffectScheduler", () => HO);
        function xl(e, t, n) {
            const r = new wl(e, t, n);
            return (
                r.attach(),
                    r.scheduleEffect(),
                    () => {
                        r.detach();
                    }
            );
        }
        function VO(e, t, n) {
            const r = new wl(e, t, n);
            return {
                scheduler: r,
                start: (o) => {
                    const i = (o == null ? void 0 : o.force) ?? !1;
                    r.attach(), i ? r.scheduleEffect() : r.maybeScheduleEffect();
                },
                stop: () => {
                    r.detach();
                },
            };
        }
        let KO = class {
            constructor(t) {
                w(this, "initialAtomValues", new Map());
                this.parent = t;
            }
            get isRoot() {
                return this.parent === null;
            }
            commit() {
                if (this.isRoot) {
                    const t = this.initialAtomValues;
                    (this.initialAtomValues = new Map()), Y3(t.keys());
                } else
                    this.initialAtomValues.forEach((t, n) => {
                        this.parent.initialAtomValues.has(n) ||
                        this.parent.initialAtomValues.set(n, t);
                    });
            }
            abort() {
                an.globalEpoch++,
                    this.initialAtomValues.forEach((t, n) => {
                        var r;
                        n.set(t), (r = n.historyBuffer) == null || r.clear();
                    }),
                    this.commit();
            }
        };
        const an = ea("transactions", () => ({
            globalEpoch: Qa + 1,
            globalIsReacting: !1,
            currentTransaction: null,
        }));
        function nr() {
            return an.globalEpoch;
        }
        function Y3(e) {
            if (an.globalIsReacting)
                throw new Error("cannot change atoms during reaction cycle");
            try {
                an.globalIsReacting = !0;
                const t = new Set(),
                    n = (r) => {
                        r.lastTraversedEpoch !== an.globalEpoch &&
                        ((r.lastTraversedEpoch = an.globalEpoch),
                            r instanceof wl ? t.add(r) : r.children.visit(n));
                    };
                for (const r of e) r.children.visit(n);
                for (const r of t) r.maybeScheduleEffect();
            } finally {
                an.globalIsReacting = !1;
            }
        }
        function WO(e, t) {
            an.currentTransaction
                ? an.currentTransaction.initialAtomValues.has(e) ||
                an.currentTransaction.initialAtomValues.set(e, t)
                : Y3([e]);
        }
        function YO() {
            an.globalEpoch++;
        }
        function GO(e) {
            const t = new KO(an.currentTransaction);
            an.currentTransaction = t;
            try {
                let n = !1;
                const r = e(() => (n = !0));
                return n ? t.abort() : t.commit(), r;
            } catch (n) {
                throw (t.abort(), n);
            } finally {
                an.currentTransaction = an.currentTransaction.parent;
            }
        }
        function _r(e) {
            return an.currentTransaction ? e() : GO(e);
        }
        class XO {
            constructor(t, n, r) {
                w(this, "isEqual");
                w(this, "computeDiff");
                w(this, "lastChangedEpoch", nr());
                w(this, "children", new H3());
                w(this, "historyBuffer");
                (this.name = t),
                    (this.current = n),
                    (this.isEqual = (r == null ? void 0 : r.isEqual) ?? null),
                r &&
                (r.historyLength &&
                (this.historyBuffer = new V3(r.historyLength)),
                    (this.computeDiff = r.computeDiff));
            }
            __unsafe__getWithoutCapture() {
                return this.current;
            }
            get() {
                return uy(this), this.current;
            }
            set(t, n) {
                var o, i;
                if (
                    ((o = this.isEqual) == null
                        ? void 0
                        : o.call(this, this.current, t)) ??
                    B3(this.current, t)
                )
                    return this.current;
                YO(),
                this.historyBuffer &&
                this.historyBuffer.pushEntry(
                    this.lastChangedEpoch,
                    nr(),
                    n ??
                    ((i = this.computeDiff) == null
                        ? void 0
                        : i.call(
                            this,
                            this.current,
                            t,
                            this.lastChangedEpoch,
                            nr()
                        )) ??
                    tr
                ),
                    (this.lastChangedEpoch = nr());
                const r = this.current;
                return (this.current = t), WO(this, r), t;
            }
            update(t) {
                return this.set(t(this.current));
            }
            getDiffSince(t) {
                var n;
                return (
                    uy(this),
                        t >= this.lastChangedEpoch
                            ? ni
                            : ((n = this.historyBuffer) == null
                            ? void 0
                            : n.getChangesSince(t)) ?? tr
                );
            }
        }
        const qO = ea("Atom", () => XO);
        function Tn(e, t, n) {
            return new qO(e, t, n);
        }
        let G3 = !1;
        function ZO() {
            G3 ||
            ((G3 = !0),
                console.warn(`Using \`@computed\` as a decorator for getters is deprecated and will be removed in the near future. Please refactor to use \`@computed\` as a decorator for methods.

// Before
@computed
get foo() {
	return 'foo'
}

// After
@computed
getFoo() {
	return 'foo'
}
`));
        }
        const hy = Symbol.for("com.tldraw.state/UNINITIALIZED"),
            Sl = (e) => e === hy,
            py = ea(
                "WithDiff",
                () =>
                    class {
                        constructor(t, n) {
                            (this.value = t), (this.diff = n);
                        }
                    }
            );
        function Bd(e, t) {
            return new py(e, t);
        }
        class QO {
            constructor(t, n, r) {
                w(this, "lastChangedEpoch", Qa);
                w(this, "lastTraversedEpoch", Qa);
                w(this, "lastCheckedEpoch", Qa);
                w(this, "parents", []);
                w(this, "parentEpochs", []);
                w(this, "children", new H3());
                w(this, "historyBuffer");
                w(this, "state", hy);
                w(this, "computeDiff");
                w(this, "isEqual");
                (this.name = t),
                    (this.derive = n),
                r != null &&
                r.historyLength &&
                (this.historyBuffer = new V3(r.historyLength)),
                    (this.computeDiff = r == null ? void 0 : r.computeDiff),
                    (this.isEqual = (r == null ? void 0 : r.isEqual) ?? B3);
            }
            get isActivelyListening() {
                return !this.children.isEmpty;
            }
            __unsafe__getWithoutCapture() {
                var n;
                const t = this.lastChangedEpoch === Qa;
                if (!t && (this.lastCheckedEpoch === nr() || !F3(this)))
                    return (this.lastCheckedEpoch = nr()), this.state;
                try {
                    K3(this);
                    const r = this.derive(this.state, this.lastCheckedEpoch),
                        o = r instanceof py ? r.value : r;
                    if (this.state === hy || !this.isEqual(o, this.state)) {
                        if (this.historyBuffer && !t) {
                            const i = r instanceof py ? r.diff : void 0;
                            this.historyBuffer.pushEntry(
                                this.lastChangedEpoch,
                                nr(),
                                i ??
                                ((n = this.computeDiff) == null
                                    ? void 0
                                    : n.call(
                                        this,
                                        this.state,
                                        o,
                                        this.lastCheckedEpoch,
                                        nr()
                                    )) ??
                                tr
                            );
                        }
                        (this.lastChangedEpoch = nr()), (this.state = o);
                    }
                    return (this.lastCheckedEpoch = nr()), this.state;
                } finally {
                    W3();
                }
            }
            get() {
                const t = this.__unsafe__getWithoutCapture();
                return uy(this), t;
            }
            getDiffSince(t) {
                var n;
                return (
                    this.get(),
                        t >= this.lastChangedEpoch
                            ? ni
                            : ((n = this.historyBuffer) == null
                            ? void 0
                            : n.getChangesSince(t)) ?? tr
                );
            }
        }
        const fy = ea("Computed", () => QO);
        function JO(e = {}, t, n, r) {
            const o = r.value,
                i = Symbol.for("__@tldraw/state__computed__" + n);
            return (
                (r.value = function () {
                    let a = this[i];
                    return (
                        a ||
                        ((a = new fy(n, o.bind(this), e)),
                            Object.defineProperty(this, i, {
                                enumerable: !1,
                                configurable: !1,
                                writable: !1,
                                value: a,
                            })),
                            a.get()
                    );
                }),
                    (r.value[tD] = !0),
                    r
            );
        }
        function X3(e = {}, t, n, r) {
            return r.get ? (ZO(), eD(e, t, n, r)) : JO(e, t, n, r);
        }
        function eD(e = {}, t, n, r) {
            const o = r.get,
                i = Symbol.for("__@tldraw/state__computed__" + n);
            return (
                (r.get = function () {
                    let a = this[i];
                    return (
                        a ||
                        ((a = new fy(n, o.bind(this), e)),
                            Object.defineProperty(this, i, {
                                enumerable: !1,
                                configurable: !1,
                                writable: !1,
                                value: a,
                            })),
                            a.get()
                    );
                }),
                    r
            );
        }
        const tD = "@@__isComputedMethod__@@";
        function Q() {
            if (arguments.length === 1) {
                const e = arguments[0];
                return (t, n, r) => X3(e, t, n, r);
            } else
                return typeof arguments[0] == "string"
                    ? new fy(arguments[0], arguments[1], arguments[2])
                    : X3(void 0, arguments[0], arguments[1], arguments[2]);
        }
        const q3 = 1;
        if (ea("apiVersion", () => q3) !== q3)
            throw new Error(
                "You have multiple incompatible versions of @tldraw/state in your app. Please deduplicate the package."
            );
        function rf(e, t) {
            const n = N.useRef(t);
            n.current = t;
            const [r, o, i] = N.useMemo(() => {
                let a = null;
                const s = (d) => (
                        (a = d),
                            () => {
                                a = null;
                            }
                    ),
                    l = new wl(
                        `useStateTracking(${e})`,
                        () => {
                            var d;
                            return (d = n.current) == null ? void 0 : d.call(n);
                        },
                        {
                            scheduleEffect() {
                                a == null || a();
                            },
                        }
                    );
                return [l, s, () => l.scheduleCount];
            }, [e]);
            return (
                N.useSyncExternalStore(o, i, i),
                    N.useEffect(
                        () => (
                            r.attach(),
                                r.maybeScheduleEffect(),
                                () => {
                                    r.detach();
                                }
                        ),
                        [r]
                    ),
                    r.execute()
            );
        }
        const Z3 = {
                apply(e, t, n) {
                    return rf(e.displayName ?? e.name ?? "tracked(???)", () =>
                        e.apply(t, n)
                    );
                },
            },
            nD = Symbol.for("react.memo"),
            rD = Symbol.for("react.forward_ref");
        function ze(e) {
            let t = null;
            const n = e.$$typeof;
            return (
                n === nD && ((e = e.type), (t = e.compare)),
                    n === rD
                        ? y.memo(y.forwardRef(new Proxy(e.render, Z3)))
                        : y.memo(new Proxy(e, Z3), t)
            );
        }
        function Q3() {
            const e = arguments[0],
                t = arguments[1],
                n = arguments.length === 3 ? void 0 : arguments[2],
                r = arguments.length === 3 ? arguments[2] : arguments[3];
            return y.useMemo(() => Q(`useComputed(${e})`, t, n), r);
        }
        function Ja(e, t, n = ni) {
            y.useEffect(() => {
                const r = new wl(e, t);
                return (
                    r.attach(),
                        r.execute(),
                        () => {
                            r.detach();
                        }
                );
            }, n);
        }
        function X() {
            const e = arguments,
                t = e.length === 3 ? e[2] : [e[0]],
                n = e.length === 3 ? e[0] : `useValue(${e[0].name})`,
                r = y.useRef(!0);
            r.current = !0;
            const o = y.useMemo(
                () =>
                    e.length === 1
                        ? e[0]
                        : Q(n, () => {
                            if (r.current) return e[1]();
                            try {
                                return e[1]();
                            } catch {
                                return {};
                            }
                        }),
                t
            );
            try {
                const {subscribe: i, getSnapshot: a} = y.useMemo(
                    () => ({
                        subscribe: (s) =>
                            xl(`useValue(${n})`, () => {
                                o.get(), s();
                            }),
                        getSnapshot: () => o.get(),
                    }),
                    [o]
                );
                return y.useSyncExternalStore(i, a, a);
            } finally {
                r.current = !1;
            }
        }
        class of {
            constructor(t) {
                w(this, "nextValue");
                w(this, "diff");
                this.previousValue = t;
            }
            get() {
                var r, o, i, a;
                const t =
                        ((o = (r = this.diff) == null ? void 0 : r.removed) == null
                            ? void 0
                            : o.size) ?? 0,
                    n =
                        ((a = (i = this.diff) == null ? void 0 : i.added) == null
                            ? void 0
                            : a.size) ?? 0;
                if (!(t === 0 && n === 0))
                    return {value: this.nextValue, diff: this.diff};
            }
            _add(t, n) {
                var r, o;
                this.nextValue ?? (this.nextValue = new Set(this.previousValue)),
                    this.nextValue.add(t),
                this.diff ?? (this.diff = {}),
                    n
                        ? (r = this.diff.removed) == null || r.delete(t)
                        : ((o = this.diff).added ?? (o.added = new Set()),
                            this.diff.added.add(t));
            }
            add(t) {
                var o, i, a;
                const n = this.previousValue.has(t);
                if (n)
                    return (
                        (i = (o = this.diff) == null ? void 0 : o.removed) == null
                            ? void 0
                            : i.has(t)
                    )
                        ? this._add(t, n)
                        : void 0;
                ((a = this.nextValue) != null && a.has(t)) || this._add(t, n);
            }
            _remove(t, n) {
                var r, o;
                this.nextValue ?? (this.nextValue = new Set(this.previousValue)),
                    this.nextValue.delete(t),
                this.diff ?? (this.diff = {}),
                    n
                        ? ((r = this.diff).removed ?? (r.removed = new Set()),
                            this.diff.removed.add(t))
                        : (o = this.diff.added) == null || o.delete(t);
            }
            remove(t) {
                var o, i, a, s;
                const n = this.previousValue.has(t);
                if (!n)
                    return (
                        (i = (o = this.diff) == null ? void 0 : o.added) == null
                            ? void 0
                            : i.has(t)
                    )
                        ? this._remove(t, n)
                        : void 0;
                ((s = (a = this.diff) == null ? void 0 : a.removed) != null &&
                    s.has(t)) ||
                this._remove(t, n);
            }
        }
        function af(e, t) {
            const n = [];
            e: for (const r of e) {
                for (const o of n) if (t ? t(r, o) : r === o) continue e;
                n.push(r);
            }
            return n;
        }
        function pe(e) {
            return e.filter((t) => t != null);
        }
        function Bn(e) {
            return e[e.length - 1];
        }
        function oD(e, t) {
            let n,
                r = 1 / 0;
            for (const o of e) {
                const i = t(o);
                i < r && ((n = o), (r = i));
            }
            return n;
        }
        function iD(e, t) {
            if (e === t) return !0;
            if (e.length !== t.length) return !1;
            for (let n = 0; n < e.length; n++)
                if (!Object.is(e[n], t[n])) return !1;
            return !0;
        }
        function J3(e) {
            const t = (...n) => {
                try {
                    return e(...n);
                } catch (r) {
                    throw (
                        (r instanceof Error &&
                        Error.captureStackTrace &&
                        Error.captureStackTrace(r, t),
                            r)
                    );
                }
            };
            return t;
        }
        function _l(e, t) {
            const n = t && e && typeof e == "object" && t in e ? e[t] : e;
            throw new Error(`Unknown switch case ${n}`);
        }
        const es = J3((e, t) => {
                if (!e) throw new Error(t || "Assertion Error");
            }),
            aD = J3((e, t) => {
                if (e == null) throw new Error(t ?? "value must be defined");
                return e;
            });
        function eC(e, t) {
            let n;
            const r = (...o) => (
                n ||
                ((n = {}),
                    (n.promise = new Promise((i, a) => {
                        (n.resolve = i), (n.reject = a);
                    }))),
                    clearTimeout(n.timeout),
                    (n.latestArgs = o),
                    (n.timeout = setTimeout(() => {
                        const i = n;
                        n = void 0;
                        try {
                            i.resolve(e(...i.latestArgs));
                        } catch (a) {
                            i.reject(a);
                        }
                    }, t)),
                    n.promise
            );
            return (
                (r.cancel = () => {
                    n && clearTimeout(n.timeout);
                }),
                    r
            );
        }
        const tC = new WeakMap();
        function my(e, t) {
            if (typeof e != "object" || e === null) return;
            let n = tC.get(e);
            n || ((n = {tags: {}, extras: {}}), tC.set(e, n)),
            t.tags && (n.tags = {...n.tags, ...t.tags}),
            t.extras && (n.extras = {...n.extras, ...t.extras});
        }
        class sD {
            static async base64ToFile(t) {
                return fetch(t).then(function (n) {
                    return n.arrayBuffer();
                });
            }
            static async fileToBase64(t) {
                return await new Promise((n, r) => {
                    if (t) {
                        const o = new FileReader();
                        o.readAsDataURL(t),
                            (o.onload = () => n(o.result)),
                            (o.onerror = (i) => r(i)),
                            (o.onabort = (i) => r(i));
                    }
                });
            }
        }
        function sf(e) {
            let t = 0;
            for (let n = 0; n < e.length; n++)
                (t = (t << 5) - t + e.charCodeAt(n)), (t |= 0);
            return t + "";
        }
        let gy = [
            0, 1996959894, 3993919788, 2567524794, 124634137, 1886057615,
            3915621685, 2657392035, 249268274, 2044508324, 3772115230, 2547177864,
            162941995, 2125561021, 3887607047, 2428444049, 498536548, 1789927666,
            4089016648, 2227061214, 450548861, 1843258603, 4107580753, 2211677639,
            325883990, 1684777152, 4251122042, 2321926636, 335633487, 1661365465,
            4195302755, 2366115317, 997073096, 1281953886, 3579855332, 2724688242,
            1006888145, 1258607687, 3524101629, 2768942443, 901097722, 1119000684,
            3686517206, 2898065728, 853044451, 1172266101, 3705015759, 2882616665,
            651767980, 1373503546, 3369554304, 3218104598, 565507253, 1454621731,
            3485111705, 3099436303, 671266974, 1594198024, 3322730930, 2970347812,
            795835527, 1483230225, 3244367275, 3060149565, 1994146192, 31158534,
            2563907772, 4023717930, 1907459465, 112637215, 2680153253, 3904427059,
            2013776290, 251722036, 2517215374, 3775830040, 2137656763, 141376813,
            2439277719, 3865271297, 1802195444, 476864866, 2238001368, 4066508878,
            1812370925, 453092731, 2181625025, 4111451223, 1706088902, 314042704,
            2344532202, 4240017532, 1658658271, 366619977, 2362670323, 4224994405,
            1303535960, 984961486, 2747007092, 3569037538, 1256170817, 1037604311,
            2765210733, 3554079995, 1131014506, 879679996, 2909243462, 3663771856,
            1141124467, 855842277, 2852801631, 3708648649, 1342533948, 654459306,
            3188396048, 3373015174, 1466479909, 544179635, 3110523913, 3462522015,
            1591671054, 702138776, 2966460450, 3352799412, 1504918807, 783551873,
            3082640443, 3233442989, 3988292384, 2596254646, 62317068, 1957810842,
            3939845945, 2647816111, 81470997, 1943803523, 3814918930, 2489596804,
            225274430, 2053790376, 3826175755, 2466906013, 167816743, 2097651377,
            4027552580, 2265490386, 503444072, 1762050814, 4150417245, 2154129355,
            426522225, 1852507879, 4275313526, 2312317920, 282753626, 1742555852,
            4189708143, 2394877945, 397917763, 1622183637, 3604390888, 2714866558,
            953729732, 1340076626, 3518719985, 2797360999, 1068828381, 1219638859,
            3624741850, 2936675148, 906185462, 1090812512, 3747672003, 2825379669,
            829329135, 1181335161, 3412177804, 3160834842, 628085408, 1382605366,
            3423369109, 3138078467, 570562233, 1426400815, 3317316542, 2998733608,
            733239954, 1555261956, 3268935591, 3050360625, 752459403, 1541320221,
            2607071920, 3965973030, 1969922972, 40735498, 2617837225, 3943577151,
            1913087877, 83908371, 2512341634, 3803740692, 2075208622, 213261112,
            2463272603, 3855990285, 2094854071, 198958881, 2262029012, 4057260610,
            1759359992, 534414190, 2176718541, 4139329115, 1873836001, 414664567,
            2282248934, 4279200368, 1711684554, 285281116, 2405801727, 4167216745,
            1634467795, 376229701, 2685067896, 3608007406, 1308918612, 956543938,
            2808555105, 3495958263, 1231636301, 1047427035, 2932959818, 3654703836,
            1088359270, 936918e3, 2847714899, 3736837829, 1202900863, 817233897,
            3183342108, 3401237130, 1404277552, 615818150, 3134207493, 3453421203,
            1423857449, 601450431, 3009837614, 3294710456, 1567103746, 711928724,
            3020668471, 3272380065, 1510334235, 755167117,
        ];
        typeof Int32Array < "u" && (gy = new Int32Array(gy));
        const lD = (e, t) => {
                let n = t === 0 ? 0 : ~~t ^ -1;
                for (let r = 0; r < e.length; r++)
                    n = gy[(n ^ e[r]) & 255] ^ (n >>> 8);
                return n ^ -1;
            },
            nC = 4,
            rC = 4;
        class vo {
            static isPng(t, n) {
                return (
                    t.getUint8(n + 0) === 137 &&
                    t.getUint8(n + 1) === 80 &&
                    t.getUint8(n + 2) === 78 &&
                    t.getUint8(n + 3) === 71 &&
                    t.getUint8(n + 4) === 13 &&
                    t.getUint8(n + 5) === 10 &&
                    t.getUint8(n + 6) === 26 &&
                    t.getUint8(n + 7) === 10
                );
            }
            static getChunkType(t, n) {
                return [
                    String.fromCharCode(t.getUint8(n)),
                    String.fromCharCode(t.getUint8(n + 1)),
                    String.fromCharCode(t.getUint8(n + 2)),
                    String.fromCharCode(t.getUint8(n + 3)),
                ].join("");
            }
            static readChunks(t, n = 0) {
                const r = {};
                if (!vo.isPng(t, n)) throw new Error("Not a PNG");
                for (n += 8; n <= t.buffer.byteLength; ) {
                    const o = n,
                        i = t.getInt32(n);
                    n += 4;
                    const a = vo.getChunkType(t, n);
                    if (a === "IDAT" && r[a]) {
                        n += i + nC + rC;
                        continue;
                    }
                    if (a === "IEND") break;
                    (r[a] = {start: o, dataOffset: n + 4, size: i}),
                        (n += i + nC + rC);
                }
                return r;
            }
            static parsePhys(t, n) {
                return {
                    ppux: t.getUint32(n),
                    ppuy: t.getUint32(n + 4),
                    unit: t.getUint8(n + 4),
                };
            }
            static findChunk(t, n) {
                return vo.readChunks(t)[n];
            }
            static setPhysChunk(t, n = 1, r) {
                let o = 46,
                    i = 0;
                const a = vo.findChunk(t, "pHYs");
                a && ((o = a.start), (i = a.size));
                const s = vo.findChunk(t, "IDAT");
                s && ((o = s.start), (i = 0));
                const l = new ArrayBuffer(21),
                    c = new DataView(l);
                c.setUint32(0, 9),
                    c.setUint8(4, 112),
                    c.setUint8(5, 72),
                    c.setUint8(6, 89),
                    c.setUint8(7, 115);
                const d = 2835.5;
                c.setInt32(8, d * n), c.setInt32(12, d * n), c.setInt8(16, 1);
                const u = new Uint8Array(l.slice(4, 17));
                c.setInt32(17, lD(u));
                const h = t.buffer.slice(0, o),
                    p = t.buffer.slice(o + i);
                return new Blob([h, l, p], r);
            }
        }
        class oC {
            static async getVideoSizeFromSrc(t) {
                return await new Promise((n, r) => {
                    const o = document.createElement("video");
                    (o.onloadeddata = () => n({w: o.videoWidth, h: o.videoHeight})),
                        (o.onerror = (i) => {
                            console.error(i),
                                r(new Error("Could not get video size"));
                        }),
                        (o.crossOrigin = "anonymous"),
                        (o.src = t);
                });
            }
            static async getImageSizeFromSrc(t) {
                return await new Promise((n, r) => {
                    const o = new Image();
                    (o.onload = async () => {
                        try {
                            const i = await sD.base64ToFile(t),
                                a = new DataView(i);
                            if (vo.isPng(a, 0)) {
                                const s = vo.findChunk(a, "pHYs");
                                if (s) {
                                    const l = vo.parsePhys(a, s.dataOffset);
                                    if (l.unit === 0 && l.ppux === l.ppuy) {
                                        const c = Math.max(l.ppux / 2834.5, 1);
                                        n({
                                            w: Math.round(o.width / c),
                                            h: Math.round(o.height / c),
                                        });
                                        return;
                                    }
                                }
                            }
                            n({w: o.width, h: o.height});
                        } catch (i) {
                            console.error(i), n({w: o.width, h: o.height});
                        }
                    }),
                        (o.onerror = (i) => {
                            console.error(i),
                                r(new Error("Could not get image size"));
                        }),
                        (o.crossOrigin = "anonymous"),
                        (o.src = t);
                });
            }
        }
        function ta(e = "") {
            let t = 0,
                n = 0,
                r = 0,
                o = 0;
            function i() {
                const a = t ^ (t << 11);
                return (
                    (t = n),
                        (n = r),
                        (r = o),
                        (o ^= ((o >>> 19) ^ a ^ (a >>> 8)) >>> 0),
                    (o / 4294967296) * 2
                );
            }
            for (let a = 0; a < e.length + 64; a++) (t ^= e.charCodeAt(a) | 0), i();
            return i;
        }
        function lf(e, t, n, r = !1) {
            const [o, i] = t,
                [a, s] = n,
                l = a + ((e - o) / (i - o)) * (s - a);
            return r
                ? a < s
                    ? Math.max(Math.min(l, s), a)
                    : Math.max(Math.min(l, a), s)
                : l;
        }
        function cf(e, t) {
            return Object.prototype.hasOwnProperty.call(e, t);
        }
        function ts(e, t) {
            if (cf(e, t)) return e[t];
        }
        function sn(e) {
            if (!e) return e;
            if (Array.isArray(e)) {
                const t = [],
                    n = e.length;
                for (let r = 0; r < n; r++) t.push(sn(e[r]));
                return t;
            } else if (typeof e == "object") {
                const t = Object.keys(e),
                    n = t.length,
                    r = {};
                for (let o = 0; o < n; o++) {
                    const i = t[o];
                    r[i] = sn(e[i]);
                }
                return r;
            }
            return e;
        }
        function iC(e) {
            return Object.keys(e);
        }
        function bt(e) {
            return Object.values(e);
        }
        function ri(e) {
            return Object.entries(e);
        }
        function aC(e) {
            return Object.fromEntries(e);
        }
        function vy(e, t) {
            const n = {};
            let r = !1;
            for (const [o, i] of ri(e)) t(o, i) ? (n[o] = i) : (r = !0);
            return r ? n : e;
        }
        function sC(e, t) {
            const n = {};
            for (const [r, o] of ri(e)) {
                const i = t(r, o);
                n[r] = i;
            }
            return n;
        }
        function lC(e, t) {
            if (e === t) return !0;
            const n = new Set(Object.keys(e)),
                r = new Set(Object.keys(t));
            if (n.size !== r.size) return !1;
            for (const o of n) if (!r.has(o) || !Object.is(e[o], t[o])) return !1;
            return !0;
        }
        const cD = () => typeof process < "u" && !1,
            df = [],
            dD = () => {
                const e = df.splice(0, df.length);
                for (const t of e) t();
            };
        let by;
        function uD() {
            by ||
            (by = requestAnimationFrame(() => {
                (by = void 0), dD();
            }));
        }
        function hD(e) {
            if (cD()) return e();
            df.includes(e) || (df.push(e), uD());
        }
        function pD(e, t) {
            return e.id > t.id ? 1 : -1;
        }
        function fD(e) {
            return e !== null;
        }
        const na =
            typeof window < "u" && window.structuredClone
                ? window.structuredClone
                : (e) => e && JSON.parse(JSON.stringify(e));
        let uf = (e = 21) =>
            crypto
                .getRandomValues(new Uint8Array(e))
                .reduce(
                    (t, n) => (
                        (n &= 63),
                            n < 36
                                ? (t += n.toString(36))
                                : n < 62
                                    ? (t += (n - 26).toString(36).toUpperCase())
                                    : n > 62
                                        ? (t += "-")
                                        : (t += "_"),
                            t
                    ),
                    ""
                );
        class yy {
            constructor(t, n) {
                w(this, "createDefaultProperties");
                w(this, "migrations");
                w(this, "validator");
                w(this, "scope");
                w(
                    this,
                    "isInstance",
                    (t) => (t == null ? void 0 : t.typeName) === this.typeName
                );
                (this.typeName = t),
                    (this.createDefaultProperties = n.createDefaultProperties),
                    (this.migrations = n.migrations),
                    (this.validator = n.validator ?? {validate: (r) => r}),
                    (this.scope = n.scope ?? "document");
            }
            create(t) {
                const n = {...this.createDefaultProperties(), id: this.createId()};
                for (const [r, o] of Object.entries(t)) o !== void 0 && (n[r] = o);
                return (n.typeName = this.typeName), n;
            }
            clone(t) {
                return {...na(t), id: this.createId()};
            }
            createId(t) {
                return this.typeName + ":" + (t ?? uf());
            }
            createCustomId(t) {
                return this.typeName + ":" + t;
            }
            parseId(t) {
                if (!this.isId(t))
                    throw new Error(
                        `ID "${t}" is not a valid ID for type "${this.typeName}"`
                    );
                return t.slice(this.typeName.length + 1);
            }
            isId(t) {
                if (!t) return !1;
                for (let n = 0; n < this.typeName.length; n++)
                    if (t[n] !== this.typeName[n]) return !1;
                return t[this.typeName.length] === ":";
            }
            withDefaultProperties(t) {
                return new yy(this.typeName, {
                    createDefaultProperties: t,
                    migrations: this.migrations,
                    validator: this.validator,
                    scope: this.scope,
                });
            }
            validate(t) {
                return this.validator.validate(t);
            }
        }
        function oi(e, t) {
            return new yy(e, {
                createDefaultProperties: () => ({}),
                migrations: t.migrations ?? {
                    currentVersion: 0,
                    firstVersion: 0,
                    migrators: {},
                },
                validator: t.validator,
                scope: t.scope,
            });
        }
        class cC {
            constructor() {
                w(this, "items", new WeakMap());
            }
            get(t, n) {
                return (
                    this.items.has(t) || this.items.set(t, n(t)), this.items.get(t)
                );
            }
        }
        var hf = {exports: {}};
        hf.exports,
            (function (e, t) {
                var n = 200,
                    r = "__lodash_hash_undefined__",
                    o = 1,
                    i = 2,
                    a = 9007199254740991,
                    s = "[object Arguments]",
                    l = "[object Array]",
                    c = "[object AsyncFunction]",
                    d = "[object Boolean]",
                    u = "[object Date]",
                    h = "[object Error]",
                    p = "[object Function]",
                    m = "[object GeneratorFunction]",
                    f = "[object Map]",
                    g = "[object Number]",
                    b = "[object Null]",
                    x = "[object Object]",
                    S = "[object Promise]",
                    _ = "[object Proxy]",
                    k = "[object RegExp]",
                    C = "[object Set]",
                    P = "[object String]",
                    I = "[object Symbol]",
                    $ = "[object Undefined]",
                    T = "[object WeakMap]",
                    R = "[object ArrayBuffer]",
                    D = "[object DataView]",
                    j = "[object Float32Array]",
                    z = "[object Float64Array]",
                    O = "[object Int8Array]",
                    F = "[object Int16Array]",
                    K = "[object Int32Array]",
                    V = "[object Uint8Array]",
                    B = "[object Uint8ClampedArray]",
                    H = "[object Uint16Array]",
                    G = "[object Uint32Array]",
                    ee = /[\\^$.*+?()[\]{}|]/g,
                    fe = /^\[object .+?Constructor\]$/,
                    Se = /^(?:0|[1-9]\d*)$/,
                    te = {};
                (te[j] =
                    te[z] =
                        te[O] =
                            te[F] =
                                te[K] =
                                    te[V] =
                                        te[B] =
                                            te[H] =
                                                te[G] =
                                                    !0),
                    (te[s] =
                        te[l] =
                            te[R] =
                                te[d] =
                                    te[D] =
                                        te[u] =
                                            te[h] =
                                                te[p] =
                                                    te[f] =
                                                        te[g] =
                                                            te[x] =
                                                                te[k] =
                                                                    te[C] =
                                                                        te[P] =
                                                                            te[T] =
                                                                                !1);
                var ye = typeof lt == "object" && lt && lt.Object === Object && lt,
                    Ae =
                        typeof self == "object" &&
                        self &&
                        self.Object === Object &&
                        self,
                    We = ye || Ae || Function("return this")(),
                    _e = t && !t.nodeType && t,
                    tt = _e && !0 && e && !e.nodeType && e,
                    Me = tt && tt.exports === _e,
                    Jt = Me && ye.process,
                    je = (function () {
                        try {
                            return Jt && Jt.binding && Jt.binding("util");
                        } catch {}
                    })(),
                    _n = je && je.isTypedArray;
                function it(A, L) {
                    for (
                        var Y = -1, oe = A == null ? 0 : A.length, at = 0, we = [];
                        ++Y < oe;

                    ) {
                        var xt = A[Y];
                        L(xt, Y, A) && (we[at++] = xt);
                    }
                    return we;
                }
                function wt(A, L) {
                    for (var Y = -1, oe = L.length, at = A.length; ++Y < oe; )
                        A[at + Y] = L[Y];
                    return A;
                }
                function Or(A, L) {
                    for (var Y = -1, oe = A == null ? 0 : A.length; ++Y < oe; )
                        if (L(A[Y], Y, A)) return !0;
                    return !1;
                }
                function Ma(A, L) {
                    for (var Y = -1, oe = Array(A); ++Y < A; ) oe[Y] = L(Y);
                    return oe;
                }
                function Xc(A) {
                    return function (L) {
                        return A(L);
                    };
                }
                function qc(A, L) {
                    return A.has(L);
                }
                function $i(A, L) {
                    return A == null ? void 0 : A[L];
                }
                function Ns(A) {
                    var L = -1,
                        Y = Array(A.size);
                    return (
                        A.forEach(function (oe, at) {
                            Y[++L] = [at, oe];
                        }),
                            Y
                    );
                }
                function Hpe(A, L) {
                    return function (Y) {
                        return A(L(Y));
                    };
                }
                function Vpe(A) {
                    var L = -1,
                        Y = Array(A.size);
                    return (
                        A.forEach(function (oe) {
                            Y[++L] = oe;
                        }),
                            Y
                    );
                }
                var Kpe = Array.prototype,
                    Wpe = Function.prototype,
                    Uv = Object.prototype,
                    d_ = We["__core-js_shared__"],
                    JM = Wpe.toString,
                    Vo = Uv.hasOwnProperty,
                    ez = (function () {
                        var A = /[^.]+$/.exec(
                            (d_ && d_.keys && d_.keys.IE_PROTO) || ""
                        );
                        return A ? "Symbol(src)_1." + A : "";
                    })(),
                    tz = Uv.toString,
                    Ype = RegExp(
                        "^" +
                        JM.call(Vo)
                            .replace(ee, "\\$&")
                            .replace(
                                /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                                "$1.*?"
                            ) +
                        "$"
                    ),
                    nz = Me ? We.Buffer : void 0,
                    Hv = We.Symbol,
                    rz = We.Uint8Array,
                    oz = Uv.propertyIsEnumerable,
                    Gpe = Kpe.splice,
                    Fs = Hv ? Hv.toStringTag : void 0,
                    iz = Object.getOwnPropertySymbols,
                    Xpe = nz ? nz.isBuffer : void 0,
                    qpe = Hpe(Object.keys, Object),
                    u_ = Zc(We, "DataView"),
                    Lh = Zc(We, "Map"),
                    h_ = Zc(We, "Promise"),
                    p_ = Zc(We, "Set"),
                    f_ = Zc(We, "WeakMap"),
                    jh = Zc(Object, "create"),
                    Zpe = Hs(u_),
                    Qpe = Hs(Lh),
                    Jpe = Hs(h_),
                    efe = Hs(p_),
                    tfe = Hs(f_),
                    az = Hv ? Hv.prototype : void 0,
                    m_ = az ? az.valueOf : void 0;
                function Bs(A) {
                    var L = -1,
                        Y = A == null ? 0 : A.length;
                    for (this.clear(); ++L < Y; ) {
                        var oe = A[L];
                        this.set(oe[0], oe[1]);
                    }
                }
                function nfe() {
                    (this.__data__ = jh ? jh(null) : {}), (this.size = 0);
                }
                function rfe(A) {
                    var L = this.has(A) && delete this.__data__[A];
                    return (this.size -= L ? 1 : 0), L;
                }
                function ofe(A) {
                    var L = this.__data__;
                    if (jh) {
                        var Y = L[A];
                        return Y === r ? void 0 : Y;
                    }
                    return Vo.call(L, A) ? L[A] : void 0;
                }
                function ife(A) {
                    var L = this.__data__;
                    return jh ? L[A] !== void 0 : Vo.call(L, A);
                }
                function afe(A, L) {
                    var Y = this.__data__;
                    return (
                        (this.size += this.has(A) ? 0 : 1),
                            (Y[A] = jh && L === void 0 ? r : L),
                            this
                    );
                }
                (Bs.prototype.clear = nfe),
                    (Bs.prototype.delete = rfe),
                    (Bs.prototype.get = ofe),
                    (Bs.prototype.has = ife),
                    (Bs.prototype.set = afe);
                function Ai(A) {
                    var L = -1,
                        Y = A == null ? 0 : A.length;
                    for (this.clear(); ++L < Y; ) {
                        var oe = A[L];
                        this.set(oe[0], oe[1]);
                    }
                }
                function sfe() {
                    (this.__data__ = []), (this.size = 0);
                }
                function lfe(A) {
                    var L = this.__data__,
                        Y = Kv(L, A);
                    if (Y < 0) return !1;
                    var oe = L.length - 1;
                    return Y == oe ? L.pop() : Gpe.call(L, Y, 1), --this.size, !0;
                }
                function cfe(A) {
                    var L = this.__data__,
                        Y = Kv(L, A);
                    return Y < 0 ? void 0 : L[Y][1];
                }
                function dfe(A) {
                    return Kv(this.__data__, A) > -1;
                }
                function ufe(A, L) {
                    var Y = this.__data__,
                        oe = Kv(Y, A);
                    return (
                        oe < 0 ? (++this.size, Y.push([A, L])) : (Y[oe][1] = L),
                            this
                    );
                }
                (Ai.prototype.clear = sfe),
                    (Ai.prototype.delete = lfe),
                    (Ai.prototype.get = cfe),
                    (Ai.prototype.has = dfe),
                    (Ai.prototype.set = ufe);
                function Us(A) {
                    var L = -1,
                        Y = A == null ? 0 : A.length;
                    for (this.clear(); ++L < Y; ) {
                        var oe = A[L];
                        this.set(oe[0], oe[1]);
                    }
                }
                function hfe() {
                    (this.size = 0),
                        (this.__data__ = {
                            hash: new Bs(),
                            map: new (Lh || Ai)(),
                            string: new Bs(),
                        });
                }
                function pfe(A) {
                    var L = Wv(this, A).delete(A);
                    return (this.size -= L ? 1 : 0), L;
                }
                function ffe(A) {
                    return Wv(this, A).get(A);
                }
                function mfe(A) {
                    return Wv(this, A).has(A);
                }
                function gfe(A, L) {
                    var Y = Wv(this, A),
                        oe = Y.size;
                    return Y.set(A, L), (this.size += Y.size == oe ? 0 : 1), this;
                }
                (Us.prototype.clear = hfe),
                    (Us.prototype.delete = pfe),
                    (Us.prototype.get = ffe),
                    (Us.prototype.has = mfe),
                    (Us.prototype.set = gfe);
                function Vv(A) {
                    var L = -1,
                        Y = A == null ? 0 : A.length;
                    for (this.__data__ = new Us(); ++L < Y; ) this.add(A[L]);
                }
                function vfe(A) {
                    return this.__data__.set(A, r), this;
                }
                function bfe(A) {
                    return this.__data__.has(A);
                }
                (Vv.prototype.add = Vv.prototype.push = vfe),
                    (Vv.prototype.has = bfe);
                function za(A) {
                    var L = (this.__data__ = new Ai(A));
                    this.size = L.size;
                }
                function yfe() {
                    (this.__data__ = new Ai()), (this.size = 0);
                }
                function wfe(A) {
                    var L = this.__data__,
                        Y = L.delete(A);
                    return (this.size = L.size), Y;
                }
                function xfe(A) {
                    return this.__data__.get(A);
                }
                function Sfe(A) {
                    return this.__data__.has(A);
                }
                function _fe(A, L) {
                    var Y = this.__data__;
                    if (Y instanceof Ai) {
                        var oe = Y.__data__;
                        if (!Lh || oe.length < n - 1)
                            return oe.push([A, L]), (this.size = ++Y.size), this;
                        Y = this.__data__ = new Us(oe);
                    }
                    return Y.set(A, L), (this.size = Y.size), this;
                }
                (za.prototype.clear = yfe),
                    (za.prototype.delete = wfe),
                    (za.prototype.get = xfe),
                    (za.prototype.has = Sfe),
                    (za.prototype.set = _fe);
                function kfe(A, L) {
                    var Y = Yv(A),
                        oe = !Y && Nfe(A),
                        at = !Y && !oe && g_(A),
                        we = !Y && !oe && !at && mz(A),
                        xt = Y || oe || at || we,
                        Ft = xt ? Ma(A.length, String) : [],
                        en = Ft.length;
                    for (var gt in A)
                        (L || Vo.call(A, gt)) &&
                        !(
                            xt &&
                            (gt == "length" ||
                                (at && (gt == "offset" || gt == "parent")) ||
                                (we &&
                                    (gt == "buffer" ||
                                        gt == "byteLength" ||
                                        gt == "byteOffset")) ||
                                Rfe(gt, en))
                        ) &&
                        Ft.push(gt);
                    return Ft;
                }
                function Kv(A, L) {
                    for (var Y = A.length; Y--; ) if (uz(A[Y][0], L)) return Y;
                    return -1;
                }
                function Cfe(A, L, Y) {
                    var oe = L(A);
                    return Yv(A) ? oe : wt(oe, Y(A));
                }
                function Nh(A) {
                    return A == null
                        ? A === void 0
                            ? $
                            : b
                        : Fs && Fs in Object(A)
                            ? Mfe(A)
                            : jfe(A);
                }
                function sz(A) {
                    return Fh(A) && Nh(A) == s;
                }
                function lz(A, L, Y, oe, at) {
                    return A === L
                        ? !0
                        : A == null || L == null || (!Fh(A) && !Fh(L))
                            ? A !== A && L !== L
                            : Efe(A, L, Y, oe, lz, at);
                }
                function Efe(A, L, Y, oe, at, we) {
                    var xt = Yv(A),
                        Ft = Yv(L),
                        en = xt ? l : Ra(A),
                        gt = Ft ? l : Ra(L);
                    (en = en == s ? x : en), (gt = gt == s ? x : gt);
                    var gr = en == x,
                        uo = gt == x,
                        kn = en == gt;
                    if (kn && g_(A)) {
                        if (!g_(L)) return !1;
                        (xt = !0), (gr = !1);
                    }
                    if (kn && !gr)
                        return (
                            we || (we = new za()),
                                xt || mz(A)
                                    ? cz(A, L, Y, oe, at, we)
                                    : $fe(A, L, en, Y, oe, at, we)
                        );
                    if (!(Y & o)) {
                        var Dr = gr && Vo.call(A, "__wrapped__"),
                            Lr = uo && Vo.call(L, "__wrapped__");
                        if (Dr || Lr) {
                            var Oa = Dr ? A.value() : A,
                                Mi = Lr ? L.value() : L;
                            return we || (we = new za()), at(Oa, Mi, Y, oe, we);
                        }
                    }
                    return kn
                        ? (we || (we = new za()), Afe(A, L, Y, oe, at, we))
                        : !1;
                }
                function Pfe(A) {
                    if (!fz(A) || Dfe(A)) return !1;
                    var L = hz(A) ? Ype : fe;
                    return L.test(Hs(A));
                }
                function Ife(A) {
                    return Fh(A) && pz(A.length) && !!te[Nh(A)];
                }
                function Tfe(A) {
                    if (!Lfe(A)) return qpe(A);
                    var L = [];
                    for (var Y in Object(A))
                        Vo.call(A, Y) && Y != "constructor" && L.push(Y);
                    return L;
                }
                function cz(A, L, Y, oe, at, we) {
                    var xt = Y & o,
                        Ft = A.length,
                        en = L.length;
                    if (Ft != en && !(xt && en > Ft)) return !1;
                    var gt = we.get(A);
                    if (gt && we.get(L)) return gt == L;
                    var gr = -1,
                        uo = !0,
                        kn = Y & i ? new Vv() : void 0;
                    for (we.set(A, L), we.set(L, A); ++gr < Ft; ) {
                        var Dr = A[gr],
                            Lr = L[gr];
                        if (oe)
                            var Oa = xt
                                ? oe(Lr, Dr, gr, L, A, we)
                                : oe(Dr, Lr, gr, A, L, we);
                        if (Oa !== void 0) {
                            if (Oa) continue;
                            uo = !1;
                            break;
                        }
                        if (kn) {
                            if (
                                !Or(L, function (Mi, Vs) {
                                    if (
                                        !qc(kn, Vs) &&
                                        (Dr === Mi || at(Dr, Mi, Y, oe, we))
                                    )
                                        return kn.push(Vs);
                                })
                            ) {
                                uo = !1;
                                break;
                            }
                        } else if (!(Dr === Lr || at(Dr, Lr, Y, oe, we))) {
                            uo = !1;
                            break;
                        }
                    }
                    return we.delete(A), we.delete(L), uo;
                }
                function $fe(A, L, Y, oe, at, we, xt) {
                    switch (Y) {
                        case D:
                            if (
                                A.byteLength != L.byteLength ||
                                A.byteOffset != L.byteOffset
                            )
                                return !1;
                            (A = A.buffer), (L = L.buffer);
                        case R:
                            return !(
                                A.byteLength != L.byteLength ||
                                !we(new rz(A), new rz(L))
                            );
                        case d:
                        case u:
                        case g:
                            return uz(+A, +L);
                        case h:
                            return A.name == L.name && A.message == L.message;
                        case k:
                        case P:
                            return A == L + "";
                        case f:
                            var Ft = Ns;
                        case C:
                            var en = oe & o;
                            if ((Ft || (Ft = Vpe), A.size != L.size && !en))
                                return !1;
                            var gt = xt.get(A);
                            if (gt) return gt == L;
                            (oe |= i), xt.set(A, L);
                            var gr = cz(Ft(A), Ft(L), oe, at, we, xt);
                            return xt.delete(A), gr;
                        case I:
                            if (m_) return m_.call(A) == m_.call(L);
                    }
                    return !1;
                }
                function Afe(A, L, Y, oe, at, we) {
                    var xt = Y & o,
                        Ft = dz(A),
                        en = Ft.length,
                        gt = dz(L),
                        gr = gt.length;
                    if (en != gr && !xt) return !1;
                    for (var uo = en; uo--; ) {
                        var kn = Ft[uo];
                        if (!(xt ? kn in L : Vo.call(L, kn))) return !1;
                    }
                    var Dr = we.get(A);
                    if (Dr && we.get(L)) return Dr == L;
                    var Lr = !0;
                    we.set(A, L), we.set(L, A);
                    for (var Oa = xt; ++uo < en; ) {
                        kn = Ft[uo];
                        var Mi = A[kn],
                            Vs = L[kn];
                        if (oe)
                            var gz = xt
                                ? oe(Vs, Mi, kn, L, A, we)
                                : oe(Mi, Vs, kn, A, L, we);
                        if (
                            !(gz === void 0
                                ? Mi === Vs || at(Mi, Vs, Y, oe, we)
                                : gz)
                        ) {
                            Lr = !1;
                            break;
                        }
                        Oa || (Oa = kn == "constructor");
                    }
                    if (Lr && !Oa) {
                        var Gv = A.constructor,
                            Xv = L.constructor;
                        Gv != Xv &&
                        "constructor" in A &&
                        "constructor" in L &&
                        !(
                            typeof Gv == "function" &&
                            Gv instanceof Gv &&
                            typeof Xv == "function" &&
                            Xv instanceof Xv
                        ) &&
                        (Lr = !1);
                    }
                    return we.delete(A), we.delete(L), Lr;
                }
                function dz(A) {
                    return Cfe(A, Ufe, zfe);
                }
                function Wv(A, L) {
                    var Y = A.__data__;
                    return Ofe(L)
                        ? Y[typeof L == "string" ? "string" : "hash"]
                        : Y.map;
                }
                function Zc(A, L) {
                    var Y = $i(A, L);
                    return Pfe(Y) ? Y : void 0;
                }
                function Mfe(A) {
                    var L = Vo.call(A, Fs),
                        Y = A[Fs];
                    try {
                        A[Fs] = void 0;
                        var oe = !0;
                    } catch {}
                    var at = tz.call(A);
                    return oe && (L ? (A[Fs] = Y) : delete A[Fs]), at;
                }
                var zfe = iz
                        ? function (A) {
                            return A == null
                                ? []
                                : ((A = Object(A)),
                                    it(iz(A), function (L) {
                                        return oz.call(A, L);
                                    }));
                        }
                        : Hfe,
                    Ra = Nh;
                ((u_ && Ra(new u_(new ArrayBuffer(1))) != D) ||
                    (Lh && Ra(new Lh()) != f) ||
                    (h_ && Ra(h_.resolve()) != S) ||
                    (p_ && Ra(new p_()) != C) ||
                    (f_ && Ra(new f_()) != T)) &&
                (Ra = function (A) {
                    var L = Nh(A),
                        Y = L == x ? A.constructor : void 0,
                        oe = Y ? Hs(Y) : "";
                    if (oe)
                        switch (oe) {
                            case Zpe:
                                return D;
                            case Qpe:
                                return f;
                            case Jpe:
                                return S;
                            case efe:
                                return C;
                            case tfe:
                                return T;
                        }
                    return L;
                });
                function Rfe(A, L) {
                    return (
                        (L = L ?? a),
                        !!L &&
                        (typeof A == "number" || Se.test(A)) &&
                        A > -1 &&
                        A % 1 == 0 &&
                        A < L
                    );
                }
                function Ofe(A) {
                    var L = typeof A;
                    return L == "string" ||
                    L == "number" ||
                    L == "symbol" ||
                    L == "boolean"
                        ? A !== "__proto__"
                        : A === null;
                }
                function Dfe(A) {
                    return !!ez && ez in A;
                }
                function Lfe(A) {
                    var L = A && A.constructor,
                        Y = (typeof L == "function" && L.prototype) || Uv;
                    return A === Y;
                }
                function jfe(A) {
                    return tz.call(A);
                }
                function Hs(A) {
                    if (A != null) {
                        try {
                            return JM.call(A);
                        } catch {}
                        try {
                            return A + "";
                        } catch {}
                    }
                    return "";
                }
                function uz(A, L) {
                    return A === L || (A !== A && L !== L);
                }
                var Nfe = sz(
                        (function () {
                            return arguments;
                        })()
                    )
                        ? sz
                        : function (A) {
                            return (
                                Fh(A) &&
                                Vo.call(A, "callee") &&
                                !oz.call(A, "callee")
                            );
                        },
                    Yv = Array.isArray;
                function Ffe(A) {
                    return A != null && pz(A.length) && !hz(A);
                }
                var g_ = Xpe || Vfe;
                function Bfe(A, L) {
                    return lz(A, L);
                }
                function hz(A) {
                    if (!fz(A)) return !1;
                    var L = Nh(A);
                    return L == p || L == m || L == c || L == _;
                }
                function pz(A) {
                    return typeof A == "number" && A > -1 && A % 1 == 0 && A <= a;
                }
                function fz(A) {
                    var L = typeof A;
                    return A != null && (L == "object" || L == "function");
                }
                function Fh(A) {
                    return A != null && typeof A == "object";
                }
                var mz = _n ? Xc(_n) : Ife;
                function Ufe(A) {
                    return Ffe(A) ? kfe(A) : Tfe(A);
                }
                function Hfe() {
                    return [];
                }
                function Vfe() {
                    return !1;
                }
                e.exports = Bfe;
            })(hf, hf.exports);
        var mD = hf.exports;
        const gD = Da(mD);
        function vD(e) {
            if (e.length === 0) return new Set();
            const t = e[0],
                n = e.slice(1),
                r = new Set();
            for (const o of t) n.every((i) => i.has(o)) && r.add(o);
            return r;
        }
        function bD(e, t) {
            const n = {};
            for (const r of t)
                e.has(r) || (n.added ?? (n.added = new Set()), n.added.add(r));
            for (const r of e)
                t.has(r) ||
                (n.removed ?? (n.removed = new Set()), n.removed.add(r));
            return n.added || n.removed ? n : void 0;
        }
        function dC(e, t) {
            for (const [n, r] of Object.entries(e)) {
                const o = r,
                    i = t[n];
                if (
                    ("eq" in o && i !== o.eq) ||
                    ("neq" in o && i === o.neq) ||
                    ("gt" in o && (typeof i != "number" || i <= o.gt))
                )
                    return !1;
            }
            return !0;
        }
        function uC(e, t, n) {
            const r = Object.fromEntries(Object.keys(n).map((o) => [o, new Set()]));
            for (const [o, i] of Object.entries(n))
                if ("eq" in i) {
                    const s = e.index(t, o).get().get(i.eq);
                    if (s) for (const l of s) r[o].add(l);
                } else if ("neq" in i) {
                    const a = e.index(t, o);
                    for (const [s, l] of a.get())
                        if (s !== i.neq) for (const c of l) r[o].add(c);
                } else if ("gt" in i) {
                    const a = e.index(t, o);
                    for (const [s, l] of a.get())
                        if (s > i.gt) for (const c of l) r[o].add(c);
                }
            return vD(Object.values(r));
        }
        class yD {
            constructor(t, n) {
                w(this, "indexCache", new Map());
                w(this, "historyCache", new Map());
                (this.atoms = t), (this.history = n);
            }
            filterHistory(t) {
                if (this.historyCache.has(t)) return this.historyCache.get(t);
                const n = Q(
                    "filterHistory:" + t,
                    (r, o) => {
                        if (Sl(r)) return this.history.get();
                        const i = this.history.getDiffSince(o);
                        if (i === tr) return this.history.get();
                        const a = {added: {}, removed: {}, updated: {}};
                        let s = 0,
                            l = 0,
                            c = 0;
                        for (const d of i) {
                            for (const u of bt(d.added))
                                if (u.typeName === t)
                                    if (a.removed[u.id]) {
                                        const h = a.removed[u.id];
                                        delete a.removed[u.id],
                                            l--,
                                        h !== u &&
                                        ((a.updated[u.id] = [h, u]), c++);
                                    } else (a.added[u.id] = u), s++;
                            for (const [u, h] of bt(d.updated))
                                h.typeName === t &&
                                (a.added[h.id]
                                    ? (a.added[h.id] = h)
                                    : a.updated[h.id]
                                        ? (a.updated[h.id] = [
                                            a.updated[h.id][0],
                                            h,
                                        ])
                                        : ((a.updated[h.id] = [u, h]), c++));
                            for (const u of bt(d.removed))
                                u.typeName === t &&
                                (a.added[u.id]
                                    ? (delete a.added[u.id], s--)
                                    : a.updated[u.id]
                                        ? ((a.removed[u.id] = a.updated[u.id][0]),
                                            delete a.updated[u.id],
                                            c--,
                                            l++)
                                        : ((a.removed[u.id] = u), l++));
                        }
                        return s || l || c ? Bd(this.history.get(), a) : r;
                    },
                    {historyLength: 100}
                );
                return this.historyCache.set(t, n), n;
            }
            index(t, n) {
                const r = t + ":" + n;
                if (this.indexCache.has(r)) return this.indexCache.get(r);
                const o = this.__uncached_createIndex(t, n);
                return this.indexCache.set(r, o), o;
            }
            __uncached_createIndex(t, n) {
                const r = this.filterHistory(t),
                    o = () => {
                        r.get();
                        const i = new Map();
                        for (const a of bt(this.atoms.get())) {
                            const s = a.get();
                            if (s.typeName === t) {
                                const l = s[n];
                                i.has(l) || i.set(l, new Set()), i.get(l).add(s.id);
                            }
                        }
                        return i;
                    };
                return Q(
                    "index:" + t + ":" + n,
                    (i, a) => {
                        if (Sl(i)) return o();
                        const s = r.getDiffSince(a);
                        if (s === tr) return o();
                        const l = new Map(),
                            c = (p, m) => {
                                let f = l.get(p);
                                f || (f = new of(i.get(p) ?? new Set())),
                                    f.add(m),
                                    l.set(p, f);
                            },
                            d = (p, m) => {
                                let f = l.get(p);
                                f || (f = new of(i.get(p) ?? new Set())),
                                    f.remove(m),
                                    l.set(p, f);
                            };
                        for (const p of s) {
                            for (const m of bt(p.added))
                                if (m.typeName === t) {
                                    const f = m[n];
                                    c(f, m.id);
                                }
                            for (const [m, f] of bt(p.updated))
                                if (f.typeName === t) {
                                    const g = m[n],
                                        b = f[n];
                                    g !== b && (d(g, f.id), c(b, f.id));
                                }
                            for (const m of bt(p.removed))
                                if (m.typeName === t) {
                                    const f = m[n];
                                    d(f, m.id);
                                }
                        }
                        let u, h;
                        for (const [p, m] of l) {
                            const f = m.get();
                            f &&
                            (u || (u = new Map(i)),
                            h || (h = new Map()),
                                f.value.size === 0
                                    ? u.delete(p)
                                    : u.set(p, f.value),
                                h.set(p, f.diff));
                        }
                        return u && h ? Bd(u, h) : i;
                    },
                    {historyLength: 100}
                );
            }
            record(
                t,
                n = () => ({}),
                r = "record:" + t + (n ? ":" + n.toString() : "")
            ) {
                const o = this.ids(t, n, r);
                return Q(r, () => {
                    var i;
                    for (const a of o.get())
                        return (i = this.atoms.get()[a]) == null ? void 0 : i.get();
                });
            }
            records(
                t,
                n = () => ({}),
                r = "records:" + t + (n ? ":" + n.toString() : "")
            ) {
                const o = this.ids(t, n, "ids:" + r);
                return Q(r, () =>
                    [...o.get()].map((i) => {
                        const a = this.atoms.get()[i];
                        if (!a)
                            throw new Error("no atom found for record id: " + i);
                        return a.get();
                    })
                );
            }
            ids(t, n = () => ({}), r = "ids:" + t + (n ? ":" + n.toString() : "")) {
                const o = this.filterHistory(t),
                    i = () => {
                        o.get();
                        const l = n();
                        return Object.keys(l).length === 0
                            ? new Set(
                                bt(this.atoms.get()).flatMap((c) => {
                                    const d = c.get();
                                    return d.typeName === t ? d.id : [];
                                })
                            )
                            : uC(this, t, l);
                    },
                    a = (l) => {
                        const c = i(),
                            d = bD(l, c);
                        return d ? Bd(c, d) : l;
                    },
                    s = Q("ids_query:" + r, n, {isEqual: gD});
                return Q(
                    "query:" + r,
                    (l, c) => {
                        const d = s.get();
                        if (Sl(l)) return i();
                        if (c < s.lastChangedEpoch) return a(l);
                        const u = o.getDiffSince(c);
                        if (u === tr) return a(l);
                        const h = new of(l);
                        for (const m of u) {
                            for (const f of bt(m.added))
                                f.typeName === t && dC(d, f) && h.add(f.id);
                            for (const [f, g] of bt(m.updated))
                                g.typeName === t &&
                                (dC(d, g) ? h.add(g.id) : h.remove(g.id));
                            for (const f of bt(m.removed))
                                f.typeName === t && h.remove(f.id);
                        }
                        const p = h.get();
                        return p ? Bd(p.value, p.diff) : l;
                    },
                    {historyLength: 50}
                );
            }
            exec(t, n) {
                const r = uC(this, t, n);
                if (r.size === 0) return ni;
                const o = this.atoms.get();
                return [...r].map((i) => o[i].get());
            }
        }
        function Gfe(e) {
            return e;
        }
        class hC {
            constructor(t) {
                w(this, "id", uf());
                w(this, "atoms", Tn("store_atoms", {}));
                w(this, "history", Tn("history", 0, {historyLength: 1e3}));
                w(this, "query", new yD(this.atoms, this.history));
                w(this, "listeners", new Set());
                w(this, "historyAccumulator", new xD());
                w(this, "historyReactor");
                w(this, "schema");
                w(this, "props");
                w(this, "scopedTypes");
                w(this, "onBeforeCreate");
                w(this, "onAfterCreate");
                w(this, "onBeforeChange");
                w(this, "onAfterChange");
                w(this, "onBeforeDelete");
                w(this, "onAfterDelete");
                w(this, "_runCallbacks", !0);
                w(this, "put", (t, n) => {
                    _r(() => {
                        const r = {},
                            o = {},
                            i = this.atoms.__unsafe__getWithoutCapture();
                        let a = null,
                            s,
                            l = !1;
                        const c =
                                this.onBeforeCreate && this._runCallbacks
                                    ? this.onBeforeCreate
                                    : null,
                            d =
                                this.onBeforeChange && this._runCallbacks
                                    ? this.onBeforeChange
                                    : null,
                            u = this.isMergingRemoteChanges ? "remote" : "user";
                        for (let h = 0, p = t.length; h < p; h++) {
                            s = t[h];
                            const m = (a ?? i)[s.id];
                            if (m) {
                                const f = m.__unsafe__getWithoutCapture();
                                d && (s = d(f, s, u)),
                                    (s = this.schema.validateRecord(
                                        this,
                                        s,
                                        n ?? "updateRecord",
                                        f
                                    )),
                                    m.set(s);
                                const g = m.__unsafe__getWithoutCapture();
                                f !== g && ((l = !0), (r[s.id] = [f, g]));
                            } else
                                c && (s = c(s, u)),
                                    (l = !0),
                                    (s = this.schema.validateRecord(
                                        this,
                                        s,
                                        n ?? "createRecord",
                                        null
                                    )),
                                    (o[s.id] = s),
                                a || (a = {...i}),
                                    (a[s.id] = Tn("atom:" + s.id, s));
                        }
                        if (
                            (a && this.atoms.set(a),
                            !!l &&
                            (this.updateHistory({
                                added: o,
                                updated: r,
                                removed: {},
                            }),
                                this._runCallbacks))
                        ) {
                            const {onAfterCreate: h, onAfterChange: p} = this;
                            h &&
                            Object.values(o).forEach((m) => {
                                h(m, u);
                            }),
                            p &&
                            Object.values(r).forEach(([m, f]) => {
                                p(m, f, u);
                            });
                        }
                    });
                });
                w(this, "remove", (t) => {
                    _r(() => {
                        const n = [],
                            r = this.isMergingRemoteChanges ? "remote" : "user";
                        if (this.onBeforeDelete && this._runCallbacks)
                            for (const i of t) {
                                const a =
                                    this.atoms.__unsafe__getWithoutCapture()[i];
                                a &&
                                this.onBeforeDelete(a.get(), r) === !1 &&
                                n.push(i);
                            }
                        let o;
                        if (
                            (this.atoms.update((i) => {
                                let a;
                                for (const s of t)
                                    n.includes(s) ||
                                    (s in i &&
                                        (a || (a = {...i}),
                                        o || (o = {}),
                                            delete a[s],
                                            (o[s] = i[s].get())));
                                return a ?? i;
                            }),
                            !!o &&
                            (this.updateHistory({
                                added: {},
                                updated: {},
                                removed: o,
                            }),
                            this.onAfterDelete && this._runCallbacks))
                        ) {
                            let i;
                            for (let a = 0, s = t.length; a < s; a++)
                                (i = o[t[a]]), i && this.onAfterDelete(i, r);
                        }
                    });
                });
                w(this, "get", (t) => {
                    var n;
                    return (n = this.atoms.get()[t]) == null ? void 0 : n.get();
                });
                w(this, "unsafeGetWithoutCapture", (t) => {
                    var n;
                    return (n = this.atoms.get()[t]) == null
                        ? void 0
                        : n.__unsafe__getWithoutCapture();
                });
                w(this, "serialize", (t = "document") => {
                    const n = {};
                    for (const [r, o] of ri(this.atoms.get())) {
                        const i = o.get();
                        (t === "all" || this.scopedTypes[t].has(i.typeName)) &&
                        (n[r] = i);
                    }
                    return n;
                });
                w(this, "allRecords", () =>
                    bt(this.atoms.get()).map((t) => t.get())
                );
                w(this, "clear", () => {
                    this.remove(iC(this.atoms.get()));
                });
                w(this, "update", (t, n) => {
                    const r = this.atoms.get()[t];
                    if (!r) {
                        console.error(
                            `Record ${t} not found. This is probably an error`
                        );
                        return;
                    }
                    this.put([n(r.__unsafe__getWithoutCapture())]);
                });
                w(this, "has", (t) => !!this.atoms.get()[t]);
                w(this, "listen", (t, n) => {
                    this._flushHistory();
                    const r = {
                        onHistory: t,
                        filters: {
                            source: (n == null ? void 0 : n.source) ?? "all",
                            scope: (n == null ? void 0 : n.scope) ?? "all",
                        },
                    };
                    return (
                        this.listeners.add(r),
                        this.historyReactor.scheduler.isActivelyListening ||
                        this.historyReactor.start(),
                            () => {
                                this.listeners.delete(r),
                                this.listeners.size === 0 &&
                                this.historyReactor.stop();
                            }
                    );
                });
                w(this, "isMergingRemoteChanges", !1);
                w(this, "mergeRemoteChanges", (t) => {
                    if (this.isMergingRemoteChanges) return t();
                    try {
                        (this.isMergingRemoteChanges = !0), _r(t);
                    } finally {
                        this.isMergingRemoteChanges = !1;
                    }
                });
                w(this, "createComputedCache", (t, n, r) => {
                    const o = new cC();
                    return {
                        get: (i) => {
                            const a = this.atoms.get()[i];
                            if (a)
                                return o
                                    .get(a, () => {
                                        const s = r
                                            ? Q(a.name + ":equals", () => a.get(), {
                                                isEqual: r,
                                            })
                                            : a;
                                        return Q(t + ":" + i, () => n(s.get()));
                                    })
                                    .get();
                        },
                    };
                });
                w(this, "createSelectedComputedCache", (t, n, r) => {
                    const o = new cC();
                    return {
                        get: (i) => {
                            const a = this.atoms.get()[i];
                            if (!a) return;
                            const s = Q(t + ":" + i + ":selector", () =>
                                n(a.get())
                            );
                            return o
                                .get(a, () => Q(t + ":" + i, () => r(s.get())))
                                .get();
                        },
                    };
                });
                w(this, "getRecordType", (t) => {
                    const n = this.schema.types[t.typeName];
                    if (!n) throw new Error(`Record type ${t.typeName} not found`);
                    return n;
                });
                w(this, "_integrityChecker");
                w(this, "_isPossiblyCorrupted", !1);
                const {initialData: n, schema: r} = t;
                (this.schema = r),
                    (this.props = t.props),
                n &&
                this.atoms.set(
                    aC(
                        ri(n).map(([o, i]) => [
                            o,
                            Tn(
                                "atom:" + o,
                                this.schema.validateRecord(
                                    this,
                                    i,
                                    "initialize",
                                    null
                                )
                            ),
                        ])
                    )
                ),
                    (this.historyReactor = VO(
                        "Store.historyReactor",
                        () => {
                            this.history.get(), this._flushHistory();
                        },
                        {scheduleEffect: (o) => hD(o)}
                    )),
                    (this.scopedTypes = {
                        document: new Set(
                            bt(this.schema.types)
                                .filter((o) => o.scope === "document")
                                .map((o) => o.typeName)
                        ),
                        session: new Set(
                            bt(this.schema.types)
                                .filter((o) => o.scope === "session")
                                .map((o) => o.typeName)
                        ),
                        presence: new Set(
                            bt(this.schema.types)
                                .filter((o) => o.scope === "presence")
                                .map((o) => o.typeName)
                        ),
                    });
            }
            _flushHistory() {
                if (this.historyAccumulator.hasChanges()) {
                    const t = this.historyAccumulator.flush();
                    for (const {changes: n, source: r} of t) {
                        let o = null,
                            i = null,
                            a = null;
                        for (const {onHistory: s, filters: l} of this.listeners)
                            if (!(l.source !== "all" && l.source !== r))
                                if (l.scope !== "all")
                                    if (l.scope === "document") {
                                        if (
                                            (i ??
                                            (i = this.filterChangesByScope(
                                                n,
                                                "document"
                                            )),
                                                !i)
                                        )
                                            continue;
                                        s({changes: i, source: r});
                                    } else if (l.scope === "session") {
                                        if (
                                            (o ??
                                            (o = this.filterChangesByScope(
                                                n,
                                                "session"
                                            )),
                                                !o)
                                        )
                                            continue;
                                        s({changes: o, source: r});
                                    } else {
                                        if (
                                            (a ??
                                            (a = this.filterChangesByScope(
                                                n,
                                                "presence"
                                            )),
                                                !a)
                                        )
                                            continue;
                                        s({changes: a, source: r});
                                    }
                                else s({changes: n, source: r});
                    }
                }
            }
            filterChangesByScope(t, n) {
                const r = {
                    added: vy(t.added, (o, i) =>
                        this.scopedTypes[n].has(i.typeName)
                    ),
                    updated: vy(t.updated, (o, i) =>
                        this.scopedTypes[n].has(i[1].typeName)
                    ),
                    removed: vy(t.removed, (o, i) =>
                        this.scopedTypes[n].has(i.typeName)
                    ),
                };
                return Object.keys(r.added).length === 0 &&
                Object.keys(r.updated).length === 0 &&
                Object.keys(r.removed).length === 0
                    ? null
                    : r;
            }
            updateHistory(t) {
                this.historyAccumulator.add({
                    changes: t,
                    source: this.isMergingRemoteChanges ? "remote" : "user",
                }),
                this.listeners.size === 0 && this.historyAccumulator.clear(),
                    this.history.set(this.history.get() + 1, t);
            }
            validate(t) {
                this.allRecords().forEach((n) =>
                    this.schema.validateRecord(this, n, t, null)
                );
            }
            getSnapshot(t = "document") {
                return {store: this.serialize(t), schema: this.schema.serialize()};
            }
            migrateSnapshot(t) {
                const n = this.schema.migrateStoreSnapshot(t);
                if (n.type === "error")
                    throw new Error(`Failed to migrate snapshot: ${n.reason}`);
                return {store: n.value, schema: this.schema.serialize()};
            }
            loadSnapshot(t) {
                const n = this.schema.migrateStoreSnapshot(t);
                if (n.type === "error")
                    throw new Error(`Failed to migrate snapshot: ${n.reason}`);
                _r(() => {
                    this.clear(),
                        this.put(Object.values(n.value)),
                        this.ensureStoreIsUsable();
                });
            }
            extractingChanges(t) {
                const n = [],
                    r = this.historyAccumulator.intercepting((o) =>
                        n.push(o.changes)
                    );
                try {
                    return _r(t), pf(n);
                } finally {
                    r();
                }
            }
            applyDiff(t, n = !0) {
                const r = this._runCallbacks;
                try {
                    (this._runCallbacks = n),
                        _r(() => {
                            const o = bt(t.added).concat(
                                    bt(t.updated).map(([a, s]) => s)
                                ),
                                i = iC(t.removed);
                            o.length && this.put(o), i.length && this.remove(i);
                        });
                } finally {
                    this._runCallbacks = r;
                }
            }
            ensureStoreIsUsable() {
                var t;
                this._integrityChecker ??
                (this._integrityChecker =
                    this.schema.createIntegrityChecker(this)),
                (t = this._integrityChecker) == null || t.call(this);
            }
            markAsPossiblyCorrupted() {
                this._isPossiblyCorrupted = !0;
            }
            isPossiblyCorrupted() {
                return this._isPossiblyCorrupted;
            }
        }
        function pf(e) {
            const t = {added: {}, removed: {}, updated: {}};
            for (const n of e) {
                for (const [r, o] of ri(n.added))
                    if (t.removed[r]) {
                        const i = t.removed[r];
                        delete t.removed[r], i !== o && (t.updated[r] = [i, o]);
                    } else t.added[r] = o;
                for (const [r, [o, i]] of ri(n.updated)) {
                    if (t.added[r]) {
                        (t.added[r] = i), delete t.updated[r], delete t.removed[r];
                        continue;
                    }
                    if (t.updated[r]) {
                        (t.updated[r] = [t.updated[r][0], i]), delete t.removed[r];
                        continue;
                    }
                    (t.updated[r] = n.updated[r]), delete t.removed[r];
                }
                for (const [r, o] of ri(n.removed))
                    t.added[r]
                        ? delete t.added[r]
                        : t.updated[r]
                            ? ((t.removed[r] = t.updated[r][0]), delete t.updated[r])
                            : (t.removed[r] = o);
            }
            return t;
        }
        function wD(e) {
            const t = [];
            let n = e[0],
                r;
            for (let o = 1, i = e.length; o < i; o++)
                (r = e[o]),
                    n.source !== r.source
                        ? (t.push(n), (n = r))
                        : (n = {
                            source: n.source,
                            changes: pf([n.changes, r.changes]),
                        });
            return t.push(n), t;
        }
        class xD {
            constructor() {
                w(this, "_history", []);
                w(this, "_interceptors", new Set());
            }
            intercepting(t) {
                return (
                    this._interceptors.add(t),
                        () => {
                            this._interceptors.delete(t);
                        }
                );
            }
            add(t) {
                this._history.push(t);
                for (const n of this._interceptors) n(t);
            }
            flush() {
                const t = wD(this._history);
                return (this._history = []), t;
            }
            clear() {
                this._history = [];
            }
            hasChanges() {
                return this._history.length > 0;
            }
        }
        function SD(e) {
            return (
                typeof e == "object" && e !== null && "id" in e && "typeName" in e
            );
        }
        function Re(e) {
            const {
                currentVersion: t,
                firstVersion: n,
                migrators: r = {},
                subTypeKey: o,
                subTypeMigrations: i,
            } = e;
            if (typeof t == "number" && typeof n == "number") {
                if (t === n)
                    throw Error("Current version is equal to initial version.");
                if (t < n)
                    throw Error("Current version is lower than initial version.");
            }
            return {
                firstVersion: n ?? 0,
                currentVersion: t ?? 0,
                migrators: r,
                subTypeKey: o,
                subTypeMigrations: i,
            };
        }
        var Ud = ((e) => (
            (e.IncompatibleSubtype = "incompatible-subtype"),
                (e.UnknownType = "unknown-type"),
                (e.TargetVersionTooNew = "target-version-too-new"),
                (e.TargetVersionTooOld = "target-version-too-old"),
                (e.MigrationError = "migration-error"),
                (e.UnrecognizedSubtype = "unrecognized-subtype"),
                e
        ))(Ud || {});
        function ff({record: e, migrations: t, fromVersion: n, toVersion: r}) {
            let o = n;
            if (!SD(e)) throw new Error("[migrateRecord] object is not a record");
            const {typeName: i, id: a, ...s} = e;
            let l = s;
            for (; o < r; ) {
                const c = o + 1,
                    d = t.migrators[c];
                if (!d) return {type: "error", reason: "target-version-too-new"};
                (l = d.up(l)), (o = c);
            }
            for (; o > r; ) {
                const c = o - 1,
                    d = t.migrators[o];
                if (!d) return {type: "error", reason: "target-version-too-old"};
                (l = d.down(l)), (o = c);
            }
            return {type: "success", value: {...l, id: a, typeName: i}};
        }
        function wy({value: e, migrations: t, fromVersion: n, toVersion: r}) {
            let o = n;
            for (; o < r; ) {
                const i = o + 1,
                    a = t.migrators[i];
                if (!a) return {type: "error", reason: "target-version-too-new"};
                (e = a.up(e)), (o = i);
            }
            for (; o > r; ) {
                const i = o - 1,
                    a = t.migrators[o];
                if (!a) return {type: "error", reason: "target-version-too-old"};
                (e = a.down(e)), (o = i);
            }
            return {type: "success", value: e};
        }
        class xy {
            constructor(t, n) {
                (this.types = t), (this.options = n);
            }
            static create(t, n) {
                return new xy(t, n ?? {});
            }
            get currentStoreVersion() {
                var t;
                return (
                    ((t = this.options.snapshotMigrations) == null
                        ? void 0
                        : t.currentVersion) ?? 0
                );
            }
            validateRecord(t, n, r, o) {
                try {
                    const i = ts(this.types, n.typeName);
                    if (!i)
                        throw new Error(
                            `Missing definition for record type ${n.typeName}`
                        );
                    return i.validate(n);
                } catch (i) {
                    if (this.options.onValidationFailure)
                        return this.options.onValidationFailure({
                            store: t,
                            record: n,
                            phase: r,
                            recordBefore: o,
                            error: i,
                        });
                    throw i;
                }
            }
            migratePersistedRecord(t, n, r = "up") {
                var u;
                const o = ts(this.types, t.typeName),
                    i = n.recordVersions[t.typeName];
                if (!i || !o) return {type: "error", reason: Ud.UnknownType};
                const a = o.migrations.currentVersion,
                    s = i.version;
                if (a !== s) {
                    const h = ff(
                        r === "up"
                            ? {
                                record: t,
                                migrations: o.migrations,
                                fromVersion: s,
                                toVersion: a,
                            }
                            : {
                                record: t,
                                migrations: o.migrations,
                                fromVersion: a,
                                toVersion: s,
                            }
                    );
                    if (h.type === "error") return h;
                    t = h.value;
                }
                if (!o.migrations.subTypeKey) return {type: "success", value: t};
                const l =
                        (u = o.migrations.subTypeMigrations) == null
                            ? void 0
                            : u[t[o.migrations.subTypeKey]],
                    c =
                        "subTypeVersions" in i
                            ? i.subTypeVersions[t[o.migrations.subTypeKey]]
                            : void 0;
                if (l === void 0)
                    return {type: "error", reason: Ud.UnrecognizedSubtype};
                if (c === void 0)
                    return {type: "error", reason: Ud.IncompatibleSubtype};
                const d = ff(
                    r === "up"
                        ? {
                            record: t,
                            migrations: l,
                            fromVersion: c,
                            toVersion: l.currentVersion,
                        }
                        : {
                            record: t,
                            migrations: l,
                            fromVersion: l.currentVersion,
                            toVersion: c,
                        }
                );
                return d.type === "error" ? d : {type: "success", value: d.value};
            }
            migrateStoreSnapshot(t) {
                let {store: n} = t;
                const r = this.options.snapshotMigrations;
                if (!r) return {type: "success", value: n};
                const o = r.currentVersion,
                    i = t.schema.storeVersion ?? 0;
                if (o < i) return {type: "error", reason: Ud.TargetVersionTooOld};
                if (o > i) {
                    const s = wy({
                        value: n,
                        migrations: r,
                        fromVersion: i,
                        toVersion: o,
                    });
                    if (s.type === "error") return s;
                    n = s.value;
                }
                const a = [];
                for (const s of bt(n)) {
                    const l = this.migratePersistedRecord(s, t.schema);
                    if (l.type === "error") return l;
                    l.value && l.value !== s && a.push(l.value);
                }
                if (a.length) {
                    n = {...n};
                    for (const s of a) n[s.id] = s;
                }
                return {type: "success", value: n};
            }
            createIntegrityChecker(t) {
                var n, r;
                return (
                    ((r = (n = this.options).createIntegrityChecker) == null
                        ? void 0
                        : r.call(n, t)) ?? void 0
                );
            }
            serialize() {
                var t;
                return {
                    schemaVersion: 1,
                    storeVersion:
                        ((t = this.options.snapshotMigrations) == null
                            ? void 0
                            : t.currentVersion) ?? 0,
                    recordVersions: Object.fromEntries(
                        bt(this.types).map((n) => [
                            n.typeName,
                            n.migrations.subTypeKey &&
                            n.migrations.subTypeMigrations
                                ? {
                                    version: n.migrations.currentVersion,
                                    subTypeKey: n.migrations.subTypeKey,
                                    subTypeVersions: n.migrations
                                        .subTypeMigrations
                                        ? Object.fromEntries(
                                            Object.entries(
                                                n.migrations.subTypeMigrations
                                            ).map(([r, o]) => [
                                                r,
                                                o.currentVersion,
                                            ])
                                        )
                                        : void 0,
                                }
                                : {version: n.migrations.currentVersion},
                        ])
                    ),
                };
            }
            serializeEarliestVersion() {
                var t;
                return {
                    schemaVersion: 1,
                    storeVersion:
                        ((t = this.options.snapshotMigrations) == null
                            ? void 0
                            : t.firstVersion) ?? 0,
                    recordVersions: Object.fromEntries(
                        bt(this.types).map((n) => [
                            n.typeName,
                            n.migrations.subTypeKey &&
                            n.migrations.subTypeMigrations
                                ? {
                                    version: n.migrations.firstVersion,
                                    subTypeKey: n.migrations.subTypeKey,
                                    subTypeVersions: n.migrations
                                        .subTypeMigrations
                                        ? Object.fromEntries(
                                            Object.entries(
                                                n.migrations.subTypeMigrations
                                            ).map(([r, o]) => [
                                                r,
                                                o.firstVersion,
                                            ])
                                        )
                                        : void 0,
                                }
                                : {version: n.migrations.firstVersion},
                        ])
                    ),
                };
            }
        }
        const _D = (e, t) => {
            if (e.schemaVersion > t.schemaVersion) return 1;
            if (e.schemaVersion < t.schemaVersion) return -1;
            if (e.storeVersion > t.storeVersion) return 1;
            if (e.storeVersion < t.storeVersion) return -1;
            for (const n of Object.keys(e.recordVersions)) {
                const r = e.recordVersions[n],
                    o = t.recordVersions[n];
                if (r.version > o.version) return 1;
                if (r.version < o.version) return -1;
                if ("subTypeVersions" in r && !("subTypeVersions" in o)) return 1;
                if (!("subTypeVersions" in r) && "subTypeVersions" in o) return -1;
                if (!(!("subTypeVersions" in r) || !("subTypeVersions" in o)))
                    for (const i of Object.keys(r.subTypeVersions)) {
                        const a = r.subTypeVersions[i],
                            s = o.subTypeVersions[i];
                        if (a > s) return 1;
                        if (a < s) return -1;
                    }
            }
            return 0;
        };
        function kD(e) {
            if (!e.length) return null;
            let t = "";
            for (const n of e)
                typeof n == "number"
                    ? (t += `.${n}`)
                    : n.startsWith("(")
                        ? t.endsWith(")")
                            ? (t = `${t.slice(0, -1)}, ${n.slice(1)}`)
                            : (t += n)
                        : (t += `.${n}`);
            return t.startsWith(".") ? t.slice(1) : t;
        }
        class Ke extends Error {
            constructor(n, r = []) {
                const o = kD(r),
                    i = n
                        .split(
                            `
`
                        )
                        .map((a, s) => (s === 0 ? a : `  ${a}`)).join(`
`);
                super(r ? `At ${o}: ${i}` : i);
                w(this, "name", "ValidationError");
                (this.rawMessage = n), (this.path = r);
            }
        }
        function kl(e, t) {
            try {
                return t();
            } catch (n) {
                throw n instanceof Ke
                    ? new Ke(n.rawMessage, [e, ...n.path])
                    : new Ke(n.toString(), [e]);
            }
        }
        function Cl(e) {
            if (e === null) return "null";
            if (Array.isArray(e)) return "an array";
            const t = typeof e;
            switch (t) {
                case "bigint":
                case "boolean":
                case "function":
                case "number":
                case "string":
                case "symbol":
                    return `a ${t}`;
                case "object":
                    return `an ${t}`;
                case "undefined":
                    return "undefined";
                default:
                    _l(t);
            }
        }
        class $n {
            constructor(t) {
                this.validationFn = t;
            }
            validate(t) {
                return this.validationFn(t);
            }
            isValid(t) {
                try {
                    return this.validate(t), !0;
                } catch {
                    return !1;
                }
            }
            nullable() {
                return $D(this);
            }
            optional() {
                return fC(this);
            }
            refine(t) {
                return new $n((n) => t(this.validate(n)));
            }
            check(t, n) {
                return typeof t == "string"
                    ? this.refine((r) => (kl(`(check ${t})`, () => n(r)), r))
                    : this.refine((r) => (t(r), r));
            }
        }
        class CD extends $n {
            constructor(t) {
                super((n) => {
                    const r = TD.validate(n);
                    for (let o = 0; o < r.length; o++)
                        kl(o, () => t.validate(r[o]));
                    return r;
                }),
                    (this.itemValidator = t);
            }
            nonEmpty() {
                return this.check((t) => {
                    if (t.length === 0) throw new Ke("Expected a non-empty array");
                });
            }
            lengthGreaterThan1() {
                return this.check((t) => {
                    if (t.length <= 1)
                        throw new Ke(
                            "Expected an array with length greater than 1"
                        );
                });
            }
        }
        class mf extends $n {
            constructor(t, n = !1) {
                super((r) => {
                    if (typeof r != "object" || r === null)
                        throw new Ke(`Expected object, got ${Cl(r)}`);
                    for (const [o, i] of Object.entries(t))
                        kl(o, () => {
                            i.validate(ts(r, o));
                        });
                    if (!n) {
                        for (const o of Object.keys(r))
                            if (!cf(t, o)) throw new Ke("Unexpected property", [o]);
                    }
                    return r;
                }),
                    (this.config = t),
                    (this.shouldAllowUnknownProperties = n);
            }
            allowUnknownProperties() {
                return new mf(this.config, !0);
            }
            extend(t) {
                return new mf({...this.config, ...t});
            }
        }
        class Sy extends $n {
            constructor(t, n, r) {
                super((o) => {
                    if (typeof o != "object" || o === null)
                        throw new Ke(`Expected an object, got ${Cl(o)}`, []);
                    const i = ts(o, t);
                    if (typeof i != "string")
                        throw new Ke(
                            `Expected a string for key "${t}", got ${Cl(i)}`
                        );
                    const a = cf(n, i) ? n[i] : void 0;
                    return a === void 0
                        ? this.unknownValueValidation(o, i)
                        : kl(`(${t} = ${i})`, () => a.validate(o));
                }),
                    (this.key = t),
                    (this.config = n),
                    (this.unknownValueValidation = r);
            }
            validateUnknownVariants(t) {
                return new Sy(this.key, this.config, t);
            }
        }
        class ED extends $n {
            constructor(t, n) {
                super((r) => {
                    if (typeof r != "object" || r === null)
                        throw new Ke(`Expected object, got ${Cl(r)}`);
                    for (const [o, i] of Object.entries(r))
                        kl(o, () => {
                            t.validate(o), n.validate(i);
                        });
                    return r;
                }),
                    (this.keyValidator = t),
                    (this.valueValidator = n);
            }
        }
        function _y(e) {
            return new $n((t) => {
                if (typeof t !== e) throw new Ke(`Expected ${e}, got ${Cl(t)}`);
                return t;
            });
        }
        const PD = new $n((e) => e),
            be = _y("string"),
            ge = _y("number").check((e) => {
                if (Number.isNaN(e)) throw new Ke("Expected a number, got NaN");
                if (!Number.isFinite(e))
                    throw new Ke(`Expected a finite number, got ${e}`);
            }),
            ky = ge.check((e) => {
                if (e < 0) throw new Ke(`Expected a positive number, got ${e}`);
            }),
            Un = ge.check((e) => {
                if (e <= 0)
                    throw new Ke(`Expected a non-zero positive number, got ${e}`);
            }),
            pC = ge.check((e) => {
                if (!Number.isInteger(e))
                    throw new Ke(`Expected an integer, got ${e}`);
            }),
            gf = pC.check((e) => {
                if (e < 0) throw new Ke(`Expected a positive integer, got ${e}`);
            }),
            ID = pC.check((e) => {
                if (e <= 0)
                    throw new Ke(`Expected a non-zero positive integer, got ${e}`);
            }),
            Ce = _y("boolean");
        function Hn(e) {
            return new $n((t) => {
                if (t !== e)
                    throw new Ke(`Expected ${e}, got ${JSON.stringify(t)}`);
                return e;
            });
        }
        const TD = new $n((e) => {
            if (!Array.isArray(e)) throw new Ke(`Expected an array, got ${Cl(e)}`);
            return e;
        });
        function An(e) {
            return new CD(e);
        }
        function Ie(e) {
            return new mf(e);
        }
        function Cy(e) {
            return e === null ||
            typeof e == "number" ||
            typeof e == "string" ||
            typeof e == "boolean"
                ? !0
                : Array.isArray(e)
                    ? e.every(Cy)
                    : typeof e == "object"
                        ? Object.values(e).every(Cy)
                        : !1;
        }
        const bo = new $n((e) => {
            if (Cy(e)) return e;
            throw new Ke(`Expected json serializable value, got ${typeof e}`);
        });
        function Ey(e, t) {
            return new ED(e, t);
        }
        function Py(e, t) {
            return new Sy(e, t, (n, r) => {
                throw new Ke(
                    `Expected one of ${Object.keys(t)
                        .map((o) => JSON.stringify(o))
                        .join(" or ")}, got ${JSON.stringify(r)}`,
                    [e]
                );
            });
        }
        function ii(e, t) {
            return new $n((n) => {
                const r =
                    n &&
                    typeof n == "object" &&
                    "id" in n &&
                    typeof n.id == "string"
                        ? `${e}(id = ${n.id})`
                        : e;
                return kl(r, () => t.validate(n));
            });
        }
        function Hd(e) {
            return new $n((t) => {
                if (!e.has(t)) {
                    const n = Array.from(e, (r) => JSON.stringify(r)).join(" or ");
                    throw new Ke(`Expected ${n}, got ${t}`);
                }
                return t;
            });
        }
        function fC(e) {
            return new $n((t) => {
                if (t !== void 0) return e.validate(t);
            });
        }
        function $D(e) {
            return new $n((t) => (t === null ? null : e.validate(t)));
        }
        function mC(...e) {
            return Hd(new Set(e));
        }
        function gC(e) {
            try {
                return new URL(e);
            } catch {
                throw new Ke(`Expected a valid url, got ${JSON.stringify(e)}`);
            }
        }
        const AD = new Set(["http:", "https:", "mailto:"]),
            rr = be.check((e) => {
                if (e === "") return;
                const t = gC(e);
                if (!AD.has(t.protocol.toLowerCase()))
                    throw new Ke(
                        `Expected a valid url, got ${JSON.stringify(
                            e
                        )} (invalid protocol)`
                    );
            }),
            MD = new Set(["http:", "https:", "data:"]),
            El = be.check((e) => {
                if (e === "") return;
                const t = gC(e);
                if (!MD.has(t.protocol.toLowerCase()))
                    throw new Ke(
                        `Expected a valid url, got ${JSON.stringify(
                            e
                        )} (invalid protocol)`
                    );
            });
        function Kr(e) {
            return be.refine((t) => {
                if (!t.startsWith(`${e}:`))
                    throw new Error(`${e} ID must start with "${e}:"`);
                return t;
            });
        }
        const vf = Kr("asset");
        function Iy(e, t) {
            return Ie({
                id: vf,
                typeName: Hn("asset"),
                type: Hn(e),
                props: t,
                meta: bo,
            });
        }
        const zD = ii(
                "camera",
                Ie({
                    typeName: Hn("camera"),
                    id: Kr("camera"),
                    x: ge,
                    y: ge,
                    z: ge,
                    meta: bo,
                })
            ),
            vC = {AddMeta: 1},
            RD = Re({
                currentVersion: vC.AddMeta,
                migrators: {
                    [vC.AddMeta]: {
                        up: (e) => ({...e, meta: {}}),
                        down: ({meta: e, ...t}) => ({...t}),
                    },
                },
            }),
            Vt = oi("camera", {
                validator: zD,
                migrations: RD,
                scope: "session",
            }).withDefaultProperties(() => ({x: 0, y: 0, z: 1, meta: {}})),
            Vd = Ie({x: ge, y: ge, z: ge.optional()}),
            Kd = Ie({x: ge, y: ge, w: ge, h: ge}),
            bC = Hd(
                new Set([
                    "none",
                    "default",
                    "pointer",
                    "cross",
                    "grab",
                    "rotate",
                    "grabbing",
                    "resize-edge",
                    "resize-corner",
                    "text",
                    "move",
                    "ew-resize",
                    "ns-resize",
                    "nesw-resize",
                    "nwse-resize",
                    "nesw-rotate",
                    "nwse-rotate",
                    "swne-rotate",
                    "senw-rotate",
                    "zoom-in",
                    "zoom-out",
                ])
            ),
            OD = Ie({type: bC, rotation: ge}),
            yC = ge.check((e) => {
                if (e < 0 || e > 1) throw new Ke("Opacity must be between 0 and 1");
            }),
            DD = Hd(
                new Set([
                    "accent",
                    "white",
                    "black",
                    "selection-stroke",
                    "selection-fill",
                    "laser",
                    "muted-1",
                ])
            ),
            LD = new Set(["starting", "paused", "active", "stopping"]),
            wC = Ie({
                id: be,
                points: An(Vd),
                size: ky,
                color: DD,
                opacity: ge,
                state: Hd(LD),
                delay: ge,
                shrink: ge,
                taper: Ce,
            }),
            Wd = Kr("page"),
            jD = ii(
                "page",
                Ie({typeName: Hn("page"), id: Wd, name: be, index: be, meta: bo})
            ),
            xC = {AddMeta: 1},
            ND = Re({
                currentVersion: xC.AddMeta,
                migrators: {
                    [xC.AddMeta]: {
                        up: (e) => ({...e, meta: {}}),
                        down: ({meta: e, ...t}) => ({...t}),
                    },
                },
            }),
            ai = oi("page", {
                validator: jD,
                migrations: ND,
                scope: "document",
            }).withDefaultProperties(() => ({meta: {}}));
        function Vn(e) {
            return ai.isId(e);
        }
        Kr("instance");
        function FD(e) {
            const t = {};
            for (const [r, o] of e) t[r] = fC(o);
            const n = ii(
                "instance",
                Ie({
                    typeName: Hn("instance"),
                    id: Kr("instance"),
                    currentPageId: Wd,
                    followingUserId: be.nullable(),
                    brush: Kd.nullable(),
                    opacityForNextShape: yC,
                    stylesForNextShape: Ie(t),
                    cursor: OD,
                    scribbles: An(wC),
                    isFocusMode: Ce,
                    isDebugMode: Ce,
                    isToolLocked: Ce,
                    exportBackground: Ce,
                    screenBounds: Kd,
                    zoomBrush: Kd.nullable(),
                    isPenMode: Ce,
                    isGridMode: Ce,
                    chatMessage: be,
                    isChatting: Ce,
                    highlightedUserIds: An(be),
                    canMoveCamera: Ce,
                    isFocused: Ce,
                    devicePixelRatio: ge,
                    isCoarsePointer: Ce,
                    isHoveringCanvas: Ce.nullable(),
                    openMenus: An(be),
                    isChangingStyle: Ce,
                    isReadonly: Ce,
                    meta: bo,
                })
            );
            return oi("instance", {
                migrations: BD,
                validator: n,
                scope: "session",
            }).withDefaultProperties(() => ({
                followingUserId: null,
                opacityForNextShape: 1,
                stylesForNextShape: {},
                brush: null,
                scribbles: [],
                cursor: {type: "default", rotation: 0},
                isFocusMode: !1,
                exportBackground: !1,
                isDebugMode: !1,
                isToolLocked: !1,
                screenBounds: {x: 0, y: 0, w: 1080, h: 720},
                zoomBrush: null,
                isGridMode: !1,
                isPenMode: !1,
                chatMessage: "",
                isChatting: !1,
                highlightedUserIds: [],
                canMoveCamera: !0,
                isFocused: !1,
                devicePixelRatio: typeof window > "u" ? 1 : window.devicePixelRatio,
                isCoarsePointer: !1,
                isHoveringCanvas: null,
                openMenus: [],
                isChangingStyle: !1,
                isReadonly: !1,
                meta: {},
            }));
        }
        const ht = {
                AddTransparentExportBgs: 1,
                RemoveDialog: 2,
                AddToolLockMode: 3,
                RemoveExtraPropsForNextShape: 4,
                AddLabelColor: 5,
                AddFollowingUserId: 6,
                RemoveAlignJustify: 7,
                AddZoom: 8,
                AddVerticalAlign: 9,
                AddScribbleDelay: 10,
                RemoveUserId: 11,
                AddIsPenModeAndIsGridMode: 12,
                HoistOpacity: 13,
                AddChat: 14,
                AddHighlightedUserIds: 15,
                ReplacePropsForNextShapeWithStylesForNextShape: 16,
                AddMeta: 17,
                RemoveCursorColor: 18,
                AddLonelyProperties: 19,
                ReadOnlyReadonly: 20,
                AddHoveringCanvas: 21,
                AddScribbles: 22,
            },
            BD = Re({
                currentVersion: ht.AddScribbles,
                migrators: {
                    [ht.AddTransparentExportBgs]: {
                        up: (e) => ({...e, exportBackground: !0}),
                        down: ({exportBackground: e, ...t}) => t,
                    },
                    [ht.RemoveDialog]: {
                        up: ({dialog: e, ...t}) => t,
                        down: (e) => ({...e, dialog: null}),
                    },
                    [ht.AddToolLockMode]: {
                        up: (e) => ({...e, isToolLocked: !1}),
                        down: ({isToolLocked: e, ...t}) => t,
                    },
                    [ht.RemoveExtraPropsForNextShape]: {
                        up: ({propsForNextShape: e, ...t}) => ({
                            ...t,
                            propsForNextShape: Object.fromEntries(
                                Object.entries(e).filter(([n]) =>
                                    [
                                        "color",
                                        "labelColor",
                                        "dash",
                                        "fill",
                                        "size",
                                        "font",
                                        "align",
                                        "verticalAlign",
                                        "icon",
                                        "geo",
                                        "arrowheadStart",
                                        "arrowheadEnd",
                                        "spline",
                                    ].includes(n)
                                )
                            ),
                        }),
                        down: (e) => e,
                    },
                    [ht.AddLabelColor]: {
                        up: ({propsForNextShape: e, ...t}) => ({
                            ...t,
                            propsForNextShape: {...e, labelColor: "black"},
                        }),
                        down: (e) => {
                            const {labelColor: t, ...n} = e.propsForNextShape;
                            return {...e, propsForNextShape: {...n}};
                        },
                    },
                    [ht.AddFollowingUserId]: {
                        up: (e) => ({...e, followingUserId: null}),
                        down: ({followingUserId: e, ...t}) => t,
                    },
                    [ht.RemoveAlignJustify]: {
                        up: (e) => {
                            let t = e.propsForNextShape.align;
                            return (
                                t === "justify" && (t = "start"),
                                    {
                                        ...e,
                                        propsForNextShape: {
                                            ...e.propsForNextShape,
                                            align: t,
                                        },
                                    }
                            );
                        },
                        down: (e) => ({...e}),
                    },
                    [ht.AddZoom]: {
                        up: (e) => ({...e, zoomBrush: null}),
                        down: ({zoomBrush: e, ...t}) => t,
                    },
                    [ht.AddVerticalAlign]: {
                        up: (e) => ({
                            ...e,
                            propsForNextShape: {
                                ...e.propsForNextShape,
                                verticalAlign: "middle",
                            },
                        }),
                        down: (e) => {
                            const {verticalAlign: t, ...n} = e.propsForNextShape;
                            return {...e, propsForNextShape: n};
                        },
                    },
                    [ht.AddScribbleDelay]: {
                        up: (e) =>
                            e.scribble !== null
                                ? {...e, scribble: {...e.scribble, delay: 0}}
                                : {...e},
                        down: (e) => {
                            if (e.scribble !== null) {
                                const {delay: t, ...n} = e.scribble;
                                return {...e, scribble: n};
                            }
                            return {...e};
                        },
                    },
                    [ht.RemoveUserId]: {
                        up: ({userId: e, ...t}) => t,
                        down: (e) => ({...e, userId: "user:none"}),
                    },
                    [ht.AddIsPenModeAndIsGridMode]: {
                        up: (e) => ({...e, isPenMode: !1, isGridMode: !1}),
                        down: ({isPenMode: e, isGridMode: t, ...n}) => n,
                    },
                    [ht.HoistOpacity]: {
                        up: ({propsForNextShape: {opacity: e, ...t}, ...n}) => ({
                            ...n,
                            opacityForNextShape: Number(e ?? "1"),
                            propsForNextShape: t,
                        }),
                        down: ({opacityForNextShape: e, ...t}) => ({
                            ...t,
                            propsForNextShape: {
                                ...t.propsForNextShape,
                                opacity:
                                    e < 0.175
                                        ? "0.1"
                                        : e < 0.375
                                            ? "0.25"
                                            : e < 0.625
                                                ? "0.5"
                                                : e < 0.875
                                                    ? "0.75"
                                                    : "1",
                            },
                        }),
                    },
                    [ht.AddChat]: {
                        up: (e) => ({...e, chatMessage: "", isChatting: !1}),
                        down: ({chatMessage: e, isChatting: t, ...n}) => n,
                    },
                    [ht.AddHighlightedUserIds]: {
                        up: (e) => ({...e, highlightedUserIds: []}),
                        down: ({highlightedUserIds: e, ...t}) => t,
                    },
                    [ht.ReplacePropsForNextShapeWithStylesForNextShape]: {
                        up: ({propsForNextShape: e, ...t}) => ({
                            ...t,
                            stylesForNextShape: {},
                        }),
                        down: ({stylesForNextShape: e, ...t}) => ({
                            ...t,
                            propsForNextShape: {
                                color: "black",
                                labelColor: "black",
                                dash: "draw",
                                fill: "none",
                                size: "m",
                                icon: "file",
                                font: "draw",
                                align: "middle",
                                verticalAlign: "middle",
                                geo: "rectangle",
                                arrowheadStart: "none",
                                arrowheadEnd: "arrow",
                                spline: "line",
                            },
                        }),
                    },
                    [ht.AddMeta]: {
                        up: (e) => ({...e, meta: {}}),
                        down: ({meta: e, ...t}) => ({...t}),
                    },
                    [ht.RemoveCursorColor]: {
                        up: (e) => {
                            const {color: t, ...n} = e.cursor;
                            return {...e, cursor: n};
                        },
                        down: (e) => ({
                            ...e,
                            cursor: {...e.cursor, color: "black"},
                        }),
                    },
                    [ht.AddLonelyProperties]: {
                        up: (e) => ({
                            ...e,
                            canMoveCamera: !0,
                            isFocused: !1,
                            devicePixelRatio: 1,
                            isCoarsePointer: !1,
                            openMenus: [],
                            isChangingStyle: !1,
                            isReadOnly: !1,
                        }),
                        down: ({
                                   canMoveCamera: e,
                                   isFocused: t,
                                   devicePixelRatio: n,
                                   isCoarsePointer: r,
                                   openMenus: o,
                                   isChangingStyle: i,
                                   isReadOnly: a,
                                   ...s
                               }) => ({...s}),
                    },
                    [ht.ReadOnlyReadonly]: {
                        up: ({isReadOnly: e, ...t}) => ({...t, isReadonly: e}),
                        down: ({isReadonly: e, ...t}) => ({...t, isReadOnly: e}),
                    },
                    [ht.AddHoveringCanvas]: {
                        up: (e) => ({...e, isHoveringCanvas: null}),
                        down: ({isHoveringCanvas: e, ...t}) => ({...t}),
                    },
                    [ht.AddScribbles]: {
                        up: ({scribble: e, ...t}) => ({...t, scribbles: []}),
                        down: ({scribbles: e, ...t}) => ({...t, scribble: null}),
                    },
                },
            }),
            ln = "instance:instance",
            UD = be.refine((e) => {
                if (!e.startsWith("page:") && !e.startsWith("shape:"))
                    throw new Error(
                        'Parent ID must start with "page:" or "shape:"'
                    );
                return e;
            }),
            Wr = Kr("shape");
        function HD(e, t, n) {
            return Ie({
                id: Wr,
                typeName: Hn("shape"),
                x: ge,
                y: ge,
                rotation: ge,
                index: be,
                parentId: UD,
                type: Hn(e),
                isLocked: Ce,
                opacity: yC,
                props: t ? Ie(t) : bo,
                meta: n ? Ie(n) : bo,
            });
        }
        const VD = ii(
                "instance_page_state",
                Ie({
                    typeName: Hn("instance_page_state"),
                    id: Kr("instance_page_state"),
                    pageId: Wd,
                    selectedShapeIds: An(Wr),
                    hintingShapeIds: An(Wr),
                    erasingShapeIds: An(Wr),
                    hoveredShapeId: Wr.nullable(),
                    editingShapeId: Wr.nullable(),
                    croppingShapeId: Wr.nullable(),
                    focusedGroupId: Wr.nullable(),
                    meta: bo,
                })
            ),
            Pl = {
                AddCroppingId: 1,
                RemoveInstanceIdAndCameraId: 2,
                AddMeta: 3,
                RenameProperties: 4,
                RenamePropertiesAgain: 5,
            },
            KD = Re({
                currentVersion: Pl.RenamePropertiesAgain,
                migrators: {
                    [Pl.AddCroppingId]: {
                        up(e) {
                            return {...e, croppingShapeId: null};
                        },
                        down({croppingShapeId: e, ...t}) {
                            return t;
                        },
                    },
                    [Pl.RemoveInstanceIdAndCameraId]: {
                        up({instanceId: e, cameraId: t, ...n}) {
                            return n;
                        },
                        down(e) {
                            return {
                                ...e,
                                instanceId: ln,
                                cameraId: Vt.createId("void"),
                            };
                        },
                    },
                    [Pl.AddMeta]: {
                        up: (e) => ({...e, meta: {}}),
                        down: ({meta: e, ...t}) => ({...t}),
                    },
                    [Pl.RenameProperties]: {
                        up: (e) => {
                            const {
                                selectedShapeIds: t,
                                hintingShapeIds: n,
                                erasingShapeIds: r,
                                hoveredShapeId: o,
                                editingShapeId: i,
                                croppingShapeId: a,
                                focusedGroupId: s,
                                ...l
                            } = e;
                            return {
                                selectedShapeIds: t,
                                hintingShapeIds: n,
                                erasingShapeIds: r,
                                hoveredShapeId: o,
                                editingShapeId: i,
                                croppingShapeId: a,
                                focusedGroupId: s,
                                ...l,
                            };
                        },
                        down: (e) => {
                            const {
                                selectedShapeIds: t,
                                hintingShapeIds: n,
                                erasingShapeIds: r,
                                hoveredShapeId: o,
                                editingShapeId: i,
                                croppingShapeId: a,
                                focusedGroupId: s,
                                ...l
                            } = e;
                            return {
                                selectedShapeIds: t,
                                hintingShapeIds: n,
                                erasingShapeIds: r,
                                hoveredShapeId: o,
                                editingShapeId: i,
                                croppingShapeId: a,
                                focusedGroupId: s,
                                ...l,
                            };
                        },
                    },
                    [Pl.RenamePropertiesAgain]: {
                        up: (e) => {
                            const {
                                selectedIds: t,
                                hintingIds: n,
                                erasingIds: r,
                                hoveredId: o,
                                editingId: i,
                                croppingShapeId: a,
                                croppingId: s,
                                focusLayerId: l,
                                ...c
                            } = e;
                            return {
                                ...c,
                                selectedShapeIds: t,
                                hintingShapeIds: n,
                                erasingShapeIds: r,
                                hoveredShapeId: o,
                                editingShapeId: i,
                                croppingShapeId: a ?? s ?? null,
                                focusedGroupId: l,
                            };
                        },
                        down: (e) => {
                            const {
                                selectedShapeIds: t,
                                hintingShapeIds: n,
                                erasingShapeIds: r,
                                hoveredShapeId: o,
                                editingShapeId: i,
                                croppingShapeId: a,
                                focusedGroupId: s,
                                ...l
                            } = e;
                            return {
                                ...l,
                                selectedIds: t,
                                hintingIds: n,
                                erasingIds: r,
                                hoveredId: o,
                                editingId: i,
                                croppingId: a,
                                focusLayerId: s,
                            };
                        },
                    },
                },
            }),
            Kt = oi("instance_page_state", {
                migrations: KD,
                validator: VD,
                scope: "session",
            }).withDefaultProperties(() => ({
                editingShapeId: null,
                croppingShapeId: null,
                selectedShapeIds: [],
                hoveredShapeId: null,
                erasingShapeIds: [],
                hintingShapeIds: [],
                focusedGroupId: null,
                meta: {},
            })),
            WD = ii(
                "pointer",
                Ie({
                    typeName: Hn("pointer"),
                    id: Kr("pointer"),
                    x: ge,
                    y: ge,
                    lastActivityTimestamp: ge,
                    meta: bo,
                })
            ),
            SC = {AddMeta: 1},
            YD = Re({
                currentVersion: SC.AddMeta,
                migrators: {
                    [SC.AddMeta]: {
                        up: (e) => ({...e, meta: {}}),
                        down: ({meta: e, ...t}) => ({...t}),
                    },
                },
            }),
            Ty = oi("pointer", {
                validator: WD,
                migrations: YD,
                scope: "session",
            }).withDefaultProperties(() => ({
                x: 0,
                y: 0,
                lastActivityTimestamp: 0,
                meta: {},
            })),
            Yd = Ty.createId("pointer"),
            GD = ii(
                "instance_presence",
                Ie({
                    typeName: Hn("instance_presence"),
                    id: Kr("instance_presence"),
                    userId: be,
                    userName: be,
                    lastActivityTimestamp: ge,
                    followingUserId: be.nullable(),
                    cursor: Ie({x: ge, y: ge, type: bC, rotation: ge}),
                    color: be,
                    camera: Ie({x: ge, y: ge, z: ge}),
                    screenBounds: Kd,
                    selectedShapeIds: An(Kr("shape")),
                    currentPageId: Kr("page"),
                    brush: Kd.nullable(),
                    scribbles: An(wC),
                    chatMessage: be,
                    meta: bo,
                })
            ),
            Il = {
                AddScribbleDelay: 1,
                RemoveInstanceId: 2,
                AddChatMessage: 3,
                AddMeta: 4,
                RenameSelectedShapeIds: 5,
            },
            XD = Re({
                currentVersion: Il.RenameSelectedShapeIds,
                migrators: {
                    [Il.AddScribbleDelay]: {
                        up: (e) =>
                            e.scribble !== null
                                ? {...e, scribble: {...e.scribble, delay: 0}}
                                : {...e},
                        down: (e) => {
                            if (e.scribble !== null) {
                                const {delay: t, ...n} = e.scribble;
                                return {...e, scribble: n};
                            }
                            return {...e};
                        },
                    },
                    [Il.RemoveInstanceId]: {
                        up: ({instanceId: e, ...t}) => t,
                        down: (e) => ({...e, instanceId: ln}),
                    },
                    [Il.AddChatMessage]: {
                        up: (e) => ({...e, chatMessage: ""}),
                        down: ({chatMessage: e, ...t}) => t,
                    },
                    [Il.AddMeta]: {
                        up: (e) => ({...e, meta: {}}),
                        down: ({meta: e, ...t}) => ({...t}),
                    },
                    [Il.RenameSelectedShapeIds]: {
                        up: (e) => {
                            const {selectedShapeIds: t, ...n} = e;
                            return {selectedShapeIds: t, ...n};
                        },
                        down: (e) => {
                            const {selectedShapeIds: t, ...n} = e;
                            return {selectedShapeIds: t, ...n};
                        },
                    },
                },
            }),
            Gd = oi("instance_presence", {
                migrations: XD,
                validator: GD,
                scope: "presence",
            }).withDefaultProperties(() => ({
                lastActivityTimestamp: 0,
                followingUserId: null,
                color: "#FF0000",
                camera: {x: 0, y: 0, z: 1},
                cursor: {x: 0, y: 0, type: "default", rotation: 0},
                screenBounds: {x: 0, y: 0, w: 1, h: 1},
                selectedShapeIds: [],
                brush: null,
                scribbles: [],
                chatMessage: "",
                meta: {},
            })),
            qD = (e, t) => (n) =>
                Q("instancePresence", () => {
                    const r = n.get(ln),
                        o = n.get(
                            Kt.createId(r == null ? void 0 : r.currentPageId)
                        ),
                        i = n.get(
                            Vt.createId(r == null ? void 0 : r.currentPageId)
                        ),
                        a = n.get(Yd),
                        s = e.get();
                    return !o || !r || !i || !a || !s
                        ? null
                        : Gd.create({
                            id: t ?? Gd.createId(n.id),
                            selectedShapeIds: o.selectedShapeIds,
                            brush: r.brush,
                            scribbles: r.scribbles,
                            userId: s.id,
                            userName: s.name,
                            followingUserId: r.followingUserId,
                            camera: {x: i.x, y: i.y, z: i.z},
                            color: s.color,
                            currentPageId: r.currentPageId,
                            cursor: {
                                x: a.x,
                                y: a.y,
                                rotation: r.cursor.rotation,
                                type: r.cursor.type,
                            },
                            lastActivityTimestamp: a.lastActivityTimestamp,
                            screenBounds: r.screenBounds,
                            chatMessage: r.chatMessage,
                            meta: {},
                        });
                }),
            ZD = ii(
                "document",
                Ie({
                    typeName: Hn("document"),
                    id: Hn("document:document"),
                    gridSize: ge,
                    name: be,
                    meta: bo,
                })
            ),
            $y = {AddName: 1, AddMeta: 2},
            QD = Re({
                currentVersion: $y.AddMeta,
                migrators: {
                    [$y.AddName]: {
                        up: (e) => ({...e, name: ""}),
                        down: ({name: e, ...t}) => t,
                    },
                    [$y.AddMeta]: {
                        up: (e) => ({...e, meta: {}}),
                        down: ({meta: e, ...t}) => ({...t}),
                    },
                },
            }),
            Ay = oi("document", {
                migrations: QD,
                validator: ZD,
                scope: "document",
            }).withDefaultProperties(() => ({gridSize: 10, name: "", meta: {}})),
            My = Ay.createId("document");
        function JD(e, t) {
            return e.index < t.index ? -1 : e.index > t.index ? 1 : 0;
        }
        function _C(e) {
            e.typeName === "asset" &&
            ("src" in e && (e.src = "<redacted>"),
            "src" in e.props && (e.props.src = "<redacted>"));
        }
        const eL = ({error: e, phase: t, record: n, recordBefore: r}) => {
            throw (
                (my(e, {
                    tags: {
                        origin: "store.validateRecord",
                        storePhase: t,
                        isExistingValidationIssue: t === "initialize",
                    },
                    extras: {
                        recordBefore: r ? _C(na(r)) : void 0,
                        recordAfter: _C(na(n)),
                    },
                }),
                    e)
            );
        };
        function tL() {
            return [
                ai.create({id: "page:page", name: "Page 1", index: "a1", meta: {}}),
            ];
        }
        function nL(e) {
            const t = e.query.ids("page"),
                n = () => {
                    if (!e.has(My))
                        return (
                            e.put([Ay.create({id: My, name: e.props.defaultName})]),
                                n()
                        );
                    if (!e.has(Yd)) return e.put([Ty.create({id: Yd})]), n();
                    const r = t.get();
                    if (r.size === 0) return e.put(tL()), n();
                    const o = () => [...r].map((l) => e.get(l)).sort(JD)[0].id,
                        i = e.get(ln);
                    if (i) {
                        if (!r.has(i.currentPageId))
                            return e.put([{...i, currentPageId: o()}]), n();
                    } else
                        return (
                            e.put([
                                e.schema.types.instance.create({
                                    id: ln,
                                    currentPageId: o(),
                                    exportBackground: !0,
                                }),
                            ]),
                                n()
                        );
                    const a = new Set(),
                        s = new Set();
                    for (const l of r) {
                        const c = Kt.createId(l);
                        e.has(c) || a.add(c);
                        const d = Vt.createId(l);
                        e.has(d) || s.add(d);
                    }
                    a.size > 0 &&
                    e.put(
                        [...a].map((l) =>
                            Kt.create({id: l, pageId: Kt.parseId(l)})
                        )
                    ),
                    s.size > 0 && e.put([...s].map((l) => Vt.create({id: l})));
                };
            return n;
        }
        const rL = Iy(
                "bookmark",
                Ie({title: be, description: be, image: be, src: El.nullable()})
            ),
            kC = {MakeUrlsValid: 1},
            oL = Re({
                currentVersion: kC.MakeUrlsValid,
                migrators: {
                    [kC.MakeUrlsValid]: {
                        up: (e) => {
                            const t = e.props.src;
                            return t && !El.isValid(t)
                                ? {...e, props: {...e.props, src: ""}}
                                : e;
                        },
                        down: (e) => e,
                    },
                },
            }),
            iL = Iy(
                "image",
                Ie({
                    w: ge,
                    h: ge,
                    name: be,
                    isAnimated: Ce,
                    mimeType: be.nullable(),
                    src: El.nullable(),
                })
            ),
            bf = {AddIsAnimated: 1, RenameWidthHeight: 2, MakeUrlsValid: 3},
            aL = Re({
                currentVersion: bf.MakeUrlsValid,
                migrators: {
                    [bf.AddIsAnimated]: {
                        up: (e) => ({...e, props: {...e.props, isAnimated: !1}}),
                        down: (e) => {
                            const {isAnimated: t, ...n} = e.props;
                            return {...e, props: n};
                        },
                    },
                    [bf.RenameWidthHeight]: {
                        up: (e) => {
                            const {width: t, height: n, ...r} = e.props;
                            return {...e, props: {w: t, h: n, ...r}};
                        },
                        down: (e) => {
                            const {w: t, h: n, ...r} = e.props;
                            return {...e, props: {width: t, height: n, ...r}};
                        },
                    },
                    [bf.MakeUrlsValid]: {
                        up: (e) => {
                            const t = e.props.src;
                            return t && !El.isValid(t)
                                ? {...e, props: {...e.props, src: ""}}
                                : e;
                        },
                        down: (e) => e,
                    },
                },
            }),
            sL = Iy(
                "video",
                Ie({
                    w: ge,
                    h: ge,
                    name: be,
                    isAnimated: Ce,
                    mimeType: be.nullable(),
                    src: El.nullable(),
                })
            ),
            yf = {AddIsAnimated: 1, RenameWidthHeight: 2, MakeUrlsValid: 3},
            lL = Re({
                currentVersion: yf.MakeUrlsValid,
                migrators: {
                    [yf.AddIsAnimated]: {
                        up: (e) => ({...e, props: {...e.props, isAnimated: !1}}),
                        down: (e) => {
                            const {isAnimated: t, ...n} = e.props;
                            return {...e, props: n};
                        },
                    },
                    [yf.RenameWidthHeight]: {
                        up: (e) => {
                            const {width: t, height: n, ...r} = e.props;
                            return {...e, props: {w: t, h: n, ...r}};
                        },
                        down: (e) => {
                            const {w: t, h: n, ...r} = e.props;
                            return {...e, props: {width: t, height: n, ...r}};
                        },
                    },
                    [yf.MakeUrlsValid]: {
                        up: (e) => {
                            const t = e.props.src;
                            return t && !El.isValid(t)
                                ? {...e, props: {...e.props, src: ""}}
                                : e;
                        },
                        down: (e) => e,
                    },
                },
            }),
            cL = ii("asset", Py("type", {image: iL, video: sL, bookmark: rL})),
            CC = {AddMeta: 1},
            dL = Re({
                subTypeKey: "type",
                subTypeMigrations: {image: aL, video: lL, bookmark: oL},
                currentVersion: CC.AddMeta,
                migrators: {
                    [CC.AddMeta]: {
                        up: (e) => ({...e, meta: {}}),
                        down: ({meta: e, ...t}) => ({...t}),
                    },
                },
            }),
            ns = oi("asset", {
                migrations: dL,
                validator: cL,
                scope: "document",
            }).withDefaultProperties(() => ({meta: {}}));
        class cn {
            constructor(t, n, r) {
                (this.id = t), (this.defaultValue = n), (this.type = r);
            }
            static define(t, n) {
                const {defaultValue: r, type: o = PD} = n;
                return new cn(t, r, o);
            }
            static defineEnum(t, n) {
                const {defaultValue: r, values: o} = n;
                return new uL(t, r, o);
            }
            validate(t) {
                return this.type.validate(t);
            }
        }
        class uL extends cn {
            constructor(t, n, r) {
                super(t, n, mC(...r)), (this.values = r);
            }
        }
        const wf = {AddIsLocked: 1, HoistOpacity: 2, AddMeta: 3},
            zy = Re({
                currentVersion: wf.AddMeta,
                migrators: {
                    [wf.AddIsLocked]: {
                        up: (e) => ({...e, isLocked: !1}),
                        down: (e) => {
                            const {isLocked: t, ...n} = e;
                            return {...n};
                        },
                    },
                    [wf.HoistOpacity]: {
                        up: ({props: {opacity: e, ...t}, ...n}) => ({
                            ...n,
                            opacity: Number(e ?? "1"),
                            props: t,
                        }),
                        down: ({opacity: e, ...t}) => ({
                            ...t,
                            props: {
                                ...t.props,
                                opacity:
                                    e < 0.175
                                        ? "0.1"
                                        : e < 0.375
                                            ? "0.25"
                                            : e < 0.625
                                                ? "0.5"
                                                : e < 0.875
                                                    ? "0.75"
                                                    : "1",
                            },
                        }),
                    },
                    [wf.AddMeta]: {
                        up: (e) => ({...e, meta: {}}),
                        down: ({meta: e, ...t}) => ({...t}),
                    },
                },
            });
        function rs(e) {
            return e ? e.typeName === "shape" : !1;
        }
        function kr(e) {
            return e ? e.startsWith("shape:") : !1;
        }
        function Ge(e) {
            return `shape:${e ?? uf()}`;
        }
        function EC(e) {
            const t = new Map();
            for (const [n, r] of Object.entries(e))
                if (r instanceof cn) {
                    if (t.has(r))
                        throw new Error(
                            `Duplicate style prop ${r.id}. Each style prop can only be used once within a shape.`
                        );
                    t.set(r, n);
                }
            return t;
        }
        function hL(e) {
            return oi("shape", {
                migrations: Re({
                    currentVersion: zy.currentVersion,
                    firstVersion: zy.firstVersion,
                    migrators: zy.migrators,
                    subTypeKey: "type",
                    subTypeMigrations: sC(e, (t, n) => n.migrations ?? Re({})),
                }),
                scope: "document",
                validator: ii(
                    "shape",
                    Py(
                        "type",
                        sC(e, (t, {props: n, meta: r}) => HD(t, n, r))
                    )
                ),
            }).withDefaultProperties(() => ({
                x: 0,
                y: 0,
                rotation: 0,
                isLocked: !1,
                opacity: 1,
                meta: {},
            }));
        }
        const Xd = {
                RemoveCodeAndIconShapeTypes: 1,
                AddInstancePresenceType: 2,
                RemoveTLUserAndPresenceAndAddPointer: 3,
                RemoveUserDocument: 4,
            },
            pL = Re({
                currentVersion: Xd.RemoveUserDocument,
                migrators: {
                    [Xd.RemoveCodeAndIconShapeTypes]: {
                        up: (e) =>
                            Object.fromEntries(
                                Object.entries(e).filter(
                                    ([t, n]) =>
                                        n.typeName !== "shape" ||
                                        (n.type !== "icon" && n.type !== "code")
                                )
                            ),
                        down: (e) => e,
                    },
                    [Xd.AddInstancePresenceType]: {
                        up: (e) => e,
                        down: (e) =>
                            Object.fromEntries(
                                Object.entries(e).filter(
                                    ([t, n]) => n.typeName !== "instance_presence"
                                )
                            ),
                    },
                    [Xd.RemoveTLUserAndPresenceAndAddPointer]: {
                        up: (e) =>
                            Object.fromEntries(
                                Object.entries(e).filter(
                                    ([t, n]) =>
                                        !n.typeName.match(/^(user|user_presence)$/)
                                )
                            ),
                        down: (e) =>
                            Object.fromEntries(
                                Object.entries(e).filter(
                                    ([t, n]) => n.typeName !== "pointer"
                                )
                            ),
                    },
                    [Xd.RemoveUserDocument]: {
                        up: (e) =>
                            Object.fromEntries(
                                Object.entries(e).filter(
                                    ([t, n]) => !n.typeName.match("user_document")
                                )
                            ),
                        down: (e) => e,
                    },
                },
            });
        function fL({shapes: e}) {
            const t = new Map();
            for (const o of bt(e))
                for (const i of EC(o.props ?? {}).keys()) {
                    if (t.has(i.id) && t.get(i.id) !== i)
                        throw new Error(
                            `Multiple StyleProp instances with the same id: ${i.id}`
                        );
                    t.set(i.id, i);
                }
            const n = hL(e),
                r = FD(t);
            return xy.create(
                {
                    asset: ns,
                    camera: Vt,
                    document: Ay,
                    instance: r,
                    instance_page_state: Kt,
                    page: ai,
                    shape: n,
                    instance_presence: Gd,
                    pointer: Ty,
                },
                {
                    snapshotMigrations: pL,
                    onValidationFailure: eL,
                    createIntegrityChecker: nL,
                }
            );
        }
        const PC = [
                "black",
                "grey",
                "light-violet",
                "violet",
                "blue",
                "light-blue",
                "yellow",
                "orange",
                "green",
                "light-green",
                "light-red",
                "red",
            ],
            xf = {
                lightMode: {
                    id: "light",
                    text: "#000000",
                    background: "rgb(249, 250, 251)",
                    solid: "#fcfffe",
                    black: {
                        solid: "#1d1d1d",
                        semi: "#e8e8e8",
                        pattern: "#494949",
                        highlight: {
                            srgb: "#fddd00",
                            p3: "color(display-p3 0.972 0.8705 0.05)",
                        },
                    },
                    blue: {
                        solid: "#4263eb",
                        semi: "#dce1f8",
                        pattern: "#6681ee",
                        highlight: {
                            srgb: "#10acff",
                            p3: "color(display-p3 0.308 0.6632 0.9996)",
                        },
                    },
                    green: {
                        solid: "#099268",
                        semi: "#d3e9e3",
                        pattern: "#39a785",
                        highlight: {
                            srgb: "#00ffc8",
                            p3: "color(display-p3 0.2536 0.984 0.7981)",
                        },
                    },
                    grey: {
                        solid: "#adb5bd",
                        semi: "#eceef0",
                        pattern: "#bcc3c9",
                        highlight: {
                            srgb: "#cbe7f1",
                            p3: "color(display-p3 0.8163 0.9023 0.9416)",
                        },
                    },
                    "light-blue": {
                        solid: "#4dabf7",
                        semi: "#ddedfa",
                        pattern: "#6fbbf8",
                        highlight: {
                            srgb: "#00f4ff",
                            p3: "color(display-p3 0.1512 0.9414 0.9996)",
                        },
                    },
                    "light-green": {
                        solid: "#40c057",
                        semi: "#dbf0e0",
                        pattern: "#65cb78",
                        highlight: {
                            srgb: "#65f641",
                            p3: "color(display-p3 0.563 0.9495 0.3857)",
                        },
                    },
                    "light-red": {
                        solid: "#ff8787",
                        semi: "#f4dadb",
                        pattern: "#fe9e9e",
                        highlight: {
                            srgb: "#ff7fa3",
                            p3: "color(display-p3 0.9988 0.5301 0.6397)",
                        },
                    },
                    "light-violet": {
                        solid: "#e599f7",
                        semi: "#f5eafa",
                        pattern: "#e9acf8",
                        highlight: {
                            srgb: "#ff88ff",
                            p3: "color(display-p3 0.9676 0.5652 0.9999)",
                        },
                    },
                    orange: {
                        solid: "#f76707",
                        semi: "#f8e2d4",
                        pattern: "#f78438",
                        highlight: {
                            srgb: "#ffa500",
                            p3: "color(display-p3 0.9988 0.6905 0.266)",
                        },
                    },
                    red: {
                        solid: "#e03131",
                        semi: "#f4dadb",
                        pattern: "#e55959",
                        highlight: {
                            srgb: "#ff636e",
                            p3: "color(display-p3 0.9992 0.4376 0.45)",
                        },
                    },
                    violet: {
                        solid: "#ae3ec9",
                        semi: "#ecdcf2",
                        pattern: "#bd63d3",
                        highlight: {
                            srgb: "#c77cff",
                            p3: "color(display-p3 0.7469 0.5089 0.9995)",
                        },
                    },
                    yellow: {
                        solid: "#ffc078",
                        semi: "#f9f0e6",
                        pattern: "#fecb92",
                        highlight: {
                            srgb: "#fddd00",
                            p3: "color(display-p3 0.972 0.8705 0.05)",
                        },
                    },
                },
                darkMode: {
                    id: "dark",
                    text: "#f8f9fa",
                    background: "#212529",
                    solid: "#28292e",
                    black: {
                        solid: "#e1e1e1",
                        semi: "#2c3036",
                        pattern: "#989898",
                        highlight: {
                            srgb: "#d2b700",
                            p3: "color(display-p3 0.8078 0.7225 0.0312)",
                        },
                    },
                    blue: {
                        solid: "#4156be",
                        semi: "#262d40",
                        pattern: "#3a4b9e",
                        highlight: {
                            srgb: "#0079d2",
                            p3: "color(display-p3 0.0032 0.4655 0.7991)",
                        },
                    },
                    green: {
                        solid: "#3b7b5e",
                        semi: "#253231",
                        pattern: "#366a53",
                        highlight: {
                            srgb: "#009774",
                            p3: "color(display-p3 0.0085 0.582 0.4604)",
                        },
                    },
                    grey: {
                        solid: "#93989f",
                        semi: "#33373c",
                        pattern: "#7c8187",
                        highlight: {
                            srgb: "#9cb4cb",
                            p3: "color(display-p3 0.6299 0.7012 0.7856)",
                        },
                    },
                    "light-blue": {
                        solid: "#588fc9",
                        semi: "#2a3642",
                        pattern: "#4d7aa9",
                        highlight: {
                            srgb: "#00bdc8",
                            p3: "color(display-p3 0.0023 0.7259 0.7735)",
                        },
                    },
                    "light-green": {
                        solid: "#599f57",
                        semi: "#2a3830",
                        pattern: "#4e874e",
                        highlight: {
                            srgb: "#00a000",
                            p3: "color(display-p3 0.2711 0.6172 0.0195)",
                        },
                    },
                    "light-red": {
                        solid: "#c67877",
                        semi: "#3b3235",
                        pattern: "#a56767",
                        highlight: {
                            srgb: "#db005b",
                            p3: "color(display-p3 0.7849 0.0585 0.3589)",
                        },
                    },
                    "light-violet": {
                        solid: "#b583c9",
                        semi: "#383442",
                        pattern: "#9770a9",
                        highlight: {
                            srgb: "#c400c7",
                            p3: "color(display-p3 0.7024 0.0403 0.753)",
                        },
                    },
                    orange: {
                        solid: "#bf612e",
                        semi: "#3a2e2a",
                        pattern: "#9f552d",
                        highlight: {
                            srgb: "#d07a00",
                            p3: "color(display-p3 0.7699 0.4937 0.0085)",
                        },
                    },
                    red: {
                        solid: "#aa3c37",
                        semi: "#36292b",
                        pattern: "#8f3734",
                        highlight: {
                            srgb: "#de002c",
                            p3: "color(display-p3 0.7978 0.0509 0.2035)",
                        },
                    },
                    violet: {
                        solid: "#873fa3",
                        semi: "#31293c",
                        pattern: "#763a8b",
                        highlight: {
                            srgb: "#9e00ee",
                            p3: "color(display-p3 0.5651 0.0079 0.8986)",
                        },
                    },
                    yellow: {
                        solid: "#cba371",
                        semi: "#3c3934",
                        pattern: "#fecb92",
                        highlight: {
                            srgb: "#d2b700",
                            p3: "color(display-p3 0.8078 0.7225 0.0312)",
                        },
                    },
                },
            };
        function Kn(e) {
            return e.isDarkMode ? xf.darkMode : xf.lightMode;
        }
        const Cr = cn.defineEnum("tldraw:color", {
                defaultValue: "black",
                values: PC,
            }),
            IC = cn.defineEnum("tldraw:labelColor", {
                defaultValue: "black",
                values: PC,
            }),
            os = cn.defineEnum("tldraw:dash", {
                defaultValue: "draw",
                values: ["draw", "solid", "dashed", "dotted"],
            }),
            Tl = cn.defineEnum("tldraw:fill", {
                defaultValue: "none",
                values: ["none", "semi", "solid", "pattern"],
            }),
            yo = cn.defineEnum("tldraw:font", {
                defaultValue: "draw",
                values: ["draw", "sans", "serif", "mono"],
            }),
            qd = {
                draw: "'tldraw_draw', sans-serif",
                sans: "'tldraw_sans', sans-serif",
                serif: "'tldraw_serif', serif",
                mono: "'tldraw_mono', monospace",
            },
            wo = cn.defineEnum("tldraw:size", {
                defaultValue: "m",
                values: ["s", "m", "l", "xl"],
            }),
            TC = [
                "arrow",
                "triangle",
                "square",
                "dot",
                "pipe",
                "diamond",
                "inverted",
                "bar",
                "none",
            ],
            Sf = cn.defineEnum("tldraw:arrowheadStart", {
                defaultValue: "none",
                values: TC,
            }),
            _f = cn.defineEnum("tldraw:arrowheadEnd", {
                defaultValue: "arrow",
                values: TC,
            }),
            $C = Py("type", {
                binding: Ie({
                    type: Hn("binding"),
                    boundShapeId: Wr,
                    normalizedAnchor: Vd,
                    isExact: Ce,
                    isPrecise: Ce,
                }),
                point: Ie({type: Hn("point"), x: ge, y: ge}),
            }),
            mL = {
                labelColor: IC,
                color: Cr,
                fill: Tl,
                dash: os,
                size: wo,
                arrowheadStart: Sf,
                arrowheadEnd: _f,
                font: yo,
                start: $C,
                end: $C,
                bend: ge,
                text: be,
            },
            Ry = {AddLabelColor: 1, AddIsPrecise: 2},
            gL = Re({
                currentVersion: Ry.AddIsPrecise,
                migrators: {
                    [Ry.AddLabelColor]: {
                        up: (e) => ({
                            ...e,
                            props: {...e.props, labelColor: "black"},
                        }),
                        down: (e) => {
                            const {labelColor: t, ...n} = e.props;
                            return {...e, props: n};
                        },
                    },
                    [Ry.AddIsPrecise]: {
                        up: (e) => {
                            const {start: t, end: n} = e.props;
                            return {
                                ...e,
                                props: {
                                    ...e.props,
                                    start:
                                        t.type === "binding"
                                            ? {
                                                ...t,
                                                isPrecise: !(
                                                    t.normalizedAnchor.x ===
                                                    0.5 &&
                                                    t.normalizedAnchor.y === 0.5
                                                ),
                                            }
                                            : t,
                                    end:
                                        n.type === "binding"
                                            ? {
                                                ...n,
                                                isPrecise: !(
                                                    n.normalizedAnchor.x ===
                                                    0.5 &&
                                                    n.normalizedAnchor.y === 0.5
                                                ),
                                            }
                                            : n,
                                },
                            };
                        },
                        down: (e) => {
                            const {start: t, end: n} = e.props,
                                r = {...t},
                                o = {...n};
                            return (
                                r.type === "binding" &&
                                (r.isPrecise ||
                                (r.normalizedAnchor = {x: 0.5, y: 0.5}),
                                    delete r.isPrecise),
                                o.type === "binding" &&
                                (o.isPrecise ||
                                (o.normalizedAnchor = {x: 0.5, y: 0.5}),
                                    delete o.isPrecise),
                                    {...e, props: {...e.props, start: r, end: o}}
                            );
                        },
                    },
                },
            }),
            vL = {w: Un, h: Un, assetId: vf.nullable(), url: rr},
            Oy = {NullAssetId: 1, MakeUrlsValid: 2},
            bL = Re({
                currentVersion: Oy.MakeUrlsValid,
                migrators: {
                    [Oy.NullAssetId]: {
                        up: (e) =>
                            e.props.assetId === void 0
                                ? {...e, props: {...e.props, assetId: null}}
                                : e,
                        down: (e) => {
                            if (e.props.assetId === null) {
                                const {assetId: t, ...n} = e.props;
                                return {...e, props: n};
                            }
                            return e;
                        },
                    },
                    [Oy.MakeUrlsValid]: {
                        up: (e) =>
                            e.props.url !== "" && !rr.isValid(e.props.url)
                                ? {...e, props: {...e.props, url: ""}}
                                : e,
                        down: (e) => e,
                    },
                },
            }),
            AC = Ie({type: mC("free", "straight"), points: An(Vd)}),
            yL = {
                color: Cr,
                fill: Tl,
                dash: os,
                size: wo,
                segments: An(AC),
                isComplete: Ce,
                isClosed: Ce,
                isPen: Ce,
            },
            MC = {AddInPen: 1},
            wL = Re({
                currentVersion: MC.AddInPen,
                migrators: {
                    [MC.AddInPen]: {
                        up: (e) => {
                            const {points: t} = e.props.segments[0];
                            if (t.length === 0)
                                return {...e, props: {...e.props, isPen: !1}};
                            let n = !(t[0].z === 0 || t[0].z === 0.5);
                            return (
                                t[1] &&
                                (n = n && !(t[1].z === 0 || t[1].z === 0.5)),
                                    {...e, props: {...e.props, isPen: n}}
                            );
                        },
                        down: (e) => {
                            const {isPen: t, ...n} = e.props;
                            return {...e, props: {...n}};
                        },
                    },
                },
            });
        var xL = {};
        const zC = /(^\/r\/[^/]+\/?$)/,
            Ue = (e) => {
                try {
                    return new URL(e);
                } catch {
                    return;
                }
            },
            $l = [
                {
                    type: "tldraw",
                    title: "tldraw",
                    hostnames: ["beta.tldraw.com", "tldraw.com"],
                    minWidth: 300,
                    minHeight: 300,
                    width: 720,
                    height: 500,
                    doesResize: !0,
                    canUnmount: !0,
                    toEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.pathname.match(zC)) return e;
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.pathname.match(zC)) return e;
                    },
                },
                {
                    type: "figma",
                    title: "Figma",
                    hostnames: ["figma.com"],
                    width: 720,
                    height: 500,
                    doesResize: !0,
                    canUnmount: !0,
                    toEmbedUrl: (e) => {
                        if (
                            e.match(
                                /https:\/\/([\w\.-]+\.)?figma.com\/(file|proto)\/([0-9a-zA-Z]{22,128})(?:\/.*)?$/
                            ) &&
                            !e.includes("figma.com/embed")
                        )
                            return `https://www.figma.com/embed?embed_host=share&url=${e}`;
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.pathname.match(/^\/embed\/?$/)) {
                            const n = t.searchParams.get("url");
                            if (n) return n;
                        }
                    },
                },
                {
                    type: "google_maps",
                    title: "Google Maps",
                    hostnames: ["google.*"],
                    width: 720,
                    height: 500,
                    doesResize: !0,
                    canUnmount: !1,
                    toEmbedUrl: (e) => {
                        if (e.includes("/maps/")) {
                            const t = e.match(/@(.*),(.*),(.*)z/);
                            let n;
                            if (t) {
                                const [, r, o, i] = t;
                                n = `https://${new URL(e).host.replace(
                                    "www.",
                                    ""
                                )}/maps/embed/v1/view?key=${
                                    xL.NEXT_PUBLIC_GC_API_KEY
                                }&center=${r},${o}&zoom=${i}`;
                            } else n = "";
                            return n;
                        }
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (!t) return;
                        if (
                            t.pathname.match(/^\/maps\/embed\/v1\/view\/?$/) &&
                            t.searchParams.has("center") &&
                            t.searchParams.get("zoom")
                        ) {
                            const r = t.searchParams.get("zoom"),
                                [o, i] = t.searchParams.get("center").split(",");
                            return `https://www.google.com/maps/@${o},${i},${r}z`;
                        }
                    },
                },
                {
                    type: "val_town",
                    title: "Val Town",
                    hostnames: ["val.town"],
                    minWidth: 260,
                    minHeight: 100,
                    width: 720,
                    height: 500,
                    doesResize: !0,
                    canUnmount: !1,
                    toEmbedUrl: (e) => {
                        const t = Ue(e),
                            n = t && t.pathname.match(/\/v\/([^/]+)\/?/);
                        if (n) return `https://www.val.town/embed/${n[1]}`;
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e),
                            n = t && t.pathname.match(/\/embed\/([^/]+)\/?/);
                        if (n) return `https://www.val.town/v/${n[1]}`;
                    },
                },
                {
                    type: "codesandbox",
                    title: "CodeSandbox",
                    hostnames: ["codesandbox.io"],
                    minWidth: 300,
                    minHeight: 300,
                    width: 720,
                    height: 500,
                    doesResize: !0,
                    canUnmount: !1,
                    toEmbedUrl: (e) => {
                        const t = Ue(e),
                            n = t && t.pathname.match(/\/s\/([^/]+)\/?/);
                        if (n) return `https://codesandbox.io/embed/${n[1]}`;
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e),
                            n = t && t.pathname.match(/\/embed\/([^/]+)\/?/);
                        if (n) return `https://codesandbox.io/s/${n[1]}`;
                    },
                },
                {
                    type: "codepen",
                    title: "Codepen",
                    hostnames: ["codepen.io"],
                    minWidth: 300,
                    minHeight: 300,
                    width: 520,
                    height: 400,
                    doesResize: !0,
                    canUnmount: !1,
                    toEmbedUrl: (e) => {
                        const t = /https:\/\/codepen.io\/([^/]+)\/pen\/([^/]+)/,
                            n = e.match(t);
                        if (n) {
                            const [r, o, i] = n;
                            return `https://codepen.io/${o}/embed/${i}`;
                        }
                    },
                    fromEmbedUrl: (e) => {
                        const t = /https:\/\/codepen.io\/([^/]+)\/embed\/([^/]+)/,
                            n = e.match(t);
                        if (n) {
                            const [r, o, i] = n;
                            return `https://codepen.io/${o}/pen/${i}`;
                        }
                    },
                },
                {
                    type: "scratch",
                    title: "Scratch",
                    hostnames: ["scratch.mit.edu"],
                    width: 520,
                    height: 400,
                    doesResize: !1,
                    canUnmount: !1,
                    toEmbedUrl: (e) => {
                        const t = /https?:\/\/scratch.mit.edu\/projects\/([^/]+)/,
                            n = e.match(t);
                        if (n) {
                            const [r, o] = n;
                            return `https://scratch.mit.edu/projects/embed/${o}`;
                        }
                    },
                    fromEmbedUrl: (e) => {
                        const t =
                                /https:\/\/scratch.mit.edu\/projects\/embed\/([^/]+)/,
                            n = e.match(t);
                        if (n) {
                            const [r, o] = n;
                            return `https://scratch.mit.edu/projects/${o}`;
                        }
                    },
                },
                {
                    type: "youtube",
                    title: "YouTube",
                    hostnames: ["*.youtube.com", "youtube.com", "youtu.be"],
                    width: 800,
                    height: 450,
                    doesResize: !0,
                    canUnmount: !1,
                    overridePermissions: {"allow-presentation": !0},
                    isAspectRatioLocked: !0,
                    toEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (!t) return;
                        const n = t.hostname.replace(/^www./, "");
                        if (n === "youtu.be")
                            return `https://www.youtube.com/embed/${
                                t.pathname.split("/").filter(Boolean)[0]
                            }`;
                        if (
                            (n === "youtube.com" || n === "m.youtube.com") &&
                            t.pathname.match(/^\/watch/)
                        )
                            return `https://www.youtube.com/embed/${t.searchParams.get(
                                "v"
                            )}`;
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (!t) return;
                        if (t.hostname.replace(/^www./, "") === "youtube.com") {
                            const r = t.pathname.match(/^\/embed\/([^/]+)\/?/);
                            if (r) return `https://www.youtube.com/watch?v=${r[1]}`;
                        }
                    },
                },
                {
                    type: "google_calendar",
                    title: "Google Calendar",
                    hostnames: ["calendar.google.*"],
                    width: 720,
                    height: 500,
                    minWidth: 460,
                    minHeight: 360,
                    doesResize: !0,
                    canUnmount: !1,
                    instructionLink:
                        "https://support.google.com/calendar/answer/41207?hl=en",
                    toEmbedUrl: (e) => {
                        const t = Ue(e),
                            n = t == null ? void 0 : t.searchParams.get("cid");
                        if (
                            t != null &&
                            t.pathname.match(/\/calendar\/u\/0/) &&
                            n
                        ) {
                            t.pathname = "/calendar/embed";
                            const r = Array.from(t.searchParams.keys());
                            for (const o of r) t.searchParams.delete(o);
                            return t.searchParams.set("src", n), t.href;
                        }
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e),
                            n = t == null ? void 0 : t.searchParams.get("src");
                        if (
                            t != null &&
                            t.pathname.match(/\/calendar\/embed/) &&
                            n
                        ) {
                            t.pathname = "/calendar/u/0";
                            const r = Array.from(t.searchParams.keys());
                            for (const o of r) t.searchParams.delete(o);
                            return t.searchParams.set("cid", n), t.href;
                        }
                    },
                },
                {
                    type: "google_slides",
                    title: "Google Slides",
                    hostnames: ["docs.google.*"],
                    width: 720,
                    height: 500,
                    minWidth: 460,
                    minHeight: 360,
                    doesResize: !0,
                    canUnmount: !1,
                    toEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (
                            t != null &&
                            t.pathname.match(/^\/presentation/) &&
                            t != null &&
                            t.pathname.match(/\/pub\/?$/)
                        ) {
                            t.pathname = t.pathname.replace(/\/pub$/, "/embed");
                            const n = Array.from(t.searchParams.keys());
                            for (const r of n) t.searchParams.delete(r);
                            return t.href;
                        }
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (
                            t != null &&
                            t.pathname.match(/^\/presentation/) &&
                            t != null &&
                            t.pathname.match(/\/embed\/?$/)
                        ) {
                            t.pathname = t.pathname.replace(/\/embed$/, "/pub");
                            const n = Array.from(t.searchParams.keys());
                            for (const r of n) t.searchParams.delete(r);
                            return t.href;
                        }
                    },
                },
                {
                    type: "github_gist",
                    title: "GitHub Gist",
                    hostnames: ["gist.github.com"],
                    width: 720,
                    height: 500,
                    doesResize: !0,
                    canUnmount: !0,
                    toEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.pathname.match(/\/([^/]+)\/([^/]+)/))
                            return e.split("/").pop() ? e : void 0;
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.pathname.match(/\/([^/]+)\/([^/]+)/))
                            return e.split("/").pop() ? e : void 0;
                    },
                },
                {
                    type: "replit",
                    title: "Replit",
                    hostnames: ["replit.com"],
                    width: 720,
                    height: 500,
                    doesResize: !0,
                    canUnmount: !1,
                    toEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.pathname.match(/\/@([^/]+)\/([^/]+)/))
                            return `${e}?embed=true`;
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (
                            t &&
                            t.pathname.match(/\/@([^/]+)\/([^/]+)/) &&
                            t.searchParams.has("embed")
                        )
                            return t.searchParams.delete("embed"), t.href;
                    },
                },
                {
                    type: "felt",
                    title: "Felt",
                    hostnames: ["felt.com"],
                    width: 720,
                    height: 500,
                    doesResize: !0,
                    canUnmount: !1,
                    toEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.pathname.match(/^\/map\//))
                            return t.origin + "/embed" + t.pathname;
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.pathname.match(/^\/embed\/map\//))
                            return (
                                (t.pathname = t.pathname.replace(/^\/embed/, "")),
                                    t.href
                            );
                    },
                },
                {
                    type: "spotify",
                    title: "Spotify",
                    hostnames: ["open.spotify.com"],
                    width: 720,
                    height: 500,
                    minHeight: 500,
                    overrideOutlineRadius: 12,
                    doesResize: !0,
                    canUnmount: !1,
                    toEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.pathname.match(/^\/(artist|album)\//))
                            return t.origin + "/embed" + t.pathname;
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.pathname.match(/^\/embed\/(artist|album)\//))
                            return t.origin + t.pathname.replace(/^\/embed/, "");
                    },
                },
                {
                    type: "vimeo",
                    title: "Vimeo",
                    hostnames: ["vimeo.com", "player.vimeo.com"],
                    width: 640,
                    height: 360,
                    doesResize: !0,
                    canUnmount: !1,
                    isAspectRatioLocked: !0,
                    toEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (
                            t &&
                            t.hostname === "vimeo.com" &&
                            t.pathname.match(/^\/[0-9]+/)
                        )
                            return (
                                "https://player.vimeo.com/video/" +
                                t.pathname.split("/")[1] +
                                "?title=0&byline=0"
                            );
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.hostname === "player.vimeo.com") {
                            const n = t.pathname.match(/^\/video\/([^/]+)\/?$/);
                            if (n) return "https://vimeo.com/" + n[1];
                        }
                    },
                },
                {
                    type: "excalidraw",
                    title: "Excalidraw",
                    hostnames: ["excalidraw.com"],
                    width: 720,
                    height: 500,
                    doesResize: !0,
                    canUnmount: !1,
                    isAspectRatioLocked: !0,
                    toEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.hash.match(/#room=/)) return e;
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.hash.match(/#room=/)) return e;
                    },
                },
                {
                    type: "observable",
                    title: "Observable",
                    hostnames: ["observablehq.com"],
                    width: 720,
                    height: 500,
                    doesResize: !0,
                    canUnmount: !1,
                    isAspectRatioLocked: !1,
                    backgroundColor: "#fff",
                    toEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (t && t.pathname.match(/^\/@([^/]+)\/([^/]+)\/?$/))
                            return `${t.origin}/embed${t.pathname}?cell=*`;
                        if (t && t.pathname.match(/^\/d\/([^/]+)\/?$/)) {
                            const n = t.pathname.replace(/^\/d/, "");
                            return `${t.origin}/embed${n}?cell=*`;
                        }
                    },
                    fromEmbedUrl: (e) => {
                        const t = Ue(e);
                        if (
                            t &&
                            t.pathname.match(/^\/embed\/@([^/]+)\/([^/]+)\/?$/)
                        )
                            return `${t.origin}${t.pathname.replace(
                                "/embed",
                                ""
                            )}#cell-*`;
                        if (t && t.pathname.match(/^\/embed\/([^/]+)\/?$/))
                            return `${t.origin}${t.pathname.replace(
                                "/embed",
                                "/d"
                            )}#cell-*`;
                    },
                },
            ],
            SL = {
                "allow-downloads-without-user-activation": !1,
                "allow-downloads": !1,
                "allow-modals": !1,
                "allow-orientation-lock": !1,
                "allow-pointer-lock": !1,
                "allow-popups": !0,
                "allow-popups-to-escape-sandbox": !1,
                "allow-presentation": !1,
                "allow-storage-access-by-user-activation": !1,
                "allow-top-navigation": !1,
                "allow-top-navigation-by-user-activation": !1,
                "allow-scripts": !0,
                "allow-same-origin": !0,
                "allow-forms": !0,
            },
            _L = {w: Un, h: Un, url: be},
            Zd = {
                GenOriginalUrlInEmbed: 1,
                RemoveDoesResize: 2,
                RemoveTmpOldUrl: 3,
                RemovePermissionOverrides: 4,
            },
            kL = Re({
                currentVersion: Zd.RemovePermissionOverrides,
                migrators: {
                    [Zd.GenOriginalUrlInEmbed]: {
                        up: (e) => {
                            const t = e.props.url,
                                n = new URL(t).host.replace("www.", "");
                            let r;
                            for (const o of $l)
                                if (o.hostnames.includes(n))
                                    try {
                                        r = o.fromEmbedUrl(t);
                                    } catch (i) {
                                        console.warn(i);
                                    }
                            return {
                                ...e,
                                props: {
                                    ...e.props,
                                    tmpOldUrl: e.props.url,
                                    url: r ?? "",
                                },
                            };
                        },
                        down: (e) => {
                            let t = e.props.tmpOldUrl;
                            if (!t || t === "") {
                                const o = e.props.url,
                                    i = new URL(o).host.replace("www.", "");
                                for (const a of $l)
                                    if (a.hostnames.includes(i))
                                        try {
                                            t = a.toEmbedUrl(o);
                                        } catch (s) {
                                            console.warn(s);
                                        }
                            }
                            const {tmpOldUrl: n, ...r} = e.props;
                            return {...e, props: {...r, url: t ?? ""}};
                        },
                    },
                    [Zd.RemoveDoesResize]: {
                        up: (e) => {
                            const {doesResize: t, ...n} = e.props;
                            return {...e, props: {...n}};
                        },
                        down: (e) => ({...e, props: {...e.props, doesResize: !0}}),
                    },
                    [Zd.RemoveTmpOldUrl]: {
                        up: (e) => {
                            const {tmpOldUrl: t, ...n} = e.props;
                            return {...e, props: {...n}};
                        },
                        down: (e) => ({...e, props: {...e.props}}),
                    },
                    [Zd.RemovePermissionOverrides]: {
                        up: (e) => {
                            const {overridePermissions: t, ...n} = e.props;
                            return {...e, props: {...n}};
                        },
                        down: (e) => ({...e, props: {...e.props}}),
                    },
                },
            }),
            CL = {w: Un, h: Un, name: be},
            EL = Re({}),
            Qd = cn.defineEnum("tldraw:horizontalAlign", {
                defaultValue: "middle",
                values: [
                    "start",
                    "middle",
                    "end",
                    "start-legacy",
                    "end-legacy",
                    "middle-legacy",
                ],
            }),
            kf = cn.defineEnum("tldraw:verticalAlign", {
                defaultValue: "middle",
                values: ["start", "middle", "end"],
            }),
            xo = cn.defineEnum("tldraw:geo", {
                defaultValue: "rectangle",
                values: [
                    "cloud",
                    "rectangle",
                    "ellipse",
                    "triangle",
                    "diamond",
                    "pentagon",
                    "hexagon",
                    "octagon",
                    "star",
                    "rhombus",
                    "rhombus-2",
                    "oval",
                    "trapezoid",
                    "arrow-right",
                    "arrow-left",
                    "arrow-up",
                    "arrow-down",
                    "x-box",
                    "check-box",
                ],
            }),
            PL = {
                geo: xo,
                labelColor: IC,
                color: Cr,
                fill: Tl,
                dash: os,
                size: wo,
                font: yo,
                align: Qd,
                verticalAlign: kf,
                url: rr,
                w: Un,
                h: Un,
                growY: ky,
                text: be,
            },
            si = {
                AddUrlProp: 1,
                AddLabelColor: 2,
                RemoveJustify: 3,
                AddCheckBox: 4,
                AddVerticalAlign: 5,
                MigrateLegacyAlign: 6,
                AddCloud: 7,
                MakeUrlsValid: 8,
            },
            IL = Re({
                currentVersion: si.MakeUrlsValid,
                migrators: {
                    [si.AddUrlProp]: {
                        up: (e) => ({...e, props: {...e.props, url: ""}}),
                        down: (e) => {
                            const {url: t, ...n} = e.props;
                            return {...e, props: n};
                        },
                    },
                    [si.AddLabelColor]: {
                        up: (e) => ({
                            ...e,
                            props: {...e.props, labelColor: "black"},
                        }),
                        down: (e) => {
                            const {labelColor: t, ...n} = e.props;
                            return {...e, props: n};
                        },
                    },
                    [si.RemoveJustify]: {
                        up: (e) => {
                            let t = e.props.align;
                            return (
                                t === "justify" && (t = "start"),
                                    {...e, props: {...e.props, align: t}}
                            );
                        },
                        down: (e) => ({...e}),
                    },
                    [si.AddCheckBox]: {
                        up: (e) => ({...e}),
                        down: (e) => ({
                            ...e,
                            props: {
                                ...e.props,
                                geo:
                                    e.props.geo === "check-box"
                                        ? "rectangle"
                                        : e.props.geo,
                            },
                        }),
                    },
                    [si.AddVerticalAlign]: {
                        up: (e) => ({
                            ...e,
                            props: {...e.props, verticalAlign: "middle"},
                        }),
                        down: (e) => {
                            const {verticalAlign: t, ...n} = e.props;
                            return {...e, props: n};
                        },
                    },
                    [si.MigrateLegacyAlign]: {
                        up: (e) => {
                            let t;
                            switch (e.props.align) {
                                case "start":
                                    t = "start-legacy";
                                    break;
                                case "end":
                                    t = "end-legacy";
                                    break;
                                default:
                                    t = "middle-legacy";
                                    break;
                            }
                            return {...e, props: {...e.props, align: t}};
                        },
                        down: (e) => {
                            let t;
                            switch (e.props.align) {
                                case "start-legacy":
                                    t = "start";
                                    break;
                                case "end-legacy":
                                    t = "end";
                                    break;
                                case "middle-legacy":
                                    t = "middle";
                                    break;
                                default:
                                    t = e.props.align;
                            }
                            return {...e, props: {...e.props, align: t}};
                        },
                    },
                    [si.AddCloud]: {
                        up: (e) => e,
                        down: (e) => {
                            if (e.props.geo === "cloud")
                                return {
                                    ...e,
                                    props: {...e.props, geo: "rectangle"},
                                };
                        },
                    },
                    [si.MakeUrlsValid]: {
                        up: (e) =>
                            e.props.url !== "" && !rr.isValid(e.props.url)
                                ? {...e, props: {...e.props, url: ""}}
                                : e,
                        down: (e) => e,
                    },
                },
            }),
            TL = {},
            $L = Re({}),
            AL = {color: Cr, size: wo, segments: An(AC), isComplete: Ce, isPen: Ce},
            ML = Re({}),
            zL = Ie({topLeft: Vd, bottomRight: Vd}),
            RL = {
                w: Un,
                h: Un,
                playing: Ce,
                url: rr,
                assetId: vf.nullable(),
                crop: zL.nullable(),
            },
            Cf = {AddUrlProp: 1, AddCropProp: 2, MakeUrlsValid: 3},
            OL = Re({
                currentVersion: Cf.MakeUrlsValid,
                migrators: {
                    [Cf.AddUrlProp]: {
                        up: (e) => ({...e, props: {...e.props, url: ""}}),
                        down: (e) => {
                            const {url: t, ...n} = e.props;
                            return {...e, props: n};
                        },
                    },
                    [Cf.AddCropProp]: {
                        up: (e) => ({...e, props: {...e.props, crop: null}}),
                        down: (e) => {
                            const {crop: t, ...n} = e.props;
                            return {...e, props: n};
                        },
                    },
                    [Cf.MakeUrlsValid]: {
                        up: (e) =>
                            e.props.url !== "" && !rr.isValid(e.props.url)
                                ? {...e, props: {...e.props, url: ""}}
                                : e,
                        down: (e) => e,
                    },
                },
            }),
            DL = Ie({
                id: be,
                type: Hd(new Set(["vertex", "virtual", "create"])),
                canBind: Ce.optional(),
                canSnap: Ce.optional(),
                index: be,
                x: ge,
                y: ge,
            }),
            Ef = cn.defineEnum("tldraw:spline", {
                defaultValue: "line",
                values: ["cubic", "line"],
            }),
            LL = {color: Cr, dash: os, size: wo, spline: Ef, handles: Ey(be, DL)},
            RC = {AddSnapHandles: 1},
            jL = Re({
                currentVersion: RC.AddSnapHandles,
                migrators: {
                    [RC.AddSnapHandles]: {
                        up: (e) => {
                            const t = sn(e.props.handles);
                            for (const n in t) t[n].canSnap = !0;
                            return {...e, props: {...e.props, handles: t}};
                        },
                        down: (e) => {
                            const t = sn(e.props.handles);
                            for (const n in t) delete t[n].canSnap;
                            return {...e, props: {...e.props, handles: t}};
                        },
                    },
                },
            }),
            NL = {
                color: Cr,
                size: wo,
                font: yo,
                align: Qd,
                verticalAlign: kf,
                growY: ky,
                url: rr,
                text: be,
            },
            Al = {
                AddUrlProp: 1,
                RemoveJustify: 2,
                MigrateLegacyAlign: 3,
                AddVerticalAlign: 4,
                MakeUrlsValid: 5,
            },
            FL = Re({
                currentVersion: Al.MakeUrlsValid,
                migrators: {
                    [Al.AddUrlProp]: {
                        up: (e) => ({...e, props: {...e.props, url: ""}}),
                        down: (e) => {
                            const {url: t, ...n} = e.props;
                            return {...e, props: n};
                        },
                    },
                    [Al.RemoveJustify]: {
                        up: (e) => {
                            let t = e.props.align;
                            return (
                                t === "justify" && (t = "start"),
                                    {...e, props: {...e.props, align: t}}
                            );
                        },
                        down: (e) => ({...e}),
                    },
                    [Al.MigrateLegacyAlign]: {
                        up: (e) => {
                            let t;
                            switch (e.props.align) {
                                case "start":
                                    t = "start-legacy";
                                    break;
                                case "end":
                                    t = "end-legacy";
                                    break;
                                default:
                                    t = "middle-legacy";
                                    break;
                            }
                            return {...e, props: {...e.props, align: t}};
                        },
                        down: (e) => {
                            let t;
                            switch (e.props.align) {
                                case "start-legacy":
                                    t = "start";
                                    break;
                                case "end-legacy":
                                    t = "end";
                                    break;
                                case "middle-legacy":
                                    t = "middle";
                                    break;
                                default:
                                    t = e.props.align;
                            }
                            return {...e, props: {...e.props, align: t}};
                        },
                    },
                    [Al.AddVerticalAlign]: {
                        up: (e) => ({
                            ...e,
                            props: {...e.props, verticalAlign: "middle"},
                        }),
                        down: (e) => {
                            const {verticalAlign: t, ...n} = e.props;
                            return {...e, props: n};
                        },
                    },
                    [Al.MakeUrlsValid]: {
                        up: (e) =>
                            e.props.url !== "" && !rr.isValid(e.props.url)
                                ? {...e, props: {...e.props, url: ""}}
                                : e,
                        down: (e) => e,
                    },
                },
            }),
            BL = {
                color: Cr,
                size: wo,
                font: yo,
                align: Qd,
                w: Un,
                text: be,
                scale: Un,
                autoSize: Ce,
            },
            OC = {RemoveJustify: 1},
            UL = Re({
                currentVersion: OC.RemoveJustify,
                migrators: {
                    [OC.RemoveJustify]: {
                        up: (e) => {
                            let t = e.props.align;
                            return (
                                t === "justify" && (t = "start"),
                                    {...e, props: {...e.props, align: t}}
                            );
                        },
                        down: (e) => ({...e}),
                    },
                },
            }),
            HL = {
                w: Un,
                h: Un,
                time: ge,
                playing: Ce,
                url: rr,
                assetId: vf.nullable(),
            },
            Dy = {AddUrlProp: 1, MakeUrlsValid: 2},
            VL = Re({
                currentVersion: Dy.MakeUrlsValid,
                migrators: {
                    [Dy.AddUrlProp]: {
                        up: (e) => ({...e, props: {...e.props, url: ""}}),
                        down: (e) => {
                            const {url: t, ...n} = e.props;
                            return {...e, props: n};
                        },
                    },
                    [Dy.MakeUrlsValid]: {
                        up: (e) =>
                            e.props.url !== "" && !rr.isValid(e.props.url)
                                ? {...e, props: {...e.props, url: ""}}
                                : e,
                        down: (e) => e,
                    },
                },
            }),
            Jd = [
                {locale: "ar", label: "عربي"},
                {locale: "ca", label: "Català"},
                {locale: "cs", label: "Čeština"},
                {locale: "da", label: "Danish"},
                {locale: "de", label: "Deutsch"},
                {locale: "en", label: "English"},
                {locale: "es", label: "Español"},
                {locale: "fa", label: "فارسی"},
                {locale: "fi", label: "Suomi"},
                {locale: "fr", label: "Français"},
                {locale: "gl", label: "Galego"},
                {locale: "he", label: "עברית"},
                {locale: "it", label: "Italiano"},
                {locale: "ja", label: "日本語"},
                {locale: "ko-kr", label: "한국어"},
                {locale: "ku", label: "کوردی"},
                {locale: "hi-in", label: "हिन्दी"},
                {locale: "hu", label: "Magyar"},
                {locale: "my", label: "မြန်မာစာ"},
                {locale: "ne", label: "नेपाली"},
                {locale: "no", label: "Norwegian"},
                {locale: "pl", label: "Polski"},
                {locale: "pt-br", label: "Português - Brasil"},
                {locale: "pt-pt", label: "Português - Europeu"},
                {locale: "ro", label: "Română"},
                {locale: "ru", label: "Russian"},
                {locale: "sv", label: "Svenska"},
                {locale: "te", label: "తెలుగు"},
                {locale: "th", label: "ภาษาไทย"},
                {locale: "tr", label: "Türkçe"},
                {locale: "uk", label: "Ukrainian"},
                {locale: "vi", label: "Tiếng Việt"},
                {locale: "zh-cn", label: "Chinese - Simplified"},
                {locale: "zh-tw", label: "繁體中文 (台灣)"},
            ];
        function KL() {
            const e =
                typeof window < "u" ? window.navigator.languages ?? ["en"] : ["en"];
            return WL(e);
        }
        function WL(e) {
            for (const t of e) {
                const n = YL(t);
                if (n) return n;
            }
            return "en";
        }
        const DC = {zh: "zh-cn", pt: "pt-br", ko: "ko-kr", hi: "hi-in"};
        function YL(e) {
            const t = Jd.find((o) => o.locale === e.toLowerCase());
            if (t) return t.locale;
            const [n, r] = e.split(/[-_]/).map((o) => o.toLowerCase());
            if (r) {
                const o = Jd.find((i) => i.locale === n);
                if (o) return o.locale;
            }
            return n in DC ? DC[n] : null;
        }
        var LC = {exports: {}};
        /*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ (function (e) {
            (function () {
                var t = {}.hasOwnProperty;
                function n() {
                    for (var i = "", a = 0; a < arguments.length; a++) {
                        var s = arguments[a];
                        s && (i = o(i, r(s)));
                    }
                    return i;
                }
                function r(i) {
                    if (typeof i == "string" || typeof i == "number") return i;
                    if (typeof i != "object") return "";
                    if (Array.isArray(i)) return n.apply(null, i);
                    if (
                        i.toString !== Object.prototype.toString &&
                        !i.toString.toString().includes("[native code]")
                    )
                        return i.toString();
                    var a = "";
                    for (var s in i) t.call(i, s) && i[s] && (a = o(a, s));
                    return a;
                }
                function o(i, a) {
                    return a ? (i ? i + " " + a : i + a) : i;
                }
                e.exports
                    ? ((n.default = n), (e.exports = n))
                    : (window.classNames = n);
            })();
        })(LC);
        var GL = LC.exports;
        const me = Da(GL);
        var Ly = {};
        const XL = {},
            Xe = {
                preventDefaultLogging: or("preventDefaultLogging", {
                    defaults: {all: !1},
                }),
                pointerCaptureLogging: or("pointerCaptureLogging", {
                    defaults: {all: !1},
                }),
                pointerCaptureTracking: or("pointerCaptureTracking", {
                    defaults: {all: !1},
                }),
                pointerCaptureTrackingObject: or("pointerCaptureTrackingObject", {
                    defaults: {all: new Map()},
                    shouldStoreForSession: !1,
                }),
                elementRemovalLogging: or("elementRemovalLogging", {
                    defaults: {all: !1},
                }),
                debugSvg: or("debugSvg", {defaults: {all: !1}}),
                throwToBlob: or("throwToBlob", {defaults: {all: !1}}),
                logMessages: or("uiLog", {defaults: {all: []}}),
                resetConnectionEveryPing: or("resetConnectionEveryPing", {
                    defaults: {all: !1},
                }),
                debugCursors: or("debugCursors", {defaults: {all: !1}}),
                forceSrgb: or("forceSrgbColors", {defaults: {all: !1}}),
                debugGeometry: or("debugGeometry", {defaults: {all: !1}}),
                hideShapes: or("hideShapes", {defaults: {all: !1}}),
            };
        if (
            (typeof window < "u" &&
            (window.tldrawLog = (e) => {
                Xe.logMessages.set(Xe.logMessages.get().concat(e));
            }),
            typeof Element < "u")
        ) {
            const e = Element.prototype.removeChild;
            xl("element removal logging", () => {
                Xe.elementRemovalLogging.get()
                    ? (Element.prototype.removeChild = function (t) {
                        return (
                            console.warn("[tldraw] removing child:", t),
                                e.call(this, t)
                        );
                    })
                    : (Element.prototype.removeChild = e);
            });
        }
        function or(e, {defaults: t, shouldStoreForSession: n = !0}) {
            return qL({name: e, defaults: t, shouldStoreForSession: n});
        }
        function qL(e) {
            const t = QL(e),
                n = e.shouldStoreForSession ? ZL(e.name) : null,
                r = Tn(`debug:${e.name}`, n ?? t);
            return (
                typeof window < "u" &&
                (e.shouldStoreForSession &&
                xl(`debug:${e.name}`, () => {
                    const o = r.get();
                    try {
                        o === t
                            ? window.sessionStorage.removeItem(
                                `tldraw_debug:${e.name}`
                            )
                            : window.sessionStorage.setItem(
                                `tldraw_debug:${e.name}`,
                                JSON.stringify(o)
                            );
                    } catch {}
                }),
                    Object.defineProperty(
                        window,
                        `tldraw${e.name.replace(/^[a-z]/, (o) => o.toUpperCase())}`,
                        {
                            get() {
                                return r.get();
                            },
                            set(o) {
                                r.set(o);
                            },
                            configurable: !0,
                        }
                    )),
                    Object.assign(r, e)
            );
        }
        function ZL(e) {
            try {
                return JSON.parse(
                    (window == null
                        ? void 0
                        : window.sessionStorage.getItem(`tldraw_debug:${e}`)) ??
                    "null"
                );
            } catch {
                return null;
            }
        }
        function jy(e) {
            try {
                return e();
            } catch {
                return null;
            }
        }
        function QL(e) {
            switch (
            jy(() => Ly.TLDRAW_ENV) ??
            jy(() => Ly.VERCEL_PUBLIC_TLDRAW_ENV) ??
            jy(() => Ly.NEXT_PUBLIC_TLDRAW_ENV) ??
            "production"
                ) {
                case "production":
                    return e.defaults.production ?? e.defaults.all;
                case "preview":
                case "staging":
                    return e.defaults.staging ?? e.defaults.all;
                default:
                    return e.defaults.development ?? e.defaults.all;
            }
        }
        function Pf(e) {
            if (e instanceof HTMLElement) return e;
            if (e.parentElement) return Pf(e.parentElement);
            throw Error("Could not find a parent element of an HTML type!");
        }
        function $e(e) {
            e.preventDefault(),
            Xe.preventDefaultLogging.get() &&
            console.warn("preventDefault called on event:", e);
        }
        function eu(e, t) {
            if (
                (e.setPointerCapture(t.pointerId), Xe.pointerCaptureTracking.get())
            ) {
                const n = Xe.pointerCaptureTrackingObject.get();
                n.set(e, (n.get(e) ?? 0) + 1);
            }
            Xe.pointerCaptureLogging.get() &&
            console.warn("setPointerCapture called on element:", e, t);
        }
        function tu(e, t) {
            if (e.hasPointerCapture(t.pointerId)) {
                if (
                    (e.releasePointerCapture(t.pointerId),
                        Xe.pointerCaptureTracking.get())
                ) {
                    const n = Xe.pointerCaptureTrackingObject.get();
                    n.get(e) === 1
                        ? n.delete(e)
                        : n.has(e)
                            ? n.set(e, n.get(e) - 1)
                            : console.warn("Release without capture");
                }
                Xe.pointerCaptureLogging.get() &&
                console.warn("releasePointerCapture called on element:", e, t);
            }
        }
        const zt = (e) => e.stopPropagation();
        function Wn(e) {
            return (
                (e.isKilled = !0),
                    {
                        point: {x: e.clientX, y: e.clientY, z: e.pressure},
                        shiftKey: e.shiftKey,
                        altKey: e.altKey,
                        ctrlKey: e.metaKey || e.ctrlKey,
                        pointerId: e.pointerId,
                        button: e.button,
                        isPen: e.pointerType === "pen",
                    }
            );
        }
        const Ny = N.createContext({});
        function W() {
            return N.useContext(Ny);
        }
        function JL() {
            const e = W();
            return y.useMemo(
                function () {
                    let r, o;
                    function i(f) {
                        if (!f.isKilled) {
                            if (f.button === 2) {
                                e.dispatch({
                                    type: "pointer",
                                    target: "canvas",
                                    name: "right_click",
                                    ...Wn(f),
                                });
                                return;
                            }
                            (f.button !== 0 && f.button !== 1 && f.button !== 5) ||
                            (eu(f.currentTarget, f),
                                e.dispatch({
                                    type: "pointer",
                                    target: "canvas",
                                    name: "pointer_down",
                                    ...Wn(f),
                                }),
                            e.getOpenMenus().length > 0 &&
                            (e.updateInstanceState({openMenus: []}),
                                document.body.click(),
                                e.getContainer().focus()));
                        }
                    }
                    function a(f) {
                        f.isKilled ||
                        (f.clientX === r && f.clientY === o) ||
                        ((r = f.clientX),
                            (o = f.clientY),
                            e.dispatch({
                                type: "pointer",
                                target: "canvas",
                                name: "pointer_move",
                                ...Wn(f),
                            }));
                    }
                    function s(f) {
                        f.isKilled ||
                        (f.button !== 0 &&
                            f.button !== 1 &&
                            f.button !== 2 &&
                            f.button !== 5) ||
                        ((r = f.clientX),
                            (o = f.clientY),
                            tu(f.currentTarget, f),
                            e.dispatch({
                                type: "pointer",
                                target: "canvas",
                                name: "pointer_up",
                                ...Wn(f),
                            }));
                    }
                    function l(f) {
                        if (
                            f.isKilled ||
                            (e.getInstanceState().isPenMode &&
                                f.pointerType !== "pen")
                        )
                            return;
                        const g =
                            f.pointerType === "mouse" || f.pointerType === "pen";
                        e.updateInstanceState({isHoveringCanvas: g ? !0 : null});
                    }
                    function c(f) {
                        if (
                            f.isKilled ||
                            (e.getInstanceState().isPenMode &&
                                f.pointerType !== "pen")
                        )
                            return;
                        const g =
                            f.pointerType === "mouse" || f.pointerType === "pen";
                        e.updateInstanceState({isHoveringCanvas: g ? !1 : null});
                    }
                    function d(f) {
                        (f.isKilled = !0), document.body.click(), $e(f);
                    }
                    function u(f) {
                        (f.isKilled = !0),
                        f.target.tagName !== "A" &&
                        f.target.tagName !== "TEXTAREA" &&
                        $e(f);
                    }
                    function h(f) {
                        $e(f);
                    }
                    async function p(f) {
                        var b, x;
                        if (
                            ($e(f),
                                !(
                                    (x =
                                        (b = f.dataTransfer) == null
                                            ? void 0
                                            : b.files) != null && x.length
                                ))
                        )
                            return;
                        const g = Array.from(f.dataTransfer.files);
                        await e.putExternalContent({
                            type: "files",
                            files: g,
                            point: e.screenToPage({x: f.clientX, y: f.clientY}),
                            ignoreParent: !1,
                        });
                    }
                    function m(f) {
                        zt(f);
                    }
                    return {
                        onPointerDown: i,
                        onPointerMove: a,
                        onPointerUp: s,
                        onPointerEnter: l,
                        onPointerLeave: c,
                        onDragOver: h,
                        onDrop: p,
                        onTouchStart: d,
                        onTouchEnd: u,
                        onClick: m,
                    };
                },
                [e]
            );
        }
        function ej() {
            const e = W();
            y.useEffect(() => {
                if (
                    e.environment.isFirefox &&
                    !e.environment.isAndroid &&
                    !e.environment.isIos
                ) {
                    e.updateInstanceState({isCoarsePointer: !1});
                    return;
                }
                if (window.matchMedia) {
                    const t = window.matchMedia("(pointer: coarse)"),
                        n = () => {
                            e.updateInstanceState({isCoarsePointer: !!t.matches});
                        };
                    if ((n(), t))
                        return (
                            t.addEventListener("change", n),
                                () => t.removeEventListener("change", n)
                        );
                }
            }, [e]);
        }
        const jC = y.createContext(null);
        function tj({container: e, children: t}) {
            return v.jsx(jC.Provider, {value: e, children: t});
        }
        function dn() {
            return aD(y.useContext(jC), "useContainer used outside of <Tldraw />");
        }
        function nj() {
            const e = W(),
                t = dn(),
                n = X("isFocused", () => e.getInstanceState().isFocused, [e]);
            y.useEffect(() => {
                if (typeof matchMedia === void 0) return;
                let r = null;
                const o = () => {
                    r != null && r();
                    const i = `(resolution: ${window.devicePixelRatio}dppx)`,
                        a = matchMedia(i),
                        s = (l) => {
                            l.type === "change" && o();
                        };
                    a.addEventListener
                        ? a.addEventListener("change", o)
                        : a.addListener && a.addListener(s),
                        (r = () => {
                            a.removeEventListener
                                ? a.removeEventListener("change", o)
                                : a.removeListener && a.removeListener(s);
                        }),
                        e.updateInstanceState({
                            devicePixelRatio: window.devicePixelRatio,
                        });
                };
                return (
                    o(),
                        () => {
                            r == null || r();
                        }
                );
            }, [e]),
                y.useEffect(() => {
                    if (!n) return;
                    const r = (s) => {
                            if (
                                (s.altKey &&
                                (e.isIn("zoom") ||
                                    !e.getPath().endsWith(".idle")) &&
                                !nu() &&
                                $e(s),
                                    s.isKilled)
                            )
                                return;
                            switch (((s.isKilled = !0), s.key)) {
                                case "=":
                                case "-":
                                case "0": {
                                    if (s.metaKey || s.ctrlKey) {
                                        $e(s);
                                        return;
                                    }
                                    break;
                                }
                                case "Tab": {
                                    if (nu() || e.getIsMenuOpen()) return;
                                    break;
                                }
                                case ",": {
                                    if (
                                        !nu() &&
                                        ($e(s), !e.inputs.keys.has("Comma"))
                                    ) {
                                        const {
                                            x: c,
                                            y: d,
                                            z: u,
                                        } = e.inputs.currentScreenPoint;
                                        e.inputs.keys.add("Comma");
                                        const h = {
                                            type: "pointer",
                                            name: "pointer_down",
                                            point: {x: c, y: d, z: u},
                                            shiftKey: s.shiftKey,
                                            altKey: s.altKey,
                                            ctrlKey: s.metaKey || s.ctrlKey,
                                            pointerId: 0,
                                            button: 0,
                                            isPen: e.getInstanceState().isPenMode,
                                            target: "canvas",
                                        };
                                        e.dispatch(h);
                                        return;
                                    }
                                    break;
                                }
                                case "Escape": {
                                    if (
                                        ((e.getEditingShape() ||
                                            e.getSelectedShapeIds().length > 0) &&
                                        s.preventDefault(),
                                        e.getOpenMenus().length > 0)
                                    )
                                        return;
                                    e.inputs.keys.has("Escape") ||
                                    (e.inputs.keys.add("Escape"),
                                        e.cancel(),
                                        t.focus());
                                    return;
                                }
                                default:
                                    if (nu() || e.getIsMenuOpen()) return;
                            }
                            const l = {
                                type: "keyboard",
                                name: s.repeat ? "key_repeat" : "key_down",
                                key: s.key,
                                code: s.code,
                                shiftKey: s.shiftKey,
                                altKey: s.altKey,
                                ctrlKey: s.metaKey || s.ctrlKey,
                            };
                            e.dispatch(l);
                        },
                        o = (s) => {
                            var c;
                            if (
                                s.isKilled ||
                                ((s.isKilled = !0), nu() || e.getIsMenuOpen())
                            )
                                return;
                            if (
                                s.key === "," &&
                                ((c = document.activeElement) != null &&
                                c.ELEMENT_NODE &&
                                $e(s),
                                    e.inputs.keys.has(s.code))
                            ) {
                                const {
                                    x: d,
                                    y: u,
                                    z: h,
                                } = e.inputs.currentScreenPoint;
                                e.inputs.keys.delete(s.code);
                                const p = {
                                    type: "pointer",
                                    name: "pointer_up",
                                    point: {x: d, y: u, z: h},
                                    shiftKey: s.shiftKey,
                                    altKey: s.altKey,
                                    ctrlKey: s.metaKey || s.ctrlKey,
                                    pointerId: 0,
                                    button: 0,
                                    isPen: e.getInstanceState().isPenMode,
                                    target: "canvas",
                                };
                                e.dispatch(p);
                                return;
                            }
                            const l = {
                                type: "keyboard",
                                name: "key_up",
                                key: s.key,
                                code: s.code,
                                shiftKey: s.shiftKey,
                                altKey: s.altKey,
                                ctrlKey: s.metaKey || s.ctrlKey,
                            };
                            e.dispatch(l);
                        };
                    function i(s) {
                        var l, c;
                        if (t.contains(s.target)) {
                            const d = s.touches[0].pageX,
                                u = s.touches[0].radiusX || 0;
                            (d - u < 10 ||
                                d + u > e.getViewportScreenBounds().width - 10) &&
                            (((l = s.target) == null ? void 0 : l.tagName) ===
                            "BUTTON" &&
                            ((c = s.target) == null || c.click()),
                                $e(s));
                        }
                    }
                    const a = (s) => {
                        t.contains(s.target) && (s.ctrlKey || s.metaKey) && $e(s);
                    };
                    return (
                        t.addEventListener("touchstart", i, {passive: !1}),
                            t.addEventListener("wheel", a, {passive: !1}),
                            document.addEventListener("gesturestart", $e),
                            document.addEventListener("gesturechange", $e),
                            document.addEventListener("gestureend", $e),
                            t.addEventListener("keydown", r),
                            t.addEventListener("keyup", o),
                            () => {
                                t.removeEventListener("touchstart", i),
                                    t.removeEventListener("wheel", a),
                                    document.removeEventListener("gesturestart", $e),
                                    document.removeEventListener("gesturechange", $e),
                                    document.removeEventListener("gestureend", $e),
                                    t.removeEventListener("keydown", r),
                                    t.removeEventListener("keyup", o);
                            }
                    );
                }, [e, t, n]);
        }
        const rj = ["input", "select", "button", "textarea"];
        function nu() {
            const {activeElement: e} = document;
            return !!(
                e &&
                (e.getAttribute("contenteditable") ||
                    rj.indexOf(e.tagName.toLowerCase()) > -1)
            );
        }
        const oj = {error: null};
        class NC extends y.Component {
            constructor() {
                super(...arguments);
                w(this, "state", oj);
            }
            static getDerivedStateFromError(n) {
                return {error: n};
            }
            componentDidCatch(n) {
                var r, o;
                (o = (r = this.props).onError) == null || o.call(r, n);
            }
            render() {
                const {error: n} = this.state;
                if (n !== null) {
                    const {fallback: r} = this.props;
                    return v.jsx(r, {error: n});
                }
                return this.props.children;
            }
        }
        function ru({children: e, fallback: t, ...n}) {
            return t === null
                ? v.jsx(v.Fragment, {children: e})
                : v.jsx(NC, {fallback: t, ...n, children: e});
        }
        class ij {
            constructor(t) {
                this.shape = t;
            }
            equals(t) {
                var n, r, o, i, a, s;
                return (
                    ((n = this.shape) == null ? void 0 : n.isLocked) ===
                    ((r = t == null ? void 0 : t.shape) == null
                        ? void 0
                        : r.isLocked) &&
                    ((o = this.shape) == null ? void 0 : o.props) ===
                    ((i = t == null ? void 0 : t.shape) == null
                        ? void 0
                        : i.props) &&
                    ((a = this.shape) == null ? void 0 : a.meta) ===
                    ((s = t == null ? void 0 : t.shape) == null
                        ? void 0
                        : s.meta)
                );
            }
        }
        const aj = ({shape: e, util: t}) =>
                rf("Indicator:" + e.type, () => t.indicator(e)),
            sj = ({editor: e, id: t}) => {
                const n = X("shape", () => new ij(e.store.get(t)), [e, t]),
                    {ShapeIndicatorErrorFallback: r} = Rt();
                return !n.shape || n.shape.isLocked
                    ? null
                    : v.jsx(ru, {
                        fallback: r,
                        onError: (o) =>
                            e.annotateError(o, {
                                origin: "react.shapeIndicator",
                                willCrashApp: !1,
                            }),
                        children: v.jsx(
                            aj,
                            {shape: n.shape, util: e.getShapeUtil(n.shape)},
                            n.shape.id
                        ),
                    });
            },
            lj = ({id: e, className: t, color: n, opacity: r}) => {
                const o = W(),
                    i = X(
                        "transform",
                        () => {
                            const a = o.getShapePageTransform(e);
                            return a ? a.toCssString() : "";
                        },
                        [o, e]
                    );
                return v.jsx("svg", {
                    className: me("tl-overlays__item", t),
                    children: v.jsx("g", {
                        className: "tl-shape-indicator",
                        transform: i,
                        stroke: n ?? "var(--color-selected)",
                        opacity: r,
                        children: v.jsx(sj, {editor: o, id: e}),
                    }),
                });
            },
            ou = y.memo(lj);
        function cj() {
            return v.jsx("div", {className: "tl-background"});
        }
        function Ml(e, t, n, r, o, i) {
            y.useLayoutEffect(() => {
                const a = e.current;
                if (!a || t === void 0) return;
                let s = `translate(${t}px, ${n}px)`;
                r !== void 0 && (s += ` scale(${r})`),
                o !== void 0 && (s += ` rotate(${o}rad)`),
                i && (s += ` translate(${i.x}px, ${i.y}px)`),
                    (a.style.transform = s);
            });
        }
        const un = {
            linear: (e) => e,
            easeInQuad: (e) => e * e,
            easeOutQuad: (e) => e * (2 - e),
            easeInOutQuad: (e) => (e < 0.5 ? 2 * e * e : -1 + (4 - 2 * e) * e),
            easeInCubic: (e) => e * e * e,
            easeOutCubic: (e) => --e * e * e + 1,
            easeInOutCubic: (e) =>
                e < 0.5 ? 4 * e * e * e : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1,
            easeInQuart: (e) => e * e * e * e,
            easeOutQuart: (e) => 1 - --e * e * e * e,
            easeInOutQuart: (e) =>
                e < 0.5 ? 8 * e * e * e * e : 1 - 8 * --e * e * e * e,
            easeInQuint: (e) => e * e * e * e * e,
            easeOutQuint: (e) => 1 + --e * e * e * e * e,
            easeInOutQuint: (e) =>
                e < 0.5 ? 16 * e * e * e * e * e : 1 + 16 * --e * e * e * e * e,
            easeInSine: (e) => 1 - Math.cos((e * Math.PI) / 2),
            easeOutSine: (e) => Math.sin((e * Math.PI) / 2),
            easeInOutSine: (e) => -(Math.cos(Math.PI * e) - 1) / 2,
            easeInExpo: (e) => (e <= 0 ? 0 : Math.pow(2, 10 * e - 10)),
            easeOutExpo: (e) => (e >= 1 ? 1 : 1 - Math.pow(2, -10 * e)),
            easeInOutExpo: (e) =>
                e <= 0
                    ? 0
                    : e >= 1
                        ? 1
                        : e < 0.5
                            ? Math.pow(2, 20 * e - 10) / 2
                            : (2 - Math.pow(2, -20 * e + 10)) / 2,
        };
        class E {
            constructor(t = 0, n = 0, r = 1) {
                (this.x = t), (this.y = n), (this.z = r);
            }
            get pressure() {
                return this.z;
            }
            set(t = this.x, n = this.y, r = this.z) {
                return (this.x = t), (this.y = n), (this.z = r), this;
            }
            setTo({x: t = 0, y: n = 0, z: r = 1}) {
                return (this.x = t), (this.y = n), (this.z = r), this;
            }
            rot(t) {
                if (t === 0) return this;
                const {x: n, y: r} = this,
                    o = Math.sin(t),
                    i = Math.cos(t);
                return (this.x = n * i - r * o), (this.y = n * o + r * i), this;
            }
            rotWith(t, n) {
                if (n === 0) return this;
                const r = this.x - t.x,
                    o = this.y - t.y,
                    i = Math.sin(n),
                    a = Math.cos(n);
                return (
                    (this.x = t.x + (r * a - o * i)),
                        (this.y = t.y + (r * i + o * a)),
                        this
                );
            }
            clone() {
                const {x: t, y: n, z: r} = this;
                return new E(t, n, r);
            }
            sub(t) {
                return (this.x -= t.x), (this.y -= t.y), this;
            }
            subXY(t, n) {
                return (this.x -= t), (this.y -= n), this;
            }
            subScalar(t) {
                return (this.x -= t), (this.y -= t), this;
            }
            add(t) {
                return (this.x += t.x), (this.y += t.y), this;
            }
            addXY(t, n) {
                return (this.x += t), (this.y += n), this;
            }
            addScalar(t) {
                return (this.x += t), (this.y += t), this;
            }
            clamp(t, n) {
                return (
                    (this.x = Math.max(this.x, t)),
                        (this.y = Math.max(this.y, t)),
                    n !== void 0 &&
                    ((this.x = Math.min(this.x, n)),
                        (this.y = Math.min(this.y, n))),
                        this
                );
            }
            div(t) {
                return (this.x /= t), (this.y /= t), this;
            }
            divV(t) {
                return (this.x /= t.x), (this.y /= t.y), this;
            }
            mul(t) {
                return (this.x *= t), (this.y *= t), this;
            }
            mulV(t) {
                return (this.x *= t.x), (this.y *= t.y), this;
            }
            abs() {
                return (
                    (this.x = Math.abs(this.x)), (this.y = Math.abs(this.y)), this
                );
            }
            nudge(t, n) {
                const r = E.Tan(t, this);
                return this.add(r.mul(n));
            }
            neg() {
                return (this.x *= -1), (this.y *= -1), this;
            }
            cross(t) {
                return (
                    (this.x = this.y * t.z - this.z * t.y),
                        (this.y = this.z * t.x - this.x * t.z),
                        this
                );
            }
            dpr(t) {
                return E.Dpr(this, t);
            }
            cpr(t) {
                return E.Cpr(this, t);
            }
            len2() {
                return E.Len2(this);
            }
            len() {
                return E.Len(this);
            }
            pry(t) {
                return E.Pry(this, t);
            }
            per() {
                const {x: t, y: n} = this;
                return (this.x = n), (this.y = -t), this;
            }
            uni() {
                return E.Uni(this);
            }
            tan(t) {
                return E.Tan(this, t);
            }
            dist(t) {
                return E.Dist(this, t);
            }
            distanceToLineSegment(t, n) {
                return E.DistanceToLineSegment(t, n, this);
            }
            slope(t) {
                return E.Slope(this, t);
            }
            snapToGrid(t) {
                return (
                    (this.x = Math.round(this.x / t) * t),
                        (this.y = Math.round(this.y / t) * t),
                        this
                );
            }
            angle(t) {
                return E.Angle(this, t);
            }
            toAngle() {
                return E.ToAngle(this);
            }
            lrp(t, n) {
                return (
                    (this.x = this.x + (t.x - this.x) * n),
                        (this.y = this.y + (t.y - this.y) * n),
                        this
                );
            }
            equals(t) {
                return E.Equals(this, t);
            }
            equalsXY(t, n) {
                return E.EqualsXY(this, t, n);
            }
            norm() {
                const t = this.len();
                return (
                    (this.x = t === 0 ? 0 : this.x / t),
                        (this.y = t === 0 ? 0 : this.y / t),
                        this
                );
            }
            toFixed() {
                return E.ToFixed(this);
            }
            toString() {
                return E.ToString(E.ToFixed(this));
            }
            toJson() {
                return E.ToJson(this);
            }
            toArray() {
                return E.ToArray(this);
            }
            static Add(t, n) {
                return new E(t.x + n.x, t.y + n.y);
            }
            static AddXY(t, n, r) {
                return new E(t.x + n, t.y + r);
            }
            static Sub(t, n) {
                return new E(t.x - n.x, t.y - n.y);
            }
            static SubXY(t, n, r) {
                return new E(t.x - n, t.y - r);
            }
            static AddScalar(t, n) {
                return new E(t.x + n, t.y + n);
            }
            static SubScalar(t, n) {
                return new E(t.x - n, t.y - n);
            }
            static Div(t, n) {
                return new E(t.x / n, t.y / n);
            }
            static Mul(t, n) {
                return new E(t.x * n, t.y * n);
            }
            static DivV(t, n) {
                return new E(t.x / n.x, t.y / n.y);
            }
            static MulV(t, n) {
                return new E(t.x * n.x, t.y * n.y);
            }
            static Neg(t) {
                return new E(-t.x, -t.y);
            }
            static Per(t) {
                return new E(t.y, -t.x);
            }
            static Dist2(t, n) {
                return E.Sub(t, n).len2();
            }
            static Abs(t) {
                return new E(Math.abs(t.x), Math.abs(t.y));
            }
            static Dist(t, n) {
                return Math.hypot(t.y - n.y, t.x - n.x);
            }
            static Dpr(t, n) {
                return t.x * n.x + t.y * n.y;
            }
            static Cross(t, n) {
                return new E(t.y * n.z - t.z * n.y, t.z * n.x - t.x * n.z);
            }
            static Cpr(t, n) {
                return t.x * n.y - n.x * t.y;
            }
            static Len2(t) {
                return t.x * t.x + t.y * t.y;
            }
            static Len(t) {
                return Math.hypot(t.x, t.y);
            }
            static Pry(t, n) {
                return E.Dpr(t, n) / E.Len(n);
            }
            static Uni(t) {
                return E.Div(t, E.Len(t));
            }
            static Tan(t, n) {
                return E.Uni(E.Sub(t, n));
            }
            static Min(t, n) {
                return new E(Math.min(t.x, n.x), Math.min(t.y, n.y));
            }
            static Max(t, n) {
                return new E(Math.max(t.x, n.x), Math.max(t.y, n.y));
            }
            static From({x: t, y: n, z: r = 1}) {
                return new E(t, n, r);
            }
            static FromArray(t) {
                return new E(t[0], t[1]);
            }
            static Rot(t, n = 0) {
                const r = Math.sin(n),
                    o = Math.cos(n);
                return new E(t.x * o - t.y * r, t.x * r + t.y * o);
            }
            static RotWith(t, n, r) {
                const o = t.x - n.x,
                    i = t.y - n.y,
                    a = Math.sin(r),
                    s = Math.cos(r);
                return new E(n.x + (o * s - i * a), n.y + (o * a + i * s));
            }
            static NearestPointOnLineThroughPoint(t, n, r) {
                return E.Mul(n, E.Sub(r, t).pry(n)).add(t);
            }
            static NearestPointOnLineSegment(t, n, r, o = !0) {
                const i = E.Tan(n, t),
                    a = E.Add(t, E.Mul(i, E.Sub(r, t).pry(i)));
                if (o) {
                    if (a.x < Math.min(t.x, n.x)) return E.Cast(t.x < n.x ? t : n);
                    if (a.x > Math.max(t.x, n.x)) return E.Cast(t.x > n.x ? t : n);
                    if (a.y < Math.min(t.y, n.y)) return E.Cast(t.y < n.y ? t : n);
                    if (a.y > Math.max(t.y, n.y)) return E.Cast(t.y > n.y ? t : n);
                }
                return a;
            }
            static DistanceToLineThroughPoint(t, n, r) {
                return E.Dist(r, E.NearestPointOnLineThroughPoint(t, n, r));
            }
            static DistanceToLineSegment(t, n, r, o = !0) {
                return E.Dist(r, E.NearestPointOnLineSegment(t, n, r, o));
            }
            static Snap(t, n = 1) {
                return new E(Math.round(t.x / n) * n, Math.round(t.y / n) * n);
            }
            static Cast(t) {
                return t instanceof E ? t : E.From(t);
            }
            static Slope(t, n) {
                return t.x === n.y ? NaN : (t.y - n.y) / (t.x - n.x);
            }
            static Angle(t, n) {
                return Math.atan2(n.y - t.y, n.x - t.x);
            }
            static Lrp(t, n, r) {
                return E.Sub(n, t).mul(r).add(t);
            }
            static Med(t, n) {
                return new E((t.x + n.x) / 2, (t.y + n.y) / 2);
            }
            static Equals(t, n) {
                return Math.abs(t.x - n.x) < 1e-4 && Math.abs(t.y - n.y) < 1e-4;
            }
            static EqualsXY(t, n, r) {
                return t.x === n && t.y === r;
            }
            static Clockwise(t, n, r) {
                return (r.x - t.x) * (n.y - t.y) - (n.x - t.x) * (r.y - t.y) < 0;
            }
            static Rescale(t, n) {
                const r = E.Len(t);
                return new E((n * t.x) / r, (n * t.y) / r);
            }
            static ScaleWithOrigin(t, n, r) {
                return E.Sub(t, r).mul(n).add(r);
            }
            static ToFixed(t, n = 2) {
                return new E(+t.x.toFixed(n), +t.y.toFixed(n), +t.z.toFixed(n));
            }
            static Nudge(t, n, r) {
                return E.Add(t, E.Tan(n, t).mul(r));
            }
            static ToString(t) {
                return `${t.x}, ${t.y}`;
            }
            static ToAngle(t) {
                let n = Math.atan2(t.y, t.x);
                return n < 0 && (n += Math.PI * 2), n;
            }
            static FromAngle(t, n = 1) {
                return new E(Math.cos(t) * n, Math.sin(t) * n);
            }
            static ToArray(t) {
                return [t.x, t.y, t.z];
            }
            static ToJson(t) {
                const {x: n, y: r, z: o} = t;
                return {x: n, y: r, z: o};
            }
            static Average(t) {
                const n = t.length,
                    r = new E(0, 0);
                for (let o = 0; o < n; o++) r.add(t[o]);
                return r.div(n);
            }
            static Clamp(t, n, r) {
                return r === void 0
                    ? new E(Math.min(Math.max(t.x, n)), Math.min(Math.max(t.y, n)))
                    : new E(
                        Math.min(Math.max(t.x, n), r),
                        Math.min(Math.max(t.y, n), r)
                    );
            }
            static PointsBetween(t, n, r = 6) {
                const o = [];
                for (let i = 0; i < r; i++) {
                    const a = un.easeInQuad(i / (r - 1)),
                        s = E.Lrp(t, n, a);
                    (s.z = Math.min(1, 0.5 + Math.abs(0.5 - dj(a)) * 0.65)),
                        o.push(s);
                }
                return o;
            }
            static SnapToGrid(t, n = 8) {
                return new E(Math.round(t.x / n) * n, Math.round(t.y / n) * n);
            }
        }
        const dj = (e) => (e < 0.5 ? 2 * e * e : -1 + (4 - 2 * e) * e);
        function Wt(e) {
            return `${M(e.x)},${M(e.y)} `;
        }
        function Yn(e, t) {
            return `${M((e.x + t.x) / 2)},${M((e.y + t.y) / 2)} `;
        }
        const Oe = Math.PI,
            qe = Oe / 2,
            Fe = Oe * 2,
            uj = Math.sin;
        function So(e, t, n) {
            return Math.max(t, typeof n < "u" ? Math.min(e, n) : e);
        }
        function If(e, t = 1e10) {
            return e ? Math.round(e * t) / t : 0;
        }
        function iu(e, t, n = 1e-6) {
            return Math.abs(e - t) <= n;
        }
        function au(e, t) {
            const n = Math.pow(e - t, 2) / Math.pow(e + t, 2);
            return Oe * (e + t) * (1 + (3 * n) / (10 + Math.sqrt(4 - 3 * n)));
        }
        function Yr(e) {
            return (e = e % Fe), e < 0 ? (e = e + Fe) : e === 0 && (e = 0), e;
        }
        function Tf(e, t) {
            return (e = Yr(e)), (t = Yr(t)), e > t && (t += Fe), t - e;
        }
        function hj(e, t) {
            return Fe - Tf(e, t);
        }
        function su(e, t) {
            const n = (t - e) % Fe;
            return ((2 * n) % Fe) - n;
        }
        function Fy(e) {
            return (Fe + e) % Fe;
        }
        function $f(e, t) {
            const n = Fe / t;
            let r = (Math.floor((Fy(e) + n / 2) / n) * n) % Fe;
            return r < Oe && (r += Fe), r > Oe && (r -= Fe), r;
        }
        function FC(e, t) {
            return e === t || iu((e % (Math.PI / 2)) - (t % (Math.PI / 2)), 0);
        }
        function pj(e) {
            return (e * Oe) / 180;
        }
        function fj(e) {
            return (e * 180) / Oe;
        }
        function BC(e, t, n, r) {
            return new E(e + n * Math.cos(r), t + n * Math.sin(r));
        }
        function By(e, t, n) {
            const r = e / 2,
                o = t / 2,
                i = [];
            let a = 1 / 0,
                s = -1 / 0,
                l = 1 / 0,
                c = -1 / 0;
            for (let m = 0; m < n; m++) {
                const f = Fe / n,
                    g = -qe + m * f,
                    b = r + r * Math.cos(g),
                    x = o + o * Math.sin(g);
                b < a && (a = b),
                x < l && (l = x),
                b > s && (s = b),
                x > c && (c = x),
                    i.push(new E(b, x));
            }
            const d = s - a,
                u = c - l,
                h = e - d,
                p = t - u;
            if (h !== 0 || p !== 0)
                for (let m = 0; m < i.length; m++) {
                    const f = i[m];
                    (f.x = ((f.x - a) / d) * e), (f.y = ((f.y - l) / u) * t);
                }
            return i;
        }
        function lu(e, t, n, r) {
            return e < r && n < t;
        }
        function Gr(e, t, n, r) {
            const o = Math.max(e, n),
                i = Math.min(t, r);
            return o <= i ? [o, i] : null;
        }
        function UC(e, t, n) {
            return (t.x - e.x) * (n.y - e.y) - (n.x - e.x) * (t.y - e.y);
        }
        function _o(e, t) {
            let n = 0,
                r,
                o;
            for (let i = 0; i < t.length; i++) {
                if (
                    ((r = t[i]),
                    (r.x === e.x && r.y === e.y) ||
                    ((o = t[(i + 1) % t.length]),
                    E.Dist(e, r) + E.Dist(e, o) === E.Dist(r, o)))
                )
                    return !0;
                r.y <= e.y
                    ? o.y > e.y && UC(r, o, e) > 0 && (n += 1)
                    : o.y <= e.y && UC(r, o, e) < 0 && (n -= 1);
            }
            return n !== 0;
        }
        function M(e) {
            return +e.toFixed(4);
        }
        function Af(e) {
            return +e.toFixed(2);
        }
        const HC = (e) => Math.abs(e) < Number.MAX_SAFE_INTEGER,
            Mf = ({brush: e, color: t, opacity: n, className: r}) => {
                const o = y.useRef(null);
                Ml(o, e.x, e.y);
                const i = M(Math.max(1, e.w)),
                    a = M(Math.max(1, e.h));
                return v.jsx("svg", {
                    className: "tl-overlays__item",
                    ref: o,
                    children: t
                        ? v.jsxs("g", {
                            className: "tl-brush",
                            opacity: n,
                            children: [
                                v.jsx("rect", {
                                    width: i,
                                    height: a,
                                    fill: t,
                                    opacity: 0.75,
                                }),
                                v.jsx("rect", {
                                    width: i,
                                    height: a,
                                    fill: "none",
                                    stroke: t,
                                    opacity: 0.1,
                                }),
                            ],
                        })
                        : v.jsx("rect", {
                            className: `tl-brush tl-brush__default ${r}`,
                            width: i,
                            height: a,
                        }),
                });
            },
            mj = ({
                      className: e,
                      zoom: t,
                      point: n,
                      color: r,
                      viewport: o,
                      opacity: i = 1,
                  }) => {
                const a = y.useRef(null);
                return (
                    Ml(
                        a,
                        So(n.x, o.minX + 5 / t, o.maxX - 5 / t),
                        So(n.y, o.minY + 5 / t, o.maxY - 5 / t),
                        1 / t,
                        E.Angle(o.center, n)
                    ),
                        v.jsxs("svg", {
                            ref: a,
                            className: me("tl-overlays__item", e),
                            children: [
                                v.jsx("use", {
                                    href: "#cursor_hint",
                                    color: r,
                                    strokeWidth: 3,
                                    stroke: "var(--color-background)",
                                }),
                                v.jsx("use", {
                                    href: "#cursor_hint",
                                    color: r,
                                    opacity: i,
                                }),
                            ],
                        })
                );
            },
            gj = ({
                      className: e,
                      zoom: t,
                      point: n,
                      color: r,
                      name: o,
                      chatMessage: i,
                  }) => {
                const a = y.useRef(null);
                return (
                    Ml(
                        a,
                        n == null ? void 0 : n.x,
                        n == null ? void 0 : n.y,
                        1 / t
                    ),
                        n
                            ? v.jsxs("div", {
                                ref: a,
                                className: me("tl-overlays__item", e),
                                children: [
                                    v.jsx("svg", {
                                        className: "tl-cursor",
                                        children: v.jsx("use", {
                                            href: "#cursor",
                                            color: r,
                                        }),
                                    }),
                                    i
                                        ? v.jsxs(v.Fragment, {
                                            children: [
                                                o &&
                                                v.jsx("div", {
                                                    className:
                                                        "tl-nametag-title",
                                                    style: {color: r},
                                                    children: o,
                                                }),
                                                v.jsx("div", {
                                                    className: "tl-nametag-chat",
                                                    style: {backgroundColor: r},
                                                    children: i,
                                                }),
                                            ],
                                        })
                                        : o &&
                                        v.jsx("div", {
                                            className: "tl-nametag",
                                            style: {backgroundColor: r},
                                            children: o,
                                        }),
                                ],
                            })
                            : null
                );
            },
            VC = y.memo(gj),
            Uy = {
                openWindow: (e, t) => window.open(e, t, "noopener noreferrer"),
                refreshPage: () => window.location.reload(),
                hardReset: async () => {
                    var e;
                    return await ((e = window.__tldraw__hardReset) == null
                        ? void 0
                        : e.call(window));
                },
            };
        function KC() {
            Uy.hardReset();
        }
        function vj() {
            Uy.refreshPage();
        }
        const bj = "https://github.com/tldraw/tldraw/issues/new";
        function yj() {}
        const WC = ({error: e, editor: t}) => {
                const n = y.useRef(null),
                    [r, o] = y.useState(!1),
                    [i, a] = y.useState(!1),
                    [s, l] = y.useState(!1),
                    c = e instanceof Error ? e.message : String(e),
                    d = e instanceof Error ? e.stack : null,
                    u = X(
                        "isDarkMode",
                        () => {
                            try {
                                if (t) return t.user.getIsDarkMode();
                            } catch {}
                            return null;
                        },
                        [t]
                    ),
                    [h, p] = y.useState(null);
                y.useLayoutEffect(() => {
                    var _;
                    u !== null && p(u);
                    let x = (_ = n.current) == null ? void 0 : _.parentElement,
                        S = !1;
                    for (; x; ) {
                        if (
                            x.classList.contains("tl-theme__dark") ||
                            x.classList.contains("tl-theme__light")
                        ) {
                            S = !0;
                            break;
                        }
                        x = x.parentElement;
                    }
                    if (S) {
                        p(null);
                        return;
                    }
                    p(window.matchMedia("(prefers-color-scheme: dark)").matches);
                }, [u]),
                    y.useEffect(() => {
                        if (i) {
                            const x = setTimeout(() => {
                                a(!1);
                            }, 2e3);
                            return () => clearTimeout(x);
                        }
                    }, [i]);
                const m = () => {
                        const x = document.createElement("textarea");
                        (x.value = d ?? c),
                            document.body.appendChild(x),
                            x.select(),
                            document.execCommand("copy"),
                            x.remove(),
                            a(!0);
                    },
                    f = () => {
                        vj();
                    },
                    g = async () => {
                        KC();
                    },
                    b = new URL(bj);
                return (
                    b.searchParams.set("title", c),
                        b.searchParams.set("labels", "bug"),
                        b.searchParams.set(
                            "body",
                            `Hey, I ran into an error while using tldraw:

\`\`\`js
${d ?? c}
\`\`\`

My browser: ${navigator.userAgent}`
                        ),
                        v.jsxs("div", {
                            ref: n,
                            className: me(
                                "tl-container tl-error-boundary",
                                h === null
                                    ? ""
                                    : h
                                        ? "tl-theme__dark"
                                        : "tl-theme__light"
                            ),
                            children: [
                                v.jsx("div", {className: "tl-error-boundary__overlay"}),
                                t &&
                                v.jsx(NC, {
                                    onError: yj,
                                    fallback: () => null,
                                    children: v.jsx(Ny.Provider, {
                                        value: t,
                                        children: v.jsx("div", {
                                            className:
                                                "tl-overlay tl-error-boundary__canvas",
                                            children: v.jsx(t1, {}),
                                        }),
                                    }),
                                }),
                                v.jsx("div", {
                                    className: me(
                                        "tl-modal",
                                        "tl-error-boundary__content",
                                        {
                                            "tl-error-boundary__content__expanded":
                                                r && !s,
                                        }
                                    ),
                                    children: s
                                        ? v.jsxs(v.Fragment, {
                                            children: [
                                                v.jsx("h2", {
                                                    children: "Are you sure?",
                                                }),
                                                v.jsx("p", {
                                                    children:
                                                        "Resetting your data will delete your drawing and cannot be undone.",
                                                }),
                                                v.jsxs("div", {
                                                    className:
                                                        "tl-error-boundary__content__actions",
                                                    children: [
                                                        v.jsx("button", {
                                                            onClick: () => l(!1),
                                                            children: "Cancel",
                                                        }),
                                                        v.jsx("button", {
                                                            className:
                                                                "tl-error-boundary__reset",
                                                            onClick: g,
                                                            children: "Reset data",
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        })
                                        : v.jsxs(v.Fragment, {
                                            children: [
                                                v.jsx("h2", {
                                                    children:
                                                        "Something's gone wrong.",
                                                }),
                                                v.jsxs("p", {
                                                    children: [
                                                        "Sorry, we encountered an error. Please refresh the page to continue. If you keep seeing this error, you can ",
                                                        v.jsx("a", {
                                                            href: b.toString(),
                                                            children:
                                                                "create a GitHub issue",
                                                        }),
                                                        " or",
                                                        " ",
                                                        v.jsx("a", {
                                                            href: "https://discord.gg/Cq6cPsTfNy",
                                                            children:
                                                                "ask for help on Discord",
                                                        }),
                                                        ".",
                                                    ],
                                                }),
                                                r &&
                                                v.jsxs("div", {
                                                    className:
                                                        "tl-error-boundary__content__error",
                                                    children: [
                                                        v.jsx("pre", {
                                                            children: v.jsx(
                                                                "code",
                                                                {children: d ?? c}
                                                            ),
                                                        }),
                                                        v.jsx("button", {
                                                            onClick: m,
                                                            children: i
                                                                ? "Copied!"
                                                                : "Copy",
                                                        }),
                                                    ],
                                                }),
                                                v.jsxs("div", {
                                                    className:
                                                        "tl-error-boundary__content__actions",
                                                    children: [
                                                        v.jsx("button", {
                                                            onClick: () => o(!r),
                                                            children: r
                                                                ? "Hide details"
                                                                : "Show details",
                                                        }),
                                                        v.jsxs("div", {
                                                            className:
                                                                "tl-error-boundary__content__actions__group",
                                                            children: [
                                                                v.jsx("button", {
                                                                    className:
                                                                        "tl-error-boundary__reset",
                                                                    onClick: () =>
                                                                        l(!0),
                                                                    children:
                                                                        "Reset data",
                                                                }),
                                                                v.jsx("button", {
                                                                    className:
                                                                        "tl-error-boundary__refresh",
                                                                    onClick: f,
                                                                    children:
                                                                        "Refresh Page",
                                                                }),
                                                            ],
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                }),
                            ],
                        })
                );
            },
            li = 2e3,
            zf = 40,
            ci = 320,
            zl = [0.1, 0.25, 0.5, 1, 2, 4, 8],
            cu = 0.1,
            ra = 8,
            wj = 0.5,
            xj = 0.1,
            Sj = 0.2,
            _j = 0.005,
            kj = 0.05,
            Cj = 450,
            Ej = 200,
            Hy = 6,
            du = 4,
            Pj = 32,
            Rf = {};
        for (let e = 1; e <= Math.ceil(ra); e++)
            (Rf[e + "_dark"] = `hash_pattern_zoom_${e}_dark`),
                (Rf[e + "_light"] = `hash_pattern_zoom_${e}_light`);
        const Ij = {duration: 0, easing: un.easeInOutCubic},
            Of = 0.09,
            YC = [
                {min: -1, mid: 0.15, step: 64},
                {min: 0.05, mid: 0.375, step: 16},
                {min: 0.15, mid: 1, step: 4},
                {min: 0.7, mid: 2.5, step: 1},
            ],
            Tj = 6e4,
            GC = 3e3,
            $j = 1200,
            XC = {CAMERA_MOVE: -10},
            Aj = 64,
            Mj = 620,
            Xr = 8,
            zj = 20,
            Rl = 32,
            Rj = ({x: e, y: t, z: n, size: r}) =>
                v.jsxs("svg", {
                    className: "tl-grid",
                    version: "1.1",
                    xmlns: "http://www.w3.org/2000/svg",
                    children: [
                        v.jsx("defs", {
                            children: YC.map(({min: o, mid: i, step: a}, s) => {
                                const l = a * r * n,
                                    c = 0.5 + e * n,
                                    d = 0.5 + t * n,
                                    u = c > 0 ? c % l : l + (c % l),
                                    h = d > 0 ? d % l : l + (d % l),
                                    p = n < i ? lf(n, [o, i], [0, 1]) : 1;
                                return v.jsx(
                                    "pattern",
                                    {
                                        id: `grid-${a}`,
                                        width: l,
                                        height: l,
                                        patternUnits: "userSpaceOnUse",
                                        children: v.jsx("circle", {
                                            className: "tl-grid-dot",
                                            cx: u,
                                            cy: h,
                                            r: 1,
                                            opacity: p,
                                        }),
                                    },
                                    `grid-pattern-${s}`
                                );
                            }),
                        }),
                        YC.map(({step: o}, i) =>
                            v.jsx(
                                "rect",
                                {
                                    width: "100%",
                                    height: "100%",
                                    fill: `url(#grid-${o})`,
                                },
                                `grid-rect-${i}`
                            )
                        ),
                    ],
                }),
            Oj = ({handle: e, isCoarse: t, className: n, zoom: r}) => {
                const o = (t ? 20 : 12) / r,
                    i = (e.type === "create" && t ? 3 : 4) / r;
                return v.jsxs("g", {
                    className: me(
                        "tl-handle",
                        {
                            "tl-handle__virtual": e.type === "virtual",
                            "tl-handle__create": e.type === "create",
                        },
                        n
                    ),
                    children: [
                        v.jsx("circle", {className: "tl-handle__bg", r: o}),
                        v.jsx("circle", {className: "tl-handle__fg", r: i}),
                    ],
                });
            },
            Dj = ({children: e}) =>
                v.jsx("svg", {
                    className: "tl-user-handles tl-overlays__item",
                    children: e,
                }),
            Lj = ({shapeId: e}) =>
                v.jsx(ou, {className: "tl-user-indicator__hovered", id: e});
        function uu(e, t = !0) {
            const n = e.length;
            if (n < 2) return "";
            let r = e[0],
                o = e[1];
            if (n === 2) return `M${Wt(r)}L${Wt(o)}`;
            let i = "";
            for (let a = 2, s = n - 1; a < s; a++)
                (r = e[a]), (o = e[a + 1]), (i += Yn(r, o));
            return t
                ? `M${Yn(e[0], e[1])}Q${Wt(e[1])}${Yn(e[1], e[2])}T${i}${Yn(
                    e[n - 1],
                    e[0]
                )}${Yn(e[0], e[1])}Z`
                : `M${Wt(e[0])}Q${Wt(e[1])}${Yn(e[1], e[2])}${
                    e.length > 3 ? "T" : ""
                }${i}L${Wt(e[n - 1])}`;
        }
        const qC = ({scribble: e, zoom: t, color: n, opacity: r, className: o}) =>
                e.points.length
                    ? v.jsx("svg", {
                        className: o && me("tl-overlays__item", o),
                        children: v.jsx("path", {
                            className: "tl-scribble",
                            d: uu(e.points, !1),
                            stroke: n ?? `var(--color-${e.color})`,
                            fill: "none",
                            strokeWidth: 8 / t,
                            opacity: r ?? e.opacity,
                        }),
                    })
                    : null,
            ZC = ({bounds: e, rotation: t}) => {
                const n = y.useRef(null);
                return (
                    Ml(n, e.x, e.y, 1, t),
                        y.useLayoutEffect(() => {
                            const r = n.current;
                            r &&
                            ((r.style.width = M(Math.max(1, e.width)) + "px"),
                                (r.style.height = M(Math.max(1, e.height)) + "px"));
                        }, [e.width, e.height]),
                        v.jsx("div", {
                            ref: n,
                            className: "tl-selection__bg",
                            draggable: !1,
                        })
                );
            },
            jj = ({bounds: e, rotation: t}) => {
                const n = W(),
                    r = y.useRef(null),
                    o = X("only selected shape", () => n.getOnlySelectedShape(), [
                        n,
                    ]),
                    i = o ? n.getShapeUtil(o).expandSelectionOutlinePx(o) : 0;
                return (
                    Ml(
                        r,
                        e == null ? void 0 : e.x,
                        e == null ? void 0 : e.y,
                        1,
                        t,
                        {x: -i, y: -i}
                    ),
                        (e = e.clone().expandBy(i).zeroFix()),
                        v.jsx("svg", {
                            ref: r,
                            className: "tl-overlays__item tl-selection__fg",
                            "data-testid": "selection-foreground",
                            children: v.jsx("rect", {
                                className: me("tl-selection__fg__outline"),
                                width: M(e.width),
                                height: M(e.height),
                            }),
                        })
                );
            },
            Nj = () => v.jsx("div", {className: "tl-shape-error-boundary"}),
            Fj = () =>
                v.jsx("circle", {
                    cx: 4,
                    cy: 4,
                    r: 8,
                    strokeWidth: "1",
                    stroke: "red",
                });
        function Bj({points: e, zoom: t}) {
            const n = 2.5 / t,
                r = e.reduce((h, p) => Math.min(h, p.x), 1 / 0),
                o = e.reduce((h, p) => Math.max(h, p.x), -1 / 0),
                i = e.reduce((h, p) => Math.min(h, p.y), 1 / 0),
                a = e.reduce((h, p) => Math.max(h, p.y), -1 / 0),
                s = e.some((h) => h.x === r && h.y === i);
            let l, c, d, u;
            return (
                s
                    ? ((l = r), (c = i), (d = o), (u = a))
                    : ((l = r), (c = a), (d = o), (u = i)),
                    v.jsxs("g", {
                        className: "tl-snap-line",
                        children: [
                            v.jsx("line", {x1: l, y1: c, x2: d, y2: u}),
                            e.map((h, p) =>
                                v.jsx(
                                    "g",
                                    {
                                        transform: `translate(${h.x},${h.y})`,
                                        children: v.jsx("path", {
                                            className: "tl-snap-point",
                                            d: `M ${-n},${-n} L ${n},${n} M ${-n},${n} L ${n},${-n}`,
                                        }),
                                    },
                                    p
                                )
                            ),
                        ],
                    })
            );
        }
        function Uj({gaps: e, direction: t, zoom: n}) {
            const r = 3.5 / n;
            let o = [-1 / 0, 1 / 0],
                i = null;
            const a = t === "horizontal";
            for (const l of e) {
                if (
                    ((i = Gr(
                        o[0],
                        o[1],
                        a ? l.startEdge[0].y : l.startEdge[0].x,
                        a ? l.startEdge[1].y : l.startEdge[1].x
                    )),
                        i)
                )
                    o = i;
                else continue;
                if (
                    ((i = Gr(
                        o[0],
                        o[1],
                        a ? l.endEdge[0].y : l.endEdge[0].x,
                        a ? l.endEdge[1].y : l.endEdge[1].x
                    )),
                        i)
                )
                    o = i;
                else continue;
            }
            if (o === null) return null;
            const s = (o[0] + o[1]) / 2;
            return v.jsx("g", {
                className: "tl-snap-line",
                children: e.map(({startEdge: l, endEdge: c}, d) =>
                    v.jsx(
                        y.Fragment,
                        {
                            children: a
                                ? v.jsxs(v.Fragment, {
                                    children: [
                                        v.jsx("line", {
                                            x1: l[0].x,
                                            y1: s - 2 * r,
                                            x2: l[1].x,
                                            y2: s + 2 * r,
                                        }),
                                        v.jsx("line", {
                                            x1: c[0].x,
                                            y1: s - 2 * r,
                                            x2: c[1].x,
                                            y2: s + 2 * r,
                                        }),
                                        v.jsx("line", {
                                            x1: l[0].x,
                                            y1: s,
                                            x2: c[0].x,
                                            y2: s,
                                        }),
                                        v.jsx("line", {
                                            x1: (l[0].x + c[0].x) / 2,
                                            y1: s - r,
                                            x2: (l[0].x + c[0].x) / 2,
                                            y2: s + r,
                                        }),
                                    ],
                                })
                                : v.jsxs(v.Fragment, {
                                    children: [
                                        v.jsx("line", {
                                            x1: s - 2 * r,
                                            y1: l[0].y,
                                            x2: s + 2 * r,
                                            y2: l[1].y,
                                        }),
                                        v.jsx("line", {
                                            x1: s - 2 * r,
                                            y1: c[0].y,
                                            x2: s + 2 * r,
                                            y2: c[1].y,
                                        }),
                                        v.jsx("line", {
                                            x1: s,
                                            y1: l[0].y,
                                            x2: s,
                                            y2: c[0].y,
                                        }),
                                        v.jsx("line", {
                                            x1: s - r,
                                            y1: (l[0].y + c[0].y) / 2,
                                            x2: s + r,
                                            y2: (l[0].y + c[0].y) / 2,
                                        }),
                                    ],
                                }),
                        },
                        d
                    )
                ),
            });
        }
        const Hj = ({className: e, line: t, zoom: n}) =>
                v.jsx("svg", {
                    className: me("tl-overlays__item", e),
                    children:
                        t.type === "points"
                            ? v.jsx(Bj, {...t, zoom: n})
                            : t.type === "gaps"
                                ? v.jsx(Uj, {...t, zoom: n})
                                : null,
                }),
            Vj = () =>
                v.jsx("svg", {
                    width: 16,
                    height: 16,
                    viewBox: "0 0 16 16",
                    children: v.jsxs("g", {
                        strokeWidth: 2,
                        fill: "none",
                        fillRule: "evenodd",
                        children: [
                            v.jsx("circle", {
                                strokeOpacity: 0.25,
                                cx: 8,
                                cy: 8,
                                r: 7,
                                stroke: "var(--color-text-1)",
                            }),
                            v.jsx("path", {
                                strokeLinecap: "round",
                                d: "M15 8c0-4.5-4.5-7-7-7",
                                stroke: "var(--color-text-1)",
                                children: v.jsx("animateTransform", {
                                    attributeName: "transform",
                                    type: "rotate",
                                    from: "0 8 8",
                                    to: "360 8 8",
                                    dur: "1s",
                                    repeatCount: "indefinite",
                                }),
                            }),
                        ],
                    }),
                }),
            Kj = () => null,
            QC = y.createContext({});
        function Wj({overrides: e, children: t}) {
            return v.jsx(QC.Provider, {
                value: y.useMemo(
                    () => ({
                        Background: cj,
                        SvgDefs: Kj,
                        Brush: Mf,
                        ZoomBrush: Mf,
                        ScreenshotBrush: Mf,
                        CollaboratorBrush: Mf,
                        Cursor: VC,
                        CollaboratorCursor: VC,
                        CollaboratorHint: mj,
                        CollaboratorShapeIndicator: ou,
                        Grid: Rj,
                        Scribble: qC,
                        SnapLine: Hj,
                        Handles: Dj,
                        Handle: Oj,
                        CollaboratorScribble: qC,
                        ErrorFallback: WC,
                        ShapeErrorFallback: Nj,
                        ShapeIndicatorErrorFallback: Fj,
                        Spinner: Vj,
                        SelectionBackground: ZC,
                        SelectionForeground: jj,
                        HoveredShapeIndicator: Lj,
                        OnTheCanvas: null,
                        InFrontOfTheCanvas: null,
                        ...e,
                    }),
                    [e]
                ),
                children: t,
            });
        }
        function Rt() {
            return y.useContext(QC);
        }
        const Yj = ["textarea", "input"];
        function Gj(e) {
            const t = W();
            y.useEffect(() => {
                const n = e.current;
                if (!n) return;
                const r = (o) => {
                    var i;
                    if (o instanceof PointerEvent && o.pointerType === "pen") {
                        o.isKilled = !0;
                        const {target: a} = o;
                        if (
                            Yj.includes(
                                (i = a.tagName) == null
                                    ? void 0
                                    : i.toLocaleLowerCase()
                            ) ||
                            t.isIn("select.editing_shape")
                        )
                            return;
                        $e(o);
                    }
                };
                return (
                    n.addEventListener("touchstart", r),
                        n.addEventListener("touchend", r),
                        () => {
                            n.removeEventListener("touchstart", r),
                                n.removeEventListener("touchend", r);
                        }
                );
            }, [t, e]);
        }
        function Xj(e, t, n) {
            return Math.max(t, Math.min(e, n));
        }
        const Yt = {
            toVector(e, t) {
                return e === void 0 && (e = t), Array.isArray(e) ? e : [e, e];
            },
            add(e, t) {
                return [e[0] + t[0], e[1] + t[1]];
            },
            sub(e, t) {
                return [e[0] - t[0], e[1] - t[1]];
            },
            addTo(e, t) {
                (e[0] += t[0]), (e[1] += t[1]);
            },
            subTo(e, t) {
                (e[0] -= t[0]), (e[1] -= t[1]);
            },
        };
        function JC(e, t, n) {
            return t === 0 || Math.abs(t) === 1 / 0
                ? Math.pow(e, n * 5)
                : (e * t * n) / (t + n * e);
        }
        function e4(e, t, n, r = 0.15) {
            return r === 0
                ? Xj(e, t, n)
                : e < t
                    ? -JC(t - e, n - t, r) + t
                    : e > n
                        ? +JC(e - n, n - t, r) + n
                        : e;
        }
        function qj(e, [t, n], [r, o]) {
            const [[i, a], [s, l]] = e;
            return [e4(t, i, a, r), e4(n, s, l, o)];
        }
        function Zj(e, t) {
            if (typeof e != "object" || e === null) return e;
            var n = e[Symbol.toPrimitive];
            if (n !== void 0) {
                var r = n.call(e, t || "default");
                if (typeof r != "object") return r;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        function Qj(e) {
            var t = Zj(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function hn(e, t, n) {
            return (
                (t = Qj(t)),
                    t in e
                        ? Object.defineProperty(e, t, {
                            value: n,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                        })
                        : (e[t] = n),
                    e
            );
        }
        function t4(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t &&
                (r = r.filter(function (o) {
                    return Object.getOwnPropertyDescriptor(e, o).enumerable;
                })),
                    n.push.apply(n, r);
            }
            return n;
        }
        function pt(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t] != null ? arguments[t] : {};
                t % 2
                    ? t4(Object(n), !0).forEach(function (r) {
                        hn(e, r, n[r]);
                    })
                    : Object.getOwnPropertyDescriptors
                        ? Object.defineProperties(
                            e,
                            Object.getOwnPropertyDescriptors(n)
                        )
                        : t4(Object(n)).forEach(function (r) {
                            Object.defineProperty(
                                e,
                                r,
                                Object.getOwnPropertyDescriptor(n, r)
                            );
                        });
            }
            return e;
        }
        const n4 = {
            pointer: {start: "down", change: "move", end: "up"},
            mouse: {start: "down", change: "move", end: "up"},
            touch: {start: "start", change: "move", end: "end"},
            gesture: {start: "start", change: "change", end: "end"},
        };
        function r4(e) {
            return e ? e[0].toUpperCase() + e.slice(1) : "";
        }
        const Jj = ["enter", "leave"];
        function eN(e = !1, t) {
            return e && !Jj.includes(t);
        }
        function tN(e, t = "", n = !1) {
            const r = n4[e],
                o = (r && r[t]) || t;
            return "on" + r4(e) + r4(o) + (eN(n, o) ? "Capture" : "");
        }
        const nN = ["gotpointercapture", "lostpointercapture"];
        function rN(e) {
            let t = e.substring(2).toLowerCase();
            const n = !!~t.indexOf("passive");
            n && (t = t.replace("passive", ""));
            const r = nN.includes(t) ? "capturecapture" : "capture",
                o = !!~t.indexOf(r);
            return (
                o && (t = t.replace("capture", "")),
                    {device: t, capture: o, passive: n}
            );
        }
        function oN(e, t = "") {
            const n = n4[e],
                r = (n && n[t]) || t;
            return e + r;
        }
        function o4(e) {
            return "touches" in e;
        }
        function iN(e) {
            return o4(e) ? "touch" : "pointerType" in e ? e.pointerType : "mouse";
        }
        function aN(e) {
            return Array.from(e.touches).filter((t) => {
                var n, r;
                return (
                    t.target === e.currentTarget ||
                    ((n = e.currentTarget) === null ||
                    n === void 0 ||
                    (r = n.contains) === null ||
                    r === void 0
                        ? void 0
                        : r.call(n, t.target))
                );
            });
        }
        function Vy(e, t) {
            try {
                const n = t.clientX - e.clientX,
                    r = t.clientY - e.clientY,
                    o = (t.clientX + e.clientX) / 2,
                    i = (t.clientY + e.clientY) / 2,
                    a = Math.hypot(n, r);
                return {
                    angle: -(Math.atan2(n, r) * 180) / Math.PI,
                    distance: a,
                    origin: [o, i],
                };
            } catch {}
            return null;
        }
        function sN(e) {
            return aN(e).map((t) => t.identifier);
        }
        function i4(e, t) {
            const [n, r] = Array.from(e.touches).filter((o) =>
                t.includes(o.identifier)
            );
            return Vy(n, r);
        }
        const a4 = 40,
            s4 = 800;
        function l4(e) {
            let {deltaX: t, deltaY: n, deltaMode: r} = e;
            return (
                r === 1
                    ? ((t *= a4), (n *= a4))
                    : r === 2 && ((t *= s4), (n *= s4)),
                    [t, n]
            );
        }
        function lN(e) {
            const t = {};
            if (("buttons" in e && (t.buttons = e.buttons), "shiftKey" in e)) {
                const {shiftKey: n, altKey: r, metaKey: o, ctrlKey: i} = e;
                Object.assign(t, {shiftKey: n, altKey: r, metaKey: o, ctrlKey: i});
            }
            return t;
        }
        function Df(e, ...t) {
            return typeof e == "function" ? e(...t) : e;
        }
        function cN() {}
        function dN(...e) {
            return e.length === 0
                ? cN
                : e.length === 1
                    ? e[0]
                    : function () {
                        let t;
                        for (const n of e) t = n.apply(this, arguments) || t;
                        return t;
                    };
        }
        function c4(e, t) {
            return Object.assign({}, t, e || {});
        }
        const uN = 32;
        class d4 {
            constructor(t, n, r) {
                (this.ctrl = t),
                    (this.args = n),
                    (this.key = r),
                this.state ||
                ((this.state = {}),
                    this.computeValues([0, 0]),
                    this.computeInitial(),
                this.init && this.init(),
                    this.reset());
            }
            get state() {
                return this.ctrl.state[this.key];
            }
            set state(t) {
                this.ctrl.state[this.key] = t;
            }
            get shared() {
                return this.ctrl.state.shared;
            }
            get eventStore() {
                return this.ctrl.gestureEventStores[this.key];
            }
            get timeoutStore() {
                return this.ctrl.gestureTimeoutStores[this.key];
            }
            get config() {
                return this.ctrl.config[this.key];
            }
            get sharedConfig() {
                return this.ctrl.config.shared;
            }
            get handler() {
                return this.ctrl.handlers[this.key];
            }
            reset() {
                const {state: t, shared: n, ingKey: r, args: o} = this;
                (n[r] = t._active = t.active = t._blocked = t._force = !1),
                    (t._step = [!1, !1]),
                    (t.intentional = !1),
                    (t._movement = [0, 0]),
                    (t._distance = [0, 0]),
                    (t._direction = [0, 0]),
                    (t._delta = [0, 0]),
                    (t._bounds = [
                        [-1 / 0, 1 / 0],
                        [-1 / 0, 1 / 0],
                    ]),
                    (t.args = o),
                    (t.axis = void 0),
                    (t.memo = void 0),
                    (t.elapsedTime = t.timeDelta = 0),
                    (t.direction = [0, 0]),
                    (t.distance = [0, 0]),
                    (t.overflow = [0, 0]),
                    (t._movementBound = [!1, !1]),
                    (t.velocity = [0, 0]),
                    (t.movement = [0, 0]),
                    (t.delta = [0, 0]),
                    (t.timeStamp = 0);
            }
            start(t) {
                const n = this.state,
                    r = this.config;
                n._active ||
                (this.reset(),
                    this.computeInitial(),
                    (n._active = !0),
                    (n.target = t.target),
                    (n.currentTarget = t.currentTarget),
                    (n.lastOffset = r.from ? Df(r.from, n) : n.offset),
                    (n.offset = n.lastOffset),
                    (n.startTime = n.timeStamp = t.timeStamp));
            }
            computeValues(t) {
                const n = this.state;
                (n._values = t), (n.values = this.config.transform(t));
            }
            computeInitial() {
                const t = this.state;
                (t._initial = t._values), (t.initial = t.values);
            }
            compute(t) {
                const {state: n, config: r, shared: o} = this;
                n.args = this.args;
                let i = 0;
                if (
                    (t &&
                    ((n.event = t),
                    r.preventDefault &&
                    t.cancelable &&
                    n.event.preventDefault(),
                        (n.type = t.type),
                        (o.touches =
                            this.ctrl.pointerIds.size || this.ctrl.touchIds.size),
                        (o.locked = !!document.pointerLockElement),
                        Object.assign(o, lN(t)),
                        (o.down = o.pressed = o.buttons % 2 === 1 || o.touches > 0),
                        (i = t.timeStamp - n.timeStamp),
                        (n.timeStamp = t.timeStamp),
                        (n.elapsedTime = n.timeStamp - n.startTime)),
                        n._active)
                ) {
                    const C = n._delta.map(Math.abs);
                    Yt.addTo(n._distance, C);
                }
                this.axisIntent && this.axisIntent(t);
                const [a, s] = n._movement,
                    [l, c] = r.threshold,
                    {_step: d, values: u} = n;
                if (
                    (r.hasCustomTransform
                        ? (d[0] === !1 && (d[0] = Math.abs(a) >= l && u[0]),
                        d[1] === !1 && (d[1] = Math.abs(s) >= c && u[1]))
                        : (d[0] === !1 &&
                        (d[0] = Math.abs(a) >= l && Math.sign(a) * l),
                        d[1] === !1 &&
                        (d[1] = Math.abs(s) >= c && Math.sign(s) * c)),
                        (n.intentional = d[0] !== !1 || d[1] !== !1),
                        !n.intentional)
                )
                    return;
                const h = [0, 0];
                if (r.hasCustomTransform) {
                    const [C, P] = u;
                    (h[0] = d[0] !== !1 ? C - d[0] : 0),
                        (h[1] = d[1] !== !1 ? P - d[1] : 0);
                } else
                    (h[0] = d[0] !== !1 ? a - d[0] : 0),
                        (h[1] = d[1] !== !1 ? s - d[1] : 0);
                this.restrictToAxis && !n._blocked && this.restrictToAxis(h);
                const p = n.offset,
                    m = (n._active && !n._blocked) || n.active;
                m &&
                ((n.first = n._active && !n.active),
                    (n.last = !n._active && n.active),
                    (n.active = o[this.ingKey] = n._active),
                t &&
                (n.first &&
                ("bounds" in r && (n._bounds = Df(r.bounds, n)),
                this.setup && this.setup()),
                    (n.movement = h),
                    this.computeOffset()));
                const [f, g] = n.offset,
                    [[b, x], [S, _]] = n._bounds;
                (n.overflow = [
                    f < b ? -1 : f > x ? 1 : 0,
                    g < S ? -1 : g > _ ? 1 : 0,
                ]),
                    (n._movementBound[0] = n.overflow[0]
                        ? n._movementBound[0] === !1
                            ? n._movement[0]
                            : n._movementBound[0]
                        : !1),
                    (n._movementBound[1] = n.overflow[1]
                        ? n._movementBound[1] === !1
                            ? n._movement[1]
                            : n._movementBound[1]
                        : !1);
                const k = n._active ? r.rubberband || [0, 0] : [0, 0];
                if (
                    ((n.offset = qj(n._bounds, n.offset, k)),
                        (n.delta = Yt.sub(n.offset, p)),
                        this.computeMovement(),
                    m && (!n.last || i > uN))
                ) {
                    n.delta = Yt.sub(n.offset, p);
                    const C = n.delta.map(Math.abs);
                    Yt.addTo(n.distance, C),
                        (n.direction = n.delta.map(Math.sign)),
                        (n._direction = n._delta.map(Math.sign)),
                    !n.first &&
                    i > 0 &&
                    ((n.velocity = [C[0] / i, C[1] / i]),
                        (n.timeDelta = i));
                }
            }
            emit() {
                const t = this.state,
                    n = this.shared,
                    r = this.config;
                if (
                    (t._active || this.clean(),
                    (t._blocked || !t.intentional) &&
                    !t._force &&
                    !r.triggerAllEvents)
                )
                    return;
                const o = this.handler(
                    pt(pt(pt({}, n), t), {}, {[this.aliasKey]: t.values})
                );
                o !== void 0 && (t.memo = o);
            }
            clean() {
                this.eventStore.clean(), this.timeoutStore.clean();
            }
        }
        function hN([e, t], n) {
            const r = Math.abs(e),
                o = Math.abs(t);
            if (r > o && r > n) return "x";
            if (o > r && o > n) return "y";
        }
        class pN extends d4 {
            constructor(...t) {
                super(...t), hn(this, "aliasKey", "xy");
            }
            reset() {
                super.reset(), (this.state.axis = void 0);
            }
            init() {
                (this.state.offset = [0, 0]), (this.state.lastOffset = [0, 0]);
            }
            computeOffset() {
                this.state.offset = Yt.add(
                    this.state.lastOffset,
                    this.state.movement
                );
            }
            computeMovement() {
                this.state.movement = Yt.sub(
                    this.state.offset,
                    this.state.lastOffset
                );
            }
            axisIntent(t) {
                const n = this.state,
                    r = this.config;
                if (!n.axis && t) {
                    const o =
                        typeof r.axisThreshold == "object"
                            ? r.axisThreshold[iN(t)]
                            : r.axisThreshold;
                    n.axis = hN(n._movement, o);
                }
                n._blocked =
                    ((r.lockDirection || !!r.axis) && !n.axis) ||
                    (!!r.axis && r.axis !== n.axis);
            }
            restrictToAxis(t) {
                if (this.config.axis || this.config.lockDirection)
                    switch (this.state.axis) {
                        case "x":
                            t[1] = 0;
                            break;
                        case "y":
                            t[0] = 0;
                            break;
                    }
            }
        }
        const fN = (e) => e,
            u4 = 0.15,
            h4 = {
                enabled(e = !0) {
                    return e;
                },
                eventOptions(e, t, n) {
                    return pt(pt({}, n.shared.eventOptions), e);
                },
                preventDefault(e = !1) {
                    return e;
                },
                triggerAllEvents(e = !1) {
                    return e;
                },
                rubberband(e = 0) {
                    switch (e) {
                        case !0:
                            return [u4, u4];
                        case !1:
                            return [0, 0];
                        default:
                            return Yt.toVector(e);
                    }
                },
                from(e) {
                    if (typeof e == "function") return e;
                    if (e != null) return Yt.toVector(e);
                },
                transform(e, t, n) {
                    const r = e || n.shared.transform;
                    return (this.hasCustomTransform = !!r), r || fN;
                },
                threshold(e) {
                    return Yt.toVector(e, 0);
                },
            },
            mN = 0,
            hu = pt(
                pt({}, h4),
                {},
                {
                    axis(e, t, {axis: n}) {
                        if (
                            ((this.lockDirection = n === "lock"),
                                !this.lockDirection)
                        )
                            return n;
                    },
                    axisThreshold(e = mN) {
                        return e;
                    },
                    bounds(e = {}) {
                        if (typeof e == "function") return (i) => hu.bounds(e(i));
                        if ("current" in e) return () => e.current;
                        if (
                            typeof HTMLElement == "function" &&
                            e instanceof HTMLElement
                        )
                            return e;
                        const {
                            left: t = -1 / 0,
                            right: n = 1 / 0,
                            top: r = -1 / 0,
                            bottom: o = 1 / 0,
                        } = e;
                        return [
                            [t, n],
                            [r, o],
                        ];
                    },
                }
            ),
            pu =
                typeof window < "u" &&
                window.document &&
                window.document.createElement;
        function p4() {
            return pu && "ontouchstart" in window;
        }
        function gN() {
            return p4() || (pu && window.navigator.maxTouchPoints > 1);
        }
        function vN() {
            return pu && "onpointerdown" in window;
        }
        function bN() {
            return pu && "exitPointerLock" in window.document;
        }
        function yN() {
            try {
                return "constructor" in GestureEvent;
            } catch {
                return !1;
            }
        }
        const Er = {
                isBrowser: pu,
                gesture: yN(),
                touch: p4(),
                touchscreen: gN(),
                pointer: vN(),
                pointerLock: bN(),
            },
            wN = 250,
            xN = 180,
            SN = 0.5,
            _N = 50,
            kN = 250,
            CN = 10,
            f4 = {mouse: 0, touch: 0, pen: 8};
        pt(
            pt({}, hu),
            {},
            {
                device(
                    e,
                    t,
                    {pointer: {touch: n = !1, lock: r = !1, mouse: o = !1} = {}}
                ) {
                    return (
                        (this.pointerLock = r && Er.pointerLock),
                            Er.touch && n
                                ? "touch"
                                : this.pointerLock
                                    ? "mouse"
                                    : Er.pointer && !o
                                        ? "pointer"
                                        : Er.touch
                                            ? "touch"
                                            : "mouse"
                    );
                },
                preventScrollAxis(e, t, {preventScroll: n}) {
                    if (
                        ((this.preventScrollDelay =
                            typeof n == "number"
                                ? n
                                : n || (n === void 0 && e)
                                    ? wN
                                    : void 0),
                            !(!Er.touchscreen || n === !1))
                    )
                        return e || (n !== void 0 ? "y" : void 0);
                },
                pointerCapture(
                    e,
                    t,
                    {pointer: {capture: n = !0, buttons: r = 1, keys: o = !0} = {}}
                ) {
                    return (
                        (this.pointerButtons = r),
                            (this.keys = o),
                        !this.pointerLock && this.device === "pointer" && n
                    );
                },
                threshold(
                    e,
                    t,
                    {filterTaps: n = !1, tapsThreshold: r = 3, axis: o = void 0}
                ) {
                    const i = Yt.toVector(e, n ? r : o ? 1 : 0);
                    return (this.filterTaps = n), (this.tapsThreshold = r), i;
                },
                swipe({velocity: e = SN, distance: t = _N, duration: n = kN} = {}) {
                    return {
                        velocity: this.transform(Yt.toVector(e)),
                        distance: this.transform(Yt.toVector(t)),
                        duration: n,
                    };
                },
                delay(e = 0) {
                    switch (e) {
                        case !0:
                            return xN;
                        case !1:
                            return 0;
                        default:
                            return e;
                    }
                },
                axisThreshold(e) {
                    return e ? pt(pt({}, f4), e) : f4;
                },
                keyboardDisplacement(e = CN) {
                    return e;
                },
            }
        );
        function m4(e) {
            const [t, n] = e.overflow,
                [r, o] = e._delta,
                [i, a] = e._direction;
            ((t < 0 && r > 0 && i < 0) || (t > 0 && r < 0 && i > 0)) &&
            (e._movement[0] = e._movementBound[0]),
            ((n < 0 && o > 0 && a < 0) || (n > 0 && o < 0 && a > 0)) &&
            (e._movement[1] = e._movementBound[1]);
        }
        const EN = 30,
            PN = 100;
        class IN extends d4 {
            constructor(...t) {
                super(...t),
                    hn(this, "ingKey", "pinching"),
                    hn(this, "aliasKey", "da");
            }
            init() {
                (this.state.offset = [1, 0]),
                    (this.state.lastOffset = [1, 0]),
                    (this.state._pointerEvents = new Map());
            }
            reset() {
                super.reset();
                const t = this.state;
                (t._touchIds = []),
                    (t.canceled = !1),
                    (t.cancel = this.cancel.bind(this)),
                    (t.turns = 0);
            }
            computeOffset() {
                const {type: t, movement: n, lastOffset: r} = this.state;
                t === "wheel"
                    ? (this.state.offset = Yt.add(n, r))
                    : (this.state.offset = [(1 + n[0]) * r[0], n[1] + r[1]]);
            }
            computeMovement() {
                const {offset: t, lastOffset: n} = this.state;
                this.state.movement = [t[0] / n[0], t[1] - n[1]];
            }
            axisIntent() {
                const t = this.state,
                    [n, r] = t._movement;
                if (!t.axis) {
                    const o = Math.abs(n) * EN - Math.abs(r);
                    o < 0 ? (t.axis = "angle") : o > 0 && (t.axis = "scale");
                }
            }
            restrictToAxis(t) {
                this.config.lockDirection &&
                (this.state.axis === "scale"
                    ? (t[1] = 0)
                    : this.state.axis === "angle" && (t[0] = 0));
            }
            cancel() {
                const t = this.state;
                t.canceled ||
                setTimeout(() => {
                    (t.canceled = !0),
                        (t._active = !1),
                        this.compute(),
                        this.emit();
                }, 0);
            }
            touchStart(t) {
                this.ctrl.setEventIds(t);
                const n = this.state,
                    r = this.ctrl.touchIds;
                if ((n._active && n._touchIds.every((i) => r.has(i))) || r.size < 2)
                    return;
                this.start(t), (n._touchIds = Array.from(r).slice(0, 2));
                const o = i4(t, n._touchIds);
                o && this.pinchStart(t, o);
            }
            pointerStart(t) {
                if (t.buttons != null && t.buttons % 2 !== 1) return;
                this.ctrl.setEventIds(t), t.target.setPointerCapture(t.pointerId);
                const n = this.state,
                    r = n._pointerEvents,
                    o = this.ctrl.pointerIds;
                if (
                    (n._active && Array.from(r.keys()).every((a) => o.has(a))) ||
                    (r.size < 2 && r.set(t.pointerId, t), n._pointerEvents.size < 2)
                )
                    return;
                this.start(t);
                const i = Vy(...Array.from(r.values()));
                i && this.pinchStart(t, i);
            }
            pinchStart(t, n) {
                const r = this.state;
                (r.origin = n.origin),
                    this.computeValues([n.distance, n.angle]),
                    this.computeInitial(),
                    this.compute(t),
                    this.emit();
            }
            touchMove(t) {
                if (!this.state._active) return;
                const n = i4(t, this.state._touchIds);
                n && this.pinchMove(t, n);
            }
            pointerMove(t) {
                const n = this.state._pointerEvents;
                if (
                    (n.has(t.pointerId) && n.set(t.pointerId, t),
                        !this.state._active)
                )
                    return;
                const r = Vy(...Array.from(n.values()));
                r && this.pinchMove(t, r);
            }
            pinchMove(t, n) {
                const r = this.state,
                    o = r._values[1],
                    i = n.angle - o;
                let a = 0;
                Math.abs(i) > 270 && (a += Math.sign(i)),
                    this.computeValues([n.distance, n.angle - 360 * a]),
                    (r.origin = n.origin),
                    (r.turns = a),
                    (r._movement = [
                        r._values[0] / r._initial[0] - 1,
                        r._values[1] - r._initial[1],
                    ]),
                    this.compute(t),
                    this.emit();
            }
            touchEnd(t) {
                this.ctrl.setEventIds(t),
                this.state._active &&
                this.state._touchIds.some(
                    (n) => !this.ctrl.touchIds.has(n)
                ) &&
                ((this.state._active = !1), this.compute(t), this.emit());
            }
            pointerEnd(t) {
                const n = this.state;
                this.ctrl.setEventIds(t);
                try {
                    t.target.releasePointerCapture(t.pointerId);
                } catch {}
                n._pointerEvents.has(t.pointerId) &&
                n._pointerEvents.delete(t.pointerId),
                n._active &&
                n._pointerEvents.size < 2 &&
                ((n._active = !1), this.compute(t), this.emit());
            }
            gestureStart(t) {
                t.cancelable && t.preventDefault();
                const n = this.state;
                n._active ||
                (this.start(t),
                    this.computeValues([t.scale, t.rotation]),
                    (n.origin = [t.clientX, t.clientY]),
                    this.compute(t),
                    this.emit());
            }
            gestureMove(t) {
                if ((t.cancelable && t.preventDefault(), !this.state._active))
                    return;
                const n = this.state;
                this.computeValues([t.scale, t.rotation]),
                    (n.origin = [t.clientX, t.clientY]);
                const r = n._movement;
                (n._movement = [t.scale - 1, t.rotation]),
                    (n._delta = Yt.sub(n._movement, r)),
                    this.compute(t),
                    this.emit();
            }
            gestureEnd(t) {
                this.state._active &&
                ((this.state._active = !1), this.compute(t), this.emit());
            }
            wheel(t) {
                const n = this.config.modifierKey;
                (n && (Array.isArray(n) ? !n.find((r) => t[r]) : !t[n])) ||
                (this.state._active ? this.wheelChange(t) : this.wheelStart(t),
                    this.timeoutStore.add("wheelEnd", this.wheelEnd.bind(this)));
            }
            wheelStart(t) {
                this.start(t), this.wheelChange(t);
            }
            wheelChange(t) {
                "uv" in t || (t.cancelable && t.preventDefault());
                const r = this.state;
                (r._delta = [(-l4(t)[1] / PN) * r.offset[0], 0]),
                    Yt.addTo(r._movement, r._delta),
                    m4(r),
                    (this.state.origin = [t.clientX, t.clientY]),
                    this.compute(t),
                    this.emit();
            }
            wheelEnd() {
                this.state._active &&
                ((this.state._active = !1), this.compute(), this.emit());
            }
            bind(t) {
                const n = this.config.device;
                n &&
                (t(n, "start", this[n + "Start"].bind(this)),
                    t(n, "change", this[n + "Move"].bind(this)),
                    t(n, "end", this[n + "End"].bind(this)),
                    t(n, "cancel", this[n + "End"].bind(this)),
                    t("lostPointerCapture", "", this[n + "End"].bind(this))),
                this.config.pinchOnWheel &&
                t("wheel", "", this.wheel.bind(this), {passive: !1});
            }
        }
        const TN = pt(
            pt({}, h4),
            {},
            {
                device(e, t, {shared: n, pointer: {touch: r = !1} = {}}) {
                    if (n.target && !Er.touch && Er.gesture) return "gesture";
                    if (Er.touch && r) return "touch";
                    if (Er.touchscreen) {
                        if (Er.pointer) return "pointer";
                        if (Er.touch) return "touch";
                    }
                },
                bounds(e, t, {scaleBounds: n = {}, angleBounds: r = {}}) {
                    const o = (a) => {
                            const s = c4(Df(n, a), {min: -1 / 0, max: 1 / 0});
                            return [s.min, s.max];
                        },
                        i = (a) => {
                            const s = c4(Df(r, a), {min: -1 / 0, max: 1 / 0});
                            return [s.min, s.max];
                        };
                    return typeof n != "function" && typeof r != "function"
                        ? [o(), i()]
                        : (a) => [o(a), i(a)];
                },
                threshold(e, t, n) {
                    return (
                        (this.lockDirection = n.axis === "lock"),
                            Yt.toVector(e, this.lockDirection ? [0.1, 3] : 0)
                    );
                },
                modifierKey(e) {
                    return e === void 0 ? "ctrlKey" : e;
                },
                pinchOnWheel(e = !0) {
                    return e;
                },
            }
        );
        pt(pt({}, hu), {}, {mouseOnly: (e = !0) => e});
        class $N extends pN {
            constructor(...t) {
                super(...t), hn(this, "ingKey", "wheeling");
            }
            wheel(t) {
                this.state._active || this.start(t),
                    this.wheelChange(t),
                    this.timeoutStore.add("wheelEnd", this.wheelEnd.bind(this));
            }
            wheelChange(t) {
                const n = this.state;
                (n._delta = l4(t)),
                    Yt.addTo(n._movement, n._delta),
                    m4(n),
                    this.compute(t),
                    this.emit();
            }
            wheelEnd() {
                this.state._active &&
                ((this.state._active = !1), this.compute(), this.emit());
            }
            bind(t) {
                t("wheel", "", this.wheel.bind(this));
            }
        }
        const AN = hu;
        pt(pt({}, hu), {}, {mouseOnly: (e = !0) => e});
        const Ky = new Map(),
            Wy = new Map();
        function MN(e) {
            Ky.set(e.key, e.engine), Wy.set(e.key, e.resolver);
        }
        const zN = {key: "pinch", engine: IN, resolver: TN},
            RN = {key: "wheel", engine: $N, resolver: AN};
        function ON(e, t) {
            if (e == null) return {};
            var n = {},
                r = Object.keys(e),
                o,
                i;
            for (i = 0; i < r.length; i++)
                (o = r[i]), !(t.indexOf(o) >= 0) && (n[o] = e[o]);
            return n;
        }
        function DN(e, t) {
            if (e == null) return {};
            var n = ON(e, t),
                r,
                o;
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                for (o = 0; o < i.length; o++)
                    (r = i[o]),
                    !(t.indexOf(r) >= 0) &&
                    Object.prototype.propertyIsEnumerable.call(e, r) &&
                    (n[r] = e[r]);
            }
            return n;
        }
        const LN = {
                target(e) {
                    if (e) return () => ("current" in e ? e.current : e);
                },
                enabled(e = !0) {
                    return e;
                },
                window(e = Er.isBrowser ? window : void 0) {
                    return e;
                },
                eventOptions({passive: e = !0, capture: t = !1} = {}) {
                    return {passive: e, capture: t};
                },
                transform(e) {
                    return e;
                },
            },
            jN = ["target", "eventOptions", "window", "enabled", "transform"];
        function Lf(e = {}, t) {
            const n = {};
            for (const [r, o] of Object.entries(t))
                switch (typeof o) {
                    case "function":
                        n[r] = o.call(n, e[r], r, e);
                        break;
                    case "object":
                        n[r] = Lf(e[r], o);
                        break;
                    case "boolean":
                        o && (n[r] = e[r]);
                        break;
                }
            return n;
        }
        function NN(e, t, n = {}) {
            const r = e,
                {
                    target: o,
                    eventOptions: i,
                    window: a,
                    enabled: s,
                    transform: l,
                } = r,
                c = DN(r, jN);
            if (
                ((n.shared = Lf(
                    {
                        target: o,
                        eventOptions: i,
                        window: a,
                        enabled: s,
                        transform: l,
                    },
                    LN
                )),
                    t)
            ) {
                const d = Wy.get(t);
                n[t] = Lf(pt({shared: n.shared}, c), d);
            } else
                for (const d in c) {
                    const u = Wy.get(d);
                    u && (n[d] = Lf(pt({shared: n.shared}, c[d]), u));
                }
            return n;
        }
        class g4 {
            constructor(t, n) {
                hn(this, "_listeners", new Set()),
                    (this._ctrl = t),
                    (this._gestureKey = n);
            }
            add(t, n, r, o, i) {
                const a = this._listeners,
                    s = oN(n, r),
                    l = this._gestureKey
                        ? this._ctrl.config[this._gestureKey].eventOptions
                        : {},
                    c = pt(pt({}, l), i);
                t.addEventListener(s, o, c);
                const d = () => {
                    t.removeEventListener(s, o, c), a.delete(d);
                };
                return a.add(d), d;
            }
            clean() {
                this._listeners.forEach((t) => t()), this._listeners.clear();
            }
        }
        class FN {
            constructor() {
                hn(this, "_timeouts", new Map());
            }
            add(t, n, r = 140, ...o) {
                this.remove(t),
                    this._timeouts.set(t, window.setTimeout(n, r, ...o));
            }
            remove(t) {
                const n = this._timeouts.get(t);
                n && window.clearTimeout(n);
            }
            clean() {
                this._timeouts.forEach((t) => void window.clearTimeout(t)),
                    this._timeouts.clear();
            }
        }
        class BN {
            constructor(t) {
                hn(this, "gestures", new Set()),
                    hn(this, "_targetEventStore", new g4(this)),
                    hn(this, "gestureEventStores", {}),
                    hn(this, "gestureTimeoutStores", {}),
                    hn(this, "handlers", {}),
                    hn(this, "config", {}),
                    hn(this, "pointerIds", new Set()),
                    hn(this, "touchIds", new Set()),
                    hn(this, "state", {
                        shared: {
                            shiftKey: !1,
                            metaKey: !1,
                            ctrlKey: !1,
                            altKey: !1,
                        },
                    }),
                    UN(this, t);
            }
            setEventIds(t) {
                if (o4(t)) return (this.touchIds = new Set(sN(t))), this.touchIds;
                if ("pointerId" in t)
                    return (
                        t.type === "pointerup" || t.type === "pointercancel"
                            ? this.pointerIds.delete(t.pointerId)
                            : t.type === "pointerdown" &&
                            this.pointerIds.add(t.pointerId),
                            this.pointerIds
                    );
            }
            applyHandlers(t, n) {
                (this.handlers = t), (this.nativeHandlers = n);
            }
            applyConfig(t, n) {
                this.config = NN(t, n, this.config);
            }
            clean() {
                this._targetEventStore.clean();
                for (const t of this.gestures)
                    this.gestureEventStores[t].clean(),
                        this.gestureTimeoutStores[t].clean();
            }
            effect() {
                return (
                    this.config.shared.target && this.bind(),
                        () => this._targetEventStore.clean()
                );
            }
            bind(...t) {
                const n = this.config.shared,
                    r = {};
                let o;
                if (!(n.target && ((o = n.target()), !o))) {
                    if (n.enabled) {
                        for (const a of this.gestures) {
                            const s = this.config[a],
                                l = v4(r, s.eventOptions, !!o);
                            if (s.enabled) {
                                const c = Ky.get(a);
                                new c(this, t, a).bind(l);
                            }
                        }
                        const i = v4(r, n.eventOptions, !!o);
                        for (const a in this.nativeHandlers)
                            i(
                                a,
                                "",
                                (s) =>
                                    this.nativeHandlers[a](
                                        pt(
                                            pt({}, this.state.shared),
                                            {},
                                            {event: s, args: t}
                                        )
                                    ),
                                void 0,
                                !0
                            );
                    }
                    for (const i in r) r[i] = dN(...r[i]);
                    if (!o) return r;
                    for (const i in r) {
                        const {device: a, capture: s, passive: l} = rN(i);
                        this._targetEventStore.add(o, a, "", r[i], {
                            capture: s,
                            passive: l,
                        });
                    }
                }
            }
        }
        function Ol(e, t) {
            e.gestures.add(t),
                (e.gestureEventStores[t] = new g4(e, t)),
                (e.gestureTimeoutStores[t] = new FN());
        }
        function UN(e, t) {
            t.drag && Ol(e, "drag"),
            t.wheel && Ol(e, "wheel"),
            t.scroll && Ol(e, "scroll"),
            t.move && Ol(e, "move"),
            t.pinch && Ol(e, "pinch"),
            t.hover && Ol(e, "hover");
        }
        const v4 =
                (e, t, n) =>
                    (r, o, i, a = {}, s = !1) => {
                        var l, c;
                        const d =
                                (l = a.capture) !== null && l !== void 0
                                    ? l
                                    : t.capture,
                            u =
                                (c = a.passive) !== null && c !== void 0
                                    ? c
                                    : t.passive;
                        let h = s ? r : tN(r, o, d);
                        n && u && (h += "Passive"), (e[h] = e[h] || []), e[h].push(i);
                    },
            HN = /^on(Drag|Wheel|Scroll|Move|Pinch|Hover)/;
        function VN(e) {
            const t = {},
                n = {},
                r = new Set();
            for (let o in e)
                HN.test(o)
                    ? (r.add(RegExp.lastMatch), (n[o] = e[o]))
                    : (t[o] = e[o]);
            return [n, t, r];
        }
        function Dl(e, t, n, r, o, i) {
            if (!e.has(n) || !Ky.has(r)) return;
            const a = n + "Start",
                s = n + "End",
                l = (c) => {
                    let d;
                    return (
                        c.first && a in t && t[a](c),
                        n in t && (d = t[n](c)),
                        c.last && s in t && t[s](c),
                            d
                    );
                };
            (o[r] = l), (i[r] = i[r] || {});
        }
        function KN(e, t) {
            const [n, r, o] = VN(e),
                i = {};
            return (
                Dl(o, n, "onDrag", "drag", i, t),
                    Dl(o, n, "onWheel", "wheel", i, t),
                    Dl(o, n, "onScroll", "scroll", i, t),
                    Dl(o, n, "onPinch", "pinch", i, t),
                    Dl(o, n, "onMove", "move", i, t),
                    Dl(o, n, "onHover", "hover", i, t),
                    {handlers: i, config: t, nativeHandlers: r}
            );
        }
        function WN(e, t = {}, n, r) {
            const o = N.useMemo(() => new BN(e), []);
            if (
                (o.applyHandlers(e, r),
                    o.applyConfig(t, n),
                    N.useEffect(o.effect.bind(o)),
                    N.useEffect(() => o.clean.bind(o), []),
                t.target === void 0)
            )
                return o.bind.bind(o);
        }
        function YN(e) {
            return (
                e.forEach(MN),
                    function (n, r) {
                        const {
                            handlers: o,
                            nativeHandlers: i,
                            config: a,
                        } = KN(n, r || {});
                        return WN(o, a, void 0, i);
                    }
            );
        }
        const b4 = 10,
            GN = /Mac|iPod|iPhone|iPad/.test(
                typeof window > "u" ? "node" : window.navigator.platform
            );
        function y4(e) {
            let {deltaY: t, deltaX: n} = e,
                r = 0;
            if (e.ctrlKey || e.altKey || e.metaKey) {
                const o = Math.sign(e.deltaY),
                    i = Math.abs(e.deltaY);
                let a = t;
                i > b4 && (a = b4 * o), (r = a / 100);
            } else e.shiftKey && !GN && ((n = t), (t = 0));
            return {x: -n, y: -t, z: -r};
        }
        const XN = YN([RN, zN]);
        let Ll;
        const qN = (e) =>
            Ll === void 0
                ? ((Ll = e), !1)
                : e - Ll > 120 && e - Ll < 160
                    ? ((Ll = e), !0)
                    : ((Ll = e), !1);
        function ZN(e) {
            const t = W(),
                n = y.useMemo(() => {
                    let r = "not sure";
                    const o = ({event: f}) => {
                        if (
                            !t.getInstanceState().isFocused ||
                            ((r = "not sure"), qN(Date.now()))
                        )
                            return;
                        const g = t.getEditingShapeId();
                        if (g) {
                            const _ = t.getShape(g);
                            if (_ && t.getShapeUtil(_).canScroll(_)) {
                                const C = t.getShapePageBounds(g);
                                if (
                                    C != null &&
                                    C.containsPoint(t.inputs.currentPagePoint)
                                )
                                    return;
                            }
                        }
                        $e(f);
                        const b = y4(f);
                        if (b.x === 0 && b.y === 0) return;
                        const x = t.getContainer().getBoundingClientRect(),
                            S = {
                                type: "wheel",
                                name: "wheel",
                                delta: b,
                                point: new E(f.clientX, f.clientY).sub({
                                    x: x.left,
                                    y: x.top,
                                }),
                                shiftKey: f.shiftKey,
                                altKey: f.altKey,
                                ctrlKey: f.metaKey || f.ctrlKey,
                            };
                        t.dispatch(S);
                    };
                    let i = 1,
                        a = 1,
                        s = 1,
                        l = 0;
                    const c = new E(),
                        d = new E(),
                        u = (f) => {
                            const g = e.current;
                            r = "not sure";
                            const {event: b, origin: x, da: S} = f;
                            b instanceof WheelEvent ||
                            ((b.target === g ||
                                    (g != null && g.contains(b.target))) &&
                                ((d.x = x[0]),
                                    (d.y = x[1]),
                                    (c.x = x[0]),
                                    (c.y = x[1]),
                                    (i = S[0]),
                                    (a = t.getZoomLevel()),
                                    t.dispatch({
                                        type: "pinch",
                                        name: "pinch_start",
                                        point: {
                                            x: x[0],
                                            y: x[1],
                                            z: t.getZoomLevel(),
                                        },
                                        delta: {x: 0, y: 0},
                                        shiftKey: b.shiftKey,
                                        altKey: b.altKey,
                                        ctrlKey: b.metaKey || b.ctrlKey,
                                    })));
                        },
                        h = (f) => {
                            if ((f && (r = "zooming"), r === "zooming")) return;
                            const g = Math.abs(l - i),
                                b = E.Dist(c, d);
                            switch (r) {
                                case "not sure": {
                                    g > 24
                                        ? (r = "zooming")
                                        : b > 16 && (r = "panning");
                                    break;
                                }
                                case "panning": {
                                    g > 64 && (r = "zooming");
                                    break;
                                }
                            }
                        };
                    return {
                        onWheel: o,
                        onPinchStart: u,
                        onPinchEnd: (f) => {
                            const g = e.current,
                                {event: b, origin: x, offset: S} = f;
                            if (
                                b instanceof WheelEvent ||
                                !(
                                    b.target === g ||
                                    (g != null && g.contains(b.target))
                                )
                            )
                                return;
                            const _ = S[0];
                            (r = "not sure"),
                                requestAnimationFrame(() => {
                                    t.dispatch({
                                        type: "pinch",
                                        name: "pinch_end",
                                        point: {x: x[0], y: x[1], z: _},
                                        delta: {x: x[0], y: x[1]},
                                        shiftKey: b.shiftKey,
                                        altKey: b.altKey,
                                        ctrlKey: b.metaKey || b.ctrlKey,
                                    });
                                });
                        },
                        onPinch: (f) => {
                            const g = e.current,
                                {event: b, origin: x, offset: S, da: _} = f;
                            if (
                                b instanceof WheelEvent ||
                                !(
                                    b.target === g ||
                                    (g != null && g.contains(b.target))
                                )
                            )
                                return;
                            const k =
                                f.type === "gesturechange" ||
                                f.type === "gestureend";
                            l = _[0];
                            const C = x[0] - d.x,
                                P = x[1] - d.y;
                            switch (((d.x = x[0]), (d.y = x[1]), h(k), r)) {
                                case "zooming": {
                                    (s = S[0]),
                                        t.dispatch({
                                            type: "pinch",
                                            name: "pinch",
                                            point: {x: x[0], y: x[1], z: s},
                                            delta: {x: C, y: P},
                                            shiftKey: b.shiftKey,
                                            altKey: b.altKey,
                                            ctrlKey: b.metaKey || b.ctrlKey,
                                        });
                                    break;
                                }
                                case "panning": {
                                    t.dispatch({
                                        type: "pinch",
                                        name: "pinch",
                                        point: {x: x[0], y: x[1], z: a},
                                        delta: {x: C, y: P},
                                        shiftKey: b.shiftKey,
                                        altKey: b.altKey,
                                        ctrlKey: b.metaKey || b.ctrlKey,
                                    });
                                    break;
                                }
                            }
                        },
                    };
                }, [t, e]);
            XN(n, {
                target: e,
                eventOptions: {passive: !1},
                pinch: {
                    from: () => [t.getZoomLevel(), 0],
                    scaleBounds: () => ({
                        from: t.getZoomLevel(),
                        max: 8,
                        min: 0.05,
                    }),
                },
            });
        }
        function Yy(e, t, n) {
            const r = e.getShape(t),
                o = e.getShapeHandles(r);
            return {shape: r, handle: o.find((i) => i.id === n)};
        }
        function QN(e, t) {
            const n = W();
            return y.useMemo(() => {
                const r = (l) => {
                    if (l.isKilled) return;
                    const c = Pf(l.currentTarget);
                    eu(c, l);
                    const {shape: d, handle: u} = Yy(n, e, t);
                    u &&
                    n.dispatch({
                        type: "pointer",
                        target: "handle",
                        handle: u,
                        shape: d,
                        name: "pointer_down",
                        ...Wn(l),
                    });
                };
                let o, i;
                return {
                    onPointerDown: r,
                    onPointerMove: (l) => {
                        if (l.isKilled || (l.clientX === o && l.clientY === i))
                            return;
                        (o = l.clientX), (i = l.clientY);
                        const {shape: c, handle: d} = Yy(n, e, t);
                        d &&
                        n.dispatch({
                            type: "pointer",
                            target: "handle",
                            handle: d,
                            shape: c,
                            name: "pointer_move",
                            ...Wn(l),
                        });
                    },
                    onPointerUp: (l) => {
                        if (l.isKilled) return;
                        const c = Pf(l.currentTarget);
                        tu(c, l);
                        const {shape: d, handle: u} = Yy(n, e, t);
                        u &&
                        n.dispatch({
                            type: "pointer",
                            target: "handle",
                            handle: u,
                            shape: d,
                            name: "pointer_up",
                            ...Wn(l),
                        });
                    },
                };
            }, [n, e, t]);
        }
        var w4 = "Expected a function",
            x4 = NaN,
            JN = "[object Symbol]",
            eF = /^\s+|\s+$/g,
            tF = /^[-+]0x[0-9a-f]+$/i,
            nF = /^0b[01]+$/i,
            rF = /^0o[0-7]+$/i,
            oF = parseInt,
            iF = typeof lt == "object" && lt && lt.Object === Object && lt,
            aF = typeof self == "object" && self && self.Object === Object && self,
            sF = iF || aF || Function("return this")(),
            lF = Object.prototype,
            cF = lF.toString,
            dF = Math.max,
            uF = Math.min,
            Gy = function () {
                return sF.Date.now();
            };
        function hF(e, t, n) {
            var r,
                o,
                i,
                a,
                s,
                l,
                c = 0,
                d = !1,
                u = !1,
                h = !0;
            if (typeof e != "function") throw new TypeError(w4);
            (t = S4(t) || 0),
            jf(n) &&
            ((d = !!n.leading),
                (u = "maxWait" in n),
                (i = u ? dF(S4(n.maxWait) || 0, t) : i),
                (h = "trailing" in n ? !!n.trailing : h));
            function p(C) {
                var P = r,
                    I = o;
                return (r = o = void 0), (c = C), (a = e.apply(I, P)), a;
            }
            function m(C) {
                return (c = C), (s = setTimeout(b, t)), d ? p(C) : a;
            }
            function f(C) {
                var P = C - l,
                    I = C - c,
                    $ = t - P;
                return u ? uF($, i - I) : $;
            }
            function g(C) {
                var P = C - l,
                    I = C - c;
                return l === void 0 || P >= t || P < 0 || (u && I >= i);
            }
            function b() {
                var C = Gy();
                if (g(C)) return x(C);
                s = setTimeout(b, f(C));
            }
            function x(C) {
                return (s = void 0), h && r ? p(C) : ((r = o = void 0), a);
            }
            function S() {
                s !== void 0 && clearTimeout(s), (c = 0), (r = l = o = s = void 0);
            }
            function _() {
                return s === void 0 ? a : x(Gy());
            }
            function k() {
                var C = Gy(),
                    P = g(C);
                if (((r = arguments), (o = this), (l = C), P)) {
                    if (s === void 0) return m(l);
                    if (u) return (s = setTimeout(b, t)), p(l);
                }
                return s === void 0 && (s = setTimeout(b, t)), a;
            }
            return (k.cancel = S), (k.flush = _), k;
        }
        function pF(e, t, n) {
            var r = !0,
                o = !0;
            if (typeof e != "function") throw new TypeError(w4);
            return (
                jf(n) &&
                ((r = "leading" in n ? !!n.leading : r),
                    (o = "trailing" in n ? !!n.trailing : o)),
                    hF(e, t, {leading: r, maxWait: t, trailing: o})
            );
        }
        function jf(e) {
            var t = typeof e;
            return !!e && (t == "object" || t == "function");
        }
        function fF(e) {
            return !!e && typeof e == "object";
        }
        function mF(e) {
            return typeof e == "symbol" || (fF(e) && cF.call(e) == JN);
        }
        function S4(e) {
            if (typeof e == "number") return e;
            if (mF(e)) return x4;
            if (jf(e)) {
                var t = typeof e.valueOf == "function" ? e.valueOf() : e;
                e = jf(t) ? t + "" : t;
            }
            if (typeof e != "string") return e === 0 ? e : +e;
            e = e.replace(eF, "");
            var n = nF.test(e);
            return n || rF.test(e)
                ? oF(e.slice(2), n ? 2 : 8)
                : tF.test(e)
                    ? x4
                    : +e;
        }
        var gF = pF;
        const vF = Da(gF);
        function bF() {
            const e = W();
            y.useLayoutEffect(() => {
                const t = vF(
                    () => {
                        e.updateViewportScreenBounds();
                    },
                    200,
                    {trailing: !0}
                );
                e.updateViewportScreenBounds();
                const n = setInterval(t, 1e3);
                return (
                    window.addEventListener("resize", t),
                        window.addEventListener("scroll", t),
                        () => {
                            clearInterval(n),
                                window.removeEventListener("resize", t),
                                window.removeEventListener("scroll", t);
                        }
                );
            }, [e]);
        }
        let ce =
            ((et = class {
                constructor(t = 0, n = 0, r = 0, o = 0) {
                    w(this, "x", 0);
                    w(this, "y", 0);
                    w(this, "w", 0);
                    w(this, "h", 0);
                    (this.x = t), (this.y = n), (this.w = r), (this.h = o);
                }
                get point() {
                    return new E(this.x, this.y);
                }
                set point(t) {
                    (this.x = t.x), (this.y = t.y);
                }
                get minX() {
                    return this.x;
                }
                set minX(t) {
                    this.x = t;
                }
                get midX() {
                    return this.x + this.w / 2;
                }
                get maxX() {
                    return this.x + this.w;
                }
                get minY() {
                    return this.y;
                }
                set minY(t) {
                    this.y = t;
                }
                get midY() {
                    return this.y + this.h / 2;
                }
                get maxY() {
                    return this.y + this.h;
                }
                get width() {
                    return this.w;
                }
                set width(t) {
                    this.w = t;
                }
                get height() {
                    return this.h;
                }
                set height(t) {
                    this.h = t;
                }
                get aspectRatio() {
                    return this.width / this.height;
                }
                get center() {
                    return new E(this.midX, this.midY);
                }
                set center(t) {
                    (this.minX = t.x - this.width / 2),
                        (this.minY = t.y - this.height / 2);
                }
                get corners() {
                    return [
                        new E(this.minX, this.minY),
                        new E(this.maxX, this.minY),
                        new E(this.maxX, this.maxY),
                        new E(this.minX, this.maxY),
                    ];
                }
                get snapPoints() {
                    return [
                        new E(this.minX, this.minY),
                        new E(this.maxX, this.minY),
                        new E(this.maxX, this.maxY),
                        new E(this.minX, this.maxY),
                        this.center,
                    ];
                }
                get sides() {
                    const {corners: t} = this;
                    return [
                        [t[0], t[1]],
                        [t[1], t[2]],
                        [t[2], t[3]],
                        [t[3], t[0]],
                    ];
                }
                get size() {
                    return new E(this.w, this.h);
                }
                toFixed() {
                    return (
                        (this.x = If(this.x)),
                            (this.y = If(this.y)),
                            (this.w = If(this.w)),
                            (this.h = If(this.h)),
                            this
                    );
                }
                setTo(t) {
                    return (
                        (this.x = t.x),
                            (this.y = t.y),
                            (this.w = t.w),
                            (this.h = t.h),
                            this
                    );
                }
                set(t = 0, n = 0, r = 0, o = 0) {
                    return (
                        (this.x = t), (this.y = n), (this.w = r), (this.h = o), this
                    );
                }
                expand(t) {
                    const n = Math.min(this.minX, t.minX),
                        r = Math.min(this.minY, t.minY),
                        o = Math.max(this.maxX, t.maxX),
                        i = Math.max(this.maxY, t.maxY);
                    return (
                        (this.x = n),
                            (this.y = r),
                            (this.w = o - n),
                            (this.h = i - r),
                            this
                    );
                }
                expandBy(t) {
                    return (
                        (this.x -= t),
                            (this.y -= t),
                            (this.w += t * 2),
                            (this.h += t * 2),
                            this
                    );
                }
                scale(t) {
                    return (
                        (this.x /= t),
                            (this.y /= t),
                            (this.w /= t),
                            (this.h /= t),
                            this
                    );
                }
                clone() {
                    const {x: t, y: n, w: r, h: o} = this;
                    return new et(t, n, r, o);
                }
                translate(t) {
                    return (this.x += t.x), (this.y += t.y), this;
                }
                snapToGrid(t) {
                    const n = Math.round(this.minX / t) * t,
                        r = Math.round(this.minY / t) * t,
                        o = Math.round(this.maxX / t) * t,
                        i = Math.round(this.maxY / t) * t;
                    (this.minX = n),
                        (this.minY = r),
                        (this.width = Math.max(1, o - n)),
                        (this.height = Math.max(1, i - r));
                }
                collides(t) {
                    return et.Collides(this, t);
                }
                contains(t) {
                    return et.Contains(this, t);
                }
                includes(t) {
                    return et.Includes(this, t);
                }
                containsPoint(t, n = 0) {
                    return et.ContainsPoint(this, t, n);
                }
                getHandlePoint(t) {
                    switch (t) {
                        case "top_left":
                            return new E(this.minX, this.minY);
                        case "top_right":
                            return new E(this.maxX, this.minY);
                        case "bottom_left":
                            return new E(this.minX, this.maxY);
                        case "bottom_right":
                            return new E(this.maxX, this.maxY);
                        case "top":
                            return new E(this.midX, this.minY);
                        case "right":
                            return new E(this.maxX, this.midY);
                        case "bottom":
                            return new E(this.midX, this.maxY);
                        case "left":
                            return new E(this.minX, this.midY);
                    }
                }
                toJson() {
                    return {x: this.minX, y: this.minY, w: this.w, h: this.h};
                }
                resize(t, n, r) {
                    const {minX: o, minY: i, maxX: a, maxY: s} = this;
                    let {minX: l, minY: c, maxX: d, maxY: u} = this;
                    switch (t) {
                        case "left":
                        case "top_left":
                        case "bottom_left": {
                            l += n;
                            break;
                        }
                        case "right":
                        case "top_right":
                        case "bottom_right": {
                            d += n;
                            break;
                        }
                    }
                    switch (t) {
                        case "top":
                        case "top_left":
                        case "top_right": {
                            c += r;
                            break;
                        }
                        case "bottom":
                        case "bottom_left":
                        case "bottom_right": {
                            u += r;
                            break;
                        }
                    }
                    const h = (d - l) / (a - o),
                        p = (u - c) / (s - i),
                        m = h < 0,
                        f = p < 0;
                    if (m) {
                        const g = d;
                        (d = l), (l = g);
                    }
                    if (f) {
                        const g = u;
                        (u = c), (c = g);
                    }
                    (this.minX = l),
                        (this.minY = c),
                        (this.width = Math.abs(d - l)),
                        (this.height = Math.abs(u - c));
                }
                union(t) {
                    const n = Math.min(this.minX, t.x),
                        r = Math.min(this.minY, t.y),
                        o = Math.max(this.maxX, t.w + t.x),
                        i = Math.max(this.maxY, t.h + t.y);
                    return (
                        (this.x = n),
                            (this.y = r),
                            (this.width = o - n),
                            (this.height = i - r),
                            this
                    );
                }
                static From(t) {
                    return new et(t.x, t.y, t.w, t.h);
                }
                static FromPoints(t) {
                    if (t.length === 0) return new et();
                    let n = 1 / 0,
                        r = 1 / 0,
                        o = -1 / 0,
                        i = -1 / 0,
                        a;
                    for (let s = 0, l = t.length; s < l; s++)
                        (a = t[s]),
                            (n = Math.min(a.x, n)),
                            (r = Math.min(a.y, r)),
                            (o = Math.max(a.x, o)),
                            (i = Math.max(a.y, i));
                    return new et(n, r, o - n, i - r);
                }
                static Expand(t, n) {
                    const r = Math.min(n.minX, t.minX),
                        o = Math.min(n.minY, t.minY),
                        i = Math.max(n.maxX, t.maxX),
                        a = Math.max(n.maxY, t.maxY);
                    return new et(r, o, i - r, a - o);
                }
                static ExpandBy(t, n) {
                    return new et(
                        t.minX - n,
                        t.minY - n,
                        t.width + n * 2,
                        t.height + n * 2
                    );
                }
                static Resize(t, n, r, o, i = !1) {
                    const {minX: a, minY: s, maxX: l, maxY: c} = t;
                    let {minX: d, minY: u, maxX: h, maxY: p} = t;
                    switch (n) {
                        case "left":
                        case "top_left":
                        case "bottom_left": {
                            d += r;
                            break;
                        }
                        case "right":
                        case "top_right":
                        case "bottom_right": {
                            h += r;
                            break;
                        }
                    }
                    switch (n) {
                        case "top":
                        case "top_left":
                        case "top_right": {
                            u += o;
                            break;
                        }
                        case "bottom":
                        case "bottom_left":
                        case "bottom_right": {
                            p += o;
                            break;
                        }
                    }
                    const m = (h - d) / (l - a),
                        f = (p - u) / (c - s),
                        g = m < 0,
                        b = f < 0;
                    if (i) {
                        const S = (l - a) / (c - s),
                            _ = Math.abs(h - d),
                            k = Math.abs(p - u),
                            C = _ * (f < 0 ? 1 : -1) * (1 / S),
                            P = k * (m < 0 ? 1 : -1) * S,
                            I = S < _ / k;
                        switch (n) {
                            case "top_left": {
                                I ? (u = p + C) : (d = h + P);
                                break;
                            }
                            case "top_right": {
                                I ? (u = p + C) : (h = d - P);
                                break;
                            }
                            case "bottom_right": {
                                I ? (p = u - C) : (h = d - P);
                                break;
                            }
                            case "bottom_left": {
                                I ? (p = u - C) : (d = h + P);
                                break;
                            }
                            case "bottom":
                            case "top": {
                                const $ = (d + h) / 2,
                                    T = k * S;
                                (d = $ - T / 2), (h = $ + T / 2);
                                break;
                            }
                            case "left":
                            case "right": {
                                const $ = (u + p) / 2,
                                    T = _ / S;
                                (u = $ - T / 2), (p = $ + T / 2);
                                break;
                            }
                        }
                    }
                    if (g) {
                        const S = h;
                        (h = d), (d = S);
                    }
                    if (b) {
                        const S = p;
                        (p = u), (u = S);
                    }
                    const x = new et(d, u, Math.abs(h - d), Math.abs(p - u));
                    return {
                        box: x,
                        scaleX: +((x.width / t.width) * (m > 0 ? 1 : -1)).toFixed(
                            5
                        ),
                        scaleY: +((x.height / t.height) * (f > 0 ? 1 : -1)).toFixed(
                            5
                        ),
                    };
                }
                equals(t) {
                    return et.Equals(this, t);
                }
                static Equals(t, n) {
                    return n.x === t.x && n.y === t.y && n.w === t.w && n.h === t.h;
                }
                zeroFix() {
                    return (
                        (this.w = Math.max(1, this.w)),
                            (this.h = Math.max(1, this.h)),
                            this
                    );
                }
                static ZeroFix(t) {
                    return new et(t.x, t.y, Math.max(1, t.w), Math.max(1, t.h));
                }
            }),
                w(
                    et,
                    "Collides",
                    (t, n) =>
                        !(
                            t.maxX < n.minX ||
                            t.minX > n.maxX ||
                            t.maxY < n.minY ||
                            t.minY > n.maxY
                        )
                ),
                w(
                    et,
                    "Contains",
                    (t, n) =>
                        t.minX < n.minX &&
                        t.minY < n.minY &&
                        t.maxY > n.maxY &&
                        t.maxX > n.maxX
                ),
                w(et, "Includes", (t, n) => et.Collides(t, n) || et.Contains(t, n)),
                w(
                    et,
                    "ContainsPoint",
                    (t, n, r = 0) =>
                        !(
                            n.x < t.minX - r ||
                            n.y < t.minY - r ||
                            n.x > t.maxX + r ||
                            n.y > t.maxY + r
                        )
                ),
                w(et, "Common", (t) => {
                    let n = 1 / 0,
                        r = 1 / 0,
                        o = -1 / 0,
                        i = -1 / 0;
                    for (let a = 0; a < t.length; a++) {
                        const s = t[a];
                        (n = Math.min(n, s.minX)),
                            (r = Math.min(r, s.minY)),
                            (o = Math.max(o, s.maxX)),
                            (i = Math.max(i, s.maxY));
                    }
                    return new et(n, r, o - n, i - r);
                }),
                w(et, "Sides", (t, n = 0) => {
                    const {corners: r} = t;
                    return [
                        [r[0], r[1]],
                        [r[1], r[2]],
                        [r[2], r[3]],
                        [r[3], r[0]],
                    ];
                }),
                et);
        function yF(e) {
            switch (e) {
                case "top":
                    return "bottom";
                case "bottom":
                    return "top";
                case "top_left":
                    return "bottom_left";
                case "top_right":
                    return "bottom_right";
                case "bottom_left":
                    return "top_left";
                case "bottom_right":
                    return "top_right";
                default:
                    return e;
            }
        }
        function wF(e) {
            switch (e) {
                case "left":
                    return "right";
                case "right":
                    return "left";
                case "top_left":
                    return "top_right";
                case "top_right":
                    return "top_left";
                case "bottom_left":
                    return "bottom_right";
                case "bottom_right":
                    return "bottom_left";
                default:
                    return e;
            }
        }
        function xF(e) {
            return (
                e === "top_left" ||
                e === "top_right" ||
                e === "bottom_right" ||
                e === "bottom_left"
            );
        }
        const Le = class Le {
            constructor(t, n, r, o, i, a) {
                w(this, "a", 1);
                w(this, "b", 0);
                w(this, "c", 0);
                w(this, "d", 1);
                w(this, "e", 0);
                w(this, "f", 0);
                (this.a = t),
                    (this.b = n),
                    (this.c = r),
                    (this.d = o),
                    (this.e = i),
                    (this.f = a);
            }
            equals(t) {
                return (
                    this.a === t.a &&
                    this.b === t.b &&
                    this.c === t.c &&
                    this.d === t.d &&
                    this.e === t.e &&
                    this.f === t.f
                );
            }
            identity() {
                return (
                    (this.a = 1),
                        (this.b = 0),
                        (this.c = 0),
                        (this.d = 1),
                        (this.e = 0),
                        (this.f = 0),
                        this
                );
            }
            multiply(t) {
                const n = t,
                    {a: r, b: o, c: i, d: a, e: s, f: l} = this;
                return (
                    (this.a = r * n.a + i * n.b),
                        (this.c = r * n.c + i * n.d),
                        (this.e = r * n.e + i * n.f + s),
                        (this.b = o * n.a + a * n.b),
                        (this.d = o * n.c + a * n.d),
                        (this.f = o * n.e + a * n.f + l),
                        this
                );
            }
            rotate(t, n, r) {
                return t === 0
                    ? this
                    : n === void 0
                        ? this.multiply(Le.Rotate(t))
                        : this.translate(n, r).multiply(Le.Rotate(t)).translate(-n, -r);
            }
            translate(t, n) {
                return this.multiply(Le.Translate(t, n));
            }
            scale(t, n) {
                return this.multiply(Le.Scale(t, n));
            }
            invert() {
                const {a: t, b: n, c: r, d: o, e: i, f: a} = this,
                    s = t * o - n * r;
                return (
                    (this.a = o / s),
                        (this.b = n / -s),
                        (this.c = r / -s),
                        (this.d = t / s),
                        (this.e = (o * i - r * a) / -s),
                        (this.f = (n * i - t * a) / s),
                        this
                );
            }
            applyToPoint(t) {
                return Le.applyToPoint(this, t);
            }
            applyToPoints(t) {
                return Le.applyToPoints(this, t);
            }
            rotation() {
                return Le.Rotation(this);
            }
            point() {
                return Le.Point(this);
            }
            decomposed() {
                return Le.Decompose(this);
            }
            toCssString() {
                return Le.toCssString(this);
            }
            setTo(t) {
                return Object.assign(this, t), this;
            }
            decompose() {
                return Le.Decompose(this);
            }
            clone() {
                return new Le(this.a, this.b, this.c, this.d, this.e, this.f);
            }
            static Identity() {
                return new Le(1, 0, 0, 1, 0, 0);
            }
            static Translate(t, n) {
                return new Le(1, 0, 0, 1, t, n);
            }
            static Rotate(t, n, r) {
                if (t === 0) return Le.Identity();
                const o = Math.cos(t),
                    i = Math.sin(t),
                    a = new Le(o, i, -i, o, 0, 0);
                return n === void 0
                    ? a
                    : Le.Compose(Le.Translate(n, r), a, Le.Translate(-n, -r));
            }
            static Multiply(t, n) {
                return {
                    a: t.a * n.a + t.c * n.b,
                    c: t.a * n.c + t.c * n.d,
                    e: t.a * n.e + t.c * n.f + t.e,
                    b: t.b * n.a + t.d * n.b,
                    d: t.b * n.c + t.d * n.d,
                    f: t.b * n.e + t.d * n.f + t.f,
                };
            }
            static Inverse(t) {
                const n = t.a * t.d - t.b * t.c;
                return {
                    a: t.d / n,
                    b: t.b / -n,
                    c: t.c / -n,
                    d: t.a / n,
                    e: (t.d * t.e - t.c * t.f) / -n,
                    f: (t.b * t.e - t.a * t.f) / n,
                };
            }
            static Absolute(t) {
                const n = t.a * t.d - t.b * t.c;
                return {
                    a: t.d / n,
                    b: t.b / -n,
                    c: t.c / -n,
                    d: t.a / n,
                    e: (t.d * t.e - t.c * t.f) / n,
                    f: (t.b * t.e - t.a * t.f) / -n,
                };
            }
            static Compose(...t) {
                const n = Le.Identity();
                for (let r = 0, o = t.length; r < o; r++) n.multiply(t[r]);
                return n;
            }
            static Point(t) {
                return new E(t.e, t.f);
            }
            static Rotation(t) {
                let n;
                if (t.a !== 0 || t.c !== 0) {
                    const r = Math.hypot(t.a, t.c);
                    n = Math.acos(t.a / r) * (t.c > 0 ? -1 : 1);
                } else if (t.b !== 0 || t.d !== 0) {
                    const r = Math.hypot(t.b, t.d);
                    n = qe + Math.acos(t.b / r) * (t.d > 0 ? -1 : 1);
                } else n = 0;
                return Fy(n);
            }
            static Decompose(t) {
                let n, r, o;
                if (t.a !== 0 || t.c !== 0) {
                    const i = Math.hypot(t.a, t.c);
                    (n = i),
                        (r = (t.a * t.d - t.b * t.c) / i),
                        (o = Math.acos(t.a / i) * (t.c > 0 ? -1 : 1));
                } else if (t.b !== 0 || t.d !== 0) {
                    const i = Math.hypot(t.b, t.d);
                    (n = (t.a * t.d - t.b * t.c) / i),
                        (r = i),
                        (o = qe + Math.acos(t.b / i) * (t.d > 0 ? -1 : 1));
                } else (n = 0), (r = 0), (o = 0);
                return {x: t.e, y: t.f, scaleX: n, scaleY: r, rotation: Fy(o)};
            }
            static Smooth(t, n = 1e10) {
                return (
                    (t.a = Math.round(t.a * n) / n),
                        (t.b = Math.round(t.b * n) / n),
                        (t.c = Math.round(t.c * n) / n),
                        (t.d = Math.round(t.d * n) / n),
                        (t.e = Math.round(t.e * n) / n),
                        (t.f = Math.round(t.f * n) / n),
                        t
                );
            }
            static toCssString(t) {
                return `matrix(${M(t.a)}, ${M(t.b)}, ${M(t.c)}, ${M(t.d)}, ${M(
                    t.e
                )}, ${M(t.f)})`;
            }
            static applyToPoint(t, n) {
                return new E(
                    t.a * n.x + t.c * n.y + t.e,
                    t.b * n.x + t.d * n.y + t.f,
                    n.z
                );
            }
            static applyToXY(t, n, r) {
                return [t.a * n + t.c * r + t.e, t.b * n + t.d * r + t.f];
            }
            static applyToPoints(t, n) {
                return n.map(
                    (r) =>
                        new E(
                            t.a * r.x + t.c * r.y + t.e,
                            t.b * r.x + t.d * r.y + t.f,
                            r.z
                        )
                );
            }
            static applyToBounds(t, n) {
                return new ce(t.e + n.minX, t.f + n.minY, n.width, n.height);
            }
            static From(t) {
                return new Le(t.a, t.b, t.c, t.d, t.e, t.f);
            }
            static Cast(t) {
                return t instanceof Le ? t : Le.From(t);
            }
        };
        w(Le, "Scale", (t, n, r, o) => {
            const i = new Le(t, 0, 0, n, 0, 0);
            return r === void 0
                ? i
                : Le.Compose(Le.Translate(r, o), i, Le.Translate(-r, -o));
        });
        let re = Le;
        function SF(e = !0) {
            const [t, n] = y.useState(0),
                r = W();
            y.useEffect(() => {
                if (!e) return;
                const o = () => n((i) => i + 1);
                return (
                    r.on("tick", o),
                        () => {
                            r.off("tick", o);
                        }
                );
            }, [r, e]);
        }
        const _F = ze(function ({
                                    showStroke: t = !0,
                                    showVertices: n = !0,
                                    showClosestPointOnOutline: r = !0,
                                }) {
            const o = W();
            SF(r);
            const i = o.getZoomLevel(),
                a = o.getRenderingShapes(),
                {
                    inputs: {currentPagePoint: s},
                } = o;
            return v.jsx("svg", {
                style: {
                    position: "absolute",
                    pointerEvents: "none",
                    zIndex: 999999999,
                    top: 0,
                    left: 0,
                    overflow: "visible",
                },
                children: a.map((l) => {
                    const c = o.getShape(l.id);
                    if (c.type === "group") return null;
                    const d = o.getShapeGeometry(c),
                        u = o.getShapePageTransform(c),
                        h = o.getPointInShapeSpace(c, s),
                        p = d.nearestPoint(h),
                        m = d.distanceToPoint(h, !0),
                        f = Math.abs(m) * i,
                        g = m < 0,
                        {vertices: b} = d;
                    return v.jsxs(
                        "g",
                        {
                            transform: u.toCssString(),
                            strokeLinecap: "round",
                            strokeLinejoin: "round",
                            children: [
                                t &&
                                v.jsx("path", {
                                    stroke: "red",
                                    strokeWidth: "2",
                                    fill: "none",
                                    opacity: "1",
                                    d: d.toSimpleSvgPath(),
                                }),
                                n &&
                                b.map((x, S) =>
                                    v.jsx(
                                        "circle",
                                        {
                                            cx: x.x,
                                            cy: x.y,
                                            r: "2",
                                            fill: `hsl(${lf(
                                                S,
                                                [0, b.length - 1],
                                                [120, 200]
                                            )}, 100%, 50%)`,
                                            stroke: "black",
                                            strokeWidth: "1",
                                        },
                                        `v${S}`
                                    )
                                ),
                                r &&
                                f < 150 &&
                                v.jsx("line", {
                                    x1: p.x,
                                    y1: p.y,
                                    x2: h.x,
                                    y2: h.y,
                                    opacity: 1 - f / 150,
                                    stroke: g ? "goldenrod" : "dodgerblue",
                                    strokeWidth: "2",
                                }),
                            ],
                        },
                        l.id + "_outline"
                    );
                }),
            });
        });
        var kF = 200,
            Xy = "__lodash_hash_undefined__",
            CF = 1 / 0,
            EF = "[object Function]",
            PF = "[object GeneratorFunction]",
            IF = /[\\^$.*+?()[\]{}|]/g,
            TF = /^\[object .+?Constructor\]$/,
            $F = typeof lt == "object" && lt && lt.Object === Object && lt,
            AF = typeof self == "object" && self && self.Object === Object && self,
            qy = $F || AF || Function("return this")();
        function MF(e, t) {
            var n = e ? e.length : 0;
            return !!n && OF(e, t, 0) > -1;
        }
        function zF(e, t, n) {
            for (var r = -1, o = e ? e.length : 0; ++r < o; )
                if (n(t, e[r])) return !0;
            return !1;
        }
        function RF(e, t, n, r) {
            for (var o = e.length, i = n + (r ? 1 : -1); r ? i-- : ++i < o; )
                if (t(e[i], i, e)) return i;
            return -1;
        }
        function OF(e, t, n) {
            if (t !== t) return RF(e, DF, n);
            for (var r = n - 1, o = e.length; ++r < o; ) if (e[r] === t) return r;
            return -1;
        }
        function DF(e) {
            return e !== e;
        }
        function LF(e, t) {
            return e.has(t);
        }
        function jF(e, t) {
            return e == null ? void 0 : e[t];
        }
        function NF(e) {
            var t = !1;
            if (e != null && typeof e.toString != "function")
                try {
                    t = !!(e + "");
                } catch {}
            return t;
        }
        function _4(e) {
            var t = -1,
                n = Array(e.size);
            return (
                e.forEach(function (r) {
                    n[++t] = r;
                }),
                    n
            );
        }
        var FF = Array.prototype,
            BF = Function.prototype,
            k4 = Object.prototype,
            Zy = qy["__core-js_shared__"],
            C4 = (function () {
                var e = /[^.]+$/.exec((Zy && Zy.keys && Zy.keys.IE_PROTO) || "");
                return e ? "Symbol(src)_1." + e : "";
            })(),
            E4 = BF.toString,
            Qy = k4.hasOwnProperty,
            UF = k4.toString,
            HF = RegExp(
                "^" +
                E4.call(Qy)
                    .replace(IF, "\\$&")
                    .replace(
                        /hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,
                        "$1.*?"
                    ) +
                "$"
            ),
            VF = FF.splice,
            KF = e1(qy, "Map"),
            Jy = e1(qy, "Set"),
            fu = e1(Object, "create");
        function is(e) {
            var t = -1,
                n = e ? e.length : 0;
            for (this.clear(); ++t < n; ) {
                var r = e[t];
                this.set(r[0], r[1]);
            }
        }
        function WF() {
            this.__data__ = fu ? fu(null) : {};
        }
        function YF(e) {
            return this.has(e) && delete this.__data__[e];
        }
        function GF(e) {
            var t = this.__data__;
            if (fu) {
                var n = t[e];
                return n === Xy ? void 0 : n;
            }
            return Qy.call(t, e) ? t[e] : void 0;
        }
        function XF(e) {
            var t = this.__data__;
            return fu ? t[e] !== void 0 : Qy.call(t, e);
        }
        function qF(e, t) {
            var n = this.__data__;
            return (n[e] = fu && t === void 0 ? Xy : t), this;
        }
        (is.prototype.clear = WF),
            (is.prototype.delete = YF),
            (is.prototype.get = GF),
            (is.prototype.has = XF),
            (is.prototype.set = qF);
        function jl(e) {
            var t = -1,
                n = e ? e.length : 0;
            for (this.clear(); ++t < n; ) {
                var r = e[t];
                this.set(r[0], r[1]);
            }
        }
        function ZF() {
            this.__data__ = [];
        }
        function QF(e) {
            var t = this.__data__,
                n = Ff(t, e);
            if (n < 0) return !1;
            var r = t.length - 1;
            return n == r ? t.pop() : VF.call(t, n, 1), !0;
        }
        function JF(e) {
            var t = this.__data__,
                n = Ff(t, e);
            return n < 0 ? void 0 : t[n][1];
        }
        function eB(e) {
            return Ff(this.__data__, e) > -1;
        }
        function tB(e, t) {
            var n = this.__data__,
                r = Ff(n, e);
            return r < 0 ? n.push([e, t]) : (n[r][1] = t), this;
        }
        (jl.prototype.clear = ZF),
            (jl.prototype.delete = QF),
            (jl.prototype.get = JF),
            (jl.prototype.has = eB),
            (jl.prototype.set = tB);
        function Nl(e) {
            var t = -1,
                n = e ? e.length : 0;
            for (this.clear(); ++t < n; ) {
                var r = e[t];
                this.set(r[0], r[1]);
            }
        }
        function nB() {
            this.__data__ = {
                hash: new is(),
                map: new (KF || jl)(),
                string: new is(),
            };
        }
        function rB(e) {
            return Bf(this, e).delete(e);
        }
        function oB(e) {
            return Bf(this, e).get(e);
        }
        function iB(e) {
            return Bf(this, e).has(e);
        }
        function aB(e, t) {
            return Bf(this, e).set(e, t), this;
        }
        (Nl.prototype.clear = nB),
            (Nl.prototype.delete = rB),
            (Nl.prototype.get = oB),
            (Nl.prototype.has = iB),
            (Nl.prototype.set = aB);
        function Nf(e) {
            var t = -1,
                n = e ? e.length : 0;
            for (this.__data__ = new Nl(); ++t < n; ) this.add(e[t]);
        }
        function sB(e) {
            return this.__data__.set(e, Xy), this;
        }
        function lB(e) {
            return this.__data__.has(e);
        }
        (Nf.prototype.add = Nf.prototype.push = sB), (Nf.prototype.has = lB);
        function Ff(e, t) {
            for (var n = e.length; n--; ) if (gB(e[n][0], t)) return n;
            return -1;
        }
        function cB(e) {
            if (!P4(e) || pB(e)) return !1;
            var t = vB(e) || NF(e) ? HF : TF;
            return t.test(fB(e));
        }
        function dB(e, t, n) {
            var r = -1,
                o = MF,
                i = e.length,
                a = !0,
                s = [],
                l = s;
            if (n) (a = !1), (o = zF);
            else if (i >= kF) {
                var c = t ? null : uB(e);
                if (c) return _4(c);
                (a = !1), (o = LF), (l = new Nf());
            } else l = t ? [] : s;
            e: for (; ++r < i; ) {
                var d = e[r],
                    u = t ? t(d) : d;
                if (((d = n || d !== 0 ? d : 0), a && u === u)) {
                    for (var h = l.length; h--; ) if (l[h] === u) continue e;
                    t && l.push(u), s.push(d);
                } else o(l, u, n) || (l !== s && l.push(u), s.push(d));
            }
            return s;
        }
        var uB =
            Jy && 1 / _4(new Jy([, -0]))[1] == CF
                ? function (e) {
                    return new Jy(e);
                }
                : bB;
        function Bf(e, t) {
            var n = e.__data__;
            return hB(t) ? n[typeof t == "string" ? "string" : "hash"] : n.map;
        }
        function e1(e, t) {
            var n = jF(e, t);
            return cB(n) ? n : void 0;
        }
        function hB(e) {
            var t = typeof e;
            return t == "string" || t == "number" || t == "symbol" || t == "boolean"
                ? e !== "__proto__"
                : e === null;
        }
        function pB(e) {
            return !!C4 && C4 in e;
        }
        function fB(e) {
            if (e != null) {
                try {
                    return E4.call(e);
                } catch {}
                try {
                    return e + "";
                } catch {}
            }
            return "";
        }
        function mB(e) {
            return e && e.length ? dB(e) : [];
        }
        function gB(e, t) {
            return e === t || (e !== e && t !== t);
        }
        function vB(e) {
            var t = P4(e) ? UF.call(e) : "";
            return t == EF || t == PF;
        }
        function P4(e) {
            var t = typeof e;
            return !!e && (t == "object" || t == "function");
        }
        function bB() {}
        var yB = mB;
        const wB = Da(yB);
        function I4(e) {
            return wB(e);
        }
        function xB() {
            const e = W(),
                t = y.useMemo(
                    () =>
                        e.store.query.records("instance_presence", () => ({
                            userId: {neq: e.user.getId()},
                        })),
                    [e]
                ),
                n = Q3(
                    "userIds",
                    () => I4(t.get().map((r) => r.userId)).sort(),
                    {
                        isEqual: (r, o) => {
                            var i;
                            return (
                                r.join(",") ===
                                ((i = o.join) == null ? void 0 : i.call(o, ","))
                            );
                        },
                    },
                    [t]
                );
            return X(n);
        }
        function T4(e) {
            const t = W(),
                n = y.useMemo(
                    () =>
                        t.store.query.records("instance_presence", () => ({
                            userId: {eq: e},
                        })),
                    [t, e]
                );
            return (
                X(
                    `latestPresence:${e}`,
                    () =>
                        n
                            .get()
                            .slice()
                            .sort(
                                (o, i) =>
                                    i.lastActivityTimestamp -
                                    o.lastActivityTimestamp
                            )[0],
                    []
                ) ?? null
            );
        }
        const SB = ze(function () {
                const t = xB();
                return v.jsx(v.Fragment, {
                    children: t.map((n) => v.jsx(_B, {collaboratorId: n}, n)),
                });
            }),
            _B = ze(function ({collaboratorId: t}) {
                const n = W(),
                    r = T4(t),
                    o = CB(r);
                if (!(r && r.currentPageId === n.getCurrentPageId())) return null;
                switch (o) {
                    case "inactive": {
                        const {followingUserId: i, highlightedUserIds: a} =
                            n.getInstanceState();
                        if (!(i === r.userId || a.includes(r.userId))) return null;
                        break;
                    }
                    case "idle": {
                        const {highlightedUserIds: i} = n.getInstanceState();
                        if (
                            r.followingUserId === n.user.getId() &&
                            !(r.chatMessage || i.includes(r.userId))
                        )
                            return null;
                        break;
                    }
                }
                return v.jsx(kB, {latestPresence: r});
            }),
            kB = ze(function ({latestPresence: t}) {
                const n = W(),
                    {
                        CollaboratorBrush: r,
                        CollaboratorScribble: o,
                        CollaboratorCursor: i,
                        CollaboratorHint: a,
                        CollaboratorShapeIndicator: s,
                    } = Rt(),
                    l = n.getZoomLevel(),
                    c = n.getViewportPageBounds(),
                    {
                        userId: d,
                        chatMessage: u,
                        brush: h,
                        scribbles: p,
                        selectedShapeIds: m,
                        userName: f,
                        cursor: g,
                        color: b,
                    } = t,
                    x = !(
                        g.x < c.minX - 12 / l ||
                        g.y < c.minY - 16 / l ||
                        g.x > c.maxX - 12 / l ||
                        g.y > c.maxY - 16 / l
                    );
                return v.jsxs(v.Fragment, {
                    children: [
                        h && r
                            ? v.jsx(
                                r,
                                {
                                    className: "tl-collaborator__brush",
                                    brush: h,
                                    color: b,
                                    opacity: 0.1,
                                },
                                d + "_brush"
                            )
                            : null,
                        x && i
                            ? v.jsx(
                                i,
                                {
                                    className: "tl-collaborator__cursor",
                                    point: g,
                                    color: b,
                                    zoom: l,
                                    name: f !== "New User" ? f : null,
                                    chatMessage: u,
                                },
                                d + "_cursor"
                            )
                            : a
                                ? v.jsx(
                                    a,
                                    {
                                        className: "tl-collaborator__cursor-hint",
                                        point: g,
                                        color: b,
                                        zoom: l,
                                        viewport: c,
                                    },
                                    d + "_cursor_hint"
                                )
                                : null,
                        o && p.length
                            ? v.jsx(v.Fragment, {
                                children: p.map((S) =>
                                    v.jsx(
                                        o,
                                        {
                                            className:
                                                "tl-collaborator__scribble",
                                            scribble: S,
                                            color: b,
                                            zoom: l,
                                            opacity:
                                                S.color === "laser" ? 0.5 : 0.1,
                                        },
                                        d + "_scribble_" + S.id
                                    )
                                ),
                            })
                            : null,
                        s &&
                        m.map((S) =>
                            v.jsx(
                                s,
                                {
                                    className:
                                        "tl-collaborator__shape-indicator",
                                    id: S,
                                    color: b,
                                    opacity: 0.5,
                                },
                                d + "_" + S
                            )
                        ),
                    ],
                });
            });
        function $4(e) {
            return e > Tj ? "inactive" : e > GC ? "idle" : "active";
        }
        function CB(e) {
            const t = y.useRef(
                    (e == null ? void 0 : e.lastActivityTimestamp) ?? -1
                ),
                [n, r] = y.useState(() => $4(Date.now() - t.current));
            return (
                y.useEffect(() => {
                    const o = setInterval(() => {
                        r($4(Date.now() - t.current));
                    }, $j);
                    return () => clearInterval(o);
                }, []),
                e && (t.current = e.lastActivityTimestamp),
                    n
            );
        }
        function A4(e, t) {
            return t === 0 ? e : A4(t, e % t);
        }
        function M4(e) {
            const t = e.toString().split(".")[1];
            if (!t) return 1;
            const n = Math.pow(10, t.length),
                r = parseInt(t, 10);
            return n / A4(r, n);
        }
        function EB() {
            const e = W(),
                t = dn();
            y.useEffect(
                () =>
                    xl("useDPRMultiple", () => {
                        const n = e.getInstanceState().devicePixelRatio;
                        t.style.setProperty("--tl-dpr-multiple", M4(n).toString());
                    }),
                [e, t]
            );
        }
        const z4 = ze(function ({
                                    id: t,
                                    shape: n,
                                    util: r,
                                    index: o,
                                    backgroundIndex: i,
                                    opacity: a,
                                    isCulled: s,
                                }) {
                const l = W(),
                    {ShapeErrorFallback: c} = Rt(),
                    d = y.useRef(null),
                    u = y.useRef(null),
                    h = y.useCallback((m, f) => {
                        var g, b;
                        (g = d.current) == null || g.style.setProperty(m, f),
                        (b = u.current) == null || b.style.setProperty(m, f);
                    }, []);
                Ja(
                    "set shape container transform position",
                    () => {
                        if (!l.getShape(t)) return;
                        const f = l.getShapePageTransform(t),
                            g = re.toCssString(f);
                        h("transform", g);
                    },
                    [l, h]
                ),
                    Ja(
                        "set shape container clip path",
                        () => {
                            if (!l.getShape(t)) return null;
                            const f = l.getShapeClipPath(t);
                            h("clip-path", f ?? "none");
                        },
                        [l, h]
                    ),
                    Ja(
                        "set shape height and width",
                        () => {
                            const m = l.getShape(t);
                            if (!m) return null;
                            const f = l.getShapeGeometry(m).bounds,
                                g =
                                    Math.floor(
                                        l.getInstanceState().devicePixelRatio * 100
                                    ) / 100,
                                b = M4(g),
                                x = f.w % b,
                                S = x === 0 ? f.w : f.w + (b - x),
                                _ = f.h % b,
                                k = _ === 0 ? f.h : f.h + (b - _);
                            h("width", Math.max(S, b) + "px"),
                                h("height", Math.max(k, b) + "px");
                        },
                        [l]
                    ),
                    y.useLayoutEffect(() => {
                        var m, f;
                        h("opacity", a + ""),
                        (m = d.current) == null ||
                        m.style.setProperty("z-index", o + ""),
                        (f = u.current) == null ||
                        f.style.setProperty("z-index", i + "");
                    }, [a, o, i, h]);
                const p = y.useCallback(
                    (m) => {
                        l.annotateError(m, {
                            origin: "react.shape",
                            willCrashApp: !1,
                        });
                    },
                    [l]
                );
                return n
                    ? v.jsxs(v.Fragment, {
                        children: [
                            r.backgroundComponent &&
                            v.jsx("div", {
                                ref: u,
                                className: "tl-shape tl-shape-background",
                                "data-shape-type": n.type,
                                draggable: !1,
                                children:
                                    !s &&
                                    v.jsx(ru, {
                                        fallback: c,
                                        onError: p,
                                        children: v.jsx(IB, {
                                            shape: n,
                                            util: r,
                                        }),
                                    }),
                            }),
                            v.jsx("div", {
                                ref: d,
                                className: "tl-shape",
                                "data-shape-type": n.type,
                                draggable: !1,
                                children: s
                                    ? v.jsx(TB, {shape: n})
                                    : v.jsx(ru, {
                                        fallback: c,
                                        onError: p,
                                        children: v.jsx(PB, {
                                            shape: n,
                                            util: r,
                                        }),
                                    }),
                            }),
                        ],
                    })
                    : null;
            }),
            PB = y.memo(
                function ({shape: t, util: n}) {
                    return rf("InnerShape:" + t.type, () => n.component(t));
                },
                (e, t) =>
                    e.shape.props === t.shape.props &&
                    e.shape.meta === t.shape.meta &&
                    e.util === t.util
            ),
            IB = y.memo(
                function ({shape: t, util: n}) {
                    return rf("InnerShape:" + t.type, () => {
                        var r;
                        return (r = n.backgroundComponent) == null
                            ? void 0
                            : r.call(n, t);
                    });
                },
                (e, t) =>
                    e.shape.props === t.shape.props && e.shape.meta === t.shape.meta
            ),
            TB = y.memo(
                function ({shape: t}) {
                    const r = W().getShapeGeometry(t).bounds;
                    return v.jsx("div", {
                        className: "tl-shape__culled",
                        style: {
                            transform: `translate(${M(r.minX)}px, ${M(r.minY)}px)`,
                            width: Math.max(1, M(r.width)),
                            height: Math.max(1, M(r.height)),
                        },
                    });
                },
                () => !0
            );
        function t1({className: e}) {
            const t = W(),
                {Background: n, SvgDefs: r} = Rt(),
                o = N.useRef(null),
                i = N.useRef(null),
                a = N.useRef(null);
            bF(),
                nj(),
                ej(),
                ZN(o),
                Gj(o),
                Ja(
                    "position layers",
                    () => {
                        const h = i.current;
                        if (!h) return;
                        const p = a.current;
                        if (!p) return;
                        const {x: m, y: f, z: g} = t.getCamera(),
                            b =
                                g >= 1
                                    ? lf(g, [1, 8], [0.125, 0.5], !0)
                                    : lf(g, [0.1, 1], [-2, 0.125], !0),
                            x = `scale(${M(g)}) translate(${M(m + b)}px,${M(
                                f + b
                            )}px)`;
                        h.style.setProperty("transform", x),
                            p.style.setProperty("transform", x);
                    },
                    [t]
                );
            const s = JL(),
                l = X(
                    "shapeSvgDefs",
                    () => {
                        const h = new Map();
                        for (const p of bt(t.shapeUtils)) {
                            if (!p) return;
                            const m = p.getCanvasSvgDefs();
                            for (const {key: f, component: g} of m)
                                h.has(f) || h.set(f, v.jsx(g, {}, f));
                        }
                        return [...h.values()];
                    },
                    [t]
                ),
                c = X("debug_shapes", () => Xe.hideShapes.get(), [Xe]),
                d = X("debug_svg", () => Xe.debugSvg.get(), [Xe]),
                u = X("debug_geometry", () => Xe.debugGeometry.get(), [Xe]);
            return v.jsxs("div", {
                ref: o,
                draggable: !1,
                className: me("tl-canvas", e),
                "data-testid": "canvas",
                ...s,
                children: [
                    n && v.jsx(n, {}),
                    v.jsx($B, {}),
                    v.jsx(YB, {}),
                    v.jsx("svg", {
                        className: "tl-svg-context",
                        children: v.jsxs("defs", {
                            children: [
                                l,
                                R4 && v.jsx(R4, {}),
                                v.jsx(HB, {}),
                                v.jsx(VB, {}),
                                v.jsx(KB, {}),
                                r && v.jsx(r, {}),
                            ],
                        }),
                    }),
                    v.jsxs("div", {
                        ref: i,
                        className: "tl-html-layer tl-shapes",
                        draggable: !1,
                        children: [
                            v.jsx(qB, {}),
                            v.jsx(XB, {}),
                            c ? null : d ? v.jsx(jB, {}) : v.jsx(NB, {}),
                        ],
                    }),
                    v.jsxs("div", {
                        className: "tl-fixed-layer tl-overlays",
                        children: [
                            v.jsxs("div", {
                                ref: a,
                                className: "tl-html-layer",
                                children: [
                                    u ? v.jsx(_F, {}) : null,
                                    v.jsx(DB, {}),
                                    v.jsx(MB, {}),
                                    v.jsx(AB, {}),
                                    v.jsx(zB, {}),
                                    v.jsx(FB, {}),
                                    v.jsx(BB, {}),
                                    v.jsx(UB, {}),
                                    v.jsx(RB, {}),
                                    v.jsx(GB, {}),
                                    v.jsx(SB, {}),
                                ],
                            }),
                            v.jsx(ZB, {}),
                        ],
                    }),
                ],
            });
        }
        function $B() {
            const e = W(),
                t = X("gridSize", () => e.getDocumentSettings().gridSize, [e]),
                {x: n, y: r, z: o} = X("camera", () => e.getCamera(), [e]),
                i = X("isGridMode", () => e.getInstanceState().isGridMode, [e]),
                {Grid: a} = Rt();
            return a && i ? v.jsx(a, {x: n, y: r, z: o, size: t}) : null;
        }
        function AB() {
            const e = W(),
                t = X("scribbles", () => e.getInstanceState().scribbles, [e]),
                n = X("zoomLevel", () => e.getZoomLevel(), [e]),
                {Scribble: r} = Rt();
            return r && t.length
                ? v.jsx(v.Fragment, {
                    children: t.map((o) =>
                        v.jsx(
                            r,
                            {className: "tl-user-scribble", scribble: o, zoom: n},
                            o.id
                        )
                    ),
                })
                : null;
        }
        function MB() {
            const e = W(),
                t = X("brush", () => e.getInstanceState().brush, [e]),
                {Brush: n} = Rt();
            return n && t ? v.jsx(n, {className: "tl-user-brush", brush: t}) : null;
        }
        function zB() {
            const e = W(),
                t = X("zoomBrush", () => e.getInstanceState().zoomBrush, [e]),
                {ZoomBrush: n} = Rt();
            return n && t
                ? v.jsx(n, {className: "tl-user-brush tl-zoom-brush", brush: t})
                : null;
        }
        function RB() {
            const e = W(),
                t = X("snapLines", () => e.snaps.getLines(), [e]),
                n = X("zoomLevel", () => e.getZoomLevel(), [e]),
                {SnapLine: r} = Rt();
            return r && t.length > 0
                ? v.jsx(v.Fragment, {
                    children: t.map((o) =>
                        v.jsx(
                            r,
                            {className: "tl-user-snapline", line: o, zoom: n},
                            o.id
                        )
                    ),
                })
                : null;
        }
        const OB = 48;
        function DB() {
            const e = W(),
                {Handles: t} = Rt(),
                n = X("zoomLevel", () => e.getZoomLevel(), [e]),
                r = X(
                    "coarse pointer",
                    () => e.getInstanceState().isCoarsePointer,
                    [e]
                ),
                o = X("onlySelectedShape", () => e.getOnlySelectedShape(), [e]),
                i = X(
                    "isChangingStyle",
                    () => e.getInstanceState().isChangingStyle,
                    [e]
                ),
                a = X("isChangingStyle", () => e.getInstanceState().isReadonly, [
                    e,
                ]),
                s = X(
                    "handles",
                    () => {
                        const d = e.getOnlySelectedShape();
                        if (d) return e.getShapeHandles(d);
                    },
                    [e]
                ),
                l = X(
                    "transform",
                    () => {
                        const d = e.getOnlySelectedShape();
                        if (d) return e.getShapePageTransform(d);
                    },
                    [e]
                );
            if (!t || !o || i || a || !s || !l) return null;
            const c = [];
            for (let d = 0, u = s[d]; d < s.length; d++, u = s[d]) {
                if (u.type !== "vertex") {
                    const h = s[d - 1],
                        p = s[d + 1];
                    if (h && p && Math.hypot(h.y - p.y, h.x - p.x) < OB / n)
                        continue;
                }
                c.push(u);
            }
            return (
                c.sort((d) => (d.type === "vertex" ? 1 : -1)),
                    v.jsx(t, {
                        children: v.jsx("g", {
                            transform: re.toCssString(l),
                            children: c.map((d) =>
                                v.jsx(
                                    LB,
                                    {shapeId: o.id, handle: d, zoom: n, isCoarse: r},
                                    d.id
                                )
                            ),
                        }),
                    })
            );
        }
        function LB({shapeId: e, handle: t, zoom: n, isCoarse: r}) {
            const o = QN(e, t.id),
                {Handle: i} = Rt();
            return i
                ? v.jsx("g", {
                    "aria-label": "handle",
                    transform: `translate(${t.x}, ${t.y})`,
                    ...o,
                    children: v.jsx(i, {
                        shapeId: e,
                        handle: t,
                        zoom: n,
                        isCoarse: r,
                    }),
                })
                : null;
        }
        function jB() {
            const e = W(),
                t = X("rendering shapes", () => e.getRenderingShapes(), [e]);
            return v.jsx(v.Fragment, {
                children: t.map((n) =>
                    v.jsxs(
                        N.Fragment,
                        {children: [v.jsx(z4, {...n}), v.jsx(WB, {id: n.id})]},
                        n.id + "_fragment"
                    )
                ),
            });
        }
        function NB() {
            const e = W(),
                t = X("rendering shapes", () => e.getRenderingShapes(), [e]);
            return v.jsx(v.Fragment, {
                children: t.map((n) => v.jsx(z4, {...n}, n.id + "_shape")),
            });
        }
        function FB() {
            const e = W(),
                t = X(
                    "selectedShapeIds",
                    () => e.getCurrentPageState().selectedShapeIds,
                    [e]
                );
            return X(
                "should display selected ids",
                () =>
                    e.isInAny(
                        "select.idle",
                        "select.brushing",
                        "select.scribble_brushing",
                        "select.editing_shape",
                        "select.pointing_shape",
                        "select.pointing_selection",
                        "select.pointing_handle"
                    ) && !e.getInstanceState().isChangingStyle,
                [e]
            )
                ? v.jsx(v.Fragment, {
                    children: t.map((r) =>
                        v.jsx(
                            ou,
                            {className: "tl-user-indicator__selected", id: r},
                            r + "_indicator"
                        )
                    ),
                })
                : null;
        }
        const BB = function () {
                const t = W(),
                    {HoveredShapeIndicator: n} = Rt(),
                    r = X(
                        "coarse pointer",
                        () => t.getInstanceState().isCoarsePointer,
                        [t]
                    ),
                    o = X(
                        "hovering canvas",
                        () => t.getInstanceState().isHoveringCanvas,
                        [t]
                    ),
                    i = X(
                        "hovered id",
                        () => t.getCurrentPageState().hoveredShapeId,
                        [t]
                    );
                return r || !o || !i || !n ? null : v.jsx(n, {shapeId: i});
            },
            UB = ze(function () {
                const t = W(),
                    n = af(t.getHintingShapeIds());
                return n.length
                    ? v.jsx(v.Fragment, {
                        children: n.map((r) =>
                            v.jsx(
                                ou,
                                {className: "tl-user-indicator__hint", id: r},
                                r + "_hinting"
                            )
                        ),
                    })
                    : null;
            });
        function R4() {
            return v.jsxs("g", {
                id: "cursor",
                children: [
                    v.jsxs("g", {
                        fill: "rgba(0,0,0,.2)",
                        transform: "translate(-11,-11)",
                        children: [
                            v.jsx("path", {
                                d: "m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z",
                            }),
                            v.jsx("path", {
                                d: "m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z",
                            }),
                        ],
                    }),
                    v.jsxs("g", {
                        fill: "white",
                        transform: "translate(-12,-12)",
                        children: [
                            v.jsx("path", {
                                d: "m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z",
                            }),
                            v.jsx("path", {
                                d: "m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z",
                            }),
                        ],
                    }),
                    v.jsxs("g", {
                        fill: "currentColor",
                        transform: "translate(-12,-12)",
                        children: [
                            v.jsx("path", {
                                d: "m19.751 24.4155-1.844.774-3.1-7.374 1.841-.775z",
                            }),
                            v.jsx("path", {
                                d: "m13 10.814v11.188l2.969-2.866.428-.139h4.768z",
                            }),
                        ],
                    }),
                ],
            });
        }
        function HB() {
            return v.jsx("path", {
                id: "cursor_hint",
                fill: "currentColor",
                d: "M -2,-5 2,0 -2,5 Z",
            });
        }
        function VB() {
            return v.jsx("marker", {
                id: "arrowhead-dot",
                className: "tl-arrow-hint",
                refX: "3.0",
                refY: "3.0",
                orient: "0",
                children: v.jsx("circle", {
                    cx: "3",
                    cy: "3",
                    r: "2",
                    strokeDasharray: "100%",
                }),
            });
        }
        function KB() {
            return v.jsxs("marker", {
                id: "arrowhead-cross",
                className: "tl-arrow-hint",
                refX: "3.0",
                refY: "3.0",
                orient: "auto",
                children: [
                    v.jsx("line", {
                        x1: "1.5",
                        y1: "1.5",
                        x2: "4.5",
                        y2: "4.5",
                        strokeDasharray: "100%",
                    }),
                    v.jsx("line", {
                        x1: "1.5",
                        y1: "4.5",
                        x2: "4.5",
                        y2: "1.5",
                        strokeDasharray: "100%",
                    }),
                ],
            });
        }
        const WB = ze(function ({id: t}) {
            const n = W(),
                r = n.getShape(t),
                [o, i] = N.useState(""),
                a = (r == null ? void 0 : r.parentId) === n.getCurrentPageId();
            return (
                N.useEffect(() => {
                    if (!a) return;
                    let s = null;
                    const l = xl("shape to svg", async () => {
                        const c = Math.random();
                        s = c;
                        const d = n.getShapePageBounds(t),
                            u = await n.getSvg([t], {padding: 0});
                        u &&
                        d &&
                        s === c &&
                        (u.style.setProperty("overflow", "visible"),
                            u.setAttribute("preserveAspectRatio", "xMidYMin slice"),
                            u.style.setProperty(
                                "transform",
                                `translate(${d.x}px, ${d.y + d.h + 12}px)`
                            ),
                            u.style.setProperty("border", "1px solid black"),
                            i(u == null ? void 0 : u.outerHTML));
                    });
                    return () => {
                        (s = null), l();
                    };
                }, [n, t, a]),
                    a
                        ? v.jsx("div", {
                            style: {paddingTop: 12, position: "absolute"},
                            children: v.jsx("div", {
                                style: {display: "flex"},
                                dangerouslySetInnerHTML: {__html: o},
                            }),
                        })
                        : null
            );
        });
        function YB() {
            const e = X("debugging ui log", () => Xe.logMessages.get(), [Xe]);
            return e.length
                ? v.jsx("div", {
                    className: "debug__ui-logger",
                    children: e.map((t, n) => {
                        const r = typeof t == "string" ? t : JSON.stringify(t);
                        return v.jsx(
                            "div",
                            {className: "debug__ui-logger__line", children: r},
                            n
                        );
                    }),
                })
                : null;
        }
        function GB() {
            const e = W(),
                t = X("selection rotation", () => e.getSelectionRotation(), [e]),
                n = X("selection bounds", () => e.getSelectionRotatedPageBounds(), [
                    e,
                ]),
                {SelectionForeground: r} = Rt();
            return !n || !r ? null : v.jsx(r, {bounds: n, rotation: t});
        }
        function XB() {
            const e = W(),
                t = X("selection rotation", () => e.getSelectionRotation(), [e]),
                n = X("selection bounds", () => e.getSelectionRotatedPageBounds(), [
                    e,
                ]),
                {SelectionBackground: r} = Rt();
            return !n || !r ? null : v.jsx(r, {bounds: n, rotation: t});
        }
        function qB() {
            const {OnTheCanvas: e} = Rt();
            return e ? v.jsx(e, {}) : null;
        }
        function ZB() {
            const {InFrontOfTheCanvas: e} = Rt();
            return e ? v.jsx(e, {}) : null;
        }
        const QB = () => v.jsx(PE, {children: "Connecting..."});
        function He() {
            return uf();
        }
        const O4 = "TLDRAW_USER_DATA_v3",
            D4 = Ie({
                id: be,
                name: be.nullable().optional(),
                locale: be.nullable().optional(),
                color: be.nullable().optional(),
                isDarkMode: Ce.nullable().optional(),
                animationSpeed: ge.nullable().optional(),
                edgeScrollSpeed: ge.nullable().optional(),
                isSnapMode: Ce.nullable().optional(),
            }),
            mu = {
                AddAnimationSpeed: 1,
                AddIsSnapMode: 2,
                MakeFieldsNullable: 3,
                AddEdgeScrollSpeed: 4,
            },
            Uf = Re({
                currentVersion: mu.AddEdgeScrollSpeed,
                migrators: {
                    [mu.AddAnimationSpeed]: {
                        up: (e) => ({...e, animationSpeed: 1}),
                        down: ({animationSpeed: e, ...t}) => t,
                    },
                    [mu.AddIsSnapMode]: {
                        up: (e) => ({...e, isSnapMode: !1}),
                        down: ({isSnapMode: e, ...t}) => t,
                    },
                    [mu.MakeFieldsNullable]: {
                        up: (e) => e,
                        down: (e) => ({
                            id: e.id,
                            name: e.name ?? ir.name,
                            locale: e.locale ?? ir.locale,
                            color: e.color ?? ir.color,
                            isDarkMode: e.isDarkMode ?? ir.isDarkMode,
                            animationSpeed: e.animationSpeed ?? ir.animationSpeed,
                            isSnapMode: e.isSnapMode ?? ir.isSnapMode,
                        }),
                    },
                    [mu.AddEdgeScrollSpeed]: {
                        up: (e) => ({...e, edgeScrollSpeed: 1}),
                        down: ({edgeScrollSpeed: e, ...t}) => t,
                    },
                },
            }),
            L4 = [
                "#FF802B",
                "#EC5E41",
                "#F2555A",
                "#F04F88",
                "#E34BA9",
                "#BD54C6",
                "#9D5BD2",
                "#7B66DC",
                "#02B1CC",
                "#11B3A3",
                "#39B178",
                "#55B467",
            ];
        function JB() {
            return L4[Math.floor(Math.random() * L4.length)];
        }
        function eU() {
            var e, t;
            return typeof window > "u"
                ? !1
                : ((t =
                (e = window.matchMedia) == null
                    ? void 0
                    : e.call(window, "(prefers-color-scheme: dark)")) == null
                ? void 0
                : t.matches) ?? !1;
        }
        function tU() {
            var e, t;
            return typeof window > "u"
                ? !1
                : ((t =
                (e = window.matchMedia) == null
                    ? void 0
                    : e.call(window, "(prefers-reduced-motion: reduce)")) ==
            null
                ? void 0
                : t.matches) ?? !1;
        }
        const ir = Object.freeze({
            name: "New User",
            locale: KL(),
            color: JB(),
            isDarkMode: !1,
            edgeScrollSpeed: 1,
            animationSpeed: tU() ? 0 : 1,
            isSnapMode: !1,
        });
        function Hf() {
            return {id: He()};
        }
        function j4(e) {
            if (
                e === null ||
                typeof e != "object" ||
                !("version" in e) ||
                !("user" in e) ||
                typeof e.version != "number"
            )
                return Hf();
            const t = wy({
                value: e.user,
                fromVersion: e.version,
                toVersion: Uf.currentVersion ?? 0,
                migrations: Uf,
            });
            if (t.type === "error") return Hf();
            try {
                D4.validate(t.value);
            } catch {
                return Hf();
            }
            return t.value;
        }
        function nU() {
            var t;
            const e =
                typeof window > "u"
                    ? null
                    : JSON.parse(
                    ((t = window == null ? void 0 : window.localStorage) ==
                    null
                        ? void 0
                        : t.getItem(O4)) || "null"
                ) ?? null;
            return j4(e);
        }
        const gu = Tn("globalUserData", nU());
        function rU() {
            typeof window < "u" &&
            window.localStorage &&
            window.localStorage.setItem(
                O4,
                JSON.stringify({version: Uf.currentVersion, user: gu.get()})
            );
        }
        function N4(e) {
            D4.validate(e), gu.set(e), rU(), iU();
        }
        const oU = typeof process < "u" && !1,
            Fl =
                typeof BroadcastChannel < "u" && !oU
                    ? new BroadcastChannel("tldraw-user-sync")
                    : null;
        Fl == null ||
        Fl.addEventListener("message", (e) => {
            const t = e.data;
            (t == null ? void 0 : t.type) === B4 &&
            (t == null ? void 0 : t.origin) !== F4 &&
            gu.set(j4(t.data));
        });
        const F4 = He(),
            B4 = "tldraw-user-preferences-change";
        function iU() {
            Fl == null ||
            Fl.postMessage({
                type: B4,
                origin: F4,
                data: {user: gu.get(), version: Uf.currentVersion},
            });
        }
        function vu() {
            return gu.get();
        }
        function U4(e = {}) {
            return {
                derivePresenceState:
                    e.derivePresenceState ?? (() => Q("presence", () => null)),
                userPreferences:
                    e.userPreferences ?? Q("userPreferences", () => vu()),
                setUserPreferences: e.setUserPreferences ?? N4,
            };
        }
        var H4 = {exports: {}};
        (function (e) {
            var t = Object.prototype.hasOwnProperty,
                n = "~";
            function r() {}
            Object.create &&
            ((r.prototype = Object.create(null)),
            new r().__proto__ || (n = !1));
            function o(l, c, d) {
                (this.fn = l), (this.context = c), (this.once = d || !1);
            }
            function i(l, c, d, u, h) {
                if (typeof d != "function")
                    throw new TypeError("The listener must be a function");
                var p = new o(d, u || l, h),
                    m = n ? n + c : c;
                return (
                    l._events[m]
                        ? l._events[m].fn
                            ? (l._events[m] = [l._events[m], p])
                            : l._events[m].push(p)
                        : ((l._events[m] = p), l._eventsCount++),
                        l
                );
            }
            function a(l, c) {
                --l._eventsCount === 0
                    ? (l._events = new r())
                    : delete l._events[c];
            }
            function s() {
                (this._events = new r()), (this._eventsCount = 0);
            }
            (s.prototype.eventNames = function () {
                var c = [],
                    d,
                    u;
                if (this._eventsCount === 0) return c;
                for (u in (d = this._events))
                    t.call(d, u) && c.push(n ? u.slice(1) : u);
                return Object.getOwnPropertySymbols
                    ? c.concat(Object.getOwnPropertySymbols(d))
                    : c;
            }),
                (s.prototype.listeners = function (c) {
                    var d = n ? n + c : c,
                        u = this._events[d];
                    if (!u) return [];
                    if (u.fn) return [u.fn];
                    for (var h = 0, p = u.length, m = new Array(p); h < p; h++)
                        m[h] = u[h].fn;
                    return m;
                }),
                (s.prototype.listenerCount = function (c) {
                    var d = n ? n + c : c,
                        u = this._events[d];
                    return u ? (u.fn ? 1 : u.length) : 0;
                }),
                (s.prototype.emit = function (c, d, u, h, p, m) {
                    var f = n ? n + c : c;
                    if (!this._events[f]) return !1;
                    var g = this._events[f],
                        b = arguments.length,
                        x,
                        S;
                    if (g.fn) {
                        switch (
                            (g.once && this.removeListener(c, g.fn, void 0, !0), b)
                            ) {
                            case 1:
                                return g.fn.call(g.context), !0;
                            case 2:
                                return g.fn.call(g.context, d), !0;
                            case 3:
                                return g.fn.call(g.context, d, u), !0;
                            case 4:
                                return g.fn.call(g.context, d, u, h), !0;
                            case 5:
                                return g.fn.call(g.context, d, u, h, p), !0;
                            case 6:
                                return g.fn.call(g.context, d, u, h, p, m), !0;
                        }
                        for (S = 1, x = new Array(b - 1); S < b; S++)
                            x[S - 1] = arguments[S];
                        g.fn.apply(g.context, x);
                    } else {
                        var _ = g.length,
                            k;
                        for (S = 0; S < _; S++)
                            switch (
                                (g[S].once &&
                                this.removeListener(c, g[S].fn, void 0, !0),
                                    b)
                                ) {
                                case 1:
                                    g[S].fn.call(g[S].context);
                                    break;
                                case 2:
                                    g[S].fn.call(g[S].context, d);
                                    break;
                                case 3:
                                    g[S].fn.call(g[S].context, d, u);
                                    break;
                                case 4:
                                    g[S].fn.call(g[S].context, d, u, h);
                                    break;
                                default:
                                    if (!x)
                                        for (
                                            k = 1, x = new Array(b - 1);
                                            k < b;
                                            k++
                                        )
                                            x[k - 1] = arguments[k];
                                    g[S].fn.apply(g[S].context, x);
                            }
                    }
                    return !0;
                }),
                (s.prototype.on = function (c, d, u) {
                    return i(this, c, d, u, !1);
                }),
                (s.prototype.once = function (c, d, u) {
                    return i(this, c, d, u, !0);
                }),
                (s.prototype.removeListener = function (c, d, u, h) {
                    var p = n ? n + c : c;
                    if (!this._events[p]) return this;
                    if (!d) return a(this, p), this;
                    var m = this._events[p];
                    if (m.fn)
                        m.fn === d &&
                        (!h || m.once) &&
                        (!u || m.context === u) &&
                        a(this, p);
                    else {
                        for (var f = 0, g = [], b = m.length; f < b; f++)
                            (m[f].fn !== d ||
                                (h && !m[f].once) ||
                                (u && m[f].context !== u)) &&
                            g.push(m[f]);
                        g.length
                            ? (this._events[p] = g.length === 1 ? g[0] : g)
                            : a(this, p);
                    }
                    return this;
                }),
                (s.prototype.removeAllListeners = function (c) {
                    var d;
                    return (
                        c
                            ? ((d = n ? n + c : c), this._events[d] && a(this, d))
                            : ((this._events = new r()), (this._eventsCount = 0)),
                            this
                    );
                }),
                (s.prototype.off = s.prototype.removeListener),
                (s.prototype.addListener = s.prototype.on),
                (s.prefixed = n),
                (s.EventEmitter = s),
                (e.exports = s);
        })(H4);
        var aU = H4.exports;
        function ar({children: e, className: t = "", ...n}) {
            return v.jsx("svg", {
                ...n,
                className: `tl-svg-container ${t}`,
                children: e,
            });
        }
        class as {
            constructor(t) {
                w(this, "isFilled", !1);
                w(this, "isClosed", !0);
                w(this, "isLabel", !1);
                w(this, "isSnappable", !0);
                w(this, "_vertices");
                w(this, "_bounds");
                w(this, "_snapPoints");
                w(this, "_area");
                (this.isFilled = t.isFilled),
                    (this.isClosed = t.isClosed),
                    (this.isSnappable = t.isSnappable ?? !1),
                    (this.isLabel = t.isLabel ?? !1);
            }
            hitTestPoint(t, n = 0, r = !1) {
                return this.distanceToPoint(t, r) <= n;
            }
            distanceToPoint(t, n = !1) {
                const r = t.dist(this.nearestPoint(t));
                return this.isClosed && (this.isFilled || n) && _o(t, this.vertices)
                    ? -r
                    : r;
            }
            distanceToLineSegment(t, n) {
                const r = this.nearestPointOnLineSegment(t, n),
                    o = E.DistanceToLineSegment(t, n, r);
                return this.isClosed && this.isFilled && _o(r, this.vertices)
                    ? -o
                    : o;
            }
            hitTestLineSegment(t, n, r = 0) {
                return this.distanceToLineSegment(t, n) <= r;
            }
            nearestPointOnLineSegment(t, n) {
                let r = 1 / 0,
                    o;
                for (let i = 0; i < this.vertices.length; i++) {
                    const a = this.vertices[i],
                        s = E.DistanceToLineSegment(t, n, a);
                    s < r && ((r = s), (o = a));
                }
                if (!o) throw Error("nearest point not found");
                return o;
            }
            isPointInBounds(t, n = 0) {
                const {bounds: r} = this;
                return !(
                    t.x < r.minX - n ||
                    t.y < r.minY - n ||
                    t.x > r.maxX + n ||
                    t.y > r.maxY + n
                );
            }
            get vertices() {
                return (
                    this._vertices || (this._vertices = this.getVertices()),
                        this._vertices
                );
            }
            getBounds() {
                return ce.FromPoints(this.vertices);
            }
            get bounds() {
                return (
                    this._bounds || (this._bounds = this.getBounds()), this._bounds
                );
            }
            get snapPoints() {
                return (
                    this._snapPoints || (this._snapPoints = this.bounds.snapPoints),
                        this._snapPoints
                );
            }
            get center() {
                return this.bounds.center;
            }
            get area() {
                return this._area || (this._area = this.getArea()), this._area;
            }
            getArea() {
                if (!this.isClosed) return 0;
                const {vertices: t} = this;
                let n = 0;
                for (let r = 0, o = t.length; r < o; r++) {
                    const i = t[r],
                        a = t[(r + 1) % o];
                    n += i.x * a.y - a.x * i.y;
                }
                return n / 2;
            }
            toSimpleSvgPath() {
                let t = "";
                const {vertices: n} = this,
                    r = n.length;
                if (r === 0) return t;
                t += `M${n[0].x},${n[0].y}`;
                for (let o = 1; o < r; o++) t += `L${n[o].x},${n[o].y}`;
                return this.isClosed && (t += "Z"), t;
            }
        }
        class oa extends as {
            constructor(n) {
                super({...n, isClosed: !0, isFilled: !1});
                w(this, "children");
                const {children: r} = n;
                if (r.length === 0)
                    throw Error("Group2d must have at least one child");
                this.children = r;
            }
            getVertices() {
                return this.children
                    .filter((n) => !n.isLabel)
                    .flatMap((n) => n.vertices);
            }
            nearestPoint(n) {
                let r = 1 / 0,
                    o;
                const {children: i} = this;
                if (i.length === 0) throw Error("no children");
                for (const a of i) {
                    const s = a.nearestPoint(n),
                        l = s.dist(n);
                    l < r && ((r = l), (o = s));
                }
                if (!o) throw Error("nearest point not found");
                return o;
            }
            distanceToPoint(n, r = !1) {
                return Math.min(
                    ...this.children.map((o, i) => o.distanceToPoint(n, r || i > 0))
                );
            }
            hitTestPoint(n, r, o) {
                return !!this.children
                    .filter((i) => !i.isLabel)
                    .find((i) => i.hitTestPoint(n, r, o));
            }
            hitTestLineSegment(n, r, o) {
                return !!this.children
                    .filter((i) => !i.isLabel)
                    .find((i) => i.hitTestLineSegment(n, r, o));
            }
            getArea() {
                return this.children[0].area;
            }
            toSimpleSvgPath() {
                let n = "";
                for (const o of this.children) n += o.toSimpleSvgPath();
                const r = ce.FromPoints(this.vertices).corners;
                for (let o = 0, i = r.length; o < i; o++) {
                    const a = r[o],
                        s = r[(o - 1 + i) % i],
                        l = a.dist(s),
                        c = r[(o + 1) % i],
                        d = a.dist(c),
                        u = a.clone().lrp(s, 4 / l),
                        h = a,
                        p = a.clone().lrp(c, 4 / d);
                    n += `M${u.x},${u.y} L${h.x},${h.y} L${p.x},${p.y} `;
                }
                return n;
            }
        }
        function n1(e, t, n, r) {
            const o = e.x - n.x,
                i = e.y - n.y,
                a = r.x - n.x,
                s = r.y - n.y,
                l = t.x - e.x,
                c = t.y - e.y,
                d = a * i - s * o,
                u = l * i - c * o,
                h = s * l - a * c;
            if (d === 0 || u === 0 || h === 0) return null;
            if (h !== 0) {
                const p = d / h,
                    m = u / h;
                if (0 <= p && p <= 1 && 0 <= m && m <= 1)
                    return E.AddXY(e, p * l, p * c);
            }
            return null;
        }
        function Vf(e, t, n, r) {
            const o = (t.x - e.x) * (t.x - e.x) + (t.y - e.y) * (t.y - e.y),
                i = 2 * ((t.x - e.x) * (e.x - n.x) + (t.y - e.y) * (e.y - n.y)),
                a =
                    n.x * n.x +
                    n.y * n.y +
                    e.x * e.x +
                    e.y * e.y -
                    2 * (n.x * e.x + n.y * e.y) -
                    r * r,
                s = i * i - 4 * o * a;
            if (s < 0 || s === 0) return null;
            const l = Math.sqrt(s),
                c = (-i + l) / (2 * o),
                d = (-i - l) / (2 * o);
            if ((c < 0 || c > 1) && (d < 0 || d > 1)) return null;
            const u = [];
            return (
                0 <= c && c <= 1 && u.push(E.Lrp(e, t, c)),
                0 <= d && d <= 1 && u.push(E.Lrp(e, t, d)),
                    u.length === 0 ? null : u
            );
        }
        function V4(e, t, n) {
            const r = [];
            let o;
            for (let i = 0, a = n.length - 1; i < a; i++)
                (o = n1(e, t, n[i], n[i + 1])), o && r.push(o);
            return r.length === 0 ? null : r;
        }
        function sU(e, t, n) {
            const r = [];
            let o;
            for (let i = 1, a = n.length; i < a + 1; i++)
                (o = n1(e, t, n[i - 1], n[i % n.length])), o && r.push(o);
            return r.length === 0 ? null : r;
        }
        function lU(e, t, n, r) {
            let o = n.x - e.x,
                i = n.y - e.y;
            const a = Math.sqrt(o * o + i * i),
                s = (a * a - r * r + t * t) / (2 * a),
                l = Math.sqrt(t * t - s * s);
            return (
                (o /= a),
                    (i /= a),
                    [
                        new E(e.x + o * s - i * l, e.y + i * s + o * l),
                        new E(e.x + o * s + i * l, e.y + i * s - o * l),
                    ]
            );
        }
        function K4(e, t, n) {
            const r = [];
            let o, i, a;
            for (let s = 0, l = n.length; s < l; s++)
                (o = n[s]),
                    (i = n[(s + 1) % n.length]),
                    (a = Vf(o, i, e, t)),
                a && r.push(...a);
            return r.length === 0 ? null : r;
        }
        function W4(e, t, n) {
            const r = [];
            let o, i, a;
            for (let s = 1, l = n.length; s < l; s++)
                (o = n[s - 1]), (i = n[s]), (a = Vf(o, i, e, t)), a && r.push(...a);
            return r.length === 0 ? null : r;
        }
        function Kf(e, t, n) {
            return (n.y - e.y) * (t.x - e.x) > (t.y - e.y) * (n.x - e.x);
        }
        function Y4(e, t, n, r) {
            return Kf(e, n, r) !== Kf(t, n, r) && Kf(e, t, n) !== Kf(e, t, r);
        }
        function r1(e, t) {
            const n = new Map();
            let r, o, i, a;
            for (let s = 0, l = e.length; s < l; s++)
                if (((r = e[s]), _o(r, t))) {
                    const c = o1(r);
                    n.has(c) || n.set(c, r);
                }
            for (let s = 0, l = t.length; s < l; s++)
                if (((r = t[s]), _o(r, e))) {
                    const c = o1(r);
                    n.has(c) || n.set(c, r);
                }
            for (let s = 0, l = e.length; s < l; s++) {
                (r = e[s]), (o = e[(s + 1) % e.length]);
                for (let c = 0, d = t.length; c < d; c++) {
                    (i = t[c]), (a = t[(c + 1) % t.length]);
                    const u = n1(r, o, i, a);
                    if (u !== null) {
                        const h = o1(u);
                        n.has(h) || n.set(h, u);
                    }
                }
            }
            return n.size === 0 ? null : cU([...n.values()]);
        }
        function o1(e) {
            return `${e.x},${e.y}`;
        }
        function cU(e) {
            const t = E.Average(e);
            return e.sort((n, r) => E.Angle(t, n) - E.Angle(t, r));
        }
        function dU(e, t) {
            let n, r, o, i;
            for (let a = 0, s = e.length; a < s; a++) {
                (n = e[a]), (r = e[(a + 1) % s]);
                for (let l = 0, c = t.length; l < c; l++)
                    if (((o = t[l]), (i = t[(l + 1) % c]), Y4(n, r, o, i)))
                        return !0;
            }
            return !1;
        }
        class Wf extends as {
            constructor(n) {
                super({...n, isClosed: !1, isFilled: !1});
                w(this, "start");
                w(this, "end");
                w(this, "d");
                w(this, "u");
                w(this, "ul");
                w(this, "_length");
                const {start: r, end: o} = n;
                (this.start = r),
                    (this.end = o),
                    (this.d = r.clone().sub(o)),
                    (this.u = this.d.clone().uni()),
                    (this.ul = this.u.len());
            }
            get length() {
                return this._length ? this._length : this.d.len();
            }
            midPoint() {
                return this.start.lrp(this.end, 0.5);
            }
            getVertices() {
                return [this.start, this.end];
            }
            nearestPoint(n) {
                const {start: r, end: o, u: i, ul: a} = this;
                if (a === 0) return r;
                const s = E.Sub(n, r).dpr(i) / a,
                    l = r.x + i.x * s;
                if (l < Math.min(r.x, o.x)) return r.x < o.x ? r : o;
                if (l > Math.max(r.x, o.x)) return r.x > o.x ? r : o;
                const c = r.y + i.y * s;
                return c < Math.min(r.y, o.y)
                    ? r.y < o.y
                        ? r
                        : o
                    : c > Math.max(r.y, o.y)
                        ? r.y > o.y
                            ? r
                            : o
                        : new E(l, c);
            }
            hitTestLineSegment(n, r, o) {
                return Y4(n, r, this.start, this.end);
            }
        }
        class ss extends as {
            constructor(n) {
                super({isClosed: !1, isFilled: !1, ...n});
                w(this, "points");
                w(this, "_segments");
                w(this, "_length");
                const {points: r} = n;
                this.points = r;
            }
            get segments() {
                if (!this._segments) {
                    this._segments = [];
                    const {vertices: n} = this;
                    for (let r = 0, o = n.length - 1; r < o; r++) {
                        const i = n[r],
                            a = n[r + 1];
                        this._segments.push(new Wf({start: i, end: a}));
                    }
                    this.isClosed &&
                    this._segments.push(
                        new Wf({start: n[n.length - 1], end: n[0]})
                    );
                }
                return this._segments;
            }
            get length() {
                return (
                    this._length ||
                    (this._length = this.segments.reduce(
                        (n, r) => n + r.length,
                        0
                    )),
                        this._length
                );
            }
            getVertices() {
                return this.points;
            }
            nearestPoint(n) {
                const {segments: r} = this;
                let o = this.points[0],
                    i = 1 / 0,
                    a,
                    s;
                for (let l = 0; l < r.length; l++)
                    (a = r[l].nearestPoint(n)),
                        (s = a.dist(n)),
                    s < i && ((o = a), (i = s));
                return o;
            }
            hitTestLineSegment(n, r, o) {
                return this.segments.some((i) => i.hitTestLineSegment(n, r, o));
            }
        }
        class Ot extends ss {
            constructor(t) {
                super({...t}), (this.isClosed = !0);
            }
        }
        class ia extends Ot {
            constructor(n) {
                const {x: r = 0, y: o = 0, width: i, height: a} = n;
                super({
                    ...n,
                    points: [
                        new E(r, o),
                        new E(r + i, o),
                        new E(r + i, o + a),
                        new E(r, o + a),
                    ],
                });
                w(this, "x");
                w(this, "y");
                w(this, "w");
                w(this, "h");
                (this.x = r), (this.y = o), (this.w = i), (this.h = a);
            }
            getBounds() {
                return new ce(this.x, this.y, this.w, this.h);
            }
        }
        class qr {
            constructor(t) {
                w(this, "canSnap", () => !0);
                w(this, "canScroll", () => !1);
                w(this, "canUnmount", () => !0);
                w(this, "canBind", (t, n) => !0);
                w(this, "canEdit", () => !1);
                w(this, "canResize", () => !0);
                w(this, "canEditInReadOnly", () => !1);
                w(this, "canCrop", () => !1);
                w(this, "hideResizeHandles", () => !1);
                w(this, "hideRotateHandle", () => !1);
                w(this, "hideSelectionBoundsBg", () => !1);
                w(this, "hideSelectionBoundsFg", () => !1);
                w(this, "isAspectRatioLocked", () => !1);
                w(this, "onBeforeCreate");
                w(this, "onBeforeUpdate");
                w(this, "onDragShapesOver");
                w(this, "onDragShapesOut");
                w(this, "onDropShapesOver");
                w(this, "onResizeStart");
                w(this, "onResize");
                w(this, "onResizeEnd");
                w(this, "onTranslateStart");
                w(this, "onTranslate");
                w(this, "onTranslateEnd");
                w(this, "onRotateStart");
                w(this, "onRotate");
                w(this, "onRotateEnd");
                w(this, "onHandleChange");
                w(this, "onBindingChange");
                w(this, "onChildrenChange");
                w(this, "onDoubleClickHandle");
                w(this, "onDoubleClickEdge");
                w(this, "onDoubleClick");
                w(this, "onClick");
                w(this, "onEditEnd");
                this.editor = t;
            }
            providesBackgroundForChildren(t) {
                return !1;
            }
            getOutlineSegments(t) {
                return [this.editor.getShapeGeometry(t).vertices];
            }
            canReceiveNewChildrenOfType(t, n) {
                return !1;
            }
            canDropShapes(t, n) {
                return !1;
            }
            expandSelectionOutlinePx(t) {
                return 0;
            }
            getCanvasSvgDefs() {
                return [];
            }
        }
        w(qr, "props"), w(qr, "migrations"), w(qr, "type");
        function uU(e, t, n = {}) {
            const {
                closed: r = !1,
                snap: o = 1,
                start: i = "outset",
                end: a = "outset",
                lengthRatio: s = 2,
                style: l = "dashed",
            } = n;
            let c = 0,
                d = 0,
                u = 1,
                h = 0,
                p = 0;
            switch (l) {
                case "dashed": {
                    (u = 1), (c = Math.min(t * s, e / 4));
                    break;
                }
                case "dotted": {
                    (u = 100), (c = t / u);
                    break;
                }
                default:
                    return {strokeDasharray: "none", strokeDashoffset: "none"};
            }
            return (
                r ||
                (i === "outset"
                    ? ((e += c / 2), (p += c / 2))
                    : i === "skip" && ((e -= c), (p -= c)),
                    a === "outset" ? (e += c / 2) : a === "skip" && (e -= c)),
                    (d = Math.floor(e / c / (2 * u))),
                    (d -= d % o),
                    d < 3 && l === "dashed"
                        ? e / t < 5
                            ? ((c = e), (d = 1), (h = 0))
                            : ((c = e * 0.333), (h = e * 0.333))
                        : ((d = Math.max(d, 3)),
                            (c = e / d / (2 * u)),
                            r
                                ? ((p = c / 2), (h = (e - d * c) / d))
                                : (h = (e - d * c) / Math.max(1, d - 1))),
                    {strokeDasharray: [c, h].join(" "), strokeDashoffset: p.toString()}
            );
        }
        function G4({bounds: e, className: t}) {
            const n = W(),
                r = X("zoom level", () => n.getZoomLevel(), [n]);
            return v.jsx("g", {
                className: t,
                pointerEvents: "none",
                strokeLinecap: "round",
                strokeLinejoin: "round",
                children: e.sides.map((o, i) => {
                    const {strokeDasharray: a, strokeDashoffset: s} = uU(
                        o[0].dist(o[1]),
                        1 / r,
                        {style: "dashed", lengthRatio: 4}
                    );
                    return v.jsx(
                        "line",
                        {
                            x1: o[0].x,
                            y1: o[0].y,
                            x2: o[1].x,
                            y2: o[1].y,
                            strokeDasharray: a,
                            strokeDashoffset: s,
                        },
                        i
                    );
                }),
            });
        }
        class Yf extends qr {
            constructor() {
                super(...arguments);
                w(this, "hideSelectionBoundsFg", () => !0);
                w(this, "canBind", () => !1);
                w(this, "onChildrenChange", (n) => {
                    const r = this.editor.getSortedChildIdsForParent(n.id);
                    if (r.length === 0) {
                        this.editor.getCurrentPageState().focusedGroupId === n.id &&
                        this.editor.popFocusedGroupId(),
                            this.editor.deleteShapes([n.id]);
                        return;
                    } else if (r.length === 1) {
                        this.editor.getCurrentPageState().focusedGroupId === n.id &&
                        this.editor.popFocusedGroupId(),
                            this.editor.reparentShapes(r, n.parentId),
                            this.editor.deleteShapes([n.id]);
                        return;
                    }
                });
            }
            getDefaultProps() {
                return {};
            }
            getGeometry(n) {
                const r = this.editor.getSortedChildIdsForParent(n.id);
                return r.length === 0
                    ? new ia({width: 1, height: 1, isFilled: !1})
                    : new oa({
                        children: r.map((o) => {
                            const i = this.editor.getShape(o),
                                a = this.editor.getShapeGeometry(o),
                                s = this.editor
                                    .getShapeLocalTransform(i)
                                    .applyToPoints(a.vertices);
                            return a.isClosed
                                ? new Ot({points: s, isFilled: !0})
                                : new ss({points: s});
                        }),
                    });
            }
            component(n) {
                const r = this.editor.getErasingShapeIds().includes(n.id),
                    {hintingShapeIds: o} = this.editor.getCurrentPageState(),
                    i =
                        o.length > 0 &&
                        o.some(
                            (l) =>
                                l !== n.id &&
                                this.editor.isShapeOfType(
                                    this.editor.getShape(l),
                                    "group"
                                )
                        ),
                    a = this.editor.getCurrentPageState().focusedGroupId !== n.id;
                if (!r && (a || i)) return null;
                const s = this.editor.getShapeGeometry(n).bounds;
                return v.jsx(ar, {
                    id: n.id,
                    children: v.jsx(G4, {className: "tl-group", bounds: s}),
                });
            }
            indicator(n) {
                const r = this.editor.getShapeGeometry(n).bounds;
                return v.jsx(G4, {className: "", bounds: r});
            }
        }
        w(Yf, "type", "group"), w(Yf, "props", TL), w(Yf, "migrations", $L);
        const X4 = [Yf],
            hU = new Set(X4.map((e) => e.type));
        function q4(e) {
            const t = [...X4],
                n = new Set();
            for (const r of e) {
                if (hU.has(r.type))
                    throw new Error(
                        `Shape type "${r.type}" is a core shapes type and cannot be overridden`
                    );
                if (n.has(r.type))
                    throw new Error(
                        `Shape type "${r.type}" is defined more than once`
                    );
                t.push(r), n.add(r.type);
            }
            return t;
        }
        function Z4(e, t) {
            if (!t) return !1;
            switch (e.type) {
                case "mixed":
                    return t.type === "mixed";
                case "shared":
                    return t.type === "shared" && e.value === t.value;
                default:
                    throw _l(e);
            }
        }
        class pU {
            constructor(t) {
                w(this, "map");
                this.map = new Map(t);
            }
            get(t) {
                return this.map.get(t);
            }
            getAsKnownValue(t) {
                const n = this.get(t);
                if (n && n.type !== "mixed") return n.value;
            }
            get size() {
                return this.map.size;
            }
            equals(t) {
                if (this.size !== t.size) return !1;
                const n = new Set();
                for (const [r, o] of this) {
                    if (!Z4(o, t.get(r))) return !1;
                    n.add(r);
                }
                for (const [r, o] of t)
                    if (!n.has(r) && !Z4(o, this.get(r))) return !1;
                return !0;
            }
            keys() {
                return this.map.keys();
            }
            values() {
                return this.map.values();
            }
            entries() {
                return this.map.entries();
            }
            [Symbol.iterator]() {
                return this.map[Symbol.iterator]();
            }
        }
        class i1 extends pU {
            set(t, n) {
                this.map.set(t, n);
            }
            applyValue(t, n) {
                const r = this.get(t);
                if (!r) {
                    this.set(t, {type: "shared", value: n});
                    return;
                }
                switch (r.type) {
                    case "mixed":
                        return;
                    case "shared":
                        r.value !== n && this.set(t, {type: "mixed"});
                        return;
                    default:
                        _l(r, "type");
                }
            }
        }
        class a1 {
            constructor() {
                w(this, "items", new WeakMap());
            }
            get(t, n) {
                return (
                    this.items.has(t) || this.items.set(t, n(t)), this.items.get(t)
                );
            }
            access(t) {
                return this.items.get(t);
            }
            set(t, n) {
                this.items.set(t, n);
            }
            has(t) {
                return this.items.has(t);
            }
            invalidate(t) {
                this.items.delete(t);
            }
            bust() {
                this.items = new WeakMap();
            }
        }
        function fU(e, t, n) {
            return fetch(e)
                .then(function (r) {
                    return r.arrayBuffer();
                })
                .then(function (r) {
                    return new File([r], t, {type: n});
                });
        }
        function mU(e, t) {
            var o;
            let n = e;
            const r = new Set(t);
            for (; r.has(n); )
                n =
                    (o = /^.*(\d+)$/.exec(n)) != null && o[1]
                        ? n.replace(/(\d+)(?=\D?)$/, (i) => (+i + 1).toString())
                        : `${n} 1`;
            return n;
        }
        const sr = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz",
            gU = "a0",
            Q4 = "A00000000000000000000000000";
        function J4(e) {
            if (e >= "a" && e <= "z") return e.charCodeAt(0) - 97 + 2;
            if (e >= "A" && e <= "Z") return 90 - e.charCodeAt(0) + 2;
            throw new Error("Invalid index key head: " + e);
        }
        function eE(e) {
            if (e.length !== J4(e.charAt(0)))
                throw new Error("invalid integer part of index key: " + e);
        }
        function tE(e) {
            if (e === void 0) throw Error("n is undefined");
        }
        function nE(e) {
            eE(e);
            const [t, ...n] = e.split("");
            let r = !0;
            for (let o = n.length - 1; r && o >= 0; o--) {
                const i = sr.indexOf(n[o]) + 1;
                i === sr.length ? (n[o] = "0") : ((n[o] = sr.charAt(i)), (r = !1));
            }
            if (r) {
                if (t === "Z") return "a0";
                if (t === "z") return;
                const o = String.fromCharCode(t.charCodeAt(0) + 1);
                return o > "a" ? n.push("0") : n.pop(), o + n.join("");
            } else return t + n.join("");
        }
        function vU(e) {
            eE(e);
            const [t, ...n] = e.split("");
            let r = !0;
            for (let o = n.length - 1; r && o >= 0; o--) {
                const i = sr.indexOf(n[o]) - 1;
                i === -1
                    ? (n[o] = sr.slice(-1))
                    : ((n[o] = sr.charAt(i)), (r = !1));
            }
            if (r) {
                if (t === "a") return "Z" + sr.slice(-1);
                if (t === "A") return;
                const o = String.fromCharCode(t.charCodeAt(0) - 1);
                return o < "Z" ? n.push(sr.slice(-1)) : n.pop(), o + n.join("");
            } else return t + n.join("");
        }
        function Bl(e, t) {
            if (t !== void 0 && e >= t) throw new Error(e + " >= " + t);
            if (e.slice(-1) === "0" || (t && t.slice(-1) === "0"))
                throw new Error("trailing zero");
            if (t) {
                let o = 0;
                for (; (e.charAt(o) || "0") === t.charAt(o); ) o++;
                if (o > 0) return t.slice(0, o) + Bl(e.slice(o), t.slice(o));
            }
            const n = e ? sr.indexOf(e.charAt(0)) : 0,
                r = t !== void 0 ? sr.indexOf(t.charAt(0)) : sr.length;
            if (r - n > 1) {
                const o = Math.round(0.5 * (n + r));
                return sr.charAt(o);
            } else
                return t && t.length > 1
                    ? t.slice(0, 1)
                    : sr.charAt(n) + Bl(e.slice(1), void 0);
        }
        function bu(e) {
            const t = J4(e.charAt(0));
            if (t > e.length) throw new Error("invalid index: " + e);
            return e.slice(0, t);
        }
        function rE(e) {
            if (e === Q4) throw new Error("invalid index: " + e);
            const t = bu(e);
            if (e.slice(t.length).slice(-1) === "0")
                throw new Error("invalid index: " + e);
        }
        function Ul(e, t) {
            if (
                (e !== void 0 && rE(e),
                t !== void 0 && rE(t),
                e !== void 0 && t !== void 0 && e >= t)
            )
                throw new Error(e + " >= " + t);
            if (e === void 0 && t === void 0) return gU;
            if (e === void 0) {
                if (t === void 0) throw Error("b is undefined");
                const s = bu(t),
                    l = t.slice(s.length);
                if (s === Q4) return s + Bl("", l);
                if (s < t) return s;
                const c = vU(s);
                return tE(c), c;
            }
            if (t === void 0) {
                const s = bu(e),
                    l = e.slice(s.length),
                    c = nE(s);
                return c === void 0 ? s + Bl(l, void 0) : c;
            }
            const n = bu(e),
                r = e.slice(n.length),
                o = bu(t),
                i = t.slice(o.length);
            if (n === o) return n + Bl(r, i);
            const a = nE(n);
            return tE(a), a < t ? a : n + Bl(r, void 0);
        }
        function aa(e, t, n) {
            if (n === 0) return [];
            if (n === 1) return [Ul(e, t)];
            if (t === void 0) {
                let i = Ul(e, t);
                const a = [i];
                for (let s = 0; s < n - 1; s++) (i = Ul(i, t)), a.push(i);
                return a;
            }
            if (e === void 0) {
                let i = Ul(e, t);
                const a = [i];
                for (let s = 0; s < n - 1; s++) (i = Ul(e, i)), a.push(i);
                return a.reverse(), a;
            }
            const r = Math.floor(n / 2),
                o = Ul(e, t);
            return [...aa(e, o, r), o, ...aa(o, t, n - r - 1)];
        }
        function Hl(e, t, n) {
            return aa(e, t, n);
        }
        function s1(e, t) {
            return aa(e, void 0, t);
        }
        function yu(e, t) {
            return aa(e, t, 1)[0];
        }
        function di(e) {
            return aa(e, void 0, 1)[0];
        }
        function bU(e) {
            return aa(void 0, e, 1)[0];
        }
        function oE(e, t = "a1") {
            return [t, ...aa(t, void 0, e)];
        }
        function pn(e, t) {
            return e.index < t.index ? -1 : e.index > t.index ? 1 : 0;
        }
        function Gf(e, t, n) {
            if (n.length === 0) return [];
            const r = new Map();
            for (const i of pe(n.map((a) => e.getShape(a)))) {
                const {parentId: a} = i;
                r.has(a) ||
                r.set(a, {
                    children: pe(
                        e
                            .getSortedChildIdsForParent(a)
                            .map((s) => e.getShape(s))
                    ),
                    moving: new Set(),
                }),
                    r.get(a).moving.add(i);
            }
            const o = [];
            switch (t) {
                case "toBack": {
                    r.forEach(({moving: i, children: a}) => yU(i, a, o));
                    break;
                }
                case "toFront": {
                    r.forEach(({moving: i, children: a}) => wU(i, a, o));
                    break;
                }
                case "forward": {
                    r.forEach(({moving: i, children: a}) => xU(i, a, o));
                    break;
                }
                case "backward": {
                    r.forEach(({moving: i, children: a}) => SU(i, a, o));
                    break;
                }
            }
            return o;
        }
        function yU(e, t, n) {
            const r = t.length;
            if (e.size === r) return;
            let o, i;
            for (let a = 0; a < r; a++) {
                const s = t[a];
                if (e.has(s)) (o = s.index), e.delete(s);
                else {
                    i = s.index;
                    break;
                }
            }
            if (e.size !== 0) {
                const a = Hl(o, i, e.size);
                n.push(
                    ...Array.from(e.values())
                        .sort(pn)
                        .map((s, l) => ({...s, index: a[l]}))
                );
            }
        }
        function wU(e, t, n) {
            const r = t.length;
            if (e.size === r) return;
            let o, i;
            for (let a = r - 1; a > -1; a--) {
                const s = t[a];
                if (e.has(s)) (i = s.index), e.delete(s);
                else {
                    o = s.index;
                    break;
                }
            }
            if (e.size !== 0) {
                const a = Hl(o, i, e.size);
                n.push(
                    ...Array.from(e.values())
                        .sort(pn)
                        .map((s, l) => ({...s, index: a[l]}))
                );
            }
        }
        function xU(e, t, n) {
            var i;
            const r = t.length;
            if (e.size === r) return;
            let o = {name: "skipping"};
            for (let a = 0; a < r; a++) {
                const s = e.has(t[a]);
                switch (o.name) {
                    case "skipping": {
                        if (!s) continue;
                        o = {name: "selecting", selectIndex: a};
                        break;
                    }
                    case "selecting": {
                        if (s) continue;
                        const {selectIndex: l} = o;
                        Hl(
                            t[a].index,
                            (i = t[a + 1]) == null ? void 0 : i.index,
                            a - l
                        ).forEach((c, d) => n.push({...t[l + d], index: c})),
                            (o = {name: "skipping"});
                        break;
                    }
                }
            }
        }
        function SU(e, t, n) {
            var i;
            const r = t.length;
            if (e.size === r) return;
            let o = {name: "skipping"};
            for (let a = r - 1; a > -1; a--) {
                const s = e.has(t[a]);
                switch (o.name) {
                    case "skipping": {
                        if (!s) continue;
                        o = {name: "selecting", selectIndex: a};
                        break;
                    }
                    case "selecting": {
                        if (s) continue;
                        Hl(
                            (i = t[a - 1]) == null ? void 0 : i.index,
                            t[a].index,
                            o.selectIndex - a
                        ).forEach((l, c) => {
                            n.push({...t[a + c + 1], index: l});
                        }),
                            (o = {name: "skipping"});
                        break;
                    }
                }
            }
        }
        function iE({editor: e}) {
            const t = e.getSelectedShapes(),
                n = e.getSelectionRotation(),
                r = e.getSelectionRotatedPageBounds(),
                {
                    inputs: {originPagePoint: o},
                } = e;
            if (!r) return null;
            const i = r.center.clone().rotWith(r.point, n);
            return {
                selectionPageCenter: i,
                initialCursorAngle: i.angle(o),
                initialSelectionRotation: n,
                shapeSnapshots: t.map((a) => ({
                    shape: na(a),
                    initialPagePoint: e.getShapePageTransform(a.id).point(),
                })),
            };
        }
        function Xf({delta: e, editor: t, snapshot: n, stage: r}) {
            const {selectionPageCenter: o, shapeSnapshots: i} = n;
            t.updateShapes(
                i.map(({shape: s, initialPagePoint: l}) => {
                    const c = kr(s.parentId)
                            ? t.getShapePageTransform(s.parentId)
                            : re.Identity(),
                        d = E.RotWith(l, o, e),
                        u = re.applyToPoint(re.Inverse(c), d),
                        h = Yr(s.rotation + e);
                    return {id: s.id, type: s.type, x: u.x, y: u.y, rotation: h};
                })
            );
            const a = [];
            i.forEach(({shape: s}) => {
                var u, h, p;
                const l = t.getShape(s.id);
                if (!l) return;
                const c = t.getShapeUtil(s);
                if (r === "start" || r === "one-off") {
                    const m = (u = c.onRotateStart) == null ? void 0 : u.call(c, s);
                    m && a.push(m);
                }
                const d = (h = c.onRotate) == null ? void 0 : h.call(c, s, l);
                if ((d && a.push(d), r === "end" || r === "one-off")) {
                    const m =
                        (p = c.onRotateEnd) == null ? void 0 : p.call(c, s, l);
                    m && a.push(m);
                }
            }),
            a.length > 0 && t.updateShapes(a);
        }
        const _U = (e) => {
                const {store: t} = e,
                    n = t.query.filterHistory("shape"),
                    r = t.query.records("shape", () => ({type: {eq: "arrow"}}));
                function o() {
                    const i = r.get(),
                        a = {};
                    for (const s of i) {
                        const {start: l, end: c} = s.props;
                        if (l.type === "binding") {
                            const d = a[l.boundShapeId];
                            d
                                ? d.push({arrowId: s.id, handleId: "start"})
                                : (a[l.boundShapeId] = [
                                    {arrowId: s.id, handleId: "start"},
                                ]);
                        }
                        if (c.type === "binding") {
                            const d = a[c.boundShapeId];
                            d
                                ? d.push({arrowId: s.id, handleId: "end"})
                                : (a[c.boundShapeId] = [
                                    {arrowId: s.id, handleId: "end"},
                                ]);
                        }
                    }
                    return a;
                }
                return Q("arrowBindingsIndex", (i, a) => {
                    if (Sl(i)) return o();
                    const s = i,
                        l = n.getDiffSince(a);
                    if (l === tr) return o();
                    let c;
                    function d(p) {
                        c || (c = {...s}),
                            c[p]
                                ? c[p] === s[p] && (c[p] = [...c[p]])
                                : (c[p] = []);
                    }
                    function u(p, m, f) {
                        d(p),
                            (c[p] = c[p].filter(
                                (g) => g.arrowId !== m || g.handleId !== f
                            )),
                        c[p].length === 0 && delete c[p];
                    }
                    function h(p, m, f) {
                        d(p), c[p].push({arrowId: m, handleId: f});
                    }
                    for (const p of l) {
                        for (const m of Object.values(p.added))
                            if (e.isShapeOfType(m, "arrow")) {
                                const {start: f, end: g} = m.props;
                                f.type === "binding" &&
                                h(f.boundShapeId, m.id, "start"),
                                g.type === "binding" &&
                                h(g.boundShapeId, m.id, "end");
                            }
                        for (const [m, f] of Object.values(p.updated))
                            if (
                                !(
                                    !e.isShapeOfType(m, "arrow") ||
                                    !e.isShapeOfType(f, "arrow")
                                )
                            )
                                for (const g of ["start", "end"]) {
                                    const b = m.props[g],
                                        x = f.props[g];
                                    b.type === "binding" && x.type === "point"
                                        ? u(b.boundShapeId, m.id, g)
                                        : b.type === "point" && x.type === "binding"
                                            ? h(x.boundShapeId, f.id, g)
                                            : b.type === "binding" &&
                                            x.type === "binding" &&
                                            b.boundShapeId !== x.boundShapeId &&
                                            (u(b.boundShapeId, m.id, g),
                                                h(x.boundShapeId, f.id, g));
                                }
                        for (const m of Object.values(p.removed))
                            if (e.isShapeOfType(m, "arrow")) {
                                const {start: f, end: g} = m.props;
                                f.type === "binding" &&
                                u(f.boundShapeId, m.id, "start"),
                                g.type === "binding" &&
                                u(g.boundShapeId, m.id, "end");
                            }
                    }
                    return c ?? s;
                });
            },
            kU = (e) => {
                const t = e.query.ids("shape");
                function n() {
                    const r = {},
                        o = t.get(),
                        i = Array(o.size);
                    return (
                        o.forEach((a) => i.push(e.get(a))),
                            i.sort(pn),
                            i.forEach((a) => {
                                r[a.parentId] || (r[a.parentId] = []),
                                    r[a.parentId].push(a.id);
                            }),
                            r
                    );
                }
                return Q("parentsToChildrenWithIndexes", (r, o) => {
                    if (Sl(r)) return n();
                    const i = e.history.getDiffSince(o);
                    if (i === tr) return n();
                    if (i.length === 0) return r;
                    let a = null;
                    const s = (d) => {
                            a || (a = {...r}),
                                a[d]
                                    ? a[d] === r[d] && (a[d] = [...a[d]])
                                    : (a[d] = []);
                        },
                        l = new Set();
                    let c;
                    for (let d = 0, u = i.length; d < u; d++) {
                        c = i[d];
                        for (const h of Object.values(c.added))
                            rs(h) &&
                            (s(h.parentId),
                                a[h.parentId].push(h.id),
                                l.add(a[h.parentId]));
                        for (const [h, p] of Object.values(c.updated))
                            if (rs(p) && rs(h)) {
                                if (h.parentId !== p.parentId)
                                    s(h.parentId),
                                        s(p.parentId),
                                        a[h.parentId].splice(
                                            a[h.parentId].indexOf(p.id),
                                            1
                                        ),
                                        a[p.parentId].push(p.id),
                                        l.add(a[p.parentId]);
                                else if (h.index !== p.index) {
                                    s(p.parentId);
                                    const m = a[p.parentId].indexOf(p.id);
                                    (a[p.parentId][m] = p.id), l.add(a[p.parentId]);
                                }
                            }
                        for (const h of Object.values(c.removed))
                            rs(h) &&
                            (s(h.parentId),
                                a[h.parentId].splice(
                                    a[h.parentId].indexOf(h.id),
                                    1
                                ));
                    }
                    for (const d of l) {
                        const u = pe(d.map((h) => e.get(h)));
                        u.sort(pn), d.splice(0, d.length, ...u.map((h) => h.id));
                    }
                    return a ?? r;
                });
            },
            l1 = (e, t, n) => {
                for (; !Vn(n.parentId); ) {
                    const r = e.get(n.parentId);
                    if (!r) return !1;
                    n = r;
                }
                return n.parentId === t;
            },
            CU = (e, t) => {
                const n = e.query.ids("shape");
                let r = null;
                function o() {
                    const i = t();
                    return (
                        (r = i),
                            new Set([...n.get()].filter((a) => l1(e, i, e.get(a))))
                    );
                }
                return Q("_shapeIdsInCurrentPage", (i, a) => {
                    if (Sl(i)) return o();
                    const s = t();
                    if (s !== r) return o();
                    const l = e.history.getDiffSince(a);
                    if (l === tr) return o();
                    const c = new of(i);
                    for (const u of l) {
                        for (const h of Object.values(u.added))
                            rs(h) && l1(e, s, h) && c.add(h.id);
                        for (const [h, p] of Object.values(u.updated))
                            rs(p) && (l1(e, s, p) ? c.add(p.id) : c.remove(p.id));
                        for (const h of Object.keys(u.removed))
                            kr(h) && c.remove(h);
                    }
                    const d = c.get();
                    return d ? Bd(d.value, d.diff) : i;
                });
            },
            EU = 40;
        class PU {
            constructor(t) {
                w(this, "_clickId", "");
                w(this, "_clickTimeout");
                w(this, "_clickScreenPoint");
                w(this, "_previousScreenPoint");
                w(this, "_getClickTimeout", (t, n = He()) => {
                    (this._clickId = n),
                        clearTimeout(this._clickTimeout),
                        (this._clickTimeout = setTimeout(
                            () => {
                                if (this._clickState === t && this._clickId === n) {
                                    switch (this._clickState) {
                                        case "pendingTriple": {
                                            this.editor.dispatch({
                                                ...this.lastPointerInfo,
                                                type: "click",
                                                name: "double_click",
                                                phase: "settle",
                                            });
                                            break;
                                        }
                                        case "pendingQuadruple": {
                                            this.editor.dispatch({
                                                ...this.lastPointerInfo,
                                                type: "click",
                                                name: "triple_click",
                                                phase: "settle",
                                            });
                                            break;
                                        }
                                        case "pendingOverflow": {
                                            this.editor.dispatch({
                                                ...this.lastPointerInfo,
                                                type: "click",
                                                name: "quadruple_click",
                                                phase: "settle",
                                            });
                                            break;
                                        }
                                    }
                                    this._clickState = "idle";
                                }
                            },
                            t === "idle" || t === "pendingDouble" ? Cj : Ej
                        ));
                });
                w(this, "_clickState", "idle");
                w(this, "lastPointerInfo", {});
                w(this, "transformPointerDownEvent", (t) => {
                    if (!this._clickState) return t;
                    switch (
                        ((this._clickScreenPoint = E.From(t.point)),
                        this._previousScreenPoint &&
                        this._previousScreenPoint.dist(this._clickScreenPoint) >
                        EU &&
                        (this._clickState = "idle"),
                            (this._previousScreenPoint = this._clickScreenPoint),
                            (this.lastPointerInfo = t),
                            this._clickState)
                        ) {
                        case "idle":
                            return (
                                (this._clickState = "pendingDouble"),
                                    (this._clickTimeout = this._getClickTimeout(
                                        this._clickState
                                    )),
                                    t
                            );
                        case "pendingDouble":
                            return (
                                (this._clickState = "pendingTriple"),
                                    (this._clickTimeout = this._getClickTimeout(
                                        this._clickState
                                    )),
                                    {
                                        ...t,
                                        type: "click",
                                        name: "double_click",
                                        phase: "down",
                                    }
                            );
                        case "pendingTriple":
                            return (
                                (this._clickState = "pendingQuadruple"),
                                    (this._clickTimeout = this._getClickTimeout(
                                        this._clickState
                                    )),
                                    {
                                        ...t,
                                        type: "click",
                                        name: "triple_click",
                                        phase: "down",
                                    }
                            );
                        case "pendingQuadruple":
                            return (
                                (this._clickState = "pendingOverflow"),
                                    (this._clickTimeout = this._getClickTimeout(
                                        this._clickState
                                    )),
                                    {
                                        ...t,
                                        type: "click",
                                        name: "quadruple_click",
                                        phase: "down",
                                    }
                            );
                        case "pendingOverflow":
                            return (
                                (this._clickState = "overflow"),
                                    (this._clickTimeout = this._getClickTimeout(
                                        this._clickState
                                    )),
                                    t
                            );
                        default:
                            return (
                                (this._clickTimeout = this._getClickTimeout(
                                    this._clickState
                                )),
                                    t
                            );
                    }
                });
                w(this, "transformPointerUpEvent", (t) => {
                    if (!this._clickState) return t;
                    switch (
                        ((this._clickScreenPoint = E.From(t.point)),
                            this._clickState)
                        ) {
                        case "pendingTriple":
                            return {
                                ...this.lastPointerInfo,
                                type: "click",
                                name: "double_click",
                                phase: "up",
                            };
                        case "pendingQuadruple":
                            return {
                                ...this.lastPointerInfo,
                                type: "click",
                                name: "triple_click",
                                phase: "up",
                            };
                        case "pendingOverflow":
                            return {
                                ...this.lastPointerInfo,
                                type: "click",
                                name: "quadruple_click",
                                phase: "up",
                            };
                        default:
                            return t;
                    }
                });
                w(this, "cancelDoubleClickTimeout", () => {
                    (this._clickTimeout = clearTimeout(this._clickTimeout)),
                        (this._clickState = "idle");
                });
                w(this, "handleMove", () => {
                    this._clickState !== "idle" &&
                    this._clickScreenPoint &&
                    this._clickScreenPoint.dist(
                        this.editor.inputs.currentScreenPoint
                    ) >
                    (this.editor.getInstanceState().isCoarsePointer
                        ? Hy
                        : du) &&
                    this.cancelDoubleClickTimeout();
                });
                this.editor = t;
            }
            get clickState() {
                return this._clickState;
            }
        }
        class IU {
            constructor(t) {
                w(this, "isSafari");
                w(this, "isIos");
                w(this, "isChromeForIos");
                w(this, "isFirefox");
                w(this, "isAndroid");
                (this.editor = t),
                    typeof window < "u" && "navigator" in window
                        ? ((this.isSafari = /^((?!chrome|android).)*safari/i.test(
                            navigator.userAgent
                        )),
                            (this.isIos =
                                !!navigator.userAgent.match(/iPad/i) ||
                                !!navigator.userAgent.match(/iPhone/i)),
                            (this.isChromeForIos = /crios.*safari/i.test(
                                navigator.userAgent
                            )),
                            (this.isFirefox = /firefox/i.test(navigator.userAgent)),
                            (this.isAndroid = /android/i.test(navigator.userAgent)))
                        : ((this.isSafari = !1),
                            (this.isIos = !1),
                            (this.isChromeForIos = !1),
                            (this.isFirefox = !1),
                            (this.isAndroid = !1));
            }
        }
        function ls(e) {
            if (e) {
                let t = aE;
                for (; e.length; ) t = t.push(e.pop());
                return t;
            }
            return aE;
        }
        class TU {
            constructor() {
                w(this, "length", 0);
                w(this, "head", null);
                w(this, "tail", this);
            }
            push(t) {
                return new c1(t, this);
            }
            toArray() {
                return ni;
            }
            [Symbol.iterator]() {
                return {
                    next() {
                        return {value: void 0, done: !0};
                    },
                };
            }
        }
        const aE = new TU();
        class c1 {
            constructor(t, n) {
                w(this, "length");
                (this.head = t), (this.tail = n), (this.length = n.length + 1);
            }
            push(t) {
                return new c1(t, this);
            }
            toArray() {
                return Array.from(this);
            }
            [Symbol.iterator]() {
                let t = this;
                return {
                    next() {
                        if (t.length) {
                            const n = t.head;
                            return (t = t.tail), {value: n, done: !1};
                        } else return {value: void 0, done: !0};
                    },
                };
            }
        }
        class $U {
            constructor(t, n) {
                w(this, "_undos", Tn("HistoryManager.undos", ls()));
                w(this, "_redos", Tn("HistoryManager.redos", ls()));
                w(this, "_batchDepth", 0);
                w(this, "onBatchComplete", () => {});
                w(this, "_commands", {});
                w(this, "createCommand", (t, n, r) => {
                    if (this._commands[t])
                        throw new Error(`Duplicate command: ${t}`);
                    this._commands[t] = r;
                    const o = (...i) => {
                        if (!this._batchDepth)
                            return this.batch(() => o(...i)), this.ctx;
                        const a = n(...i);
                        if (!a) return this.ctx;
                        const {
                            data: s,
                            ephemeral: l,
                            squashing: c,
                            preservesRedoStack: d,
                        } = a;
                        if (
                            (this.ignoringUpdates(
                                (u, h) => (r.do(s), {undos: u, redos: h})
                            ),
                                !l)
                        ) {
                            const u = this._undos.get().head;
                            c &&
                            u &&
                            u.type === "command" &&
                            u.name === t &&
                            u.preservesRedoStack === d
                                ? this._undos.update((h) =>
                                    h.tail.push({
                                        ...u,
                                        id: He(),
                                        data: r.squash(u.data, s),
                                    })
                                )
                                : this._undos.update((h) =>
                                    h.push({
                                        type: "command",
                                        name: t,
                                        data: s,
                                        id: He(),
                                        preservesRedoStack: d,
                                    })
                                ),
                            a.preservesRedoStack || this._redos.set(ls()),
                                this.ctx.emit("change-history", {reason: "push"});
                        }
                        return this.ctx;
                    };
                    return o;
                });
                w(this, "batch", (t) => {
                    try {
                        this._batchDepth++,
                            this._batchDepth === 1
                                ? _r(() => {
                                    var r, o;
                                    const n =
                                        (r = this._undos.get().head) == null
                                            ? void 0
                                            : r.id;
                                    t(),
                                    n !==
                                    ((o = this._undos.get().head) == null
                                        ? void 0
                                        : o.id) && this.onBatchComplete();
                                })
                                : t();
                    } catch (n) {
                        throw (this.annotateError(n), n);
                    } finally {
                        this._batchDepth--;
                    }
                    return this;
                });
                w(this, "ignoringUpdates", (t) => {
                    let n = this._undos.get(),
                        r = this._redos.get();
                    this._undos.set(ls()), this._redos.set(ls());
                    try {
                        ({undos: n, redos: r} = _r(() => t(n, r)));
                    } finally {
                        this._undos.set(n), this._redos.set(r);
                    }
                });
                w(
                    this,
                    "_undo",
                    ({pushToRedoStack: t, toMark: n = void 0}) => (
                        this.ignoringUpdates((r, o) => {
                            var i;
                            if (r.length === 0) return {undos: r, redos: o};
                            for (
                                ;
                                ((i = r.head) == null ? void 0 : i.type) === "STOP";

                            ) {
                                const a = r.head;
                                if (
                                    ((r = r.tail), t && (o = o.push(a)), a.id === n)
                                )
                                    return (
                                        this.ctx.emit(
                                            "change-history",
                                            t
                                                ? {reason: "undo"}
                                                : {reason: "bail", markId: n}
                                        ),
                                            {undos: r, redos: o}
                                    );
                            }
                            if (r.length === 0)
                                return (
                                    this.ctx.emit(
                                        "change-history",
                                        t
                                            ? {reason: "undo"}
                                            : {reason: "bail", markId: n}
                                    ),
                                        {undos: r, redos: o}
                                );
                            for (; r.head; ) {
                                const a = r.head;
                                if (
                                    ((r = r.tail),
                                    t && (o = o.push(a)),
                                    a.type === "STOP")
                                ) {
                                    if (a.onUndo && (!n || a.id === n))
                                        return (
                                            this.ctx.emit(
                                                "change-history",
                                                t
                                                    ? {reason: "undo"}
                                                    : {reason: "bail", markId: n}
                                            ),
                                                {undos: r, redos: o}
                                        );
                                } else this._commands[a.name].undo(a.data);
                            }
                            return (
                                this.ctx.emit(
                                    "change-history",
                                    t
                                        ? {reason: "undo"}
                                        : {reason: "bail", markId: n}
                                ),
                                    {undos: r, redos: o}
                            );
                        }),
                            this
                    )
                );
                w(this, "undo", () => (this._undo({pushToRedoStack: !0}), this));
                w(
                    this,
                    "redo",
                    () => (
                        this.ignoringUpdates((t, n) => {
                            var r;
                            if (n.length === 0) return {undos: t, redos: n};
                            for (
                                ;
                                ((r = n.head) == null ? void 0 : r.type) === "STOP";

                            )
                                (t = t.push(n.head)), (n = n.tail);
                            if (n.length === 0)
                                return (
                                    this.ctx.emit("change-history", {
                                        reason: "redo",
                                    }),
                                        {undos: t, redos: n}
                                );
                            for (; n.head; ) {
                                const o = n.head;
                                if (
                                    ((t = t.push(n.head)),
                                        (n = n.tail),
                                    o.type === "STOP")
                                ) {
                                    if (o.onRedo) break;
                                } else {
                                    const i = this._commands[o.name];
                                    i.redo ? i.redo(o.data) : i.do(o.data);
                                }
                            }
                            return (
                                this.ctx.emit("change-history", {reason: "redo"}),
                                    {undos: t, redos: n}
                            );
                        }),
                            this
                    )
                );
                w(this, "bail", () => (this._undo({pushToRedoStack: !1}), this));
                w(
                    this,
                    "bailToMark",
                    (t) => (this._undo({pushToRedoStack: !1, toMark: t}), this)
                );
                w(this, "mark", (t = He(), n = !0, r = !0) => {
                    const o = this._undos.get().head;
                    return o &&
                    o.type === "STOP" &&
                    o.id === t &&
                    o.onUndo === n &&
                    o.onRedo === r
                        ? o.id
                        : (this._undos.update((i) =>
                            i.push({type: "STOP", id: t, onUndo: n, onRedo: r})
                        ),
                            this.ctx.emit("mark-history", {id: t}),
                            t);
                });
                (this.ctx = t), (this.annotateError = n);
            }
            getNumUndos() {
                return this._undos.get().length;
            }
            getNumRedos() {
                return this._redos.get().length;
            }
            clear() {
                this._undos.set(ls()), this._redos.set(ls());
            }
        }
        class AU {
            constructor(t) {
                w(this, "scribbleItems", new Map());
                w(this, "state", "paused");
                w(this, "addScribble", (t, n = He()) => {
                    const r = {
                        id: n,
                        scribble: {
                            id: n,
                            size: 20,
                            color: "accent",
                            opacity: 0.8,
                            delay: 0,
                            points: [],
                            shrink: 0.1,
                            taper: !0,
                            ...t,
                            state: "starting",
                        },
                        timeoutMs: 0,
                        delayRemaining: t.delay ?? 0,
                        prev: null,
                        next: null,
                    };
                    return (
                        this.scribbleItems.set(n, r),
                        this.state === "paused" && this.resume(),
                            r
                    );
                });
                w(this, "stop", (t) => {
                    const n = this.scribbleItems.get(t);
                    if (!n) throw Error(`Scribble with id ${t} not found`);
                    return (
                        (n.delayRemaining = Math.min(n.delayRemaining, 200)),
                            (n.scribble.state = "stopping"),
                            n
                    );
                });
                w(this, "addPoint", (t, n, r) => {
                    const o = this.scribbleItems.get(t);
                    if (!o) throw Error(`Scribble with id ${t} not found`);
                    const {prev: i} = o,
                        a = {x: n, y: r, z: 0.5};
                    return (!i || E.Dist(i, a) >= 1) && (o.next = a), o;
                });
                w(this, "tick", (t) => {
                    this.editor.batch(() => {
                        this.scribbleItems.forEach((n) => {
                            if (n.scribble.state === "starting") {
                                const {next: l, prev: c} = n;
                                l &&
                                l !== c &&
                                ((n.prev = l), n.scribble.points.push(l)),
                                n.scribble.points.length > 8 &&
                                (n.scribble.state = "active");
                                return;
                            }
                            n.delayRemaining > 0 &&
                            (n.delayRemaining = Math.max(
                                0,
                                n.delayRemaining - t
                            )),
                                (n.timeoutMs += t),
                            n.timeoutMs >= 16 && (n.timeoutMs = 0);
                            const {
                                delayRemaining: r,
                                timeoutMs: o,
                                prev: i,
                                next: a,
                                scribble: s,
                            } = n;
                            switch (s.state) {
                                case "active": {
                                    a && a !== i
                                        ? ((n.prev = a),
                                            s.points.push(a),
                                        r === 0 &&
                                        s.points.length > 8 &&
                                        s.points.shift())
                                        : o === 0 &&
                                        (s.points.length > 1
                                            ? s.points.shift()
                                            : (n.delayRemaining = s.delay));
                                    break;
                                }
                                case "stopping": {
                                    if (n.delayRemaining === 0 && o === 0) {
                                        if (s.points.length === 1) {
                                            this.scribbleItems.delete(n.id);
                                            return;
                                        }
                                        s.shrink &&
                                        (s.size = Math.max(
                                            1,
                                            s.size * (1 - s.shrink)
                                        )),
                                            s.points.shift();
                                    }
                                    break;
                                }
                            }
                        }),
                            this.editor.updateInstanceState({
                                scribbles: Array.from(this.scribbleItems.values())
                                    .map(({scribble: n}) => ({
                                        ...n,
                                        points: [...n.points],
                                    }))
                                    .slice(-5),
                            }),
                        this.scribbleItems.size === 0 && this.pause();
                    });
                });
                this.editor = t;
            }
            resume() {
                (this.state = "running"),
                    this.editor.addListener("tick", this.tick);
            }
            pause() {
                this.editor.removeListener("tick", this.tick),
                    (this.state = "paused");
            }
            reset() {
                this.editor.updateInstanceState({scribbles: []}),
                    this.scribbleItems.clear(),
                    this.pause();
            }
        }
        class MU {
            constructor(t) {
                w(this, "_beforeCreateHandlers", {});
                w(this, "_afterCreateHandlers", {});
                w(this, "_beforeChangeHandlers", {});
                w(this, "_afterChangeHandlers", {});
                w(this, "_beforeDeleteHandlers", {});
                w(this, "_afterDeleteHandlers", {});
                w(this, "_batchCompleteHandlers", []);
                (this.editor = t),
                    (t.store.onBeforeCreate = (r, o) => {
                        const i = this._beforeCreateHandlers[r.typeName];
                        if (i) {
                            let a = r;
                            for (const s of i) a = s(a, o);
                            return a;
                        }
                        return r;
                    }),
                    (t.store.onAfterCreate = (r, o) => {
                        const i = this._afterCreateHandlers[r.typeName];
                        if (i) for (const a of i) a(r, o);
                    }),
                    (t.store.onBeforeChange = (r, o, i) => {
                        const a = this._beforeChangeHandlers[o.typeName];
                        if (a) {
                            let s = o;
                            for (const l of a) s = l(r, s, i);
                            return s;
                        }
                        return o;
                    });
                let n = 0;
                (t.store.onAfterChange = (r, o, i) => {
                    if ((n++, n > 1e3))
                        console.error(
                            "[CleanupManager.onAfterChange] Maximum update depth exceeded, bailing out."
                        );
                    else {
                        const a = this._afterChangeHandlers[o.typeName];
                        if (a) for (const s of a) s(r, o, i);
                    }
                    n--;
                }),
                    (t.store.onBeforeDelete = (r, o) => {
                        const i = this._beforeDeleteHandlers[r.typeName];
                        if (i) {
                            for (const a of i) if (a(r, o) === !1) return !1;
                        }
                    }),
                    (t.store.onAfterDelete = (r, o) => {
                        const i = this._afterDeleteHandlers[r.typeName];
                        if (i) for (const a of i) a(r, o);
                    }),
                    (t.history.onBatchComplete = () => {
                        this._batchCompleteHandlers.forEach((r) => r());
                    });
            }
            registerBeforeCreateHandler(t, n) {
                return (
                    this._beforeCreateHandlers[t] ||
                    (this._beforeCreateHandlers[t] = []),
                        this._beforeCreateHandlers[t].push(n),
                        () => cs(this._beforeCreateHandlers[t], n)
                );
            }
            registerAfterCreateHandler(t, n) {
                return (
                    this._afterCreateHandlers[t] ||
                    (this._afterCreateHandlers[t] = []),
                        this._afterCreateHandlers[t].push(n),
                        () => cs(this._afterCreateHandlers[t], n)
                );
            }
            registerBeforeChangeHandler(t, n) {
                return (
                    this._beforeChangeHandlers[t] ||
                    (this._beforeChangeHandlers[t] = []),
                        this._beforeChangeHandlers[t].push(n),
                        () => cs(this._beforeChangeHandlers[t], n)
                );
            }
            registerAfterChangeHandler(t, n) {
                return (
                    this._afterChangeHandlers[t] ||
                    (this._afterChangeHandlers[t] = []),
                        this._afterChangeHandlers[t].push(n),
                        () => cs(this._afterChangeHandlers[t], n)
                );
            }
            registerBeforeDeleteHandler(t, n) {
                return (
                    this._beforeDeleteHandlers[t] ||
                    (this._beforeDeleteHandlers[t] = []),
                        this._beforeDeleteHandlers[t].push(n),
                        () => cs(this._beforeDeleteHandlers[t], n)
                );
            }
            registerAfterDeleteHandler(t, n) {
                return (
                    this._afterDeleteHandlers[t] ||
                    (this._afterDeleteHandlers[t] = []),
                        this._afterDeleteHandlers[t].push(n),
                        () => cs(this._afterDeleteHandlers[t], n)
                );
            }
            registerBatchCompleteHandler(t) {
                return (
                    this._batchCompleteHandlers.push(t),
                        () => cs(this._batchCompleteHandlers, t)
                );
            }
        }
        function cs(e, t) {
            const n = e.indexOf(t);
            n >= 0 && e.splice(n, 1);
        }
        var zU = Object.defineProperty,
            RU = Object.getOwnPropertyDescriptor,
            ds = (e, t, n, r) => {
                for (
                    var o = r > 1 ? void 0 : r ? RU(t, n) : t, i = e.length - 1, a;
                    i >= 0;
                    i--
                )
                    (a = e[i]) && (o = (r ? a(t, n, o) : a(o)) || o);
                return r && o && zU(t, n, o), o;
            };
        const he = (e) => Math.round(e * 10 ** 8) / 10 ** 8;
        function ui(e, t, n, r, o) {
            const i = e.filter(
                (s) =>
                    (r === "forward" ? s.startNode.id === t : s.endNode.id === t) &&
                    he(s.length) === he(n) &&
                    Gr(
                        s.breadthIntersection[0],
                        s.breadthIntersection[1],
                        o[0],
                        o[1]
                    )
            );
            if (i.length === 0) return [];
            const a = new Set();
            return (
                i.forEach((s) => {
                    const l = r === "forward" ? s.endNode.id : s.startNode.id;
                    if (!a.has(l)) {
                        a.add(l);
                        const c = ui(
                            e,
                            l,
                            n,
                            r,
                            Gr(
                                s.breadthIntersection[0],
                                s.breadthIntersection[1],
                                o[0],
                                o[1]
                            )
                        );
                        i.push(...c);
                    }
                }),
                    i
            );
        }
        function OU(e) {
            e.sort((t, n) => n.gaps.length - t.gaps.length);
            for (let t = e.length - 1; t > 0; t--) {
                const n = e[t];
                for (let r = t - 1; r >= 0; r--) {
                    const o = e[r];
                    if (
                        o.direction === n.direction &&
                        n.gaps.every(
                            (i) =>
                                o.gaps.some(
                                    (a) =>
                                        he(i.startEdge[0].x) ===
                                        he(a.startEdge[0].x) &&
                                        he(i.startEdge[0].y) ===
                                        he(a.startEdge[0].y) &&
                                        he(i.startEdge[1].x) ===
                                        he(a.startEdge[1].x) &&
                                        he(i.startEdge[1].y) ===
                                        he(a.startEdge[1].y)
                                ) &&
                                o.gaps.some(
                                    (a) =>
                                        he(i.endEdge[0].x) === he(a.endEdge[0].x) &&
                                        he(i.endEdge[0].y) === he(a.endEdge[0].y) &&
                                        he(i.endEdge[1].x) === he(a.endEdge[1].x) &&
                                        he(i.endEdge[1].y) === he(a.endEdge[1].y)
                                )
                        )
                    ) {
                        e.splice(t, 1);
                        break;
                    }
                }
            }
        }
        class sa {
            constructor(t) {
                w(this, "_snapLines", Tn("snapLines", void 0));
                this.editor = t;
            }
            getLines() {
                return this._snapLines.get() ?? ni;
            }
            clear() {
                this.getLines().length && this._snapLines.set(void 0);
            }
            setLines(t) {
                this._snapLines.set(t);
            }
            getSnapPointsCache() {
                const {editor: t} = this;
                return t.store.createComputedCache("snapPoints", (n) => {
                    const r = t.getShapePageTransform(n.id);
                    return r
                        ? this.editor.getShapeGeometry(n).snapPoints.map((i, a) => {
                            const {x: s, y: l} = re.applyToPoint(r, i);
                            return {x: s, y: l, id: `${n.id}:${a}`};
                        })
                        : void 0;
                });
            }
            getSnapThreshold() {
                return 8 / this.editor.getZoomLevel();
            }
            getSnappableShapes() {
                const {editor: t} = this,
                    n = t.getRenderingBounds(),
                    r = t.getSelectedShapeIds(),
                    o = [],
                    i = (a) => {
                        const s = t.getSortedChildIdsForParent(a);
                        for (const l of s) {
                            if (r.includes(l)) continue;
                            const c = t.getShape(l);
                            if (!c || !t.getShapeUtil(c).canSnap(c)) continue;
                            const u = t.getShapePageBounds(l);
                            if (u && n.includes(u)) {
                                if (t.isShapeOfType(c, "group")) {
                                    i(l);
                                    continue;
                                }
                                o.push({
                                    id: l,
                                    pageBounds: u,
                                    isClosed: t.getShapeGeometry(c).isClosed,
                                });
                            }
                        }
                    };
                return (
                    i(this.getCurrentCommonAncestor() ?? t.getCurrentPageId()), o
                );
            }
            getCurrentCommonAncestor() {
                return this.editor.findCommonAncestor(
                    this.editor.getSelectedShapes()
                );
            }
            getSnappablePoints() {
                const t = this.getSnapPointsCache(),
                    n = this.getSnappableShapes(),
                    r = [];
                return (
                    n.forEach((o) => {
                        const i = t.get(o.id);
                        i && r.push(...i);
                    }),
                        r
                );
            }
            getVisibleGaps() {
                const t = [],
                    n = [];
                let r, o;
                const i = this.getSnappableShapes().sort(
                    (s, l) => s.pageBounds.minX - l.pageBounds.minX
                );
                for (let s = 0; s < i.length; s++) {
                    r = i[s];
                    for (let l = s + 1; l < i.length; l++)
                        (o = i[l]),
                        r.pageBounds.maxX < o.pageBounds.minX &&
                        lu(
                            r.pageBounds.minY,
                            r.pageBounds.maxY,
                            o.pageBounds.minY,
                            o.pageBounds.maxY
                        ) &&
                        t.push({
                            startNode: r,
                            endNode: o,
                            startEdge: [
                                new E(r.pageBounds.maxX, r.pageBounds.minY),
                                new E(r.pageBounds.maxX, r.pageBounds.maxY),
                            ],
                            endEdge: [
                                new E(o.pageBounds.minX, o.pageBounds.minY),
                                new E(o.pageBounds.minX, o.pageBounds.maxY),
                            ],
                            length: o.pageBounds.minX - r.pageBounds.maxX,
                            breadthIntersection: Gr(
                                r.pageBounds.minY,
                                r.pageBounds.maxY,
                                o.pageBounds.minY,
                                o.pageBounds.maxY
                            ),
                        });
                }
                const a = i.sort((s, l) => s.pageBounds.minY - l.pageBounds.minY);
                for (let s = 0; s < a.length; s++) {
                    r = a[s];
                    for (let l = s + 1; l < a.length; l++)
                        (o = a[l]),
                        r.pageBounds.maxY < o.pageBounds.minY &&
                        lu(
                            r.pageBounds.minX,
                            r.pageBounds.maxX,
                            o.pageBounds.minX,
                            o.pageBounds.maxX
                        ) &&
                        n.push({
                            startNode: r,
                            endNode: o,
                            startEdge: [
                                new E(r.pageBounds.minX, r.pageBounds.maxY),
                                new E(r.pageBounds.maxX, r.pageBounds.maxY),
                            ],
                            endEdge: [
                                new E(o.pageBounds.minX, o.pageBounds.minY),
                                new E(o.pageBounds.maxX, o.pageBounds.minY),
                            ],
                            length: o.pageBounds.minY - r.pageBounds.maxY,
                            breadthIntersection: Gr(
                                r.pageBounds.minX,
                                r.pageBounds.maxX,
                                o.pageBounds.minX,
                                o.pageBounds.maxX
                            ),
                        });
                }
                return {horizontal: t, vertical: n};
            }
            snapTranslate({
                              lockedAxis: t,
                              initialSelectionPageBounds: n,
                              initialSelectionSnapPoints: r,
                              dragDelta: o,
                          }) {
                var g, b;
                const i = this.getSnapThreshold(),
                    a = this.getSnappablePoints(),
                    s = n.clone().translate(o),
                    l = r.map(({x, y: S}, _) => ({
                        id: "selection:" + _,
                        x: x + o.x,
                        y: S + o.y,
                    })),
                    c = a,
                    d = [],
                    u = [],
                    h = new E(i, i);
                this.collectPointSnaps({
                    minOffset: h,
                    nearestSnapsX: d,
                    nearestSnapsY: u,
                    otherNodeSnapPoints: c,
                    selectionSnapPoints: l,
                }),
                    this.collectGapSnaps({
                        selectionPageBounds: s,
                        nearestSnapsX: d,
                        nearestSnapsY: u,
                        minOffset: h,
                    });
                const p = new E(
                    t === "x" ? 0 : ((g = d[0]) == null ? void 0 : g.nudge) ?? 0,
                    t === "y" ? 0 : ((b = u[0]) == null ? void 0 : b.nudge) ?? 0
                );
                (h.x = 0),
                    (h.y = 0),
                    (d.length = 0),
                    (u.length = 0),
                    l.forEach((x) => {
                        (x.x += p.x), (x.y += p.y);
                    }),
                    s.translate(p),
                    this.collectPointSnaps({
                        minOffset: h,
                        nearestSnapsX: d,
                        nearestSnapsY: u,
                        otherNodeSnapPoints: c,
                        selectionSnapPoints: l,
                    }),
                    this.collectGapSnaps({
                        selectionPageBounds: s,
                        nearestSnapsX: d,
                        nearestSnapsY: u,
                        minOffset: h,
                    });
                const m = this.getPointSnapLines({
                        nearestSnapsX: d,
                        nearestSnapsY: u,
                    }),
                    f = this.getGapSnapLines({
                        selectionPageBounds: s,
                        nearestSnapsX: d,
                        nearestSnapsY: u,
                    });
                return this._snapLines.set([...f, ...m]), {nudge: p};
            }
            getOutlinesInPageSpace() {
                return this.getSnappableShapes().map(({id: t, isClosed: n}) => {
                    const r = sn(this.editor.getShapeGeometry(t).vertices);
                    n && r.push(r[0]);
                    const o = this.editor.getShapePageTransform(t);
                    if (!o) throw Error("No page transform");
                    return re.applyToPoints(o, r);
                });
            }
            getSnappingHandleDelta({handlePoint: t, additionalSegments: n}) {
                const r = this.getSnapThreshold(),
                    o = this.getOutlinesInPageSpace();
                let i = r,
                    a = null,
                    s,
                    l,
                    c,
                    d;
                const u = [...o, ...n];
                for (const h of u)
                    for (let p = 0; p < h.length - 1; p++)
                        (s = h[p]),
                            (l = h[p + 1]),
                            (c = E.NearestPointOnLineSegment(s, l, t)),
                            (d = E.Dist(t, c)),
                        !isNaN(d) && d < i && ((i = d), (a = c));
                return a
                    ? (this._snapLines.set([
                        {id: He(), type: "points", points: [a]},
                    ]),
                        E.Sub(a, t))
                    : null;
            }
            snapResize({
                           initialSelectionPageBounds: t,
                           dragDelta: n,
                           handle: r,
                           isAspectRatioLocked: o,
                           isResizingFromCenter: i,
                       }) {
                var P, I;
                const a = this.getSnapThreshold(),
                    {
                        box: s,
                        scaleX: l,
                        scaleY: c,
                    } = ce.Resize(t, r, i ? n.x * 2 : n.x, i ? n.y * 2 : n.y, o);
                let d = r;
                l < 0 && (d = wF(d)),
                c < 0 && (d = yF(d)),
                i && (s.center = t.center);
                const u = d === "top" || d === "bottom",
                    h = d === "left" || d === "right",
                    p = sE(d, s),
                    m = this.getSnappablePoints(),
                    f = [],
                    g = [],
                    b = new E(a, a);
                this.collectPointSnaps({
                    minOffset: b,
                    nearestSnapsX: f,
                    nearestSnapsY: g,
                    otherNodeSnapPoints: m,
                    selectionSnapPoints: p,
                });
                const x = new E(
                    u ? 0 : ((P = f[0]) == null ? void 0 : P.nudge) ?? 0,
                    h ? 0 : ((I = g[0]) == null ? void 0 : I.nudge) ?? 0
                );
                if (o && xF(d) && x.len() !== 0) {
                    const $ =
                            f.length && g.length
                                ? Math.abs(x.x) < Math.abs(x.y)
                                    ? "x"
                                    : "y"
                                : f.length
                                    ? "x"
                                    : "y",
                        T = t.aspectRatio;
                    $ === "x"
                        ? ((g.length = 0),
                            (x.y = x.x / T),
                        (d === "bottom_left" || d === "top_right") &&
                        (x.y = -x.y))
                        : ((f.length = 0),
                            (x.x = x.y * T),
                        (d === "bottom_left" || d === "top_right") &&
                        (x.x = -x.x));
                }
                const S = E.Add(n, x),
                    {box: _} = ce.Resize(
                        t,
                        r,
                        i ? S.x * 2 : S.x,
                        i ? S.y * 2 : S.y,
                        o
                    );
                i && (_.center = t.center);
                const k = sE("any", _);
                (f.length = 0),
                    (g.length = 0),
                    (b.x = 0),
                    (b.y = 0),
                    this.collectPointSnaps({
                        minOffset: b,
                        nearestSnapsX: f,
                        nearestSnapsY: g,
                        otherNodeSnapPoints: m,
                        selectionSnapPoints: k,
                    });
                const C = this.getPointSnapLines({
                    nearestSnapsX: f,
                    nearestSnapsY: g,
                });
                return this._snapLines.set([...C]), {nudge: x};
            }
            collectPointSnaps({
                                  selectionSnapPoints: t,
                                  otherNodeSnapPoints: n,
                                  minOffset: r,
                                  nearestSnapsX: o,
                                  nearestSnapsY: i,
                              }) {
                for (const a of t)
                    for (const s of n) {
                        const l = E.Sub(a, s),
                            c = Math.abs(l.x),
                            d = Math.abs(l.y);
                        he(c) <= he(r.x) &&
                        (he(c) < he(r.x) && (o.length = 0),
                            o.push({
                                type: "points",
                                points: {thisPoint: a, otherPoint: s},
                                nudge: s.x - a.x,
                            }),
                            (r.x = c)),
                        he(d) <= he(r.y) &&
                        (he(d) < he(r.y) && (i.length = 0),
                            i.push({
                                type: "points",
                                points: {thisPoint: a, otherPoint: s},
                                nudge: s.y - a.y,
                            }),
                            (r.y = d));
                    }
            }
            collectGapSnaps({
                                selectionPageBounds: t,
                                minOffset: n,
                                nearestSnapsX: r,
                                nearestSnapsY: o,
                            }) {
                const {horizontal: i, vertical: a} = this.getVisibleGaps();
                for (const s of i) {
                    if (
                        !lu(
                            s.breadthIntersection[0],
                            s.breadthIntersection[1],
                            t.minY,
                            t.maxY
                        )
                    )
                        continue;
                    const c = s.startEdge[0].x + s.length / 2 - t.center.x;
                    if (s.length > t.width && he(Math.abs(c)) <= he(n.x)) {
                        he(Math.abs(c)) < he(n.x) && (r.length = 0),
                            (n.x = Math.abs(c));
                        const b = {type: "gap_center", gap: s, nudge: c},
                            x = r.find(({type: _}) => _ === "gap_center"),
                            S =
                                x &&
                                Gr(
                                    s.breadthIntersection[0],
                                    s.breadthIntersection[1],
                                    x.gap.breadthIntersection[0],
                                    x.gap.breadthIntersection[1]
                                );
                        x && x.gap.length > s.length && S
                            ? (r[r.indexOf(x)] = b)
                            : (!x || !S) && r.push(b);
                    }
                    const u = s.startNode.pageBounds.minX - s.length,
                        h = t.maxX,
                        p = u - h;
                    he(Math.abs(p)) <= he(n.x) &&
                    (he(Math.abs(p)) < he(n.x) && (r.length = 0),
                        (n.x = Math.abs(p)),
                        r.push({
                            type: "gap_duplicate",
                            gap: s,
                            protrusionDirection: "left",
                            nudge: p,
                        }));
                    const m = s.endNode.pageBounds.maxX + s.length,
                        f = t.minX,
                        g = m - f;
                    he(Math.abs(g)) <= he(n.x) &&
                    (he(Math.abs(g)) < he(n.x) && (r.length = 0),
                        (n.x = Math.abs(g)),
                        r.push({
                            type: "gap_duplicate",
                            gap: s,
                            protrusionDirection: "right",
                            nudge: g,
                        }));
                }
                for (const s of a) {
                    if (
                        !lu(
                            s.breadthIntersection[0],
                            s.breadthIntersection[1],
                            t.minX,
                            t.maxX
                        )
                    )
                        continue;
                    const c = s.startEdge[0].y + s.length / 2 - t.center.y;
                    if (s.length > t.height && he(Math.abs(c)) <= he(n.y)) {
                        he(Math.abs(c)) < he(n.y) && (o.length = 0),
                            (n.y = Math.abs(c));
                        const b = {type: "gap_center", gap: s, nudge: c},
                            x = o.find(({type: _}) => _ === "gap_center"),
                            S =
                                x &&
                                lu(
                                    x.gap.breadthIntersection[0],
                                    x.gap.breadthIntersection[1],
                                    s.breadthIntersection[0],
                                    s.breadthIntersection[1]
                                );
                        x && x.gap.length > s.length && S
                            ? (o[o.indexOf(x)] = b)
                            : (!x || !S) && o.push(b);
                        continue;
                    }
                    const u = s.startNode.pageBounds.minY - s.length,
                        h = t.maxY,
                        p = u - h;
                    he(Math.abs(p)) <= he(n.y) &&
                    (he(Math.abs(p)) < he(n.y) && (o.length = 0),
                        (n.y = Math.abs(p)),
                        o.push({
                            type: "gap_duplicate",
                            gap: s,
                            protrusionDirection: "top",
                            nudge: p,
                        }));
                    const m = s.endNode.pageBounds.maxY + s.length,
                        f = t.minY,
                        g = m - f;
                    he(Math.abs(g)) <= he(n.y) &&
                    (he(Math.abs(g)) < he(n.y) && (o.length = 0),
                        (n.y = Math.abs(g)),
                        o.push({
                            type: "gap_duplicate",
                            gap: s,
                            protrusionDirection: "bottom",
                            nudge: g,
                        }));
                }
            }
            getPointSnapLines({nearestSnapsX: t, nearestSnapsY: n}) {
                const r = {},
                    o = {};
                if (t.length > 0) {
                    for (const i of t)
                        if (i.type === "points") {
                            const a = he(i.points.otherPoint.x);
                            r[a] || (r[a] = []), r[a].push(i.points);
                        }
                }
                if (n.length > 0) {
                    for (const i of n)
                        if (i.type === "points") {
                            const a = he(i.points.otherPoint.y);
                            o[a] || (o[a] = []), o[a].push(i.points);
                        }
                }
                return Object.values(r)
                    .concat(Object.values(o))
                    .map((i) => ({
                        id: He(),
                        type: "points",
                        points: af(
                            i
                                .map((a) => E.From(a.otherPoint))
                                .concat(i.map((a) => E.From(a.thisPoint))),
                            (a, s) => a.equals(s)
                        ),
                    }));
            }
            getGapSnapLines({
                                selectionPageBounds: t,
                                nearestSnapsX: n,
                                nearestSnapsY: r,
                            }) {
                const {vertical: o, horizontal: i} = this.getVisibleGaps(),
                    a = {
                        top: t.sides[0],
                        right: t.sides[1],
                        bottom: [t.corners[3], t.corners[2]],
                        left: [t.corners[0], t.corners[3]],
                    },
                    s = [];
                if (n.length > 0)
                    for (const l of n) {
                        if (l.type === "points") continue;
                        const {
                            gap: {
                                breadthIntersection: c,
                                startEdge: d,
                                startNode: u,
                                endNode: h,
                                length: p,
                                endEdge: m,
                            },
                        } = l;
                        switch (l.type) {
                            case "gap_center": {
                                const f = (p - t.width) / 2,
                                    g = Gr(c[0], c[1], t.minY, t.maxY);
                                s.push({
                                    type: "gaps",
                                    direction: "horizontal",
                                    id: He(),
                                    gaps: [
                                        ...ui(i, u.id, f, "backward", g),
                                        {startEdge: d, endEdge: a.left},
                                        {startEdge: a.right, endEdge: m},
                                        ...ui(i, h.id, f, "forward", g),
                                    ],
                                });
                                break;
                            }
                            case "gap_duplicate": {
                                const f = Gr(c[0], c[1], t.minY, t.maxY);
                                s.push({
                                    type: "gaps",
                                    direction: "horizontal",
                                    id: He(),
                                    gaps:
                                        l.protrusionDirection === "left"
                                            ? [
                                                {
                                                    startEdge: a.right,
                                                    endEdge: d.map((g) =>
                                                        g
                                                            .clone()
                                                            .addXY(
                                                                -u.pageBounds
                                                                    .width,
                                                                0
                                                            )
                                                    ),
                                                },
                                                {startEdge: d, endEdge: m},
                                                ...ui(i, h.id, p, "forward", f),
                                            ]
                                            : [
                                                ...ui(i, u.id, p, "backward", f),
                                                {startEdge: d, endEdge: m},
                                                {
                                                    startEdge: m.map((g) =>
                                                        g
                                                            .clone()
                                                            .addXY(
                                                                l.gap.endNode
                                                                    .pageBounds
                                                                    .width,
                                                                0
                                                            )
                                                    ),
                                                    endEdge: a.left,
                                                },
                                            ],
                                });
                                break;
                            }
                        }
                    }
                if (r.length > 0)
                    for (const l of r) {
                        if (l.type === "points") continue;
                        const {
                            gap: {
                                breadthIntersection: c,
                                startEdge: d,
                                startNode: u,
                                endNode: h,
                                length: p,
                                endEdge: m,
                            },
                        } = l;
                        switch (l.type) {
                            case "gap_center": {
                                const f = (p - t.height) / 2,
                                    g = Gr(c[0], c[1], t.minX, t.maxX);
                                s.push({
                                    type: "gaps",
                                    direction: "vertical",
                                    id: He(),
                                    gaps: [
                                        ...ui(o, u.id, f, "backward", g),
                                        {startEdge: d, endEdge: a.top},
                                        {startEdge: a.bottom, endEdge: m},
                                        ...ui(o, l.gap.endNode.id, f, "forward", g),
                                    ],
                                });
                                break;
                            }
                            case "gap_duplicate":
                            {
                                const f = Gr(c[0], c[1], t.minX, t.maxX);
                                s.push({
                                    type: "gaps",
                                    direction: "vertical",
                                    id: He(),
                                    gaps:
                                        l.protrusionDirection === "top"
                                            ? [
                                                {
                                                    startEdge: a.bottom,
                                                    endEdge: d.map((g) =>
                                                        g
                                                            .clone()
                                                            .addXY(
                                                                0,
                                                                -u.pageBounds
                                                                    .height
                                                            )
                                                    ),
                                                },
                                                {startEdge: d, endEdge: m},
                                                ...ui(
                                                    o,
                                                    h.id,
                                                    p,
                                                    "forward",
                                                    f
                                                ),
                                            ]
                                            : [
                                                ...ui(
                                                    o,
                                                    u.id,
                                                    p,
                                                    "backward",
                                                    f
                                                ),
                                                {startEdge: d, endEdge: m},
                                                {
                                                    startEdge: m.map((g) =>
                                                        g
                                                            .clone()
                                                            .addXY(
                                                                0,
                                                                h.pageBounds
                                                                    .height
                                                            )
                                                    ),
                                                    endEdge: a.top,
                                                },
                                            ],
                                });
                            }
                                break;
                        }
                    }
                return OU(s), s;
            }
        }
        ds([Q], sa.prototype, "getSnapPointsCache", 1),
            ds([Q], sa.prototype, "getSnapThreshold", 1),
            ds([Q], sa.prototype, "getSnappableShapes", 1),
            ds([Q], sa.prototype, "getCurrentCommonAncestor", 1),
            ds([Q], sa.prototype, "getSnappablePoints", 1),
            ds([Q], sa.prototype, "getVisibleGaps", 1),
            ds([Q], sa.prototype, "getOutlinesInPageSpace", 1);
        function sE(e, t) {
            const {minX: n, maxX: r, minY: o, maxY: i} = t,
                a = [];
            switch (e) {
                case "top":
                case "left":
                case "top_left":
                case "any":
                    a.push({id: "top_left", handle: "top_left", x: n, y: o});
            }
            switch (e) {
                case "top":
                case "right":
                case "top_right":
                case "any":
                    a.push({id: "top_right", handle: "top_right", x: r, y: o});
            }
            switch (e) {
                case "bottom":
                case "right":
                case "bottom_right":
                case "any":
                    a.push({
                        id: "bottom_right",
                        handle: "bottom_right",
                        x: r,
                        y: i,
                    });
            }
            switch (e) {
                case "bottom":
                case "left":
                case "bottom_left":
                case "any":
                    a.push({id: "bottom_left", handle: "bottom_left", x: n, y: i});
            }
            return a;
        }
        const DU = /\r?\n|\r/g;
        function lE(e) {
            return e
                .replace(
                    DU,
                    `
`
                )
                .split(
                    `
`
                )
                .map((t) => t || " ").join(`
`);
        }
        const LU = {
                start: "left",
                "start-legacy": "left",
                middle: "center",
                "middle-legacy": "center",
                end: "right",
                "end-legacy": "right",
            },
            jU = /\s/;
        class NU {
            constructor(t) {
                w(this, "measureText", (t, n) => {
                    const r = this.getTextElement();
                    r.setAttribute("dir", "ltr"),
                        r.style.setProperty("font-family", n.fontFamily),
                        r.style.setProperty("font-style", n.fontStyle),
                        r.style.setProperty("font-weight", n.fontWeight),
                        r.style.setProperty("font-size", n.fontSize + "px"),
                        r.style.setProperty(
                            "line-height",
                            n.lineHeight * n.fontSize + "px"
                        ),
                        r.style.setProperty(
                            "max-width",
                            n.maxWidth === null ? null : n.maxWidth + "px"
                        ),
                        r.style.setProperty("min-width", n.minWidth ?? null),
                        r.style.setProperty("padding", n.padding),
                        (r.textContent = lE(t));
                    const o = r.getBoundingClientRect();
                    return {x: 0, y: 0, w: o.width, h: o.height};
                });
                this.editor = t;
            }
            getTextElement() {
                const t = document.querySelector(".tl-text-measure");
                t == null || t.remove();
                const n = document.createElement("div");
                return (
                    this.editor.getContainer().appendChild(n),
                        (n.id = `__textMeasure_${He()}`),
                        n.classList.add("tl-text"),
                        n.classList.add("tl-text-measure"),
                        (n.tabIndex = -1),
                        n
                );
            }
            measureElementTextNodeSpans(
                t,
                {shouldTruncateToFirstLine: n = !1} = {}
            ) {
                const r = [],
                    o = t.getBoundingClientRect(),
                    i = -o.left,
                    a = -o.top,
                    s = new Range(),
                    l = t.childNodes[0];
                let c = 0,
                    d = null,
                    u = null,
                    h = 0,
                    p = !1;
                for (const m of t.childNodes)
                    if (m.nodeType === Node.TEXT_NODE)
                        for (const f of m.textContent ?? "") {
                            s.setStart(l, c), s.setEnd(l, c + f.length);
                            const g = s.getClientRects(),
                                b = g[g.length - 1],
                                x = b.top + a,
                                S = b.left + i,
                                _ = b.right + i,
                                k = jU.test(f);
                            if (k !== u || x !== h || !d) {
                                if (d) {
                                    if (n && x !== h) {
                                        p = !0;
                                        break;
                                    }
                                    r.push(d);
                                }
                                d = {
                                    box: {x: S, y: x, w: b.width, h: b.height},
                                    text: f,
                                };
                            } else (d.box.w = _ - d.box.x), (d.text += f);
                            (u = k), (h = x), (c += f.length);
                        }
                return d && r.push(d), {spans: r, didTruncate: p};
            }
            measureTextSpans(t, n) {
                if (t === "") return [];
                const r =
                        n.overflow === "truncate-ellipsis" ||
                        n.overflow === "truncate-clip",
                    o = this.getTextElement(),
                    i = Math.ceil(n.width - n.padding * 2);
                o.style.setProperty("width", `${i}px`),
                    o.style.setProperty("height", "min-content"),
                    o.style.setProperty("dir", "ltr"),
                    o.style.setProperty("font-size", `${n.fontSize}px`),
                    o.style.setProperty("font-family", n.fontFamily),
                    o.style.setProperty("font-weight", n.fontWeight),
                    o.style.setProperty(
                        "line-height",
                        `${n.lineHeight * n.fontSize}px`
                    ),
                    o.style.setProperty("text-align", LU[n.textAlign]),
                r &&
                (o.style.setProperty("overflow-wrap", "anywhere"),
                    o.style.setProperty("word-break", "break-all")),
                    (t = lE(t)),
                    (o.textContent = t);
                const {spans: a, didTruncate: s} = this.measureElementTextNodeSpans(
                    o,
                    {shouldTruncateToFirstLine: r}
                );
                if (n.overflow === "truncate-ellipsis" && s) {
                    o.textContent = "…";
                    const l = Math.ceil(
                        this.measureElementTextNodeSpans(o).spans[0].box.w
                    );
                    o.style.setProperty("width", `${i - l}px`), (o.textContent = t);
                    const c = this.measureElementTextNodeSpans(o, {
                            shouldTruncateToFirstLine: !0,
                        }).spans,
                        d = c[c.length - 1];
                    return (
                        c.push({
                            text: "…",
                            box: {
                                x: Math.min(
                                    d.box.x + d.box.w,
                                    n.width - n.padding - l
                                ),
                                y: d.box.y,
                                w: l,
                                h: d.box.h,
                            },
                        }),
                            c
                    );
                }
                return o.remove(), a;
            }
        }
        class FU {
            constructor(t) {
                w(this, "raf");
                w(this, "isPaused", !0);
                w(this, "last", 0);
                w(this, "t", 0);
                w(this, "start", () => {
                    (this.isPaused = !1),
                        cancelAnimationFrame(this.raf),
                        (this.raf = requestAnimationFrame(this.tick)),
                        (this.last = Date.now());
                });
                w(this, "tick", () => {
                    if (this.isPaused) return;
                    const t = Date.now(),
                        n = t - this.last;
                    if (
                        ((this.last = t),
                            (this.t += n),
                            this.editor.emit("frame", n),
                        this.t < 16)
                    ) {
                        this.raf = requestAnimationFrame(this.tick);
                        return;
                    }
                    (this.t -= 16),
                        this.updatePointerVelocity(n),
                        this.editor.emit("tick", n),
                        (this.raf = requestAnimationFrame(this.tick));
                });
                w(this, "dispose", () => {
                    (this.isPaused = !0), cancelAnimationFrame(this.raf);
                });
                w(this, "prevPoint", new E());
                w(this, "updatePointerVelocity", (t) => {
                    const {
                        prevPoint: n,
                        editor: {
                            inputs: {currentScreenPoint: r, pointerVelocity: o},
                        },
                    } = this;
                    if (t === 0) return;
                    const i = E.Sub(r, n);
                    this.prevPoint = r.clone();
                    const a = i.len(),
                        s = a ? i.div(a) : new E(0, 0),
                        l = o.clone().lrp(s.mul(a / t), 0.5);
                    Math.abs(l.x) < 0.01 && (l.x = 0),
                    Math.abs(l.y) < 0.01 && (l.y = 0),
                    o.equals(l) || (this.editor.inputs.pointerVelocity = l);
                });
                (this.editor = t),
                    this.editor.disposables.add(this.dispose),
                    this.start();
            }
        }
        var BU = Object.defineProperty,
            UU = Object.getOwnPropertyDescriptor,
            hi = (e, t, n, r) => {
                for (
                    var o = r > 1 ? void 0 : r ? UU(t, n) : t, i = e.length - 1, a;
                    i >= 0;
                    i--
                )
                    (a = e[i]) && (o = (r ? a(t, n, o) : a(o)) || o);
                return r && o && BU(t, n, o), o;
            };
        class ko {
            constructor(t, n) {
                w(this, "updateUserPreferences", (t) => {
                    this.user.setUserPreferences({
                        ...this.user.userPreferences.get(),
                        ...t,
                    });
                });
                (this.user = t), (this.inferDarkMode = n);
            }
            getUserPreferences() {
                return {
                    id: this.getId(),
                    name: this.getName(),
                    locale: this.getLocale(),
                    color: this.getColor(),
                    isDarkMode: this.getIsDarkMode(),
                    animationSpeed: this.getAnimationSpeed(),
                    isSnapMode: this.getIsSnapMode(),
                };
            }
            getIsDarkMode() {
                return (
                    this.user.userPreferences.get().isDarkMode ??
                    (this.inferDarkMode ? eU() : !1)
                );
            }
            getEdgeScrollSpeed() {
                return (
                    this.user.userPreferences.get().edgeScrollSpeed ??
                    ir.edgeScrollSpeed
                );
            }
            getAnimationSpeed() {
                return (
                    this.user.userPreferences.get().animationSpeed ??
                    ir.animationSpeed
                );
            }
            getId() {
                return this.user.userPreferences.get().id;
            }
            getName() {
                return this.user.userPreferences.get().name ?? ir.name;
            }
            getLocale() {
                return this.user.userPreferences.get().locale ?? ir.locale;
            }
            getColor() {
                return this.user.userPreferences.get().color ?? ir.color;
            }
            getIsSnapMode() {
                return this.user.userPreferences.get().isSnapMode ?? ir.isSnapMode;
            }
        }
        hi([Q], ko.prototype, "getUserPreferences", 1),
            hi([Q], ko.prototype, "getIsDarkMode", 1),
            hi([Q], ko.prototype, "getEdgeScrollSpeed", 1),
            hi([Q], ko.prototype, "getAnimationSpeed", 1),
            hi([Q], ko.prototype, "getId", 1),
            hi([Q], ko.prototype, "getName", 1),
            hi([Q], ko.prototype, "getLocale", 1),
            hi([Q], ko.prototype, "getColor", 1),
            hi([Q], ko.prototype, "getIsSnapMode", 1);
        function wu(e) {
            return Math.abs(e.props.bend) < 8;
        }
        function qf(e, t) {
            if (t.type === "point") return;
            const n = e.getShape(t.boundShapeId),
                r = e.getShapePageTransform(n),
                o = e.getShapeGeometry(n),
                i = o instanceof oa ? o.children[0].vertices : o.vertices;
            return {
                shape: n,
                transform: r,
                isClosed: o.isClosed,
                isExact: t.isExact,
                didIntersect: !1,
                outline: i,
            };
        }
        function cE(e, t, n, r) {
            if (n.type === "point") return E.From(n);
            const o = e.getShape(n.boundShapeId);
            if (o) {
                const {point: i, size: a} = e.getShapeGeometry(o).bounds,
                    s = E.Add(
                        i,
                        E.MulV(
                            n.isPrecise || r
                                ? n.normalizedAnchor
                                : {x: 0.5, y: 0.5},
                            a
                        )
                    ),
                    l = re.applyToPoint(e.getShapePageTransform(o), s);
                return re.applyToPoint(re.Inverse(t), l);
            } else return new E(0, 0);
        }
        function Zr(e, t) {
            const n = e.getShapePageTransform(t);
            let r, o;
            t.props.start.type === "binding" &&
            t.props.end.type === "binding" &&
            ((r = t.props.start.boundShapeId), (o = t.props.end.boundShapeId));
            const i = d1(e, r, o),
                a = cE(
                    e,
                    n,
                    t.props.start,
                    i === "double-bound" || i === "start-contains-end"
                ),
                s = cE(
                    e,
                    n,
                    t.props.end,
                    i === "double-bound" || i === "end-contains-start"
                );
            return {start: a, end: s};
        }
        const Vl = 10,
            Zf = 10,
            HU = 10,
            la = {s: 2, m: 3.5, l: 5, xl: 10};
        function d1(e, t, n) {
            if (!t || !n) return "safe";
            if (t === n) return "double-bound";
            const r = e.getShapePageBounds(t),
                o = e.getShapePageBounds(n);
            if (r && o) {
                if (r.contains(o)) return "start-contains-end";
                if (o.contains(r)) return "end-contains-start";
            }
            return "safe";
        }
        function xu(e, t) {
            const {start: n, end: r, arrowheadStart: o, arrowheadEnd: i} = t.props,
                a = Zr(e, t),
                s = a.start.clone(),
                l = a.end.clone(),
                c = E.Med(s, l);
            if (E.Equals(s, l))
                return {
                    isStraight: !0,
                    start: {handle: s, point: s, arrowhead: t.props.arrowheadStart},
                    end: {handle: l, point: l, arrowhead: t.props.arrowheadEnd},
                    middle: c,
                    isValid: !1,
                    length: 0,
                };
            const d = E.Sub(l, s).uni(),
                u = qf(e, n),
                h = qf(e, r),
                p = e.getShapePageTransform(t);
            dE(l, a.start, p, h), dE(s, a.end, p, u);
            let m = 0,
                f = 0,
                g = 0,
                b = 0,
                x = Vl;
            const S = u && h && u.shape === h.shape,
                _ = u && h ? d1(e, u.shape.id, h.shape.id) : "safe";
            _ === "safe" &&
            u &&
            h &&
            !S &&
            !u.isExact &&
            !h.isExact &&
            (h.didIntersect && !u.didIntersect
                ? u.isClosed && s.setTo(l.clone().add(d.clone().mul(Vl)))
                : h.didIntersect ||
                (h.isClosed && l.setTo(s.clone().sub(d.clone().mul(Vl)))));
            const k = E.Sub(l, s).uni(),
                C = !E.Equals(k, d);
            S ||
            (_ !== "start-contains-end" &&
            u &&
            o !== "none" &&
            !u.isExact &&
            ((g =
                la[t.props.size] / 2 +
                ("size" in u.shape.props ? la[u.shape.props.size] / 2 : 0)),
                (m = Zf + g),
                (x += g)),
            _ !== "end-contains-start" &&
            h &&
            i !== "none" &&
            !h.isExact &&
            ((b =
                la[t.props.size] / 2 +
                ("size" in h.shape.props ? la[h.shape.props.size] / 2 : 0)),
                (f = Zf + b),
                (x += b)));
            const P = s.clone().add(k.clone().mul(m * (C ? -1 : 1))),
                I = l.clone().sub(k.clone().mul(f * (C ? -1 : 1)));
            E.Dist(P, I) < x &&
            (m !== 0 && f !== 0
                ? ((m *= -1.5), (f *= -1.5))
                : m !== 0
                    ? (m *= -1)
                    : f !== 0 && (f *= -1)),
                s.add(k.clone().mul(m * (C ? -1 : 1))),
                l.sub(k.clone().mul(f * (C ? -1 : 1))),
                C
                    ? (u && h && l.setTo(E.Add(s, k.clone().mul(-Vl))),
                        c.setTo(E.Med(a.start, a.end)))
                    : c.setTo(E.Med(s, l));
            const T = E.Dist(s, l);
            return {
                isStraight: !0,
                start: {
                    handle: a.start,
                    point: s,
                    arrowhead: t.props.arrowheadStart,
                },
                end: {handle: a.end, point: l, arrowhead: t.props.arrowheadEnd},
                middle: c,
                isValid: T > 0,
                length: T,
            };
        }
        function dE(e, t, n, r) {
            if (r === void 0 || r.isExact) return;
            const o = re.applyToPoint(n, t),
                i = re.applyToPoint(n, e),
                a = re.applyToPoint(re.Inverse(r.transform), o),
                s = re.applyToPoint(re.Inverse(r.transform), i),
                l = r.isClosed,
                d = (l ? sU : V4)(a, s, r.outline);
            let u;
            if (
                (d !== null &&
                (u =
                    d.sort((m, f) => E.Dist(m, a) - E.Dist(f, a))[0] ??
                    (l ? void 0 : s)),
                u === void 0)
            )
                return;
            const h = re.applyToPoint(r.transform, u),
                p = re.applyToPoint(re.Inverse(n), h);
            e.setTo(p), (r.didIntersect = !0);
        }
        function u1(e, t, n = 0) {
            const {arrowheadEnd: r, arrowheadStart: o} = t.props,
                i = t.props.bend + n;
            if (Math.abs(i) > Math.abs(t.props.bend * HU)) return xu(e, t);
            const a = Zr(e, t),
                s = E.Med(a.start, a.end),
                l = E.Sub(a.end, a.start).uni(),
                c = E.Add(s, l.per().mul(-i)),
                d = qf(e, t.props.start),
                u = qf(e, t.props.end),
                h = a.start.clone(),
                p = a.end.clone(),
                m = c.clone();
            if (E.Equals(h, p))
                return {
                    isStraight: !0,
                    start: {handle: h, point: h, arrowhead: t.props.arrowheadStart},
                    end: {handle: p, point: p, arrowhead: t.props.arrowheadEnd},
                    middle: m,
                    isValid: !1,
                    length: 0,
                };
            const f = t.props.bend < 0,
                g = f ? Tf : hj,
                b = uE(h, p, m),
                x = E.Angle(b.center, h),
                S = E.Angle(b.center, p),
                _ = g(x, S);
            if (b.length === 0 || b.size === 0 || !HC(b.length) || !HC(b.size))
                return xu(e, t);
            const k = h.clone(),
                C = p.clone(),
                P = m.clone(),
                I = e.getShapePageTransform(t);
            let $ = 0,
                T = 0,
                R = Vl;
            if (d && !d.isExact) {
                const H = re.applyToPoint(I, k),
                    G = re.applyToPoint(I, b.center),
                    ee = re.applyToPoint(I, C),
                    fe = re.Inverse(d.transform),
                    Se = re.applyToPoint(fe, H),
                    te = re.applyToPoint(fe, G),
                    ye = re.applyToPoint(fe, ee),
                    {isClosed: Ae} = d,
                    We = Ae ? K4 : W4;
                let _e,
                    tt = We(te, b.radius, d.outline);
                if (tt) {
                    const Me = te.angle(Se),
                        Jt = te.angle(ye),
                        je = g(Me, Jt);
                    tt = tt.filter((it) => g(Me, te.angle(it)) <= je);
                    const _n = je * 0.25;
                    tt.sort(
                        Ae
                            ? (it, wt) =>
                                Math.abs(g(Me, te.angle(it)) - _n) <
                                Math.abs(g(Me, te.angle(wt)) - _n)
                                    ? -1
                                    : 1
                            : (it, wt) =>
                                g(Me, te.angle(it)) < g(Me, te.angle(wt)) ? -1 : 1
                    ),
                        (_e = tt[0] ?? (Ae ? void 0 : Se));
                } else _e = Ae ? void 0 : Se;
                if (
                    _e &&
                    (k.setTo(
                        e.getPointInShapeSpace(t, re.applyToPoint(d.transform, _e))
                    ),
                        (d.didIntersect = !0),
                    o !== "none")
                ) {
                    const Me =
                        la[t.props.size] / 2 +
                        ("size" in d.shape.props ? la[d.shape.props.size] / 2 : 0);
                    ($ = Zf + Me), (R += Me);
                }
            }
            if (u && !u.isExact) {
                const H = re.applyToPoint(I, k),
                    G = re.applyToPoint(I, C),
                    ee = re.applyToPoint(I, b.center),
                    fe = re.Inverse(u.transform),
                    Se = re.applyToPoint(fe, H),
                    te = re.applyToPoint(fe, ee),
                    ye = re.applyToPoint(fe, G),
                    Ae = u.isClosed,
                    We = Ae ? K4 : W4;
                let _e,
                    tt = We(te, b.radius, u.outline);
                if (tt) {
                    const Me = te.angle(Se),
                        Jt = te.angle(ye),
                        je = g(Me, Jt),
                        _n = je * 0.75;
                    (tt = tt.filter((it) => g(Me, te.angle(it)) <= je)),
                        tt.sort(
                            Ae
                                ? (it, wt) =>
                                    Math.abs(g(Me, te.angle(it)) - _n) <
                                    Math.abs(g(Me, te.angle(wt)) - _n)
                                        ? -1
                                        : 1
                                : (it, wt) =>
                                    g(Me, te.angle(it)) < g(Me, te.angle(wt))
                                        ? -1
                                        : 1
                        ),
                        tt[0] ? (_e = tt[0]) : (_e = Ae ? void 0 : ye);
                } else _e = Ae ? void 0 : ye;
                if (
                    _e &&
                    (C.setTo(
                        e.getPointInShapeSpace(t, re.applyToPoint(u.transform, _e))
                    ),
                        (u.didIntersect = !0),
                    r !== "none")
                ) {
                    const Me =
                        la[t.props.size] / 2 +
                        ("size" in u.shape.props ? la[u.shape.props.size] / 2 : 0);
                    (T = Zf + Me), (R += Me);
                }
            }
            let D = E.Angle(b.center, k),
                j = E.Angle(b.center, C),
                z = g(D, j),
                O = z * b.radius;
            const F = k.clone(),
                K = C.clone();
            if ($ !== 0) {
                const H = ($ / O) * (f ? 1 : -1),
                    G = E.FromAngle(D + z * H);
                F.setTo(b.center).add(G.mul(b.radius));
            }
            if (T !== 0) {
                const H = (T / O) * (f ? -1 : 1),
                    G = E.FromAngle(j + z * H);
                K.setTo(b.center).add(G.mul(b.radius));
            }
            if (
                (E.Dist(F, K) < R &&
                ($ !== 0 && T !== 0
                    ? (($ *= -1.5), (T *= -1.5))
                    : $ !== 0
                        ? ($ *= -2)
                        : T !== 0 && (T *= -2)),
                $ !== 0)
            ) {
                const H = ($ / O) * (f ? 1 : -1),
                    G = E.FromAngle(D + z * H);
                k.setTo(b.center).add(G.mul(b.radius));
            }
            if (T !== 0) {
                const H = (T / O) * (f ? -1 : 1),
                    G = E.FromAngle(j + z * H);
                C.setTo(b.center).add(G.mul(b.radius));
            }
            if (d && u && !d.isExact && !u.isExact) {
                (D = E.Angle(b.center, k)),
                    (j = E.Angle(b.center, C)),
                    (z = g(D, j)),
                    (O = z * b.radius);
                const H = d1(e, d.shape.id, u.shape.id);
                if (H === "double-bound" && O < 30)
                    k.setTo(h), C.setTo(p), P.setTo(m);
                else if (
                    H === "safe" &&
                    (d && !d.didIntersect && k.setTo(h),
                    (u && !u.didIntersect) || g(x, D) > g(x, j))
                ) {
                    const G = Math.min(0.9, Vl / O) * (f ? 1 : -1),
                        ee = E.FromAngle(D + z * G);
                    C.setTo(b.center).add(ee.mul(b.radius));
                }
            }
            VU(b.center, b.radius, k, C, P, _, f),
            k.equals(C) &&
            (k.setTo(P.clone().addXY(1, 1)),
                C.setTo(P.clone().subXY(1, 1))),
                h.setTo(k),
                p.setTo(C),
                m.setTo(P);
            const B = uE(h, p, m);
            return {
                isStraight: !1,
                start: {
                    point: h,
                    handle: a.start,
                    arrowhead: t.props.arrowheadStart,
                },
                end: {point: p, handle: a.end, arrowhead: t.props.arrowheadEnd},
                middle: m,
                handleArc: b,
                bodyArc: B,
                isValid:
                    B.length !== 0 && isFinite(B.center.x) && isFinite(B.center.y),
            };
        }
        function uE(e, t, n) {
            const r =
                    -2 *
                    (e.x * (t.y - n.y) - e.y * (t.x - n.x) + t.x * n.y - n.x * t.y),
                o = {
                    x:
                        ((e.x * e.x + e.y * e.y) * (n.y - t.y) +
                            (t.x * t.x + t.y * t.y) * (e.y - n.y) +
                            (n.x * n.x + n.y * n.y) * (t.y - e.y)) /
                        r,
                    y:
                        ((e.x * e.x + e.y * e.y) * (t.x - n.x) +
                            (t.x * t.x + t.y * t.y) * (n.x - e.x) +
                            (n.x * n.x + n.y * n.y) * (e.x - t.x)) /
                        r,
                },
                i = E.Dist(o, e),
                a = +E.Clockwise(e, n, t),
                s = Math.hypot(e.y - t.y, e.x - t.x),
                l = Math.hypot(t.y - n.y, t.x - n.x),
                c = Math.hypot(n.y - e.y, n.x - e.x),
                d = Math.acos((l * l + c * c - s * s) / (2 * l * c)) * 2,
                u = +(Oe > d),
                h = (Fe - d) * (a ? 1 : -1),
                p = h * i;
            return {
                center: o,
                radius: i,
                size: h,
                length: p,
                largeArcFlag: u,
                sweepFlag: a,
            };
        }
        function VU(e, t, n, r, o, i, a) {
            const s = E.Angle(e, n),
                l = E.Angle(e, r);
            let c = Tf(s, l);
            a || (c = Fe - c);
            const d = 0.5 * (a ? 1 : -1),
                u = E.FromAngle(s + c * d);
            if ((o.setTo(e).add(u.mul(t)), c > i)) {
                o.rotWith(e, Oe);
                const h = r.clone();
                r.setTo(n), n.setTo(h);
            }
        }
        const KU = {
            wheel: "onWheel",
            pointer_down: "onPointerDown",
            pointer_move: "onPointerMove",
            pointer_up: "onPointerUp",
            right_click: "onRightClick",
            middle_click: "onMiddleClick",
            key_down: "onKeyDown",
            key_up: "onKeyUp",
            key_repeat: "onKeyRepeat",
            cancel: "onCancel",
            complete: "onComplete",
            interrupt: "onInterrupt",
            double_click: "onDoubleClick",
            triple_click: "onTripleClick",
            quadruple_click: "onQuadrupleClick",
        };
        class ie {
            constructor(t, n) {
                w(this, "id");
                w(this, "type");
                w(this, "shapeType");
                w(this, "initial");
                w(this, "children");
                w(this, "parent");
                w(this, "_path");
                w(this, "_current");
                w(this, "_isActive");
                w(this, "transition", (t, n = {}) => {
                    var i;
                    const r = t.split(".");
                    let o = this;
                    for (let a = 0; a < r.length; a++) {
                        const s = r[a],
                            l = o.getCurrent(),
                            c = (i = o.children) == null ? void 0 : i[s];
                        if (!c)
                            throw Error(
                                `${o.id} - no child state exists with the id ${s}.`
                            );
                        if (
                            (l == null ? void 0 : l.id) !== c.id &&
                            (l == null || l.exit(n, s),
                                o._current.set(c),
                                c.enter(n, (l == null ? void 0 : l.id) || "initial"),
                                !c.getIsActive())
                        )
                            break;
                        o = c;
                    }
                    return this;
                });
                w(this, "handleEvent", (t) => {
                    var o;
                    const n = KU[t.name],
                        r = this.getCurrent();
                    (o = this[n]) == null || o.call(this, t),
                    this.getCurrent() === r &&
                    this.getIsActive() &&
                    (r == null || r.handleEvent(t));
                });
                w(this, "enter", (t, n) => {
                    var r;
                    if (
                        (this._isActive.set(!0),
                        (r = this.onEnter) == null || r.call(this, t, n),
                        this.onTick && this.editor.on("tick", this.onTick),
                        this.children && this.initial && this.getIsActive())
                    ) {
                        const o = this.children[this.initial];
                        this._current.set(o), o.enter(t, n);
                    }
                });
                w(this, "exit", (t, n) => {
                    var r, o;
                    this._isActive.set(!1),
                    this.onTick && this.editor.off("tick", this.onTick),
                    (r = this.onExit) == null || r.call(this, t, n),
                    this.getIsActive() ||
                    (o = this.getCurrent()) == null ||
                    o.exit(t, n);
                });
                w(this, "_currentToolIdMask", Tn("curent tool id mask", void 0));
                w(this, "onWheel");
                w(this, "onPointerDown");
                w(this, "onPointerMove");
                w(this, "onPointerUp");
                w(this, "onDoubleClick");
                w(this, "onTripleClick");
                w(this, "onQuadrupleClick");
                w(this, "onRightClick");
                w(this, "onMiddleClick");
                w(this, "onKeyDown");
                w(this, "onKeyUp");
                w(this, "onKeyRepeat");
                w(this, "onCancel");
                w(this, "onComplete");
                w(this, "onInterrupt");
                w(this, "onEnter");
                w(this, "onExit");
                w(this, "onTick");
                this.editor = t;
                const {id: r, children: o, initial: i} = this.constructor;
                (this.id = r),
                    (this._isActive = Tn("toolIsActive" + this.id, !1)),
                    (this._current = Tn("toolState" + this.id, void 0)),
                    (this._path = Q("toolPath" + this.id, () => {
                        const a = this.getCurrent();
                        return this.id + (a ? `.${a.getPath()}` : "");
                    })),
                    (this.parent = n ?? {}),
                    this.parent
                        ? o && i
                            ? ((this.type = "branch"),
                                (this.initial = i),
                                (this.children = Object.fromEntries(
                                    o().map((a) => [a.id, new a(this.editor, this)])
                                )),
                                this._current.set(this.children[this.initial]))
                            : (this.type = "leaf")
                        : ((this.type = "root"),
                        o &&
                        i &&
                        ((this.initial = i),
                            (this.children = Object.fromEntries(
                                o().map((a) => [a.id, new a(this.editor, this)])
                            )),
                            this._current.set(this.children[this.initial])));
            }
            getPath() {
                return this._path.get();
            }
            getCurrent() {
                return this._current.get();
            }
            getIsActive() {
                return this._isActive.get();
            }
            getCurrentToolIdMask() {
                return this._currentToolIdMask.get();
            }
            setCurrentToolIdMask(t) {
                this._currentToolIdMask.set(t);
            }
        }
        w(ie, "id"), w(ie, "initial"), w(ie, "children");
        class Qf extends ie {
            constructor() {
                super(...arguments);
                w(this, "onKeyDown", (n) => {
                    var r;
                    switch (n.code) {
                        case "KeyZ": {
                            if (!(n.shiftKey || n.ctrlKey)) {
                                const o = this.getCurrent();
                                o &&
                                ((r = o.getCurrent()) == null
                                    ? void 0
                                    : r.id) === "idle" &&
                                this.children.zoom &&
                                this.editor.setCurrentTool("zoom", {
                                    ...n,
                                    onInteractionEnd: o.id,
                                });
                            }
                            break;
                        }
                    }
                });
            }
        }
        w(Qf, "id", "root"), w(Qf, "initial", ""), w(Qf, "children", () => []);
        var WU = Object.defineProperty,
            YU = Object.getOwnPropertyDescriptor,
            de = (e, t, n, r) => {
                for (
                    var o = r > 1 ? void 0 : r ? YU(t, n) : t, i = e.length - 1, a;
                    i >= 0;
                    i--
                )
                    (a = e[i]) && (o = (r ? a(t, n, o) : a(o)) || o);
                return r && o && WU(t, n, o), o;
            };
        class le extends aU.EventEmitter {
            constructor({
                            store: n,
                            user: r,
                            shapeUtils: o,
                            tools: i,
                            getContainer: a,
                            initialState: s,
                            inferDarkMode: l,
                        }) {
                super();
                w(this, "store");
                w(this, "root");
                w(this, "disposables", new Set());
                w(this, "_tickManager", new FU(this));
                w(this, "snaps");
                w(this, "user");
                w(this, "textMeasure");
                w(this, "environment");
                w(this, "scribbles");
                w(this, "getContainer");
                w(this, "sideEffects");
                w(this, "shapeUtils");
                w(this, "styleProps");
                w(
                    this,
                    "history",
                    new $U(this, (n) => {
                        this.annotateError(n, {
                            origin: "history.batch",
                            willCrashApp: !0,
                        }),
                            this.crash(n);
                    })
                );
                w(this, "_crashingError", null);
                w(
                    this,
                    "_updateInstanceState",
                    this.history.createCommand(
                        "updateInstanceState",
                        (n, r) => {
                            const o = this.store.get(this.getInstanceState().id),
                                i = {...o, ...n};
                            return {
                                data: {prev: o, next: i},
                                ephemeral: !1,
                                squashing: !1,
                                ...r,
                            };
                        },
                        {
                            do: ({next: n}) => {
                                this.store.put([n]);
                            },
                            undo: ({prev: n}) => {
                                this.store.put([n]);
                            },
                            squash({prev: n}, {next: r}) {
                                return {prev: n, next: r};
                            },
                        }
                    )
                );
                w(this, "_isChangingStyleTimeout", -1);
                w(
                    this,
                    "setCursor",
                    (n) => (
                        this.updateInstanceState(
                            {cursor: {...this.getInstanceState().cursor, ...n}},
                            {ephemeral: !0}
                        ),
                            this
                    )
                );
                w(
                    this,
                    "_setInstancePageState",
                    this.history.createCommand(
                        "setInstancePageState",
                        (n, r) => ({
                            data: {
                                prev: this.store.get(
                                    n.id ?? this.getCurrentPageState().id
                                ),
                                partial: n,
                            },
                            ...r,
                        }),
                        {
                            do: ({prev: n, partial: r}) => {
                                this.store.update(n.id, (o) => ({...o, ...r}));
                            },
                            undo: ({prev: n}) => {
                                this.store.update(n.id, () => n);
                            },
                        }
                    )
                );
                w(
                    this,
                    "_setSelectedShapes",
                    this.history.createCommand(
                        "setSelectedShapes",
                        (n, r) => {
                            const {selectedShapeIds: o} =
                                    this.getCurrentPageState(),
                                i = new Set(o);
                            return n.length === i.size && n.every((a) => i.has(a))
                                ? null
                                : {
                                    data: {
                                        selectedShapeIds: n,
                                        prevSelectedShapeIds: o,
                                    },
                                    preservesRedoStack: !0,
                                    ...r,
                                };
                        },
                        {
                            do: ({selectedShapeIds: n}) => {
                                this.store.put([
                                    {
                                        ...this.getCurrentPageState(),
                                        selectedShapeIds: n,
                                    },
                                ]);
                            },
                            undo: ({prevSelectedShapeIds: n}) => {
                                this.store.put([
                                    {
                                        ...this.getCurrentPageState(),
                                        selectedShapeIds: n,
                                    },
                                ]);
                            },
                            squash(
                                {prevSelectedShapeIds: n},
                                {selectedShapeIds: r}
                            ) {
                                return {
                                    selectedShapeIds: r,
                                    prevSelectedShapeIds: n,
                                };
                            },
                        }
                    )
                );
                w(
                    this,
                    "_setFocusedGroupId",
                    this.history.createCommand(
                        "setFocusedGroupId",
                        (n) => {
                            const r = this.getCurrentPageState().focusedGroupId;
                            if (r !== n)
                                return {
                                    data: {prev: r, next: n},
                                    preservesRedoStack: !0,
                                    squashing: !0,
                                };
                        },
                        {
                            do: ({next: n}) => {
                                this.store.update(
                                    this.getCurrentPageState().id,
                                    (r) => ({...r, focusedGroupId: n})
                                );
                            },
                            undo: ({prev: n}) => {
                                this.store.update(
                                    this.getCurrentPageState().id,
                                    (r) => ({...r, focusedGroupId: n})
                                );
                            },
                            squash({prev: n}, {next: r}) {
                                return {prev: n, next: r};
                            },
                        }
                    )
                );
                w(this, "_viewportAnimation", null);
                w(this, "_willSetInitialBounds", !0);
                w(this, "_cameraState", Tn("camera state", "idle"));
                w(this, "_cameraStateTimeoutRemaining", 0);
                w(this, "_lastUpdateRenderingBoundsTimestamp", Date.now());
                w(this, "_decayCameraStateTimeout", (n) => {
                    (this._cameraStateTimeoutRemaining -= n),
                    this._cameraStateTimeoutRemaining <= 0 &&
                    (this.off("tick", this._decayCameraStateTimeout),
                        this._cameraState.set("idle"),
                        this.updateRenderingBounds());
                });
                w(this, "_tickCameraState", () => {
                    this._cameraStateTimeoutRemaining = Aj;
                    const n = Date.now();
                    this._cameraState.__unsafe__getWithoutCapture() === "idle"
                        ? ((this._lastUpdateRenderingBoundsTimestamp = n),
                            this._cameraState.set("moving"),
                            this.on("tick", this._decayCameraStateTimeout))
                        : n - this._lastUpdateRenderingBoundsTimestamp > Mj &&
                        this.updateRenderingBounds();
                });
                w(this, "_renderingBounds", Tn("rendering viewport", new ce()));
                w(
                    this,
                    "_renderingBoundsExpanded",
                    Tn("rendering viewport expanded", new ce())
                );
                w(this, "renderingBoundsMargin", 100);
                w(this, "_currentPageShapeIds");
                w(
                    this,
                    "_setCurrentPageId",
                    this.history.createCommand(
                        "setCurrentPage",
                        (n, r) => {
                            if (!this.store.has(n)) {
                                console.error(
                                    "Tried to set the current page id to a page that doesn't exist."
                                );
                                return;
                            }
                            return (
                                this.stopFollowingUser(),
                                    {
                                        data: {
                                            toId: n,
                                            fromId: this.getCurrentPageId(),
                                        },
                                        squashing: !0,
                                        preservesRedoStack: !0,
                                        ...r,
                                    }
                            );
                        },
                        {
                            do: ({toId: n}) => {
                                if (this.store.has(n)) {
                                    if (
                                        !this.getPageStates().find(
                                            (r) => r.pageId === n
                                        )
                                    ) {
                                        const r = Vt.create({id: Vt.createId(n)});
                                        this.store.put([
                                            r,
                                            Kt.create({
                                                id: Kt.createId(n),
                                                pageId: n,
                                            }),
                                        ]);
                                    }
                                    this.store.put([
                                        {
                                            ...this.getInstanceState(),
                                            currentPageId: n,
                                        },
                                    ]),
                                        this.updateRenderingBounds();
                                }
                            },
                            undo: ({fromId: n}) => {
                                this.store.has(n) &&
                                (this.store.put([
                                    {
                                        ...this.getInstanceState(),
                                        currentPageId: n,
                                    },
                                ]),
                                    this.updateRenderingBounds());
                            },
                            squash: ({fromId: n}, {toId: r}) => ({
                                toId: r,
                                fromId: n,
                            }),
                        }
                    )
                );
                w(
                    this,
                    "_updatePage",
                    this.history.createCommand(
                        "updatePage",
                        (n, r) => {
                            if (this.getInstanceState().isReadonly) return null;
                            const o = this.getPage(n.id);
                            return o ? {data: {prev: o, partial: n}, ...r} : null;
                        },
                        {
                            do: ({partial: n}) => {
                                this.store.update(n.id, (r) => ({...r, ...n}));
                            },
                            undo: ({prev: n, partial: r}) => {
                                this.store.update(r.id, () => n);
                            },
                            squash(n, r) {
                                return {
                                    prev: {...n.prev, ...r.prev},
                                    partial: r.partial,
                                };
                            },
                        }
                    )
                );
                w(
                    this,
                    "_createPage",
                    this.history.createCommand(
                        "createPage",
                        (n) => {
                            if (
                                this.getInstanceState().isReadonly ||
                                this.getPages().length >= zf
                            )
                                return null;
                            const r = this.getPages(),
                                o = mU(
                                    n.name ?? "Page 1",
                                    r.map((c) => c.name)
                                );
                            let i = n.index;
                            (!i || r.some((c) => c.index === i)) &&
                            (i = di(r[r.length - 1].index));
                            const a = ai.create({
                                    meta: {},
                                    ...n,
                                    name: o,
                                    index: i,
                                }),
                                s = Vt.create({id: Vt.createId(a.id)}),
                                l = Kt.create({
                                    id: Kt.createId(a.id),
                                    pageId: a.id,
                                });
                            return {
                                data: {
                                    newPage: a,
                                    newTabPageState: l,
                                    newCamera: s,
                                },
                            };
                        },
                        {
                            do: ({
                                     newPage: n,
                                     newTabPageState: r,
                                     newCamera: o,
                                 }) => {
                                this.store.put([n, o, r]);
                            },
                            undo: ({
                                       newPage: n,
                                       newTabPageState: r,
                                       newCamera: o,
                                   }) => {
                                this.getPages().length !== 1 &&
                                this.store.remove([r.id, n.id, o.id]);
                            },
                        }
                    )
                );
                w(
                    this,
                    "_deletePage",
                    this.history.createCommand(
                        "delete_page",
                        (n) => {
                            if (this.getInstanceState().isReadonly) return null;
                            const r = this.getPages();
                            if (r.length === 1) return null;
                            const o = this.getPage(n),
                                i = this.getPageStates().filter(
                                    (a) => a.pageId === n
                                );
                            if (!o) return null;
                            if (n === this.getCurrentPageId()) {
                                const a = r.findIndex((l) => l.id === n),
                                    s = r[a - 1] ?? r[a + 1];
                                this.setCurrentPage(s.id);
                            }
                            return {
                                data: {id: n, deletedPage: o, deletedPageStates: i},
                            };
                        },
                        {
                            do: ({deletedPage: n, deletedPageStates: r}) => {
                                const o = this.getPages();
                                if (o.length !== 1) {
                                    if (n.id === this.getCurrentPageId()) {
                                        const i = o.findIndex((s) => s.id === n.id),
                                            a = o[i - 1] ?? o[i + 1];
                                        this.setCurrentPage(a.id);
                                    }
                                    this.store.remove(r.map((i) => i.id)),
                                        this.store.remove([n.id]),
                                        this.updateRenderingBounds();
                                }
                            },
                            undo: ({deletedPage: n, deletedPageStates: r}) => {
                                this.store.put([n]),
                                    this.store.put(r),
                                    this.updateRenderingBounds();
                            },
                        }
                    )
                );
                w(
                    this,
                    "_createAssets",
                    this.history.createCommand(
                        "createAssets",
                        (n) =>
                            this.getInstanceState().isReadonly || n.length <= 0
                                ? null
                                : {data: {assets: n}},
                        {
                            do: ({assets: n}) => {
                                this.store.put(n);
                            },
                            undo: ({assets: n}) => {
                                this.store.remove(n.map((r) => r.id));
                            },
                        }
                    )
                );
                w(
                    this,
                    "_updateAssets",
                    this.history.createCommand(
                        "updateAssets",
                        (n) =>
                            this.getInstanceState().isReadonly || n.length <= 0
                                ? void 0
                                : {data: {snapshots: {}, assets: n}},
                        {
                            do: ({assets: n, snapshots: r}) => {
                                this.store.put(
                                    n.map((o) => {
                                        const i = this.store.get(o.id);
                                        return (r[o.id] = i), {...i, ...o};
                                    })
                                );
                            },
                            undo: ({snapshots: n}) => {
                                this.store.put(Object.values(n));
                            },
                        }
                    )
                );
                w(
                    this,
                    "_deleteAssets",
                    this.history.createCommand(
                        "deleteAssets",
                        (n) => {
                            if (this.getInstanceState().isReadonly || n.length <= 0)
                                return;
                            const r = pe(n.map((o) => this.store.get(o)));
                            return {data: {ids: n, prev: r}};
                        },
                        {
                            do: ({ids: n}) => {
                                this.store.remove(n);
                            },
                            undo: ({prev: n}) => {
                                this.store.put(n);
                            },
                        }
                    )
                );
                w(this, "_parentIdsToChildIds");
                w(this, "_childIdsCache", new a1());
                w(
                    this,
                    "_createShapes",
                    this.history.createCommand(
                        "createShapes",
                        (n) => {
                            if (this.getInstanceState().isReadonly || n.length <= 0)
                                return null;
                            const r = this.getCurrentPageShapeIds();
                            if (n.length + r.size > li) {
                                Jf(this);
                                return;
                            }
                            return n.length === 0
                                ? null
                                : {
                                    data: {
                                        currentPageId: this.getCurrentPageId(),
                                        partials: n.map((i) =>
                                            i.id ? i : {...i, id: Ge()}
                                        ),
                                    },
                                };
                        },
                        {
                            do: ({partials: n}) => {
                                var s, l;
                                const r = this.getFocusedGroupId(),
                                    o = this.getCurrentPageShapesSorted();
                                n = n.map((c) => {
                                    if (
                                        !c.parentId ||
                                        !(
                                            this.store.has(c.parentId) ||
                                            n.some((d) => d.id === c.parentId)
                                        )
                                    ) {
                                        let d = this.getFocusedGroupId();
                                        for (let h = o.length - 1; h >= 0; h--) {
                                            const p = o[h];
                                            if (
                                                this.getShapeUtil(
                                                    p
                                                ).canReceiveNewChildrenOfType(
                                                    p,
                                                    c.type
                                                ) &&
                                                this.isPointInShape(
                                                    p,
                                                    {x: c.x ?? 0, y: c.y ?? 0},
                                                    {margin: 0, hitInside: !0}
                                                )
                                            ) {
                                                d = p.id;
                                                break;
                                            }
                                        }
                                        const u = c.parentId;
                                        if (
                                            (d === c.id && (d = r),
                                            d !== u &&
                                            ((c = {...c}),
                                                (c.parentId = d),
                                                kr(d)))
                                        ) {
                                            const h = this.getPointInShapeSpace(
                                                this.getShape(d),
                                                {x: c.x ?? 0, y: c.y ?? 0}
                                            );
                                            (c.x = h.x),
                                                (c.y = h.y),
                                                (c.rotation =
                                                    -this.getShapePageTransform(
                                                        d
                                                    ).rotation() +
                                                    (c.rotation ?? 0));
                                        }
                                    }
                                    return c;
                                });
                                const i = new Map(),
                                    a = [];
                                for (const c of n) {
                                    const d = this.getShapeUtil(c);
                                    let u = c.index;
                                    if (!u) {
                                        const f = c.parentId ?? r;
                                        i.has(f) ||
                                        i.set(
                                            f,
                                            this.getHighestIndexForParent(f)
                                        ),
                                            (u = i.get(f)),
                                            i.set(f, di(u));
                                    }
                                    const h = d.getDefaultProps();
                                    for (const [f, g] of this.styleProps[c.type])
                                        h[g] = this.getStyleForNextShape(f);
                                    let p = this.store.schema.types.shape.create({
                                        ...c,
                                        index: u,
                                        opacity:
                                            c.opacity ??
                                            this.getInstanceState()
                                                .opacityForNextShape,
                                        parentId: c.parentId ?? r,
                                        props:
                                            "props" in c ? {...h, ...c.props} : h,
                                    });
                                    if (p.index === void 0)
                                        throw Error("no index!");
                                    const m =
                                        (l = (s = this.getShapeUtil(p))
                                            .onBeforeCreate) == null
                                            ? void 0
                                            : l.call(s, p);
                                    m && (p = m), a.push(p);
                                }
                                a.forEach((c) => {
                                    c.meta = {
                                        ...this.getInitialMetaForShape(c),
                                        ...c.meta,
                                    };
                                }),
                                    this.store.put(a);
                            },
                            undo: ({partials: n}) => {
                                this.store.remove(n.map((r) => r.id));
                            },
                        }
                    )
                );
                w(this, "animatingShapes", new Map());
                w(
                    this,
                    "_updateShapes",
                    this.history.createCommand(
                        "updateShapes",
                        (n, r) => {
                            if (this.getInstanceState().isReadonly) return null;
                            const o = pe(n),
                                i = Object.fromEntries(
                                    pe(o.map(({id: l}) => this.getShape(l))).map(
                                        (l) => [l.id, l]
                                    )
                                );
                            if (o.length <= 0) return null;
                            const a = pe(
                                    o.map((l) => {
                                        const c = i[l.id];
                                        if (!c) return null;
                                        let d = null;
                                        for (const [u, h] of Object.entries(l))
                                            if (h !== void 0)
                                                switch (u) {
                                                    case "id":
                                                    case "type":
                                                        continue;
                                                    default:
                                                        if (h !== c[u])
                                                            if (
                                                                (d || (d = {...c}),
                                                                u === "props")
                                                            ) {
                                                                const p = {
                                                                    ...c.props,
                                                                };
                                                                for (const [
                                                                    m,
                                                                    f,
                                                                ] of Object.entries(
                                                                    h
                                                                ))
                                                                    f !== void 0 &&
                                                                    (p[m] = f);
                                                                d.props = p;
                                                            } else if (
                                                                u === "meta"
                                                            ) {
                                                                const p = {
                                                                    ...c.meta,
                                                                };
                                                                for (const [
                                                                    m,
                                                                    f,
                                                                ] of Object.entries(
                                                                    h
                                                                ))
                                                                    f !== void 0 &&
                                                                    (p[m] = f);
                                                                d.meta = p;
                                                            } else d[u] = h;
                                                }
                                        return d ?? c;
                                    })
                                ),
                                s = Object.fromEntries(a.map((l) => [l.id, l]));
                            return {data: {snapshots: i, updates: s}, ...r};
                        },
                        {
                            do: ({updates: n}) => {
                                var o, i;
                                const r = Object.values(n);
                                for (let a = 0; a < r.length; a++) {
                                    const s = r[a],
                                        l = this.store.get(s.id);
                                    if (!l) continue;
                                    const c =
                                        (i = (o = this.getShapeUtil(s))
                                            .onBeforeUpdate) == null
                                            ? void 0
                                            : i.call(o, l, s);
                                    c && (r[a] = c);
                                }
                                this.store.put(r);
                            },
                            undo: ({snapshots: n}) => {
                                this.store.put(Object.values(n));
                            },
                            squash(n, r) {
                                return {
                                    snapshots: {...r.snapshots, ...n.snapshots},
                                    updates: {...n.updates, ...r.updates},
                                };
                            },
                        }
                    )
                );
                w(
                    this,
                    "_deleteShapes",
                    this.history.createCommand(
                        "delete_shapes",
                        (n) => {
                            if (
                                this.getInstanceState().isReadonly ||
                                n.length === 0
                            )
                                return null;
                            const r = [
                                    ...this.getCurrentPageState().selectedShapeIds,
                                ],
                                o = new Set(n);
                            for (const c of n)
                                this.visitDescendants(c, (d) => {
                                    o.add(d);
                                });
                            const i = [...o],
                                a = this._getArrowBindingsIndex().get(),
                                s = pe(
                                    i.flatMap((c) => {
                                        const d = this.getShape(c),
                                            u = a[c];
                                        return u && u.length > 0
                                            ? u
                                                .map(({arrowId: h}) =>
                                                    this.getShape(h)
                                                )
                                                .concat(d)
                                            : d;
                                    })
                                ),
                                l = r.filter((c) => !o.has(c));
                            return {
                                data: {
                                    deletedIds: i,
                                    snapshots: s,
                                    prevSelectedShapeIds: r,
                                    postSelectedShapeIds: l,
                                },
                            };
                        },
                        {
                            do: ({deletedIds: n, postSelectedShapeIds: r}) => {
                                this.store.remove(n),
                                    this.store.update(
                                        this.getCurrentPageState().id,
                                        (o) => ({...o, selectedShapeIds: r})
                                    );
                            },
                            undo: ({snapshots: n, prevSelectedShapeIds: r}) => {
                                this.store.put(n),
                                    this.store.update(
                                        this.getCurrentPageState().id,
                                        (o) => ({...o, selectedShapeIds: r})
                                    );
                            },
                        }
                    )
                );
                w(
                    this,
                    "_selectionSharedStyles",
                    Q("_selectionSharedStyles", () => {
                        const n = this.getSelectedShapes(),
                            r = new i1();
                        for (const o of n) this._extractSharedStyles(o, r);
                        return r;
                    })
                );
                w(this, "externalAssetContentHandlers", {file: null, url: null});
                w(this, "externalContentHandlers", {
                    text: null,
                    files: null,
                    embed: null,
                    "svg-text": null,
                    url: null,
                });
                w(this, "inputs", {
                    originPagePoint: new E(),
                    originScreenPoint: new E(),
                    previousPagePoint: new E(),
                    previousScreenPoint: new E(),
                    currentPagePoint: new E(),
                    currentScreenPoint: new E(),
                    keys: new Set(),
                    buttons: new Set(),
                    isPen: !1,
                    shiftKey: !1,
                    ctrlKey: !1,
                    altKey: !1,
                    isDragging: !1,
                    isPointing: !1,
                    isPinching: !1,
                    isEditing: !1,
                    isPanning: !1,
                    pointerVelocity: new E(),
                });
                w(this, "_clickManager", new PU(this));
                w(this, "_prevCursor", "default");
                w(this, "_shiftKeyTimeout", -1);
                w(this, "_setShiftKeyTimeout", () => {
                    (this.inputs.shiftKey = !1),
                        this.dispatch({
                            type: "keyboard",
                            name: "key_up",
                            key: "Shift",
                            shiftKey: this.inputs.shiftKey,
                            ctrlKey: this.inputs.ctrlKey,
                            altKey: this.inputs.altKey,
                            code: "ShiftLeft",
                        });
                });
                w(this, "_altKeyTimeout", -1);
                w(this, "_setAltKeyTimeout", () => {
                    (this.inputs.altKey = !1),
                        this.dispatch({
                            type: "keyboard",
                            name: "key_up",
                            key: "Alt",
                            shiftKey: this.inputs.shiftKey,
                            ctrlKey: this.inputs.ctrlKey,
                            altKey: this.inputs.altKey,
                            code: "AltLeft",
                        });
                });
                w(this, "_ctrlKeyTimeout", -1);
                w(this, "_setCtrlKeyTimeout", () => {
                    (this.inputs.ctrlKey = !1),
                        this.dispatch({
                            type: "keyboard",
                            name: "key_up",
                            key: "Ctrl",
                            shiftKey: this.inputs.shiftKey,
                            ctrlKey: this.inputs.ctrlKey,
                            altKey: this.inputs.altKey,
                            code: "ControlLeft",
                        });
                });
                w(this, "_restoreToolId", "select");
                w(this, "_pinchStart", 1);
                w(this, "_didPinch", !1);
                w(this, "_selectedShapeIdsAtPointerDown", []);
                w(this, "capturedPointerId", null);
                w(this, "dispatch", (n) => {
                    if (this.getCrashingError()) return this;
                    const {inputs: r} = this,
                        {type: o} = n;
                    return (
                        this.batch(() => {
                            if (n.type === "misc") {
                                (n.name === "cancel" || n.name === "complete") &&
                                ((this.inputs.isDragging = !1),
                                this.inputs.isPanning &&
                                ((this.inputs.isPanning = !1),
                                    this.updateInstanceState({
                                        cursor: {
                                            type: this._prevCursor,
                                            rotation: 0,
                                        },
                                    }))),
                                    this.root.handleEvent(n);
                                return;
                            }
                            n.shiftKey
                                ? (clearInterval(this._shiftKeyTimeout),
                                    (this._shiftKeyTimeout = -1),
                                    (r.shiftKey = !0))
                                : !n.shiftKey &&
                                r.shiftKey &&
                                this._shiftKeyTimeout === -1 &&
                                (this._shiftKeyTimeout = setTimeout(
                                    this._setShiftKeyTimeout,
                                    150
                                )),
                                n.altKey
                                    ? (clearInterval(this._altKeyTimeout),
                                        (this._altKeyTimeout = -1),
                                        (r.altKey = !0))
                                    : !n.altKey &&
                                    r.altKey &&
                                    this._altKeyTimeout === -1 &&
                                    (this._altKeyTimeout = setTimeout(
                                        this._setAltKeyTimeout,
                                        150
                                    )),
                                n.ctrlKey
                                    ? (clearInterval(this._ctrlKeyTimeout),
                                        (this._ctrlKeyTimeout = -1),
                                        (r.ctrlKey = !0))
                                    : !n.ctrlKey &&
                                    r.ctrlKey &&
                                    this._ctrlKeyTimeout === -1 &&
                                    (this._ctrlKeyTimeout = setTimeout(
                                        this._setCtrlKeyTimeout,
                                        150
                                    ));
                            const {
                                originPagePoint: i,
                                originScreenPoint: a,
                                currentPagePoint: s,
                                currentScreenPoint: l,
                            } = r;
                            switch ((r.isPointing || (r.isDragging = !1), o)) {
                                case "pinch": {
                                    if (!this.getInstanceState().canMoveCamera)
                                        return;
                                    switch (
                                        (this._updateInputsFromEvent(n), n.name)
                                        ) {
                                        case "pinch_start": {
                                            if (r.isPinching) return;
                                            r.isEditing ||
                                            ((this._pinchStart =
                                                this.getCamera().z),
                                            this._selectedShapeIdsAtPointerDown
                                                .length ||
                                            (this._selectedShapeIdsAtPointerDown =
                                                this.getSelectedShapeIds()),
                                                (this._didPinch = !0),
                                                (r.isPinching = !0),
                                                this.interrupt());
                                            return;
                                        }
                                        case "pinch": {
                                            if (!r.isPinching) return;
                                            const {
                                                    point: {x: c, y: d, z: u = 1},
                                                    delta: {x: h, y: p},
                                                } = n,
                                                {
                                                    x: m,
                                                    y: f,
                                                    z: g,
                                                } = this.getCamera(),
                                                b = Math.min(ra, Math.max(cu, u));
                                            this.setCamera({
                                                x: m + h / g - c / g + c / b,
                                                y: f + p / g - d / g + d / b,
                                                z: b,
                                            });
                                            return;
                                        }
                                        case "pinch_end": {
                                            if (!r.isPinching) return this;
                                            r.isPinching = !1;
                                            const {
                                                _selectedShapeIdsAtPointerDown: c,
                                            } = this;
                                            this.setSelectedShapes(
                                                this._selectedShapeIdsAtPointerDown,
                                                {squashing: !0}
                                            ),
                                                (this._selectedShapeIdsAtPointerDown =
                                                    []),
                                            this._didPinch &&
                                            ((this._didPinch = !1),
                                                requestAnimationFrame(() => {
                                                    this._didPinch ||
                                                    this.setSelectedShapes(
                                                        c,
                                                        {squashing: !0}
                                                    );
                                                }));
                                            return;
                                        }
                                    }
                                }
                                case "wheel": {
                                    if (!this.getInstanceState().canMoveCamera)
                                        return;
                                    if (
                                        (this._updateInputsFromEvent(n),
                                            !this.getIsMenuOpen())
                                    ) {
                                        if (r.ctrlKey) {
                                            const {x: c, y: d} =
                                                    this.inputs.currentScreenPoint,
                                                {
                                                    x: u,
                                                    y: h,
                                                    z: p,
                                                } = this.getCamera(),
                                                m = Math.min(
                                                    ra,
                                                    Math.max(
                                                        cu,
                                                        p + (n.delta.z ?? 0) * p
                                                    )
                                                );
                                            this.setCamera({
                                                x: u + (c / m - c) - (c / p - c),
                                                y: h + (d / m - d) - (d / p - d),
                                                z: m,
                                            });
                                            return;
                                        }
                                        this.pan(n.delta),
                                        !r.isDragging &&
                                        r.isPointing &&
                                        i.dist(s) >
                                        (this.getInstanceState()
                                            .isCoarsePointer
                                            ? Hy
                                            : du) /
                                        this.getZoomLevel() &&
                                        (r.isDragging = !0);
                                    }
                                    break;
                                }
                                case "pointer": {
                                    if (r.isPinching) return;
                                    this._updateInputsFromEvent(n);
                                    const {isPen: c} = n;
                                    switch (n.name) {
                                        case "pointer_down": {
                                            if (
                                                (this.clearOpenMenus(),
                                                    (this._selectedShapeIdsAtPointerDown =
                                                        this.getSelectedShapeIds()),
                                                n.button === 0 &&
                                                (this.capturedPointerId =
                                                    n.pointerId),
                                                    r.buttons.add(n.button),
                                                    (r.isPointing = !0),
                                                    (r.isDragging = !1),
                                                    this.getInstanceState().isPenMode)
                                            ) {
                                                if (!c) return;
                                            } else
                                                c &&
                                                this.updateInstanceState({
                                                    isPenMode: !0,
                                                });
                                            if (
                                                (n.button === 5
                                                    ? ((this._restoreToolId =
                                                        this.getCurrentToolId()),
                                                        this.complete(),
                                                        this.setCurrentTool("eraser"))
                                                    : n.button === 1 &&
                                                    (this.inputs.isPanning ||
                                                    (this._prevCursor =
                                                        this.getInstanceState().cursor.type),
                                                        (this.inputs.isPanning = !0)),
                                                    this.inputs.isPanning)
                                            )
                                                return (
                                                    this.stopCameraAnimation(),
                                                        this.updateInstanceState({
                                                            cursor: {
                                                                type: "grabbing",
                                                                rotation: 0,
                                                            },
                                                        }),
                                                        this
                                                );
                                            a.setTo(l), i.setTo(s);
                                            break;
                                        }
                                        case "pointer_move": {
                                            if (
                                                !c &&
                                                this.getInstanceState().isPenMode
                                            )
                                                return;
                                            if (
                                                this.inputs.isPanning &&
                                                this.inputs.isPointing
                                            ) {
                                                const {
                                                    currentScreenPoint: d,
                                                    previousScreenPoint: u,
                                                } = this.inputs;
                                                this.pan(E.Sub(d, u));
                                                return;
                                            }
                                            !r.isDragging &&
                                            r.isPointing &&
                                            i.dist(s) >
                                            (this.getInstanceState()
                                                .isCoarsePointer
                                                ? Hy
                                                : du) /
                                            this.getZoomLevel() &&
                                            (r.isDragging = !0);
                                            break;
                                        }
                                        case "pointer_up": {
                                            if (
                                                (r.buttons.delete(n.button),
                                                    (r.isPointing = !1),
                                                    (r.isDragging = !1),
                                                this.getIsMenuOpen() ||
                                                (!c &&
                                                    this.getInstanceState()
                                                        .isPenMode))
                                            )
                                                return;
                                            this.capturedPointerId ===
                                            n.pointerId &&
                                            ((this.capturedPointerId = null),
                                                (n.button = 0)),
                                                r.isPanning
                                                    ? n.button === 1
                                                        ? this.inputs.keys.has(" ")
                                                            ? (this.slideCamera({
                                                                speed: Math.min(
                                                                    2,
                                                                    this.inputs.pointerVelocity.len()
                                                                ),
                                                                direction:
                                                                this.inputs
                                                                    .pointerVelocity,
                                                                friction: Of,
                                                            }),
                                                                this.updateInstanceState(
                                                                    {
                                                                        cursor: {
                                                                            type: "grab",
                                                                            rotation: 0,
                                                                        },
                                                                    }
                                                                ))
                                                            : ((r.isPanning = !1),
                                                                this.slideCamera({
                                                                    speed: Math.min(
                                                                        2,
                                                                        this.inputs.pointerVelocity.len()
                                                                    ),
                                                                    direction:
                                                                    this.inputs
                                                                        .pointerVelocity,
                                                                    friction: Of,
                                                                }),
                                                                this.updateInstanceState(
                                                                    {
                                                                        cursor: {
                                                                            type: this
                                                                                ._prevCursor,
                                                                            rotation: 0,
                                                                        },
                                                                    }
                                                                ))
                                                        : n.button === 0 &&
                                                        (this.slideCamera({
                                                            speed: Math.min(
                                                                2,
                                                                this.inputs.pointerVelocity.len()
                                                            ),
                                                            direction:
                                                            this.inputs
                                                                .pointerVelocity,
                                                            friction: Of,
                                                        }),
                                                            this.updateInstanceState({
                                                                cursor: {
                                                                    type: "grab",
                                                                    rotation: 0,
                                                                },
                                                            }))
                                                    : n.button === 5 &&
                                                    (this.complete(),
                                                        this.setCurrentTool(
                                                            this._restoreToolId
                                                        ));
                                            break;
                                        }
                                    }
                                    break;
                                }
                                case "keyboard": {
                                    switch (
                                        (n.key === "ShiftRight" &&
                                        (n.key = "ShiftLeft"),
                                        n.key === "AltRight" && (n.key = "AltLeft"),
                                        n.code === "ControlRight" &&
                                        (n.code = "ControlLeft"),
                                            n.name)
                                        ) {
                                        case "key_down": {
                                            r.keys.add(n.code),
                                            !n.ctrlKey &&
                                            n.code === "Space" &&
                                            (this.inputs.isPanning ||
                                            (this._prevCursor =
                                                this.getInstanceState().cursor.type),
                                                (this.inputs.isPanning = !0),
                                                this.updateInstanceState({
                                                    cursor: {
                                                        type: this.inputs
                                                            .isPointing
                                                            ? "grabbing"
                                                            : "grab",
                                                        rotation: 0,
                                                    },
                                                }));
                                            break;
                                        }
                                        case "key_up": {
                                            r.keys.delete(n.code),
                                            n.code === "Space" &&
                                            !this.inputs.buttons.has(1) &&
                                            ((this.inputs.isPanning = !1),
                                                this.updateInstanceState({
                                                    cursor: {
                                                        type: this._prevCursor,
                                                        rotation: 0,
                                                    },
                                                }));
                                            break;
                                        }
                                    }
                                    break;
                                }
                            }
                            if (
                                n.type === "pointer" &&
                                (n.button === 1
                                    ? (n.name = "middle_click")
                                    : n.button === 2 && (n.name = "right_click"),
                                n.isPen === this.getInstanceState().isPenMode)
                            )
                                switch (n.name) {
                                    case "pointer_down": {
                                        const c =
                                            this._clickManager.transformPointerDownEvent(
                                                n
                                            );
                                        if (n.name !== c.name) {
                                            this.root.handleEvent(n),
                                                this.emit("event", n),
                                                this.root.handleEvent(c),
                                                this.emit("event", c);
                                            return;
                                        }
                                        break;
                                    }
                                    case "pointer_up": {
                                        const c =
                                            this._clickManager.transformPointerUpEvent(
                                                n
                                            );
                                        if (n.name !== c.name) {
                                            this.root.handleEvent(n),
                                                this.emit("event", n),
                                                this.root.handleEvent(c),
                                                this.emit("event", c);
                                            return;
                                        }
                                        break;
                                    }
                                    case "pointer_move": {
                                        this._clickManager.handleMove();
                                        break;
                                    }
                                }
                            this.root.handleEvent(n), this.emit("event", n);
                        }),
                            this
                    );
                });
                (this.store = n),
                    (this.snaps = new sa(this)),
                    (this.user = new ko(r ?? U4(), l ?? !1)),
                    (this.getContainer = a ?? (() => document.body)),
                    (this.textMeasure = new NU(this));
                class c extends Qf {}
                w(c, "initial", s ?? ""),
                    (this.root = new c(this)),
                    (this.root.children = {});
                const d = q4(o),
                    u = new Set(
                        Object.keys(
                            n.schema.types.shape.migrations.subTypeMigrations
                        )
                    );
                for (const _ of d) {
                    if (!u.has(_.type))
                        throw Error(
                            `Editor and store have different shapes: "${_.type}" was passed into the editor but not the schema`
                        );
                    u.delete(_.type);
                }
                if (u.size > 0)
                    throw Error(
                        `Editor and store have different shapes: "${
                            [...u][0]
                        }" is present in the store schema but not provided to the editor`
                    );
                const h = {},
                    p = {},
                    m = new Map();
                for (const _ of d) {
                    const k = new _(this);
                    h[_.type] = k;
                    const C = EC(_.props ?? {});
                    p[_.type] = C;
                    for (const P of C.keys())
                        if (!m.has(P.id)) m.set(P.id, P);
                        else if (m.get(P.id) !== P)
                            throw Error(
                                `Multiple style props with id "${P.id}" in use. Style prop IDs must be unique.`
                            );
                }
                (this.shapeUtils = h), (this.styleProps = p);
                for (const _ of [...i]) {
                    if (cf(this.root.children, _.id))
                        throw Error(`Can't override tool with id "${_.id}"`);
                    this.root.children[_.id] = new _(this, this.root);
                }
                (this.environment = new IU(this)), (this.scribbles = new AU(this));
                const f = new Set(),
                    g = (_) => {
                        var V;
                        const k = this.getShape(_);
                        if (!k) return;
                        const {start: C, end: P} = k.props,
                            I =
                                C.type === "binding"
                                    ? this.getShape(C.boundShapeId)
                                    : void 0,
                            $ =
                                P.type === "binding"
                                    ? this.getShape(P.boundShapeId)
                                    : void 0,
                            T = this.getAncestorPageId(k);
                        if (!T) return;
                        let R;
                        if (I && $) R = this.findCommonAncestor([I, $]) ?? T;
                        else if (I || $) {
                            const B = (V = I || $) == null ? void 0 : V.parentId;
                            B && B === k.parentId ? (R = k.parentId) : (R = T);
                        } else return;
                        R && R !== k.parentId && this.reparentShapes([_], R);
                        const D = this.getShape(_);
                        if (!D) throw Error("no reparented arrow");
                        const j = this.getShapeNearestSibling(D, I),
                            z = this.getShapeNearestSibling(D, $);
                        let O;
                        if (j && z) O = j.index > z.index ? j : z;
                        else if (j && !z) O = j;
                        else if (z && !j) O = z;
                        else return;
                        let F;
                        const K = this.getSortedChildIdsForParent(O.parentId)
                            .map((B) => this.getShape(B))
                            .filter((B) => B.index > O.index);
                        if (K.length) {
                            const B = K.find((H) => H.type !== "arrow");
                            if (D.index > O.index && (!B || D.index < B.index))
                                return;
                            F = yu(O.index, K[0].index);
                        } else F = di(O.index);
                        F !== D.index &&
                        this.updateShapes([{id: _, type: "arrow", index: F}]);
                    },
                    b = (_, k) => {
                        const {x: C, y: P} = Zr(this, _)[k];
                        this.store.put([
                            {
                                ..._,
                                props: {
                                    ..._.props,
                                    [k]: {type: "point", x: C, y: P},
                                },
                            },
                        ]);
                    },
                    x = (_) => {
                        for (const k of ["start", "end"]) {
                            const C = _.props[k];
                            if (C.type !== "binding") continue;
                            const P = this.getShape(C.boundShapeId),
                                I =
                                    this.getAncestorPageId(_) ===
                                    this.getAncestorPageId(P);
                            (!P || !I) && b(_, k);
                        }
                        g(_.id);
                    },
                    S = (_, k) => {
                        let C = null;
                        const P = _.selectedShapeIds.filter((T) => !k.has(T));
                        P.length !== _.selectedShapeIds.length &&
                        (C || (C = {..._}), (C.selectedShapeIds = P));
                        const I = _.erasingShapeIds.filter((T) => !k.has(T));
                        I.length !== _.erasingShapeIds.length &&
                        (C || (C = {..._}), (C.erasingShapeIds = I)),
                        _.hoveredShapeId &&
                        k.has(_.hoveredShapeId) &&
                        (C || (C = {..._}), (C.hoveredShapeId = null)),
                        _.editingShapeId &&
                        k.has(_.editingShapeId) &&
                        (C || (C = {..._}), (C.editingShapeId = null));
                        const $ = _.hintingShapeIds.filter((T) => !k.has(T));
                        return (
                            $.length !== _.hintingShapeIds.length &&
                            (C || (C = {..._}), (C.hintingShapeIds = $)),
                            _.focusedGroupId &&
                            k.has(_.focusedGroupId) &&
                            (C || (C = {..._}), (C.focusedGroupId = null)),
                                C
                        );
                    };
                if (
                    ((this.sideEffects = new MU(this)),
                        this.sideEffects.registerBatchCompleteHandler(() => {
                            var _;
                            for (const k of f) {
                                f.delete(k);
                                const C = this.getShape(k);
                                if (!C) continue;
                                const P = this.getShapeUtil(C),
                                    I =
                                        (_ = P.onChildrenChange) == null
                                            ? void 0
                                            : _.call(P, C);
                                I != null &&
                                I.length &&
                                this.updateShapes(I, {squashing: !0});
                            }
                            this.emit("update");
                        }),
                        this.sideEffects.registerBeforeDeleteHandler("shape", (_) => {
                            _.parentId && kr(_.parentId) && f.add(_.parentId);
                            const k = this._getArrowBindingsIndex().get()[_.id];
                            if (k != null && k.length)
                                for (const {arrowId: I, handleId: $} of k) {
                                    const T = this.getShape(I);
                                    T && b(T, $);
                                }
                            const C = new Set([_.id]),
                                P = pe(this.getPageStates().map((I) => S(I, C)));
                            P.length && this.store.put(P);
                        }),
                        this.sideEffects.registerBeforeDeleteHandler("page", (_) => {
                            var I;
                            if (this.getInstanceState().currentPageId !== _.id) return;
                            const k =
                                (I = this.getPages().find(($) => $.id !== _.id)) == null
                                    ? void 0
                                    : I.id;
                            if (!k) return;
                            this.store.put([
                                {...this.getInstanceState(), currentPageId: k},
                            ]);
                            const C = Vt.createId(_.id),
                                P = Kt.createId(_.id);
                            this.store.remove([C, P]);
                        }),
                        this.sideEffects.registerAfterChangeHandler("shape", (_, k) => {
                            if (
                                (this.isShapeOfType(k, "arrow") && x(k),
                                _.parentId !== k.parentId)
                            ) {
                                const C = (P) => {
                                    const I = this._getArrowBindingsIndex().get()[P];
                                    if (I != null && I.length)
                                        for (const $ of I) g($.arrowId);
                                };
                                C(k.id), this.visitDescendants(k.id, C);
                            }
                            if (_.parentId !== k.parentId && Vn(k.parentId)) {
                                const C = new Set([_.id]);
                                this.visitDescendants(_.id, (P) => {
                                    C.add(P);
                                });
                                for (const P of this.getPageStates()) {
                                    if (P.pageId === k.parentId) continue;
                                    const I = S(P, C);
                                    I && this.store.put([I]);
                                }
                            }
                            _.parentId && kr(_.parentId) && f.add(_.parentId),
                            k.parentId !== _.parentId &&
                            kr(k.parentId) &&
                            f.add(k.parentId);
                        }),
                        this.sideEffects.registerAfterChangeHandler(
                            "instance_page_state",
                            (_, k) => {
                                if (
                                    (_ == null ? void 0 : _.selectedShapeIds) !==
                                    (k == null ? void 0 : k.selectedShapeIds)
                                ) {
                                    const C = k.selectedShapeIds.filter((I) => {
                                        var T, R;
                                        let $ =
                                            (T = this.getShape(I)) == null
                                                ? void 0
                                                : T.parentId;
                                        for (; kr($); ) {
                                            if (k.selectedShapeIds.includes($))
                                                return !1;
                                            $ =
                                                (R = this.getShape($)) == null
                                                    ? void 0
                                                    : R.parentId;
                                        }
                                        return !0;
                                    });
                                    let P = null;
                                    if (C.length > 0) {
                                        const I = this.findCommonAncestor(
                                            pe(C.map(($) => this.getShape($))),
                                            ($) => this.isShapeOfType($, "group")
                                        );
                                        I && (P = I);
                                    } else
                                        k != null &&
                                        k.focusedGroupId &&
                                        (P = k.focusedGroupId);
                                    (C.length !== k.selectedShapeIds.length ||
                                        P !== k.focusedGroupId) &&
                                    this.store.put([
                                        {
                                            ...k,
                                            selectedShapeIds: C,
                                            focusedGroupId: P ?? null,
                                        },
                                    ]);
                                }
                            }
                        ),
                        this.sideEffects.registerAfterCreateHandler("shape", (_) => {
                            this.isShapeOfType(_, "arrow") && x(_);
                        }),
                        this.sideEffects.registerAfterCreateHandler("page", (_) => {
                            const k = Vt.createId(_.id),
                                C = Kt.createId(_.id);
                            this.store.has(k) || this.store.put([Vt.create({id: k})]),
                            this.store.has(C) ||
                            this.store.put([Kt.create({id: C, pageId: _.id})]);
                        }),
                        (this._currentPageShapeIds = CU(this.store, () =>
                            this.getCurrentPageId()
                        )),
                        (this._parentIdsToChildIds = kU(this.store)),
                        this.disposables.add(
                            this.store.listen((_) => {
                                this.emit("change", _);
                            })
                        ),
                        this.store.ensureStoreIsUsable(),
                        this._setInstancePageState(
                            {
                                editingShapeId: null,
                                hoveredShapeId: null,
                                erasingShapeIds: [],
                            },
                            {ephemeral: !0}
                        ),
                    s && this.root.children[s] === void 0)
                )
                    throw Error(`No state found for initialState "${s}".`);
                this.root.enter(void 0, "initial"),
                this.getInstanceState().followingUserId &&
                this.stopFollowingUser(),
                    this.updateRenderingBounds(),
                    requestAnimationFrame(() => {
                        this._tickManager.start();
                    });
            }
            dispose() {
                this.disposables.forEach((n) => n()), this.disposables.clear();
            }
            getShapeUtil(n) {
                const r = typeof n == "string" ? n : n.type,
                    o = ts(this.shapeUtils, r);
                return es(o, `No shape util found for type "${r}"`), o;
            }
            undo() {
                return this.history.undo(), this;
            }
            getCanUndo() {
                return this.history.getNumUndos() > 0;
            }
            redo() {
                return this.history.redo(), this;
            }
            getCanRedo() {
                return this.history.getNumRedos() > 0;
            }
            mark(n, r, o) {
                return this.history.mark(n, r, o), this;
            }
            bail() {
                return this.history.bail(), this;
            }
            bailToMark(n) {
                return this.history.bailToMark(n), this;
            }
            batch(n) {
                return this.history.batch(n), this;
            }
            _getArrowBindingsIndex() {
                return _U(this);
            }
            getArrowsBoundTo(n) {
                return this._getArrowBindingsIndex().get()[n] || ni;
            }
            getArrowInfoCache() {
                return this.store.createComputedCache("arrow infoCache", (n) =>
                    wu(n) ? xu(this, n) : u1(this, n)
                );
            }
            getArrowInfo(n) {
                const r = typeof n == "string" ? n : n.id;
                return this.getArrowInfoCache().get(r);
            }
            annotateError(n, {origin: r, willCrashApp: o, tags: i, extras: a}) {
                const s = this.createErrorAnnotations(r, o);
                return (
                    my(n, {tags: {...s.tags, ...i}, extras: {...s.extras, ...a}}),
                    o && this.store.markAsPossiblyCorrupted(),
                        this
                );
            }
            createErrorAnnotations(n, r) {
                try {
                    const o = this.getEditingShapeId();
                    return {
                        tags: {origin: n, willCrashApp: r},
                        extras: {
                            activeStateNode: this.root.getPath(),
                            selectedShapes: this.getSelectedShapes(),
                            editingShape: o ? this.getShape(o) : void 0,
                            inputs: this.inputs,
                        },
                    };
                } catch {
                    return {tags: {origin: n, willCrashApp: r}, extras: {}};
                }
            }
            getCrashingError() {
                return this._crashingError;
            }
            crash(n) {
                return (
                    (this._crashingError = n),
                        this.store.markAsPossiblyCorrupted(),
                        this.emit("crash", {error: n}),
                        this
                );
            }
            getPath() {
                return this.root.getPath().split("root.")[1];
            }
            isIn(n) {
                const r = n.split(".").reverse();
                let o = this.root;
                for (; r.length > 0; ) {
                    const i = r.pop();
                    if (!i) return !0;
                    const a = o.getCurrent();
                    if ((a == null ? void 0 : a.id) === i) {
                        if (r.length === 0) return !0;
                        o = a;
                        continue;
                    } else return !1;
                }
                return !1;
            }
            isInAny(...n) {
                return n.some((r) => this.isIn(r));
            }
            setCurrentTool(n, r = {}) {
                return this.root.transition(n, r), this;
            }
            getCurrentTool() {
                return this.root.getCurrent();
            }
            getCurrentToolId() {
                const n = this.getCurrentTool();
                return n ? n.getCurrentToolIdMask() ?? n.id : "";
            }
            getStateDescendant(n) {
                var i;
                const r = n.split(".").reverse();
                let o = this.root;
                for (; r.length > 0; ) {
                    const a = r.pop();
                    if (!a) return o;
                    const s = (i = o.children) == null ? void 0 : i[a];
                    if (!s) return;
                    o = s;
                }
                return o;
            }
            getDocumentSettings() {
                return this.store.get(My);
            }
            updateDocumentSettings(n) {
                return (
                    this.store.put([{...this.getDocumentSettings(), ...n}]), this
                );
            }
            getInstanceState() {
                return this.store.get(ln);
            }
            updateInstanceState(n, r) {
                return (
                    this._updateInstanceState(n, {
                        ephemeral: !0,
                        squashing: !0,
                        ...r,
                    }),
                    n.isChangingStyle !== void 0 &&
                    (clearTimeout(this._isChangingStyleTimeout),
                    n.isChangingStyle === !0 &&
                    (this._isChangingStyleTimeout = setTimeout(() => {
                        this.updateInstanceState({isChangingStyle: !1});
                    }, 2e3))),
                        this
                );
            }
            getOpenMenus() {
                return this.getInstanceState().openMenus;
            }
            addOpenMenu(n) {
                const r = new Set(this.getOpenMenus());
                return (
                    r.has(n) ||
                    (r.add(n), this.updateInstanceState({openMenus: [...r]})),
                        this
                );
            }
            deleteOpenMenu(n) {
                const r = new Set(this.getOpenMenus());
                return (
                    r.has(n) &&
                    (r.delete(n),
                        this.updateInstanceState({openMenus: [...r]})),
                        this
                );
            }
            clearOpenMenus() {
                return (
                    this.getOpenMenus().length &&
                    this.updateInstanceState({openMenus: []}),
                        this
                );
            }
            getIsMenuOpen() {
                return this.getOpenMenus().length > 0;
            }
            getPageStates() {
                return this._getPageStatesQuery().get();
            }
            _getPageStatesQuery() {
                return this.store.query.records("instance_page_state");
            }
            getCurrentPageState() {
                return this.store.get(this._getCurrentPageStateId());
            }
            _getCurrentPageStateId() {
                return Kt.createId(this.getCurrentPageId());
            }
            updateCurrentPageState(n, r) {
                return this._setInstancePageState(n, r), this;
            }
            getSelectedShapeIds() {
                return this.getCurrentPageState().selectedShapeIds;
            }
            getSelectedShapes() {
                const {selectedShapeIds: n} = this.getCurrentPageState();
                return pe(n.map((r) => this.store.get(r)));
            }
            setSelectedShapes(n, r) {
                const o = n.map((i) => (typeof i == "string" ? i : i.id));
                return this._setSelectedShapes(o, r), this;
            }
            isAncestorSelected(n) {
                const r =
                        typeof n == "string"
                            ? n
                            : (n == null ? void 0 : n.id) ?? null,
                    o = this.getShape(r);
                if (!o) return !1;
                const i = this.getSelectedShapeIds();
                return !!this.findShapeAncestor(o, (a) => i.includes(a.id));
            }
            select(...n) {
                const r = typeof n[0] == "string" ? n : n.map((o) => o.id);
                return this.setSelectedShapes(r), this;
            }
            deselect(...n) {
                const r = typeof n[0] == "string" ? n : n.map((i) => i.id),
                    o = this.getSelectedShapeIds();
                return (
                    o.length > 0 &&
                    r.length > 0 &&
                    this.setSelectedShapes(o.filter((i) => !r.includes(i))),
                        this
                );
            }
            selectAll() {
                const n = this.getSortedChildIdsForParent(this.getCurrentPageId());
                return n.length <= 0
                    ? this
                    : (this.setSelectedShapes(this._getUnlockedShapeIds(n)), this);
            }
            selectNone() {
                return (
                    this.getSelectedShapeIds().length > 0 &&
                    this.setSelectedShapes([]),
                        this
                );
            }
            getOnlySelectedShape() {
                const n = this.getSelectedShapes();
                return n.length === 1 ? n[0] : null;
            }
            getSelectionPageBounds() {
                const n = this.getCurrentPageState().selectedShapeIds;
                return n.length === 0
                    ? null
                    : ce.Common(pe(n.map((r) => this.getShapePageBounds(r))));
            }
            getSelectionRotation() {
                const n = this.getSelectedShapeIds();
                if (n.length === 0) return 0;
                if (n.length === 1)
                    return this.getShapePageTransform(
                        this.getSelectedShapeIds()[0]
                    ).rotation();
                const r = n.map((o) => this.getShapePageTransform(o).rotation());
                return r.every((o) => Math.abs(o - r[0]) < Math.PI / 180)
                    ? this.getShapePageTransform(n[0]).rotation()
                    : 0;
            }
            getSelectionRotatedPageBounds() {
                const n = this.getSelectedShapeIds();
                if (n.length === 0) return;
                const r = this.getSelectionRotation();
                if (r === 0) return this.getSelectionPageBounds();
                if (n.length === 1) {
                    const i = this.getShapeGeometry(n[0]).bounds.clone(),
                        a = this.getShapePageTransform(n[0]);
                    return (i.point = a.applyToPoint(i.point)), i;
                }
                const o = ce.FromPoints(
                    this.getSelectedShapeIds()
                        .flatMap((i) => {
                            const a = this.getShapePageTransform(i);
                            return a
                                ? a.applyToPoints(this.getShapeGeometry(i).vertices)
                                : [];
                        })
                        .map((i) => E.Rot(i, -r))
                );
                return (o.point = o.point.rot(r)), o;
            }
            getFocusedGroupId() {
                return (
                    this.getCurrentPageState().focusedGroupId ??
                    this.getCurrentPageId()
                );
            }
            getFocusedGroup() {
                const n = this.getFocusedGroupId();
                return n ? this.getShape(n) : void 0;
            }
            setFocusedGroup(n) {
                const r =
                    typeof n == "string" ? n : (n == null ? void 0 : n.id) ?? null;
                if (r !== null) {
                    const o = this.getShape(r);
                    if (!o)
                        throw Error(
                            `Editor.setFocusedGroup: Shape with id ${r} does not exist`
                        );
                    if (!this.isShapeOfType(o, "group"))
                        throw Error(
                            `Editor.setFocusedGroup: Cannot set focused group to shape of type ${o.type}`
                        );
                }
                return r === this.getFocusedGroupId()
                    ? this
                    : (this._setFocusedGroupId(r), this);
            }
            popFocusedGroupId() {
                const n = this.getFocusedGroup();
                if (n) {
                    const r = this.findShapeAncestor(n, (o) =>
                        this.isShapeOfType(o, "group")
                    );
                    this.setFocusedGroup((r == null ? void 0 : r.id) ?? null),
                        this.select(n.id);
                } else this.setFocusedGroup(null), this.selectNone();
                return this;
            }
            getEditingShapeId() {
                return this.getCurrentPageState().editingShapeId;
            }
            getEditingShape() {
                const n = this.getEditingShapeId();
                return n ? this.getShape(n) : void 0;
            }
            setEditingShape(n) {
                const r =
                    typeof n == "string" ? n : (n == null ? void 0 : n.id) ?? null;
                if (r !== this.getEditingShapeId()) {
                    if (r) {
                        const o = this.getShape(r);
                        if (o && this.getShapeUtil(o).canEdit(o))
                            return (
                                this._setInstancePageState({editingShapeId: r}),
                                    this
                            );
                    }
                    this._setInstancePageState({editingShapeId: null});
                }
                return this;
            }
            getHoveredShapeId() {
                return this.getCurrentPageState().hoveredShapeId;
            }
            getHoveredShape() {
                const n = this.getHoveredShapeId();
                return n ? this.getShape(n) : void 0;
            }
            setHoveredShape(n) {
                const r =
                    typeof n == "string" ? n : (n == null ? void 0 : n.id) ?? null;
                return r === this.getHoveredShapeId()
                    ? this
                    : (this.updateCurrentPageState(
                        {hoveredShapeId: r},
                        {ephemeral: !0}
                    ),
                        this);
            }
            getHintingShapeIds() {
                return this.getCurrentPageState().hintingShapeIds;
            }
            getHintingShape() {
                const n = this.getHintingShapeIds();
                return pe(n.map((r) => this.getShape(r)));
            }
            setHintingShapes(n) {
                const r = typeof n[0] == "string" ? n : n.map((o) => o.id);
                return (
                    this.updateCurrentPageState(
                        {hintingShapeIds: af(r)},
                        {ephemeral: !0}
                    ),
                        this
                );
            }
            getErasingShapeIds() {
                return this.getCurrentPageState().erasingShapeIds;
            }
            getErasingShapes() {
                const n = this.getErasingShapeIds();
                return pe(n.map((r) => this.getShape(r)));
            }
            setErasingShapes(n) {
                const r = typeof n[0] == "string" ? n : n.map((i) => i.id);
                r.sort();
                const o = this.getErasingShapeIds();
                if (r.length === o.length) {
                    for (let i = 0; i < r.length; i++)
                        if (r[i] !== o[i]) {
                            this._setInstancePageState(
                                {erasingShapeIds: r},
                                {ephemeral: !0}
                            );
                            break;
                        }
                } else
                    this._setInstancePageState(
                        {erasingShapeIds: r},
                        {ephemeral: !0}
                    );
                return this;
            }
            getCroppingShapeId() {
                return this.getCurrentPageState().croppingShapeId;
            }
            setCroppingShape(n) {
                const r =
                    typeof n == "string" ? n : (n == null ? void 0 : n.id) ?? null;
                if (r !== this.getCroppingShapeId())
                    if (!r) this.updateCurrentPageState({croppingShapeId: null});
                    else {
                        const o = this.getShape(r),
                            i = this.getShapeUtil(o);
                        o &&
                        i.canCrop(o) &&
                        this.updateCurrentPageState({croppingShapeId: r});
                    }
                return this;
            }
            getCameraId() {
                return Vt.createId(this.getCurrentPageId());
            }
            getCamera() {
                return this.store.get(this.getCameraId());
            }
            getZoomLevel() {
                return this.getCamera().z;
            }
            _setCamera(n) {
                const r = this.getCamera();
                return r.x === n.x && r.y === n.y && r.z === n.z
                    ? this
                    : (this.batch(() => {
                        this.store.put([{...r, ...n}]);
                        const {currentScreenPoint: o} = this.inputs;
                        this.dispatch({
                            type: "pointer",
                            target: "canvas",
                            name: "pointer_move",
                            point: o,
                            pointerId: XC.CAMERA_MOVE,
                            ctrlKey: this.inputs.ctrlKey,
                            altKey: this.inputs.altKey,
                            shiftKey: this.inputs.shiftKey,
                            button: 0,
                            isPen: this.getInstanceState().isPenMode ?? !1,
                        }),
                            this._tickCameraState();
                    }),
                        this);
            }
            setCamera(n, r) {
                const o = Number.isFinite(n.x) ? n.x : 0,
                    i = Number.isFinite(n.y) ? n.y : 0,
                    a = Number.isFinite(n.z) ? n.z : this.getZoomLevel();
                if (
                    (this.stopCameraAnimation(),
                    this.getInstanceState().followingUserId &&
                    this.stopFollowingUser(),
                        r)
                ) {
                    const {width: s, height: l} = this.getViewportScreenBounds();
                    return this._animateToViewport(new ce(-o, -i, s / a, l / a), r);
                } else this._setCamera({x: o, y: i, z: a});
                return this;
            }
            centerOnPoint(n, r) {
                if (!this.getInstanceState().canMoveCamera) return this;
                const {width: o, height: i} = this.getViewportPageBounds();
                return (
                    this.setCamera(
                        {
                            x: -(n.x - o / 2),
                            y: -(n.y - i / 2),
                            z: this.getCamera().z,
                        },
                        r
                    ),
                        this
                );
            }
            zoomToContent() {
                const n =
                    this.getSelectionPageBounds() ?? this.getCurrentPageBounds();
                return (
                    n &&
                    this.zoomToBounds(n, Math.min(1, this.getZoomLevel()), {
                        duration: 220,
                    }),
                        this
                );
            }
            zoomToFit(n) {
                if (!this.getInstanceState().canMoveCamera) return this;
                const r = [...this.getCurrentPageShapeIds()];
                if (r.length <= 0) return this;
                const o = ce.Common(pe(r.map((i) => this.getShapePageBounds(i))));
                return this.zoomToBounds(o, void 0, n), this;
            }
            resetZoom(n = this.getViewportScreenCenter(), r) {
                if (!this.getInstanceState().canMoveCamera) return this;
                const {x: o, y: i, z: a} = this.getCamera(),
                    {x: s, y: l} = n;
                return (
                    this.setCamera(
                        {
                            x: o + (s / 1 - s) - (s / a - s),
                            y: i + (l / 1 - l) - (l / a - l),
                            z: 1,
                        },
                        r
                    ),
                        this
                );
            }
            zoomIn(n = this.getViewportScreenCenter(), r) {
                if (!this.getInstanceState().canMoveCamera) return this;
                const {x: o, y: i, z: a} = this.getCamera();
                let s = ra;
                for (let d = 1; d < zl.length; d++) {
                    const u = zl[d - 1],
                        h = zl[d];
                    if (!(h - a <= (h - u) / 2)) {
                        s = h;
                        break;
                    }
                }
                const {x: l, y: c} = n;
                return (
                    this.setCamera(
                        {
                            x: o + (l / s - l) - (l / a - l),
                            y: i + (c / s - c) - (c / a - c),
                            z: s,
                        },
                        r
                    ),
                        this
                );
            }
            zoomOut(n = this.getViewportScreenCenter(), r) {
                if (!this.getInstanceState().canMoveCamera) return this;
                const {x: o, y: i, z: a} = this.getCamera();
                let s = cu;
                for (let d = zl.length - 1; d > 0; d--) {
                    const u = zl[d - 1],
                        h = zl[d];
                    if (!(h - a >= (h - u) / 2)) {
                        s = u;
                        break;
                    }
                }
                const {x: l, y: c} = n;
                return (
                    this.setCamera(
                        {
                            x: o + (l / s - l) - (l / a - l),
                            y: i + (c / s - c) - (c / a - c),
                            z: s,
                        },
                        r
                    ),
                        this
                );
            }
            zoomToSelection(n) {
                if (!this.getInstanceState().canMoveCamera) return this;
                const r = this.getSelectionPageBounds();
                return r
                    ? (this.zoomToBounds(r, Math.max(1, this.getZoomLevel()), n),
                        this)
                    : this;
            }
            panZoomIntoView(n, r) {
                if (!this.getInstanceState().canMoveCamera) return this;
                if (n.length <= 0) return this;
                const o = ce.Common(pe(n.map((a) => this.getShapePageBounds(a)))),
                    i = this.getViewportPageBounds();
                if (i.h < o.h || i.w < o.w)
                    return this.zoomToBounds(o, this.getCamera().z, r), this;
                {
                    const a = this.getViewportPageBounds()
                        .clone()
                        .expandBy(-32 / this.getZoomLevel());
                    let s = 0,
                        l = 0;
                    a.maxY < o.maxY
                        ? (l = a.maxY - o.maxY)
                        : a.minY > o.minY && (l = a.minY - o.minY),
                        a.maxX < o.maxX
                            ? (s = a.maxX - o.maxX)
                            : a.minX > o.minX && (s = a.minX - o.minX);
                    const c = this.getCamera();
                    this.setCamera({x: c.x + s, y: c.y + l, z: c.z}, r);
                }
                return this;
            }
            zoomToBounds(n, r, o) {
                if (!this.getInstanceState().canMoveCamera) return this;
                const i = this.getViewportScreenBounds(),
                    a = Math.min(256, i.width * 0.28);
                let s = So(
                    Math.min((i.width - a) / n.width, (i.height - a) / n.height),
                    cu,
                    ra
                );
                return (
                    r !== void 0 && (s = Math.min(r, s)),
                        this.setCamera(
                            {
                                x: -n.minX + (i.width - n.width * s) / 2 / s,
                                y: -n.minY + (i.height - n.height * s) / 2 / s,
                                z: s,
                            },
                            o
                        ),
                        this
                );
            }
            pan(n, r) {
                if (!this.getInstanceState().canMoveCamera) return this;
                const {x: o, y: i, z: a} = this.getCamera();
                return (
                    this.setCamera({x: o + n.x / a, y: i + n.y / a, z: a}, r), this
                );
            }
            stopCameraAnimation() {
                return this.emit("stop-camera-animation"), this;
            }
            _animateViewport(n) {
                if (!this._viewportAnimation) return;
                const r = () => {
                    this.removeListener("tick", this._animateViewport),
                        this.removeListener("stop-camera-animation", r),
                        (this._viewportAnimation = null);
                };
                this.once("stop-camera-animation", r),
                    (this._viewportAnimation.elapsed += n);
                const {
                    elapsed: o,
                    easing: i,
                    duration: a,
                    start: s,
                    end: l,
                } = this._viewportAnimation;
                if (o > a) {
                    this._setCamera({
                        x: -l.x,
                        y: -l.y,
                        z: this.getViewportScreenBounds().width / l.width,
                    }),
                        r();
                    return;
                }
                const c = a - o,
                    d = i(1 - c / a),
                    u = s.minX + (l.minX - s.minX) * d,
                    h = s.minY + (l.minY - s.minY) * d,
                    p = s.maxX + (l.maxX - s.maxX) * d;
                this._setCamera({
                    x: -u,
                    y: -h,
                    z: this.getViewportScreenBounds().width / (p - u),
                });
            }
            _animateToViewport(n, r = {}) {
                const {duration: o = 0, easing: i = un.easeInOutCubic} = r,
                    a = this.user.getAnimationSpeed(),
                    s = this.getViewportPageBounds();
                return (
                    this.stopCameraAnimation(),
                    this.getInstanceState().followingUserId &&
                    this.stopFollowingUser(),
                        o === 0 || a === 0
                            ? this._setCamera({
                                x: -n.x,
                                y: -n.y,
                                z: this.getViewportScreenBounds().width / n.width,
                            })
                            : ((this._viewportAnimation = {
                                elapsed: 0,
                                duration: o / a,
                                easing: i,
                                start: s.clone(),
                                end: n.clone(),
                            }),
                                this.addListener("tick", this._animateViewport),
                                this)
                );
            }
            slideCamera(n = {}) {
                if (!this.getInstanceState().canMoveCamera) return this;
                if (
                    (this.stopCameraAnimation(),
                    this.user.getAnimationSpeed() === 0)
                )
                    return this;
                const {
                    speed: o,
                    friction: i,
                    direction: a,
                    speedThreshold: s = 0.01,
                } = n;
                let l = Math.min(o, 1);
                const c = () => {
                    this.removeListener("tick", d),
                        this.removeListener("stop-camera-animation", c);
                };
                this.once("stop-camera-animation", c);
                const d = (u) => {
                    const {x: h, y: p, z: m} = this.getCamera(),
                        f = E.Mul(a, (l * u) / m);
                    (l *= 1 - i),
                        l < s
                            ? c()
                            : this._setCamera({x: h + f.x, y: p + f.y, z: m});
                };
                return this.addListener("tick", d), this;
            }
            animateToUser(n) {
                const o = [
                    ...this.store.query
                        .records("instance_presence", () => ({userId: {eq: n}}))
                        .get(),
                ]
                    .sort(
                        (i, a) => i.lastActivityTimestamp - a.lastActivityTimestamp
                    )
                    .pop();
                return o
                    ? (this.batch(() => {
                        this.getInstanceState().followingUserId !== null &&
                        this.stopFollowingUser();
                        const i = o.currentPageId === this.getCurrentPageId();
                        i || this.setCurrentPage(o.currentPageId);
                        const a = i ? {duration: 500} : void 0;
                        this.centerOnPoint(o.cursor, a);
                        const {highlightedUserIds: s} = this.getInstanceState();
                        this.updateInstanceState({highlightedUserIds: [...s, n]}),
                            setTimeout(() => {
                                const l = [
                                        ...this.getInstanceState()
                                            .highlightedUserIds,
                                    ],
                                    c = l.indexOf(n);
                                c < 0 ||
                                (l.splice(c, 1),
                                    this.updateInstanceState({
                                        highlightedUserIds: l,
                                    }));
                            }, GC);
                    }),
                        this)
                    : this;
            }
            animateToShape(n, r = Ij) {
                if (!this.getInstanceState().canMoveCamera) return this;
                const o = this.getViewportScreenBounds().clone().expandBy(-32),
                    i = o.width / o.height,
                    a = this.getShapePageBounds(n);
                if (!a) return this;
                const s = a.width / a.height,
                    l = a.clone(),
                    c = a.width / o.width;
                return (
                    (l.width += (o.minX + o.maxX) * c),
                        (l.height += (o.minY + o.maxY) * c),
                        (l.x -= o.minX * c),
                        (l.y -= o.minY * c),
                        s > i
                            ? ((l.height = a.width / i),
                                (l.y -= (l.height - a.height) / 2))
                            : ((l.width = a.height * i),
                                (l.x -= (l.width - a.width) / 2)),
                        this._animateToViewport(l, r)
                );
            }
            updateViewportScreenBounds(n = !1) {
                const r = this.getContainer();
                if (!r) return this;
                const o = r.getBoundingClientRect(),
                    i = new ce(
                        o.left || o.x,
                        o.top || o.y,
                        Math.max(o.width, 1),
                        Math.max(o.height, 1)
                    ),
                    a = i.equals(this.getViewportScreenBounds()),
                    {_willSetInitialBounds: s} = this;
                if (a) this._willSetInitialBounds = !1;
                else if (s)
                    (this._willSetInitialBounds = !1),
                        this.updateInstanceState(
                            {screenBounds: i.toJson()},
                            {squashing: !0, ephemeral: !0}
                        );
                else if (n && !this.getInstanceState().followingUserId) {
                    const l = this.getViewportPageCenter();
                    this.updateInstanceState(
                        {screenBounds: i.toJson()},
                        {squashing: !0, ephemeral: !0}
                    ),
                        this.centerOnPoint(l);
                } else
                    this.updateInstanceState(
                        {screenBounds: i.toJson()},
                        {squashing: !0, ephemeral: !0}
                    );
                return this._tickCameraState(), this.updateRenderingBounds(), this;
            }
            getViewportScreenBounds() {
                const {
                    x: n,
                    y: r,
                    w: o,
                    h: i,
                } = this.getInstanceState().screenBounds;
                return new ce(n, r, o, i);
            }
            getViewportScreenCenter() {
                return this.getViewportScreenBounds().center;
            }
            getViewportPageBounds() {
                const {w: n, h: r} = this.getViewportScreenBounds(),
                    {x: o, y: i, z: a} = this.getCamera();
                return new ce(-o, -i, n / a, r / a);
            }
            getViewportPageCenter() {
                return this.getViewportPageBounds().center;
            }
            screenToPage(n) {
                const {screenBounds: r} = this.store.unsafeGetWithoutCapture(ln),
                    {x: o, y: i, z: a = 1} = this.getCamera();
                return {
                    x: (n.x - r.x) / a - o,
                    y: (n.y - r.y) / a - i,
                    z: n.z ?? 0.5,
                };
            }
            pageToScreen(n) {
                const {screenBounds: r} = this.store.unsafeGetWithoutCapture(ln),
                    {x: o, y: i, z: a = 1} = this.getCamera();
                return {
                    x: (n.x + o) * a + r.x,
                    y: (n.y + i) * a + r.y,
                    z: n.z ?? 0.5,
                };
            }
            startFollowingUser(n) {
                const r = this.store.query.records("instance_presence", () => ({
                        userId: {eq: n},
                    })),
                    o = this.user.getId();
                if (
                    (o ||
                    console.warn(
                        "You should set the userId for the current instance before following a user"
                    ),
                        r.get().some((l) => l.followingUserId === o))
                )
                    return this;
                _r(() => {
                    this.stopFollowingUser(),
                        this.updateInstanceState(
                            {followingUserId: n},
                            {ephemeral: !0}
                        );
                });
                const i = () => {
                    this.removeListener("frame", s),
                        this.removeListener("stop-following", i);
                };
                let a = !1;
                const s = () => {
                    const l = [...r.get()]
                        .sort(
                            (j, z) =>
                                j.lastActivityTimestamp - z.lastActivityTimestamp
                        )
                        .pop();
                    if (!l) {
                        this.stopFollowingUser();
                        return;
                    }
                    const c = l.currentPageId === this.getCurrentPageId(),
                        d = c ? wj : 1;
                    if (!c) {
                        this.stopFollowingUser(),
                            this.setCurrentPage(l.currentPageId),
                            this.startFollowingUser(n);
                        return;
                    }
                    const {
                            center: u,
                            width: h,
                            height: p,
                        } = this.getViewportPageBounds(),
                        m = ce.From(l.screenBounds),
                        f = m.width / l.camera.z,
                        g = m.height / l.camera.z,
                        b = new E(f / 2 - l.camera.x, g / 2 - l.camera.y),
                        x = l.followingUserId === o,
                        S = h + (f - h) * d,
                        _ = p + (g - p) * d,
                        k = x ? p / _ : Math.min(h / S, p / _),
                        C = So(this.getCamera().z * k, cu, ra),
                        P = this.getViewportScreenBounds().w / C,
                        I = this.getViewportScreenBounds().h / C,
                        $ = b.sub(u),
                        T = E.Add(u, E.Mul($, d)),
                        R = E.Sub(T, u).len(),
                        D = Math.abs(C - this.getCamera().z);
                    if (R < xj && D < _j) {
                        a = !0;
                        return;
                    }
                    (a && R < Sj && D < kj) ||
                    ((a = !1),
                        this.stopCameraAnimation(),
                        this._setCamera({
                            x: -(T.x - P / 2),
                            y: -(T.y - I / 2),
                            z: C,
                        }));
                };
                return (
                    this.once("stop-following", i),
                        this.addListener("frame", s),
                        this
                );
            }
            stopFollowingUser() {
                return (
                    this.updateInstanceState(
                        {followingUserId: null},
                        {ephemeral: !0}
                    ),
                        this.emit("stop-following"),
                        this
                );
            }
            getCameraState() {
                return this._cameraState.get();
            }
            getUnorderedRenderingShapes(n) {
                const r = [];
                let o = li * 2,
                    i = li;
                const a = this.getEditingShapeId(),
                    s = this.getSelectedShapeIds(),
                    l = this.getErasingShapeIds(),
                    c = this.getRenderingBoundsExpanded(),
                    d = Number.isFinite(this.renderingBoundsMargin),
                    u = (h, p, m) => {
                        const f = this.getShape(h);
                        if (!f) return;
                        p *= f.opacity;
                        let g = !1,
                            b = !1;
                        const x = this.getShapeUtil(f),
                            S = this.getShapeMaskedPageBounds(h);
                        n &&
                        ((b = !m && l.includes(h)),
                        b && (p *= 0.32),
                            (g =
                                d &&
                                x.canUnmount(f) &&
                                a !== h &&
                                (S === void 0 ||
                                    (!c.includes(S) && !s.includes(h))))),
                            r.push({
                                id: h,
                                shape: f,
                                util: x,
                                index: o,
                                backgroundIndex: i,
                                opacity: p,
                                isCulled: g,
                                maskedPageBounds: S,
                            }),
                            (o += 1),
                            (i += 1);
                        const _ = this.getSortedChildIdsForParent(h);
                        if (!_.length) return;
                        let k = null;
                        x.providesBackgroundForChildren(f) &&
                        ((k = i), (i = o), (o += li));
                        for (const C of _) u(C, p, m || b);
                        k !== null && (i = k);
                    };
                for (const h of this.getSortedChildIdsForParent(
                    this.getCurrentPageId()
                ))
                    u(h, 1, !1);
                return r;
            }
            getRenderingShapes() {
                return this.getUnorderedRenderingShapes(!0).sort(pD);
            }
            getRenderingBounds() {
                return this._renderingBounds.get();
            }
            getRenderingBoundsExpanded() {
                return this._renderingBoundsExpanded.get();
            }
            updateRenderingBounds() {
                const n = this.getViewportPageBounds();
                return n.equals(this._renderingBounds.__unsafe__getWithoutCapture())
                    ? this
                    : (this._renderingBounds.set(n.clone()),
                        Number.isFinite(this.renderingBoundsMargin)
                            ? this._renderingBoundsExpanded.set(
                                n
                                    .clone()
                                    .expandBy(
                                        this.renderingBoundsMargin /
                                        this.getZoomLevel()
                                    )
                            )
                            : this._renderingBoundsExpanded.set(n),
                        this);
            }
            _getAllPagesQuery() {
                return this.store.query.records("page");
            }
            getPages() {
                return this._getAllPagesQuery().get().sort(pn);
            }
            getCurrentPage() {
                return this.getPage(this.getCurrentPageId());
            }
            getCurrentPageId() {
                return this.getInstanceState().currentPageId;
            }
            getPage(n) {
                return this.store.get(typeof n == "string" ? n : n.id);
            }
            getCurrentPageShapeIds() {
                return this._currentPageShapeIds.get();
            }
            getPageShapeIds(n) {
                const r = typeof n == "string" ? n : n.id,
                    o = this.store.query.exec("shape", {parentId: {eq: r}});
                return this.getShapeAndDescendantIds(o.map((i) => i.id));
            }
            setCurrentPage(n, r) {
                const o = typeof n == "string" ? n : n.id;
                return this._setCurrentPageId(o, r), this;
            }
            updatePage(n, r) {
                return this._updatePage(n, r), this;
            }
            createPage(n) {
                return this._createPage(n), this;
            }
            deletePage(n) {
                const r = typeof n == "string" ? n : n.id;
                return this._deletePage(r), this;
            }
            duplicatePage(n, r = ai.createId()) {
                if (this.getPages().length >= zf) return this;
                const o = typeof n == "string" ? n : n.id,
                    i = this.getPage(o);
                if (!i) return this;
                const a = {...this.getCamera()},
                    s = this.getContentFromCurrentPage(
                        this.getSortedChildIdsForParent(i.id)
                    );
                return (
                    this.batch(() => {
                        var d;
                        const l = this.getPages(),
                            c = yu(
                                i.index,
                                (d = l[l.indexOf(i) + 1]) == null ? void 0 : d.index
                            );
                        if (
                            (this.createPage({
                                name: i.name + " Copy",
                                id: r,
                                index: c,
                            }),
                                this.setCurrentPage(r),
                                this.setCamera(a),
                                s)
                        )
                            return this.putContentOntoCurrentPage(s);
                    }),
                        this
                );
            }
            renamePage(n, r, o) {
                const i = typeof n == "string" ? n : n.id;
                return this.getInstanceState().isReadonly
                    ? this
                    : (this.updatePage({id: i, name: r}, o), this);
            }
            _getAllAssetsQuery() {
                return this.store.query.records("asset");
            }
            getAssets() {
                return this._getAllAssetsQuery().get();
            }
            createAssets(n) {
                return this._createAssets(n), this;
            }
            updateAssets(n) {
                return this._updateAssets(n), this;
            }
            deleteAssets(n) {
                const r = typeof n[0] == "string" ? n : n.map((o) => o.id);
                return this._deleteAssets(r), this;
            }
            getAsset(n) {
                return this.store.get(typeof n == "string" ? n : n.id);
            }
            _getShapeGeometryCache() {
                return this.store.createComputedCache(
                    "bounds",
                    (n) => this.getShapeUtil(n).getGeometry(n),
                    (n, r) => n.props === r.props
                );
            }
            getShapeGeometry(n) {
                return this._getShapeGeometryCache().get(
                    typeof n == "string" ? n : n.id
                );
            }
            _getShapeOutlineSegmentsCache() {
                return this.store.createComputedCache("outline-segments", (n) =>
                    this.getShapeUtil(n).getOutlineSegments(n)
                );
            }
            getShapeOutlineSegments(n) {
                return (
                    this._getShapeOutlineSegmentsCache().get(
                        typeof n == "string" ? n : n.id
                    ) ?? ni
                );
            }
            _getShapeHandlesCache() {
                return this.store.createComputedCache("handles", (n) => {
                    var r, o;
                    return (o = (r = this.getShapeUtil(n)).getHandles) == null
                        ? void 0
                        : o.call(r, n);
                });
            }
            getShapeHandles(n) {
                return this._getShapeHandlesCache().get(
                    typeof n == "string" ? n : n.id
                );
            }
            getShapeLocalTransform(n) {
                const r = typeof n == "string" ? n : n.id,
                    o = this.getShape(r);
                if (!o) throw Error("Editor.getTransform: shape not found");
                return re.Identity().translate(o.x, o.y).rotate(o.rotation);
            }
            _getShapePageTransformCache() {
                return this.store.createComputedCache("pageTransformCache", (n) => {
                    if (Vn(n.parentId)) return this.getShapeLocalTransform(n);
                    const r =
                        this._getShapePageTransformCache().get(n.parentId) ??
                        re.Identity();
                    return re.Compose(r, this.getShapeLocalTransform(n));
                });
            }
            getShapeParentTransform(n) {
                const r = typeof n == "string" ? n : n.id,
                    o = this.getShape(r);
                return !o || Vn(o.parentId)
                    ? re.Identity()
                    : this._getShapePageTransformCache().get(o.parentId) ??
                    re.Identity();
            }
            getShapePageTransform(n) {
                const r = typeof n == "string" ? n : this.getShape(n).id;
                return this._getShapePageTransformCache().get(r) ?? re.Identity();
            }
            _getShapePageBoundsCache() {
                return this.store.createComputedCache("pageBoundsCache", (n) => {
                    const r = this._getShapePageTransformCache().get(n.id);
                    return r
                        ? ce.FromPoints(
                            re.applyToPoints(r, this.getShapeGeometry(n).vertices)
                        )
                        : new ce();
                });
            }
            getShapePageBounds(n) {
                return this._getShapePageBoundsCache().get(
                    typeof n == "string" ? n : n.id
                );
            }
            _getShapeClipPathCache() {
                return this.store.createComputedCache("clipPathCache", (n) => {
                    const r = this._getShapeMaskCache().get(n.id);
                    if (!r) return;
                    if (r.length === 0) return "polygon(0px 0px, 0px 0px, 0px 0px)";
                    const o = this._getShapePageTransformCache().get(n.id);
                    return o
                        ? `polygon(${re
                            .applyToPoints(re.Inverse(o), r)
                            .map((a) => `${a.x}px ${a.y}px`)
                            .join(",")})`
                        : void 0;
                });
            }
            getShapeClipPath(n) {
                return this._getShapeClipPathCache().get(
                    typeof n == "string" ? n : n.id
                );
            }
            _getShapeMaskCache() {
                return this.store.createComputedCache("pageMaskCache", (n) => {
                    if (Vn(n.parentId)) return;
                    const r = this.getShapeAncestors(n.id).filter((i) =>
                        this.isShapeOfType(i, "frame")
                    );
                    return r.length === 0
                        ? void 0
                        : r
                            .map((i) =>
                                this._getShapePageTransformCache()
                                    .get(i.id)
                                    .applyToPoints(
                                        this.getShapeGeometry(i).vertices
                                    )
                            )
                            .reduce((i, a) => {
                                if (!(a && i)) return;
                                const s = r1(i, a);
                                return s ? s.map(E.Cast) : [];
                            });
                });
            }
            getShapeMask(n) {
                return this._getShapeMaskCache().get(
                    typeof n == "string" ? n : n.id
                );
            }
            getShapeMaskedPageBounds(n) {
                typeof n != "string" && (n = n.id);
                const r = this._getShapePageBoundsCache().get(n);
                if (!r) return;
                const o = this._getShapeMaskCache().get(n);
                if (o) {
                    if (o.length === 0) return;
                    const {corners: i} = r;
                    if (i.every((s, l) => s && E.Equals(s, o[l]))) return r.clone();
                    const a = r1(o, i);
                    return a ? ce.FromPoints(a) : void 0;
                }
                return r;
            }
            getShapeAncestors(n, r = []) {
                const o = typeof n == "string" ? n : n.id,
                    i = this.getShape(o);
                if (!i) return r;
                const a = i.parentId;
                if (Vn(a)) return r.reverse(), r;
                const s = this.store.get(a);
                return s ? (r.push(s), this.getShapeAncestors(s, r)) : r;
            }
            findShapeAncestor(n, r) {
                const o = typeof n == "string" ? n : n.id,
                    i = this.getShape(o);
                if (!i) return;
                const a = i.parentId;
                if (Vn(a)) return;
                const s = this.getShape(a);
                if (s) return r(s) ? s : this.findShapeAncestor(s, r);
            }
            hasAncestor(n, r) {
                const o = typeof n == "string" ? n : n == null ? void 0 : n.id,
                    i = o && this.getShape(o);
                return i
                    ? i.parentId === r
                        ? !0
                        : this.hasAncestor(this.getShapeParent(i), r)
                    : !1;
            }
            findCommonAncestor(n, r) {
                var c;
                if (n.length === 0) return;
                const o = typeof n[0] == "string" ? n : n.map((d) => d.id),
                    i = pe(o.map((d) => this.getShape(d)));
                if (i.length === 1) {
                    const d = i[0].parentId;
                    return Vn(d)
                        ? void 0
                        : r
                            ? (c = this.findShapeAncestor(i[0], r)) == null
                                ? void 0
                                : c.id
                            : d;
                }
                const [a, ...s] = i;
                let l = this.getShapeParent(a);
                for (; l; ) {
                    if (r && !r(l)) {
                        l = this.getShapeParent(l);
                        continue;
                    }
                    if (s.every((d) => this.hasAncestor(d, l.id))) return l.id;
                    l = this.getShapeParent(l);
                }
            }
            isShapeOrAncestorLocked(n) {
                const r = typeof n == "string" ? this.getShape(n) : n;
                return r === void 0
                    ? !1
                    : r.isLocked
                        ? !0
                        : this.isShapeOrAncestorLocked(this.getShapeParent(r));
            }
            getCurrentPageBounds() {
                let n;
                return (
                    this.getCurrentPageShapeIds().forEach((r) => {
                        const o = this.getShapeMaskedPageBounds(r);
                        o && (n ? (n = n.expand(o)) : (n = o.clone()));
                    }),
                        n
                );
            }
            getSelectedShapeAtPoint(n) {
                const r = this.getSelectedShapeIds();
                return this.getCurrentPageShapesSorted()
                    .filter((o) => o.type !== "group" && r.includes(o.id))
                    .reverse()
                    .find((o) =>
                        this.isPointInShape(o, n, {hitInside: !0, margin: 0})
                    );
            }
            getShapeAtPoint(n, r = {}) {
                const o = this.getZoomLevel(),
                    i = this.getViewportPageBounds(),
                    {
                        filter: a,
                        margin: s = 0,
                        hitLabels: l = !1,
                        hitInside: c = !1,
                        hitFrameInside: d = !1,
                    } = r;
                let u = 1 / 0,
                    h = null,
                    p = 1 / 0,
                    m = null;
                const f = (
                    r.renderingOnly
                        ? this.getCurrentPageRenderingShapesSorted()
                        : this.getCurrentPageShapesSorted()
                ).filter((g) => {
                    if (this.isShapeOfType(g, "group")) return !1;
                    const b = this.getShapeMask(g);
                    return b && !_o(n, b) ? !1 : a ? a(g) : !0;
                });
                for (let g = f.length - 1; g >= 0; g--) {
                    const b = f[g],
                        x = this.getShapeGeometry(b),
                        S = x instanceof oa,
                        _ = this.getPointInShapeSpace(b, n);
                    if (
                        (this.isShapeOfType(b, "arrow") ||
                            (this.isShapeOfType(b, "geo") &&
                                b.props.fill === "none")) &&
                        b.props.text.trim()
                    ) {
                        for (const C of x.children)
                            if (C.isLabel && C.isPointInBounds(_)) return b;
                    }
                    if (this.isShapeOfType(b, "frame")) {
                        const C = x.distanceToPoint(_, c);
                        if (Math.abs(C) <= s) return m || b;
                        if (x.hitTestPoint(_, 0, !0))
                            return m || h || (d ? b : void 0);
                        continue;
                    }
                    let k;
                    if (S) {
                        let C = 1 / 0;
                        for (const P of x.children) {
                            if (P.isLabel && !l) continue;
                            const I = P.distanceToPoint(_, c);
                            I < C && (C = I);
                        }
                        k = C;
                    } else
                        (s === 0 && (x.bounds.w < 1 || x.bounds.h < 1)) ||
                        x.bounds.containsPoint(_, s)
                            ? (k = x.distanceToPoint(_, c))
                            : (k = 1 / 0);
                    if (x.isClosed) {
                        if (k <= s) {
                            if (x.isFilled || (S && x.children[0].isFilled))
                                return m || b;
                            if (this.getShapePageBounds(b).contains(i)) continue;
                            if (Math.abs(k) < s)
                                Math.abs(k) < p && ((p = Math.abs(k)), (m = b));
                            else if (!m) {
                                const {area: C} = x;
                                C < u && ((u = C), (h = b));
                            }
                        }
                    } else if (k < Xr / o) return b;
                }
                return m || h || void 0;
            }
            getShapesAtPoint(n, r = {}) {
                return this.getCurrentPageShapes().filter((o) =>
                    this.isPointInShape(o, n, r)
                );
            }
            isPointInShape(n, r, o = {}) {
                const {hitInside: i = !1, margin: a = 0} = o,
                    s = typeof n == "string" ? n : n.id,
                    l = this.getShapeMask(s);
                return l && !_o(r, l)
                    ? !1
                    : this.getShapeGeometry(s).hitTestPoint(
                        this.getPointInShapeSpace(n, r),
                        a,
                        i
                    );
            }
            getPointInShapeSpace(n, r) {
                const o = typeof n == "string" ? n : n.id;
                return this._getShapePageTransformCache()
                    .get(o)
                    .clone()
                    .invert()
                    .applyToPoint(r);
            }
            getPointInParentSpace(n, r) {
                const o = typeof n == "string" ? n : n.id,
                    i = this.getShape(o);
                if (!i) return new E(0, 0);
                if (Vn(i.parentId)) return E.From(r);
                const a = this.getShapePageTransform(i.parentId);
                return a ? a.clone().invert().applyToPoint(r) : E.From(r);
            }
            getCurrentPageShapes() {
                return Array.from(this.getCurrentPageShapeIds(), (n) =>
                    this.store.get(n)
                );
            }
            getCurrentPageShapesSorted() {
                const n = new Set(this.getCurrentPageShapes().sort(pn)),
                    r = [];
                function o(i) {
                    r.push(i),
                        n.delete(i),
                        n.forEach((a) => {
                            a.parentId === i.id && o(a);
                        });
                }
                return (
                    n.forEach((i) => {
                        const a = this.getShape(i.parentId);
                        rs(a) || o(i);
                    }),
                        r
                );
            }
            getCurrentPageRenderingShapesSorted() {
                return this.getRenderingShapes()
                    .filter(({isCulled: n}) => !n)
                    .sort((n, r) => n.index - r.index)
                    .map(({shape: n}) => n);
            }
            isShapeOfType(n, r) {
                return (typeof n == "string" ? this.getShape(n) : n).type === r;
            }
            getShape(n) {
                const r = typeof n == "string" ? n : n.id;
                if (kr(r)) return this.store.get(r);
            }
            getShapeParent(n) {
                const r = typeof n == "string" ? n : n == null ? void 0 : n.id;
                if (!r) return;
                const o = this.getShape(r);
                if (!(o === void 0 || !kr(o.parentId)))
                    return this.store.get(o.parentId);
            }
            getShapeNearestSibling(n, r) {
                return r
                    ? r.parentId === n.parentId
                        ? r
                        : this.findShapeAncestor(
                            r,
                            (i) => i.parentId === n.parentId
                        )
                    : void 0;
            }
            isShapeInPage(n, r = this.getCurrentPageId()) {
                const o = typeof n == "string" ? n : n.id,
                    i = this.getShape(o);
                if (!i) return !1;
                let a = !1;
                if (i.parentId === r) a = !0;
                else {
                    let s = this.getShape(i.parentId);
                    e: for (; s; ) {
                        if (s.parentId === r) {
                            a = !0;
                            break e;
                        }
                        s = this.getShape(s.parentId);
                    }
                }
                return a;
            }
            getAncestorPageId(n) {
                const r = typeof n == "string" ? n : n == null ? void 0 : n.id,
                    o = r && this.getShape(r);
                if (o)
                    return Vn(o.parentId)
                        ? o.parentId
                        : this.getAncestorPageId(this.getShape(o.parentId));
            }
            reparentShapes(n, r, o) {
                const i = typeof n[0] == "string" ? n : n.map((m) => m.id);
                if (i.length === 0) return this;
                const a = [],
                    s = Vn(r) ? re.Identity() : this.getShapePageTransform(r),
                    l = s.rotation();
                let c = [];
                const d = pe(
                    this.getSortedChildIdsForParent(r).map((m) => this.getShape(m))
                );
                if (o) {
                    const m = d.find((f) => f.index === o);
                    if (m) {
                        const f = d[d.indexOf(m) + 1];
                        f ? (c = Hl(o, f.index, i.length)) : (c = s1(o, i.length));
                    } else {
                        const f = d.sort(pn).find((g) => g.index > o);
                        f ? (c = Hl(o, f.index, i.length)) : (c = s1(o, i.length));
                    }
                } else {
                    const m = d.length && d[d.length - 1];
                    c = m ? s1(m.index, i.length) : oE(i.length);
                }
                const u = s.clone().invert(),
                    h = pe(i.map((m) => this.getShape(m))),
                    p = h.filter((m) => m.isLocked);
                p.length &&
                this.updateShapes(
                    p.map(({id: m, type: f}) => ({
                        id: m,
                        type: f,
                        isLocked: !1,
                    }))
                );
                for (let m = 0; m < h.length; m++) {
                    const f = h[m],
                        g = this.getShapePageTransform(f);
                    if (!g) continue;
                    const b = g.point();
                    if (!b) continue;
                    const x = u.applyToPoint(b),
                        S = g.rotation() - l;
                    a.push({
                        id: f.id,
                        type: f.type,
                        parentId: r,
                        x: x.x,
                        y: x.y,
                        rotation: S,
                        index: c[m],
                        isLocked: f.isLocked,
                    });
                }
                return this.updateShapes(a), this;
            }
            getHighestIndexForParent(n) {
                const r = typeof n == "string" ? n : n.id,
                    o = this._parentIdsToChildIds.get()[r];
                if (!o || o.length === 0) return "a1";
                const i = this.getShape(o[o.length - 1]);
                return di(i.index);
            }
            getSortedChildIdsForParent(n) {
                const r = typeof n == "string" ? n : n.id,
                    o = this._parentIdsToChildIds.get()[r];
                return o ? this._childIdsCache.get(o, () => o) : ni;
            }
            visitDescendants(n, r) {
                const o = typeof n == "string" ? n : n.id,
                    i = this.getSortedChildIdsForParent(o);
                for (const a of i) r(a) !== !1 && this.visitDescendants(a, r);
                return this;
            }
            getShapeAndDescendantIds(n) {
                const r = new Set(),
                    o = [...n];
                for (; o.length > 0; ) {
                    const i = o.pop();
                    if (!i) break;
                    if (!r.has(i)) {
                        r.add(i);
                        for (const a of this.getSortedChildIdsForParent(i))
                            o.push(a);
                    }
                }
                return r;
            }
            getDroppingOverShape(n, r = []) {
                const o = this.getCurrentPageShapesSorted();
                for (let i = o.length - 1; i >= 0; i--) {
                    const a = o[i];
                    if (
                        !this.getShapeUtil(a).canDropShapes(a, r) ||
                        r.find((l) => l.id === a.id || this.hasAncestor(a, l.id))
                    )
                        continue;
                    const s = this.getShapeMaskedPageBounds(a.id);
                    if (
                        s &&
                        s.containsPoint(n) &&
                        this.getShapeGeometry(a).hitTestPoint(
                            this.getPointInShapeSpace(a, n),
                            0,
                            !0
                        )
                    )
                        return a;
                }
            }
            getOutermostSelectableShape(n, r) {
                const o = typeof n == "string" ? n : n.id,
                    i = this.getShape(o);
                let a = i,
                    s = i;
                const l = this.getFocusedGroup();
                for (; s; ) {
                    if (
                        this.isShapeOfType(s, "group") &&
                        (l == null ? void 0 : l.id) !== s.id &&
                        !this.hasAncestor(l, s.id) &&
                        ((r == null ? void 0 : r(s)) ?? !0)
                    )
                        a = s;
                    else if ((l == null ? void 0 : l.id) === s.id) break;
                    s = this.getShapeParent(s);
                }
                return a;
            }
            rotateShapesBy(n, r) {
                if ((typeof n[0] == "string" ? n : n.map((a) => a.id)).length <= 0)
                    return this;
                const i = iE({editor: this});
                return i
                    ? (Xf({delta: r, snapshot: i, editor: this, stage: "one-off"}),
                        this)
                    : this;
            }
            nudgeShapes(n, r, o) {
                var s, l;
                const i = typeof n[0] == "string" ? n : n.map((c) => c.id);
                if (i.length <= 0) return this;
                const a = [];
                for (const c of i) {
                    const d = this.getShape(c);
                    if (!d) throw Error(`Could not find a shape with the id ${c}.`);
                    const u = E.Cast(r),
                        h = this.getShapeParentTransform(d);
                    h && u.rot(-h.rotation());
                    const p =
                        (l = (s = this.getShapeUtil(d)).onTranslateStart) == null
                            ? void 0
                            : l.call(s, d);
                    a.push(
                        p
                            ? {...p, x: d.x + u.x, y: d.y + u.y}
                            : {id: c, x: d.x + u.x, y: d.y + u.y, type: d.type}
                    );
                }
                return this.updateShapes(a, {squashing: !0, ...o}), this;
            }
            duplicateShapes(n, r) {
                const o = typeof n[0] == "string" ? n : n.map((d) => d.id);
                if (o.length <= 0) return this;
                const i = new Set(o),
                    a = [],
                    s = [...o];
                for (; s.length > 0; ) {
                    const d = s.pop();
                    if (!d) break;
                    a.push(d),
                        this.getSortedChildIdsForParent(d).forEach((u) =>
                            s.push(u)
                        );
                }
                a.reverse();
                const l = new Map(a.map((d) => [d, Ge()])),
                    c = pe(
                        a.map((d) => {
                            const u = this.getShape(d);
                            if (!u) return null;
                            const h = l.get(d);
                            let p = 0,
                                m = 0;
                            if (r && i.has(d)) {
                                const C = this.getShapeParentTransform(u),
                                    P = new E(r.x, r.y).rot(-C.rotation());
                                (p = P.x), (m = P.y);
                            }
                            const f = u.parentId ?? this.getCurrentPageId(),
                                g = this.getSortedChildIdsForParent(f),
                                b = g.indexOf(u.id),
                                x = g[b + 1],
                                S = x ? this.getShape(x) : null,
                                _ = S ? yu(u.index, S.index) : di(u.index);
                            let k = sn(u);
                            if (
                                this.isShapeOfType(u, "arrow") &&
                                this.isShapeOfType(k, "arrow")
                            ) {
                                const C = this.getArrowInfo(u);
                                let P, I;
                                if (
                                    u.props.start.type === "binding" &&
                                    ((P = l.get(u.props.start.boundShapeId)), !P)
                                )
                                    if (C != null && C.isValid) {
                                        const {x: T, y: R} = C.start.point;
                                        k.props.start = {type: "point", x: T, y: R};
                                    } else {
                                        const {start: T} = Zr(this, u);
                                        k.props.start = {
                                            type: "point",
                                            x: T.x,
                                            y: T.y,
                                        };
                                    }
                                if (
                                    u.props.end.type === "binding" &&
                                    ((I = l.get(u.props.end.boundShapeId)), !I)
                                )
                                    if (C != null && C.isValid) {
                                        const {x: T, y: R} = C.end.point;
                                        k.props.end = {type: "point", x: T, y: R};
                                    } else {
                                        const {end: T} = Zr(this, u);
                                        k.props.start = {
                                            type: "point",
                                            x: T.x,
                                            y: T.y,
                                        };
                                    }
                                const $ = wu(k) ? xu(this, k) : u1(this, k);
                                if (
                                    C != null &&
                                    C.isValid &&
                                    $ != null &&
                                    $.isValid &&
                                    !wu(u)
                                ) {
                                    const T = E.Med(C.start.handle, C.end.handle),
                                        R = E.Dist(C.middle, T),
                                        D = E.Dist($.middle, T);
                                    k.props.bend < 0
                                        ? (k.props.bend += D - R)
                                        : (k.props.bend -= D - R);
                                }
                                k.props.start.type === "binding" &&
                                P &&
                                (k.props.start.boundShapeId = P),
                                k.props.end.type === "binding" &&
                                I &&
                                (k.props.end.boundShapeId = I);
                            }
                            return (
                                (k = {
                                    ...k,
                                    id: h,
                                    x: u.x + p,
                                    y: u.y + m,
                                    index: _,
                                }),
                                    k
                            );
                        })
                    );
                return (
                    c.forEach((d) => {
                        kr(d.parentId) &&
                        l.has(d.parentId) &&
                        (d.parentId = l.get(d.parentId));
                    }),
                        this.history.batch(() => {
                            const d =
                                c.length + this.getCurrentPageShapeIds().size > li;
                            d && Jf(this);
                            const u = d
                                    ? c.slice(
                                        0,
                                        li - this.getCurrentPageShapeIds().size
                                    )
                                    : c,
                                h = u.map((p) => p.id);
                            if (
                                (this.createShapes(u),
                                    this.setSelectedShapes(h),
                                r !== void 0)
                            ) {
                                const p = this.getSelectionPageBounds(),
                                    m = this.getViewportPageBounds();
                                p &&
                                !m.contains(p) &&
                                this.centerOnPoint(p.center, {duration: ci});
                            }
                        }),
                        this
                );
            }
            moveShapesToPage(n, r) {
                const o = typeof n[0] == "string" ? n : n.map((l) => l.id);
                if (o.length === 0) return this;
                if (this.getInstanceState().isReadonly) return this;
                const i = this.getCurrentPageId();
                if (r === i) return this;
                if (!this.store.has(r)) return this;
                const a = this.getContentFromCurrentPage(o);
                if (!a) return this;
                if (this.getPageShapeIds(r).size + a.shapes.length > li)
                    return Jf(this, r), this;
                const s = this.getCamera().z;
                return (
                    this.history.batch(() => {
                        this.deleteShapes(o),
                            this.setCurrentPage(r),
                            this.setFocusedGroup(null),
                            this.selectNone(),
                            this.putContentOntoCurrentPage(a, {
                                select: !0,
                                preserveIds: !0,
                                preservePosition: !0,
                            }),
                            this.setCamera({...this.getCamera(), z: s}),
                            this.centerOnPoint(
                                this.getSelectionRotatedPageBounds().center
                            );
                    }),
                        this
                );
            }
            toggleLock(n) {
                const r = typeof n[0] == "string" ? n : n.map((s) => s.id);
                if (this.getInstanceState().isReadonly || r.length === 0)
                    return this;
                let o = !0,
                    i = !0;
                const a = [];
                for (const s of r) {
                    const l = this.getShape(s);
                    l && (a.push(l), l.isLocked ? (i = !1) : (o = !1));
                }
                return (
                    this.batch(() => {
                        i
                            ? (this.updateShapes(
                                a.map((s) => ({
                                    id: s.id,
                                    type: s.type,
                                    isLocked: !0,
                                }))
                            ),
                                this.setSelectedShapes([]))
                            : o
                                ? this.updateShapes(
                                    a.map((s) => ({
                                        id: s.id,
                                        type: s.type,
                                        isLocked: !1,
                                    }))
                                )
                                : this.updateShapes(
                                    a.map((s) => ({
                                        id: s.id,
                                        type: s.type,
                                        isLocked: !0,
                                    }))
                                );
                    }),
                        this
                );
            }
            sendToBack(n) {
                const r = typeof n[0] == "string" ? n : n.map((i) => i.id),
                    o = Gf(this, "toBack", r);
                return o && this.updateShapes(o), this;
            }
            sendBackward(n) {
                const r = typeof n[0] == "string" ? n : n.map((i) => i.id),
                    o = Gf(this, "backward", r);
                return o && this.updateShapes(o), this;
            }
            bringForward(n) {
                const r = typeof n[0] == "string" ? n : n.map((i) => i.id),
                    o = Gf(this, "forward", r);
                return o && this.updateShapes(o), this;
            }
            bringToFront(n) {
                const r = typeof n[0] == "string" ? n : n.map((i) => i.id),
                    o = Gf(this, "toFront", r);
                return o && this.updateShapes(o), this;
            }
            flipShapes(n, r) {
                const o = typeof n[0] == "string" ? n : n.map((s) => s.id);
                if (this.getInstanceState().isReadonly) return this;
                let i = pe(o.map((s) => this.getShape(s)));
                if (!i.length) return this;
                i = pe(
                    i
                        .map((s) =>
                            this.isShapeOfType(s, "group")
                                ? this.getSortedChildIdsForParent(s.id).map((l) =>
                                    this.getShape(l)
                                )
                                : s
                        )
                        .flat()
                );
                const a = ce.Common(
                    pe(i.map((s) => this.getShapePageBounds(s)))
                ).center;
                return (
                    this.batch(() => {
                        for (const s of i) {
                            const l = this.getShapeGeometry(s).bounds,
                                c = this.getShapePageTransform(s.id);
                            c &&
                            this.resizeShape(
                                s.id,
                                {
                                    x: r === "horizontal" ? -1 : 1,
                                    y: r === "vertical" ? -1 : 1,
                                },
                                {
                                    initialBounds: l,
                                    initialPageTransform: c,
                                    initialShape: s,
                                    mode: "scale_shape",
                                    scaleOrigin: a,
                                    scaleAxisRotation: 0,
                                }
                            );
                        }
                    }),
                        this
                );
            }
            stackShapes(n, r, o) {
                const i = typeof n[0] == "string" ? n : n.map((g) => g.id);
                if (this.getInstanceState().isReadonly) return this;
                const a = pe(
                        i
                            .map((g) => this.getShape(g))
                            .filter(
                                (g) =>
                                    !(
                                        !g ||
                                        (this.isShapeOfType(g, "arrow") &&
                                            (g.props.start.type === "binding" ||
                                                g.props.end.type === "binding"))
                                    )
                            )
                    ),
                    s = a.length;
                if ((o === 0 && s < 3) || s < 2) return this;
                const l = Object.fromEntries(
                    a.map((g) => [g.id, this.getShapePageBounds(g)])
                );
                let c, d, u, h;
                r === "horizontal"
                    ? ((c = "x"), (d = "minX"), (u = "maxX"), (h = "width"))
                    : ((c = "y"), (d = "minY"), (u = "maxY"), (h = "height"));
                let p;
                if (o === 0) {
                    const g = [];
                    a.sort((x, S) => l[x.id][d] - l[S.id][d]);
                    for (let x = 0; x < s - 1; x++) {
                        const S = a[x],
                            _ = a[x + 1],
                            k = l[S.id],
                            P = l[_.id][d] - k[u],
                            I = g.find(($) => $.gap === P);
                        I ? I.count++ : g.push({gap: P, count: 1});
                    }
                    let b = 0;
                    g.forEach((x) => {
                        x.count > b && ((b = x.count), (p = x.gap));
                    }),
                    b === 1 &&
                    (p = Math.max(
                        0,
                        g.reduce((x, S) => x + S.gap * S.count, 0) / (s - 1)
                    ));
                } else p = o;
                const m = [];
                let f = l[a[0].id][u];
                return (
                    a.forEach((g, b) => {
                        var C, P;
                        if (b === 0) return;
                        const x = {x: 0, y: 0};
                        x[c] = f + p - l[g.id][c];
                        const S = this.getShapeParent(g),
                            _ = S
                                ? E.Rot(
                                    x,
                                    -this.getShapePageTransform(S).decompose()
                                        .rotation
                                )
                                : x,
                            k =
                                (P = (C = this.getShapeUtil(g)).onTranslateStart) ==
                                null
                                    ? void 0
                                    : P.call(C, g);
                        m.push(
                            k
                                ? {...k, [c]: g[c] + _[c]}
                                : {id: g.id, type: g.type, [c]: g[c] + _[c]}
                        ),
                            (f += l[g.id][h] + p);
                    }),
                        this.updateShapes(m),
                        this
                );
            }
            packShapes(n, r) {
                var P, I;
                const o = typeof n[0] == "string" ? n : n.map(($) => $.id);
                if (this.getInstanceState().isReadonly) return this;
                if (o.length < 2) return this;
                const i = pe(
                        o
                            .map(($) => this.getShape($))
                            .filter(
                                ($) =>
                                    !(
                                        !$ ||
                                        (this.isShapeOfType($, "arrow") &&
                                            ($.props.start.type === "binding" ||
                                                $.props.end.type === "binding"))
                                    )
                            )
                    ),
                    a = {},
                    s = {};
                let l,
                    c,
                    d = 0;
                for (let $ = 0; $ < i.length; $++)
                    (l = i[$]),
                        (c = this.getShapePageBounds(l)),
                        (a[l.id] = c),
                        (s[l.id] = c.clone()),
                        (d += c.width * c.height);
                const u = ce.Common(pe(Object.values(a))),
                    h = u.width;
                i.sort(($, T) => a[T.id].height - a[$.id].height);
                const p = Math.max(Math.ceil(Math.sqrt(d / 0.95)), h),
                    m = [new ce(u.x, u.y, p, 1 / 0)];
                let f = 0,
                    g = 0,
                    b,
                    x;
                for (let $ = 0; $ < i.length; $++) {
                    (l = i[$]), (c = s[l.id]);
                    for (let T = m.length - 1; T >= 0; T--)
                        if (
                            ((b = m[T]),
                                !(c.width > b.width || c.height > b.height))
                        ) {
                            (c.x = b.x),
                                (c.y = b.y),
                                (g = Math.max(g, c.maxY)),
                                (f = Math.max(f, c.maxX)),
                                c.width === b.width && c.height === b.height
                                    ? ((x = m.pop()), T < m.length && (m[T] = x))
                                    : c.height === b.height
                                        ? ((b.x += c.width + r),
                                            (b.width -= c.width + r))
                                        : c.width === b.width
                                            ? ((b.y += c.height + r),
                                                (b.height -= c.height + r))
                                            : (m.push(
                                                new ce(
                                                    b.x + (c.width + r),
                                                    b.y,
                                                    b.width - (c.width + r),
                                                    c.height
                                                )
                                            ),
                                                (b.y += c.height + r),
                                                (b.height -= c.height + r));
                            break;
                        }
                }
                const S = ce.Common(Object.values(s)),
                    _ = E.Sub(u.center, S.center);
                let k;
                const C = [];
                for (let $ = 0; $ < i.length; $++) {
                    (l = i[$]), (c = a[l.id]), (k = s[l.id]);
                    const T = E.Sub(k.point, c.point).add(_),
                        R = this.getShapeParentTransform(l);
                    R && T.rot(-R.rotation());
                    const D = {id: l.id, type: l.type, x: l.x + T.x, y: l.y + T.y},
                        j =
                            (I = (P = this.getShapeUtil(l)).onTranslateStart) ==
                            null
                                ? void 0
                                : I.call(P, {...l, ...D});
                    j ? C.push({...D, ...j}) : C.push(D);
                }
                return C.length && this.updateShapes(C), this;
            }
            alignShapes(n, r) {
                const o = typeof n[0] == "string" ? n : n.map((c) => c.id);
                if (this.getInstanceState().isReadonly) return this;
                if (o.length < 2) return this;
                const i = pe(o.map((c) => this.getShape(c))),
                    a = Object.fromEntries(
                        i.map((c) => [c.id, this.getShapePageBounds(c)])
                    ),
                    s = ce.Common(pe(Object.values(a))),
                    l = [];
                return (
                    i.forEach((c) => {
                        var f, g;
                        const d = a[c.id];
                        if (!d) return;
                        const u = {x: 0, y: 0};
                        switch (r) {
                            case "top": {
                                u.y = s.minY - d.minY;
                                break;
                            }
                            case "center-vertical": {
                                u.y = s.midY - d.minY - d.height / 2;
                                break;
                            }
                            case "bottom": {
                                u.y = s.maxY - d.minY - d.height;
                                break;
                            }
                            case "left": {
                                u.x = s.minX - d.minX;
                                break;
                            }
                            case "center-horizontal": {
                                u.x = s.midX - d.minX - d.width / 2;
                                break;
                            }
                            case "right": {
                                u.x = s.maxX - d.minX - d.width;
                                break;
                            }
                        }
                        const h = this.getShapeParent(c),
                            p = h
                                ? E.Rot(
                                    u,
                                    -this.getShapePageTransform(h).decompose()
                                        .rotation
                                )
                                : u,
                            m =
                                (g = (f = this.getShapeUtil(c)).onTranslateStart) ==
                                null
                                    ? void 0
                                    : g.call(f, c);
                        l.push(
                            m
                                ? {...m, x: c.x + p.x, y: c.y + p.y}
                                : {
                                    id: c.id,
                                    type: c.type,
                                    x: c.x + p.x,
                                    y: c.y + p.y,
                                }
                        );
                    }),
                        this.updateShapes(l),
                        this
                );
            }
            distributeShapes(n, r) {
                const o = typeof n[0] == "string" ? n : n.map((S) => S.id);
                if (this.getInstanceState().isReadonly) return this;
                if (o.length < 3) return this;
                const i = o.length,
                    a = pe(o.map((S) => this.getShape(S))),
                    s = Object.fromEntries(
                        a.map((S) => [S.id, this.getShapePageBounds(S)])
                    );
                let l, c, d, u, h;
                r === "horizontal"
                    ? ((l = "x"),
                        (c = "minX"),
                        (d = "maxX"),
                        (u = "midX"),
                        (h = "width"))
                    : ((l = "y"),
                        (c = "minY"),
                        (d = "maxY"),
                        (u = "midY"),
                        (h = "height"));
                const p = [],
                    m = a.sort((S, _) => s[S.id][c] - s[_.id][c])[0],
                    f = a.sort((S, _) => s[_.id][d] - s[S.id][d])[0],
                    g = s[m.id][u],
                    b = (s[f.id][u] - g) / (i - 1),
                    x = g + b;
                return (
                    a
                        .filter((S) => S !== m && S !== f)
                        .sort((S, _) => s[S.id][u] - s[_.id][u])
                        .forEach((S, _) => {
                            var $, T;
                            const k = {x: 0, y: 0};
                            k[l] = x + b * _ - s[S.id][h] / 2 - s[S.id][l];
                            const C = this.getShapeParent(S),
                                P = C
                                    ? E.Rot(
                                        k,
                                        -this.getShapePageTransform(C).rotation()
                                    )
                                    : k,
                                I =
                                    (T = ($ = this.getShapeUtil(S))
                                        .onTranslateStart) == null
                                        ? void 0
                                        : T.call($, S);
                            p.push(
                                I
                                    ? {...I, [l]: S[l] + P[l]}
                                    : {id: S.id, type: S.type, [l]: S[l] + P[l]}
                            );
                        }),
                        this.updateShapes(p),
                        this
                );
            }
            stretchShapes(n, r) {
                const o = typeof n[0] == "string" ? n : n.map((c) => c.id);
                if (this.getInstanceState().isReadonly) return this;
                if (o.length < 2) return this;
                const i = pe(o.map((c) => this.getShape(c))),
                    a = Object.fromEntries(
                        o.map((c) => [c, this.getShapeGeometry(c).bounds])
                    ),
                    s = Object.fromEntries(
                        o.map((c) => [c, this.getShapePageBounds(c)])
                    ),
                    l = ce.Common(pe(Object.values(s)));
                switch (r) {
                    case "vertical": {
                        this.batch(() => {
                            for (const c of i) {
                                if (this.getShapePageTransform(c).rotation() % Fe)
                                    continue;
                                const u = a[c.id],
                                    h = s[c.id],
                                    p = new E(0, l.minY - h.minY),
                                    m = this.getShapeParentTransform(c);
                                m && p.rot(-m.rotation());
                                const {x: f, y: g} = E.Add(p, c);
                                this.updateShapes(
                                    [{id: c.id, type: c.type, x: f, y: g}],
                                    {squashing: !0}
                                );
                                const b = new E(1, l.height / h.height);
                                this.resizeShape(c.id, b, {
                                    initialBounds: u,
                                    scaleOrigin: new E(h.center.x, l.minY),
                                    scaleAxisRotation: 0,
                                });
                            }
                        });
                        break;
                    }
                    case "horizontal": {
                        this.batch(() => {
                            for (const c of i) {
                                const d = a[c.id],
                                    u = s[c.id];
                                if (this.getShapePageTransform(c).rotation() % Fe)
                                    continue;
                                const p = new E(l.minX - u.minX, 0),
                                    m = this.getShapeParentTransform(c);
                                m && p.rot(-m.rotation());
                                const {x: f, y: g} = E.Add(p, c);
                                this.updateShapes(
                                    [{id: c.id, type: c.type, x: f, y: g}],
                                    {squashing: !0}
                                );
                                const b = new E(l.width / u.width, 1);
                                this.resizeShape(c.id, b, {
                                    initialBounds: d,
                                    scaleOrigin: new E(l.minX, u.center.y),
                                    scaleAxisRotation: 0,
                                });
                            }
                        });
                        break;
                    }
                }
                return this;
            }
            resizeShape(n, r, o = {}) {
                var p;
                const i = typeof n == "string" ? n : n.id;
                if (this.getInstanceState().isReadonly) return this;
                Number.isFinite(r.x) || (r = new E(1, r.y)),
                Number.isFinite(r.y) || (r = new E(r.x, 1));
                const a = o.initialShape ?? this.getShape(i);
                if (!a) return this;
                const s =
                    o.scaleOrigin ??
                    ((p = this.getShapePageBounds(i)) == null ? void 0 : p.center);
                if (!s) return this;
                const l = o.initialPageTransform
                    ? re.Cast(o.initialPageTransform)
                    : this.getShapePageTransform(i);
                if (!l) return this;
                const c = l.rotation();
                if (c == null) return this;
                const d = o.scaleAxisRotation ?? c,
                    u = o.initialBounds ?? this.getShapeGeometry(i).bounds;
                if (!u) return this;
                if (!FC(c, d))
                    return this._resizeUnalignedShape(i, r, {
                        ...o,
                        initialBounds: u,
                        scaleOrigin: s,
                        scaleAxisRotation: d,
                        initialPageTransform: l,
                        initialShape: a,
                    });
                const h = this.getShapeUtil(a);
                if (
                    (h.isAspectRatioLocked(a) &&
                    (Math.abs(r.x) > Math.abs(r.y)
                        ? (r = new E(r.x, Math.sign(r.y) * Math.abs(r.x)))
                        : (r = new E(Math.sign(r.x) * Math.abs(r.y), r.y))),
                    h.onResize && h.canResize(a))
                ) {
                    const m = this._scalePagePoint(
                            re.applyToPoint(l, new E(0, 0)),
                            s,
                            r,
                            d
                        ),
                        f = this.getPointInParentSpace(a.id, m),
                        g = new E(r.x, r.y),
                        b = iu((c - d) % Math.PI, 0);
                    (g.x = b ? r.x : r.y), (g.y = b ? r.y : r.x);
                    const x = re.applyToPoint(l, new E()),
                        {x: S, y: _} = this.getPointInParentSpace(a.id, x);
                    this.updateShapes(
                        [
                            {
                                id: i,
                                type: a.type,
                                x: f.x,
                                y: f.y,
                                ...h.onResize(
                                    {...a, x: S, y: _},
                                    {
                                        newPoint: f,
                                        handle: o.dragHandle ?? "bottom_right",
                                        mode: o.mode ?? "scale_shape",
                                        scaleX: g.x,
                                        scaleY: g.y,
                                        initialBounds: u,
                                        initialShape: a,
                                    }
                                ),
                            },
                        ],
                        {squashing: !0}
                    );
                } else {
                    const m = re.applyToPoint(l, u.center),
                        f = this._scalePagePoint(m, s, r, d),
                        g = this.getPointInParentSpace(a.id, m),
                        b = this.getPointInParentSpace(a.id, f),
                        x = E.Sub(b, g);
                    this.updateShapes(
                        [{id: i, type: a.type, x: a.x + x.x, y: a.y + x.y}],
                        {squashing: !0}
                    );
                }
                return this;
            }
            _scalePagePoint(n, r, o, i) {
                const a = E.RotWith(n, r, -i).sub(r),
                    s = E.MulV(a, o);
                return E.Add(s, r).rotWith(r, i);
            }
            _resizeUnalignedShape(n, r, o) {
                const {type: i} = o.initialShape,
                    a = new E(r.x, r.y);
                if (
                    (Math.abs(r.x) > Math.abs(r.y)
                        ? (a.x = Math.sign(r.x) * Math.abs(r.y))
                        : (a.y = Math.sign(r.y) * Math.abs(r.x)),
                        this.resizeShape(n, a, {
                            initialShape: o.initialShape,
                            initialBounds: o.initialBounds,
                        }),
                    Math.sign(r.x) * Math.sign(r.y) < 0)
                ) {
                    let {rotation: b} = re.Decompose(o.initialPageTransform);
                    (b -= 2 * b),
                        this.updateShapes([{id: n, type: i, rotation: b}], {
                            squashing: !0,
                        });
                }
                const s = re.applyToPoint(
                        o.initialPageTransform,
                        o.initialBounds.center
                    ),
                    l = this._scalePagePoint(
                        s,
                        o.scaleOrigin,
                        r,
                        o.scaleAxisRotation
                    ),
                    c = this.getShapePageBounds(n),
                    d = this.getShapePageTransform(n),
                    u = c.center,
                    h = d.point();
                if (!u || !h) return this;
                const p = E.Sub(l, u),
                    m = E.Add(h, p),
                    {x: f, y: g} = this.getPointInParentSpace(n, m);
                return (
                    this.updateShapes([{id: n, type: i, x: f, y: g}], {
                        squashing: !0,
                    }),
                        this
                );
            }
            getInitialMetaForShape(n) {
                return {};
            }
            createShape(n) {
                return this._createShapes([n]), this;
            }
            createShapes(n) {
                if (!Array.isArray(n))
                    throw Error(
                        "Editor.createShapes: must provide an array of shapes or shape partials"
                    );
                return this._createShapes(n), this;
            }
            animateShape(n, r) {
                return this.animateShapes([n], r);
            }
            animateShapes(n, r = {}) {
                const {duration: o = 500, easing: i = un.linear} = r,
                    a = He();
                let s = o,
                    l;
                const c = [];
                n.forEach((h) => {
                    if (!h) return;
                    const p = {partial: h, values: []},
                        m = this.getShape(h.id);
                    if (m) {
                        for (const f of ["x", "y", "rotation"])
                            h[f] !== void 0 &&
                            m[f] !== h[f] &&
                            p.values.push({prop: f, from: m[f], to: h[f]});
                        c.push(p), this.animatingShapes.set(m.id, a);
                    }
                });
                let d;
                const u = (h) => {
                    if (((s -= h), s < 0)) {
                        const {animatingShapes: m} = this,
                            f = n.filter((g) => g && m.get(g.id) === a);
                        f.length && this.updateShapes(f, {squashing: !1}),
                            this.removeListener("tick", u);
                        return;
                    }
                    l = i(1 - s / o);
                    const {animatingShapes: p} = this;
                    try {
                        const m = [];
                        for (let f = 0; f < c.length; f++)
                            (d = c[f]),
                            p.get(d.partial.id) === a &&
                            m.push({
                                id: d.partial.id,
                                type: d.partial.type,
                                ...d.values.reduce(
                                    (g, {prop: b, from: x, to: S}) => (
                                        (g[b] = x + (S - x) * l), g
                                    ),
                                    {}
                                ),
                            });
                        this._updateShapes(m, {squashing: !0});
                    } catch {}
                };
                return this.addListener("tick", u), this;
            }
            groupShapes(n, r = Ge()) {
                var p;
                if (!Array.isArray(n))
                    throw Error(
                        "Editor.groupShapes: must provide an array of shapes or shape ids"
                    );
                if (this.getInstanceState().isReadonly) return this;
                const o = typeof n[0] == "string" ? n : n.map((m) => m.id);
                if (o.length <= 1) return this;
                const i = pe(
                        this._getUnlockedShapeIds(o).map((m) => this.getShape(m))
                    ),
                    a = i.sort(pn).map((m) => m.id),
                    s = ce.Common(pe(i.map((m) => this.getShapePageBounds(m)))),
                    {x: l, y: c} = s.point,
                    d = this.findCommonAncestor(i) ?? this.getCurrentPageId();
                if (this.getCurrentToolId() !== "select") return this;
                this.isIn("select.idle") || this.cancel();
                const u = i.filter((m) => m.parentId === d).sort(pn),
                    h = (p = u[u.length - 1]) == null ? void 0 : p.index;
                return (
                    this.batch(() => {
                        this.createShapes([
                            {
                                id: r,
                                type: "group",
                                parentId: d,
                                index: h,
                                x: l,
                                y: c,
                                opacity: 1,
                                props: {},
                            },
                        ]),
                            this.reparentShapes(a, r),
                            this.select(r);
                    }),
                        this
                );
            }
            ungroupShapes(n) {
                const r = typeof n[0] == "string" ? n : n.map((s) => s.id);
                if (this.getInstanceState().isReadonly) return this;
                if (r.length === 0) return this;
                if (this.getCurrentToolId() !== "select") return this;
                this.isIn("select.idle") || this.cancel();
                const o = new Set(),
                    i = pe(r.map((s) => this.getShape(s))),
                    a = [];
                return (
                    i.forEach((s) => {
                        this.isShapeOfType(s, "group") ? a.push(s) : o.add(s.id);
                    }),
                        a.length === 0
                            ? this
                            : (this.batch(() => {
                                let s;
                                for (let l = 0, c = a.length; l < c; l++) {
                                    s = a[l];
                                    const d = this.getSortedChildIdsForParent(s.id);
                                    for (let u = 0, h = d.length; u < h; u++)
                                        o.add(d[u]);
                                    this.reparentShapes(d, s.parentId, s.index);
                                }
                                this.deleteShapes(a.map((l) => l.id)),
                                    this.select(...o);
                            }),
                                this)
                );
            }
            updateShape(n, r) {
                return this.updateShapes([n], r), this;
            }
            updateShapes(n, r) {
                let o = pe(n);
                return (
                    this.animatingShapes.size > 0 &&
                    o.forEach((i) => this.animatingShapes.delete(i.id)),
                        (o = o.filter((i) => {
                            const a = this.getShape(i.id);
                            return !(
                                !a ||
                                (this.isShapeOrAncestorLocked(a) &&
                                    !Object.hasOwn(i, "isLocked"))
                            );
                        })),
                        this._updateShapes(o, r),
                        this
                );
            }
            _getUnlockedShapeIds(n) {
                return n.filter((r) => {
                    var o;
                    return !((o = this.getShape(r)) != null && o.isLocked);
                });
            }
            deleteShapes(n) {
                if (!Array.isArray(n))
                    throw Error(
                        "Editor.deleteShapes: must provide an array of shapes or shapeIds"
                    );
                return (
                    this._deleteShapes(
                        this._getUnlockedShapeIds(
                            typeof n[0] == "string" ? n : n.map((r) => r.id)
                        )
                    ),
                        this
                );
            }
            deleteShape(n) {
                return this.deleteShapes([typeof n == "string" ? n : n.id]), this;
            }
            _extractSharedStyles(n, r) {
                if (this.isShapeOfType(n, "group")) {
                    const o = this._parentIdsToChildIds.get()[n.id];
                    if (!o) return;
                    for (let i = 0, a = o.length; i < a; i++)
                        this._extractSharedStyles(this.getShape(o[i]), r);
                } else
                    for (const [o, i] of this.styleProps[n.type])
                        r.applyValue(o, ts(n.props, i));
            }
            getStyleForNextShape(n) {
                const r = this.getInstanceState().stylesForNextShape[n.id];
                return r === void 0 ? n.defaultValue : r;
            }
            getShapeStyleIfExists(n, r) {
                const o = this.styleProps[n.type].get(r);
                if (o !== void 0) return ts(n.props, o);
            }
            getSharedStyles() {
                if (this.isIn("select") && this.getSelectedShapeIds().length > 0)
                    return this._selectionSharedStyles.get();
                const n = this.root.getCurrent(),
                    r = new i1();
                if (!n) return r;
                if (n.shapeType)
                    for (const o of this.styleProps[n.shapeType].keys())
                        r.applyValue(o, this.getStyleForNextShape(o));
                return r;
            }
            getSharedOpacity() {
                if (this.isIn("select") && this.getSelectedShapeIds().length > 0) {
                    const n = [],
                        r = (i) => {
                            const a = this.getShape(i);
                            if (a)
                                if (this.isShapeOfType(a, "group"))
                                    for (const s of this.getSortedChildIdsForParent(
                                        a.id
                                    ))
                                        r(s);
                                else n.push(a);
                        };
                    for (const i of this.getSelectedShapeIds()) r(i);
                    let o = null;
                    for (const i of n)
                        if (o === null) o = i.opacity;
                        else if (o !== i.opacity) return {type: "mixed"};
                    if (o !== null) return {type: "shared", value: o};
                }
                return {
                    type: "shared",
                    value: this.getInstanceState().opacityForNextShape,
                };
            }
            setOpacityForNextShapes(n, r) {
                return this.updateInstanceState({opacityForNextShape: n}, r), this;
            }
            setOpacityForSelectedShapes(n, r) {
                const o = this.getSelectedShapes();
                if (o.length > 0) {
                    const i = [],
                        a = (s) => {
                            if (this.isShapeOfType(s, "group")) {
                                const l = this.getSortedChildIdsForParent(s);
                                for (const c of l) a(this.getShape(c));
                            } else i.push(s);
                        };
                    for (const s of o) a(s);
                    this.updateShapes(
                        i.map((s) => ({id: s.id, type: s.type, opacity: n})),
                        r
                    );
                }
                return this;
            }
            setStyleForNextShapes(n, r, o) {
                const i = this.getInstanceState().stylesForNextShape;
                return (
                    this.updateInstanceState(
                        {stylesForNextShape: {...i, [n.id]: r}},
                        o
                    ),
                        this
                );
            }
            setStyleForSelectedShapes(n, r, o) {
                const i = this.getSelectedShapes();
                if (i.length > 0) {
                    const a = [],
                        s = (l) => {
                            if (this.isShapeOfType(l, "group")) {
                                const c = this.getSortedChildIdsForParent(l.id);
                                for (const d of c) s(this.getShape(d));
                            } else {
                                const c = this.getShapeUtil(l),
                                    d = this.styleProps[l.type].get(n);
                                if (d) {
                                    const u = {
                                        id: l.id,
                                        type: l.type,
                                        props: {[d]: r},
                                    };
                                    a.push({
                                        util: c,
                                        originalShape: l,
                                        updatePartial: u,
                                    });
                                }
                            }
                        };
                    for (const l of i) s(l);
                    this.updateShapes(
                        a.map(({updatePartial: l}) => l),
                        o
                    );
                }
                return this;
            }
            registerExternalAssetHandler(n, r) {
                return (this.externalAssetContentHandlers[n] = r), this;
            }
            async getAssetForExternalContent(n) {
                var r, o;
                return await ((o = (r = this.externalAssetContentHandlers)[
                    n.type
                    ]) == null
                    ? void 0
                    : o.call(r, n));
            }
            registerExternalContentHandler(n, r) {
                return (this.externalContentHandlers[n] = r), this;
            }
            async putExternalContent(n) {
                var r, o;
                return (o = (r = this.externalContentHandlers)[n.type]) == null
                    ? void 0
                    : o.call(r, n);
            }
            getContentFromCurrentPage(n) {
                const r = typeof n[0] == "string" ? n : n.map((l) => l.id);
                if (!r || r.length === 0) return;
                const o = {};
                let i = af(
                    r
                        .map((l) => this.getShape(l))
                        .sort(pn)
                        .flatMap((l) => {
                            const c = [l];
                            return (
                                this.visitDescendants(l.id, (d) => {
                                    c.push(this.getShape(d));
                                }),
                                    c
                            );
                        })
                );
                i = i.map((l) => {
                    if (
                        ((o[l.id] = this.getShapePageTransform(l.id)),
                            (l = na(l)),
                            this.isShapeOfType(l, "arrow"))
                    ) {
                        const c =
                                l.props.start.type === "binding"
                                    ? l.props.start.boundShapeId
                                    : void 0,
                            d =
                                l.props.end.type === "binding"
                                    ? l.props.end.boundShapeId
                                    : void 0,
                            u = this.getArrowInfo(l);
                        if (
                            l.props.start.type === "binding" &&
                            !i.some((p) => p.id === c)
                        )
                            if (u != null && u.isValid) {
                                const {x: p, y: m} = u.start.point;
                                l.props.start = {type: "point", x: p, y: m};
                            } else {
                                const {start: p} = Zr(this, l);
                                l.props.start = {type: "point", x: p.x, y: p.y};
                            }
                        if (
                            l.props.end.type === "binding" &&
                            !i.some((p) => p.id === d)
                        )
                            if (u != null && u.isValid) {
                                const {x: p, y: m} = u.end.point;
                                l.props.end = {type: "point", x: p, y: m};
                            } else {
                                const {end: p} = Zr(this, l);
                                l.props.end = {type: "point", x: p.x, y: p.y};
                            }
                        const h = wu(l) ? xu(this, l) : u1(this, l);
                        if (
                            u != null &&
                            u.isValid &&
                            h != null &&
                            h.isValid &&
                            !wu(l)
                        ) {
                            const p = E.Med(u.start.handle, u.end.handle),
                                m = E.Dist(u.middle, p),
                                f = E.Dist(h.middle, p);
                            l.props.bend < 0
                                ? (l.props.bend += f - m)
                                : (l.props.bend -= f - m);
                        }
                        return l;
                    }
                    return l;
                });
                const a = [];
                i.forEach((l) => {
                    if (i.find((c) => c.id === l.parentId) === void 0) {
                        const c = this.getShapePageTransform(l.id),
                            d = c.point(),
                            u = c.rotation();
                        (l.x = d.x),
                            (l.y = d.y),
                            (l.rotation = u),
                            (l.parentId = this.getCurrentPageId()),
                            a.push(l.id);
                    }
                });
                const s = new Set();
                return (
                    i.forEach((l) => {
                        "assetId" in l.props &&
                        l.props.assetId !== null &&
                        s.add(l.props.assetId);
                    }),
                        {
                            shapes: i,
                            rootShapeIds: a,
                            schema: this.store.schema.serialize(),
                            assets: pe(Array.from(s).map((l) => this.getAsset(l))),
                        }
                );
            }
            putContentOntoCurrentPage(n, r = {}) {
                if (this.getInstanceState().isReadonly) return this;
                if (!n.schema)
                    throw Error(`Could not put content:
content is missing a schema.`);
                const {
                    select: o = !1,
                    preserveIds: i = !1,
                    preservePosition: a = !1,
                } = r;
                let {point: s = void 0} = r;
                const l = this.getCurrentPageId(),
                    {assets: c, shapes: d, rootShapeIds: u} = n,
                    h = new Map(d.map((k) => [k.id, Ge()]));
                let p = this.getCurrentPageId(),
                    m = 1 / 0,
                    f = [];
                for (const k of this.getSelectedShapes()) {
                    if (m === 0) break;
                    const C = this.isShapeOfType(k, "frame"),
                        P = this.getShapeAncestors(k);
                    C && P.push(k);
                    const I = C ? P.length + 1 : P.length;
                    if (I < m) (m = I), (f = P), (p = C ? k.id : k.parentId);
                    else if (I === m) {
                        if (f.length !== P.length)
                            throw Error(`Ancestors: ${f.length} !== ${P.length}`);
                        if (f.length === 0) {
                            p = l;
                            break;
                        } else {
                            p = l;
                            for (let $ = 0; $ < f.length && P[$] === f[$]; $++)
                                p = P[$].id;
                        }
                    }
                }
                let g = !1;
                if (!Vn(p)) {
                    const k = this.getShape(p);
                    if (k) {
                        if (
                            !this.getViewportPageBounds().includes(
                                this.getShapePageBounds(k)
                            )
                        )
                            p = l;
                        else if (u.length === 1) {
                            const C = d.find((P) => P.id === u[0]);
                            this.isShapeOfType(k, "frame") &&
                            this.isShapeOfType(C, "frame") &&
                            C.props.w === (k == null ? void 0 : k.props.w) &&
                            C.props.h === (k == null ? void 0 : k.props.h) &&
                            (g = !0);
                        }
                    } else p = l;
                }
                g || (g = h.has(p)), g && (p = this.getShape(p).parentId);
                let b = this.getHighestIndexForParent(p);
                const x = [],
                    S = d.map((k) => {
                        let C;
                        if (i) (C = sn(k)), h.set(k.id, k.id);
                        else {
                            const P = h.get(k.id);
                            C = sn({...k, id: P});
                        }
                        if (
                            (u.includes(k.id) && ((C.parentId = l), x.push(C)),
                                h.has(C.parentId)
                                    ? (C.parentId = h.get(k.parentId))
                                    : (u.push(C.id), (C.index = b), (b = di(b))),
                                this.isShapeOfType(C, "arrow"))
                        ) {
                            if (C.props.start.type === "binding") {
                                const P = h.get(C.props.start.boundShapeId);
                                C.props.start = P
                                    ? {...C.props.start, boundShapeId: P}
                                    : {type: "point", x: 0, y: 0};
                            }
                            if (C.props.end.type === "binding") {
                                const P = h.get(C.props.end.boundShapeId);
                                C.props.end = P
                                    ? {...C.props.end, boundShapeId: P}
                                    : {type: "point", x: 0, y: 0};
                            }
                        }
                        return C;
                    });
                if (S.length + this.getCurrentPageShapeIds().size > li)
                    return Jf(this), this;
                let _ = [];
                if (c) {
                    for (let C = 0; C < c.length; C++) {
                        const P = c[C],
                            I = this.store.schema.migratePersistedRecord(
                                P,
                                n.schema
                            );
                        if (I.type === "success") c[C] = I.value;
                        else
                            throw Error(`Could not put content:
could not migrate content for asset:
${P.id}
${P.type}
reason:${I.reason}`);
                    }
                    const k = [];
                    (_ = c
                        .filter((C) => !this.store.has(C.id))
                        .map((C) => {
                            var P;
                            return (
                                (C.type === "image" || C.type === "video") &&
                                (C.props.src &&
                                (P = C.props.src) != null &&
                                P.startsWith("data:image")
                                    ? (k.push(na(C)), (C.props.src = null))
                                    : k.push(na(C))),
                                    C
                            );
                        })),
                        Promise.allSettled(
                            k.map(async (C) => {
                                const P = await fU(
                                        C.props.src,
                                        C.props.name,
                                        C.props.mimeType ?? "image/png"
                                    ),
                                    I = await this.getAssetForExternalContent({
                                        type: "file",
                                        file: P,
                                    });
                                return I ? [C, I] : null;
                            })
                        ).then((C) => {
                            this.updateAssets(
                                pe(
                                    C.map((P) =>
                                        P.status === "fulfilled" && P.value
                                            ? {...P.value[1], id: P.value[0].id}
                                            : void 0
                                    )
                                )
                            );
                        });
                }
                for (let k = 0; k < S.length; k++) {
                    const C = S[k],
                        P = this.store.schema.migratePersistedRecord(C, n.schema);
                    if (P.type === "success") S[k] = P.value;
                    else
                        throw Error(`Could not put content:
could not migrate content for shape:
${C.id}, ${C.type}
reason:${P.reason}`);
                }
                return (
                    this.batch(() => {
                        _.length > 0 && this.createAssets(_),
                            this.createShapes(S),
                        o && this.select(...x.map(($) => $.id)),
                        p !== l &&
                        this.reparentShapes(
                            x.map(($) => $.id),
                            p
                        );
                        const k = S.map(($) => this.getShape($.id)),
                            C = ce.Common(k.map(($) => this.getShapePageBounds($)));
                        if (s === void 0)
                            if (Vn(p)) {
                                const $ = this.getViewportPageBounds();
                                a || $.includes(ce.From(C))
                                    ? (s = C.center)
                                    : (s = $.center);
                            } else {
                                const $ = this.getShape(p);
                                s = re.applyToPoint(
                                    this.getShapePageTransform($),
                                    this.getShapeGeometry($).bounds.center
                                );
                            }
                        if (x.length === 1) {
                            const $ = x[0];
                            if (this.isShapeOfType($, "frame"))
                                for (
                                    ;
                                    this.getShapesAtPoint(s).some(
                                        (T) =>
                                            this.isShapeOfType(T, "frame") &&
                                            T.props.w === $.props.w &&
                                            T.props.h === $.props.h
                                    );

                                )
                                    s.x += C.w + 16;
                        }
                        const P = ce.Common(
                                pe(x.map(({id: $}) => this.getShapePageBounds($)))
                            ).center,
                            I = E.Sub(s, P);
                        this.updateShapes(
                            x.map(({id: $}) => {
                                const T = this.getShape($),
                                    R =
                                        this.getShapeParentTransform($).decompose()
                                            .rotation,
                                    D = E.Rot(I, -R);
                                return {
                                    id: T.id,
                                    type: T.type,
                                    x: T.x + D.x,
                                    y: T.y + D.y,
                                };
                            })
                        );
                    }),
                        this
                );
            }
            async getSvg(n, r = {}) {
                var k, C;
                const o = typeof n[0] == "string" ? n : n.map((P) => P.id);
                if (o.length === 0) return;
                if (!window.document) throw Error("No document");
                const {
                        scale: i = 1,
                        background: a = !1,
                        padding: s = Pj,
                        preserveAspectRatio: l = !1,
                    } = r,
                    c = Kn({isDarkMode: this.user.getIsDarkMode()}),
                    d = this.getShapeAndDescendantIds(o),
                    u = this.getUnorderedRenderingShapes(!1).filter(({id: P}) =>
                        d.has(P)
                    );
                let h = null;
                if (r.bounds) h = r.bounds;
                else
                    for (const {maskedPageBounds: P} of u)
                        P && (h ? h.union(P) : (h = P.clone()));
                if (!h) return;
                const p =
                    o.length === 1 &&
                    this.isShapeOfType(this.getShape(o[0]), "frame")
                        ? o[0]
                        : null;
                p || h.expandBy(s);
                const m = h.width * i,
                    f = h.height * i,
                    g = window.document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "svg"
                    );
                l && g.setAttribute("preserveAspectRatio", l),
                    g.setAttribute("direction", "ltr"),
                    g.setAttribute("width", m + ""),
                    g.setAttribute("height", f + ""),
                    g.setAttribute(
                        "viewBox",
                        `${h.minX} ${h.minY} ${h.width} ${h.height}`
                    ),
                    g.setAttribute("stroke-linecap", "round"),
                    g.setAttribute("stroke-linejoin", "round"),
                    a
                        ? p
                            ? g.style.setProperty("background", c.solid)
                            : g.style.setProperty("background-color", c.background)
                        : g.style.setProperty("background-color", "transparent");
                try {
                    (C = (k = document.body).focus) == null || C.call(k);
                } catch {}
                const b = window.document.createElementNS(
                    "http://www.w3.org/2000/svg",
                    "defs"
                );
                g.append(b);
                const x = new Map(),
                    S = {
                        addExportDef: (P) => {
                            if (x.has(P.key)) return;
                            const I = (async () => {
                                const $ = await P.getElement();
                                if (!$) return;
                                const T = document.createComment(`def: ${P.key}`);
                                b.appendChild(T);
                                for (const R of Array.isArray($) ? $ : [$])
                                    b.appendChild(R);
                            })();
                            x.set(P.key, I);
                        },
                    },
                    _ = (
                        await Promise.all(
                            u.map(
                                async ({
                                           id: P,
                                           opacity: I,
                                           index: $,
                                           backgroundIndex: T,
                                       }) => {
                                    var V, B;
                                    if (P === p) return [];
                                    const R = this.getShape(P);
                                    if (this.isShapeOfType(R, "group")) return [];
                                    const D = this.getShapeUtil(R);
                                    let j = await ((V = D.toSvg) == null
                                            ? void 0
                                            : V.call(D, R, S)),
                                        z = await ((B = D.toBackgroundSvg) == null
                                            ? void 0
                                            : B.call(D, R, S));
                                    if (j) {
                                        const H = document.createElementNS(
                                            "http://www.w3.org/2000/svg",
                                            "g"
                                        );
                                        H.appendChild(j), (j = H);
                                    }
                                    if (z) {
                                        const H = document.createElementNS(
                                            "http://www.w3.org/2000/svg",
                                            "g"
                                        );
                                        H.appendChild(z), (z = H);
                                    }
                                    if (!j && !z) {
                                        const H = this.getShapePageBounds(R),
                                            G = window.document.createElementNS(
                                                "http://www.w3.org/2000/svg",
                                                "rect"
                                            );
                                        G.setAttribute("width", H.width + ""),
                                            G.setAttribute("height", H.height + ""),
                                            G.setAttribute("fill", c.solid),
                                            G.setAttribute(
                                                "stroke",
                                                c.grey.pattern
                                            ),
                                            G.setAttribute("stroke-width", "1"),
                                            (j = G);
                                    }
                                    let O =
                                        this.getShapePageTransform(R).toCssString();
                                    "scale" in R.props &&
                                    R.props.scale !== 1 &&
                                    (O = `${O} scale(${R.props.scale}, ${R.props.scale})`),
                                    j == null || j.setAttribute("transform", O),
                                    z == null || z.setAttribute("transform", O),
                                    j == null ||
                                    j.setAttribute("opacity", I + ""),
                                    z == null ||
                                    z.setAttribute("opacity", I + "");
                                    const F = this.getShapeMask(R.id);
                                    if (F) {
                                        const H = document.createElementNS(
                                            "http://www.w3.org/2000/svg",
                                            "clipPath"
                                        );
                                        b.appendChild(H);
                                        const G = He();
                                        H.id = G;
                                        const ee = document.createElementNS(
                                            "http://www.w3.org/2000/svg",
                                            "path"
                                        );
                                        if (
                                            (ee.setAttribute(
                                                "d",
                                                `M${F.map(
                                                    ({x: fe, y: Se}) =>
                                                        `${fe},${Se}`
                                                ).join("L")}Z`
                                            ),
                                                H.appendChild(ee),
                                                j)
                                        ) {
                                            const fe = document.createElementNS(
                                                "http://www.w3.org/2000/svg",
                                                "g"
                                            );
                                            fe.setAttribute(
                                                "clip-path",
                                                `url(#${G})`
                                            ),
                                                fe.appendChild(j),
                                                (j = fe);
                                        }
                                        if (z) {
                                            const fe = document.createElementNS(
                                                "http://www.w3.org/2000/svg",
                                                "g"
                                            );
                                            fe.setAttribute(
                                                "clip-path",
                                                `url(#${G})`
                                            ),
                                                fe.appendChild(z),
                                                (z = fe);
                                        }
                                    }
                                    const K = [];
                                    return (
                                        j && K.push({zIndex: $, element: j}),
                                        z && K.push({zIndex: T, element: z}),
                                            K
                                    );
                                }
                            )
                        )
                    ).flat();
                await Promise.all(x.values());
                for (const {element: P} of _.sort((I, $) => I.zIndex - $.zIndex))
                    g.appendChild(P);
                return g;
            }
            _updateInputsFromEvent(n) {
                var m;
                const {
                        previousScreenPoint: r,
                        previousPagePoint: o,
                        currentScreenPoint: i,
                        currentPagePoint: a,
                    } = this.inputs,
                    {screenBounds: s} = this.store.unsafeGetWithoutCapture(ln),
                    {x: l, y: c, z: d} = n.point,
                    {x: u, y: h, z: p} = this.getCamera();
                r.setTo(i),
                    o.setTo(a),
                    i.set(l, c),
                    a.set((l - s.x) / p - u, (c - s.y) / p - h, d ?? 0.5),
                    (this.inputs.isPen = n.type === "pointer" && n.isPen),
                n.name === "pointer_down" &&
                this.inputs.pointerVelocity.set(0, 0),
                    this.store.put([
                        {
                            id: Yd,
                            typeName: "pointer",
                            x: a.x,
                            y: a.y,
                            lastActivityTimestamp:
                                n.type === "pointer" &&
                                n.pointerId === XC.CAMERA_MOVE
                                    ? ((m = this.store.get(Yd)) == null
                                    ? void 0
                                    : m.lastActivityTimestamp) ?? Date.now()
                                    : Date.now(),
                            meta: {},
                        },
                    ]);
            }
            cancel() {
                return this.dispatch({type: "misc", name: "cancel"}), this;
            }
            interrupt() {
                return this.dispatch({type: "misc", name: "interrupt"}), this;
            }
            complete() {
                return this.dispatch({type: "misc", name: "complete"}), this;
            }
            cancelDoubleClick() {
                this._clickManager.cancelDoubleClickTimeout();
            }
        }
        de([Q], le.prototype, "getCanUndo", 1),
            de([Q], le.prototype, "getCanRedo", 1),
            de([Q], le.prototype, "_getArrowBindingsIndex", 1),
            de([Q], le.prototype, "getArrowInfoCache", 1),
            de([Q], le.prototype, "getPath", 1),
            de([Q], le.prototype, "getCurrentTool", 1),
            de([Q], le.prototype, "getCurrentToolId", 1),
            de([Q], le.prototype, "getDocumentSettings", 1),
            de([Q], le.prototype, "getInstanceState", 1),
            de([Q], le.prototype, "getOpenMenus", 1),
            de([Q], le.prototype, "getIsMenuOpen", 1),
            de([Q], le.prototype, "getPageStates", 1),
            de([Q], le.prototype, "_getPageStatesQuery", 1),
            de([Q], le.prototype, "getCurrentPageState", 1),
            de([Q], le.prototype, "_getCurrentPageStateId", 1),
            de([Q], le.prototype, "getSelectedShapeIds", 1),
            de([Q], le.prototype, "getSelectedShapes", 1),
            de([Q], le.prototype, "getOnlySelectedShape", 1),
            de([Q], le.prototype, "getSelectionPageBounds", 1),
            de([Q], le.prototype, "getSelectionRotation", 1),
            de([Q], le.prototype, "getSelectionRotatedPageBounds", 1),
            de([Q], le.prototype, "getFocusedGroupId", 1),
            de([Q], le.prototype, "getFocusedGroup", 1),
            de([Q], le.prototype, "getEditingShapeId", 1),
            de([Q], le.prototype, "getEditingShape", 1),
            de([Q], le.prototype, "getHoveredShapeId", 1),
            de([Q], le.prototype, "getHoveredShape", 1),
            de([Q], le.prototype, "getHintingShapeIds", 1),
            de([Q], le.prototype, "getHintingShape", 1),
            de([Q], le.prototype, "getErasingShapeIds", 1),
            de([Q], le.prototype, "getErasingShapes", 1),
            de([Q], le.prototype, "getCameraId", 1),
            de([Q], le.prototype, "getCamera", 1),
            de([Q], le.prototype, "getZoomLevel", 1),
            de([Q], le.prototype, "getViewportScreenBounds", 1),
            de([Q], le.prototype, "getViewportScreenCenter", 1),
            de([Q], le.prototype, "getViewportPageBounds", 1),
            de([Q], le.prototype, "getViewportPageCenter", 1),
            de([Q], le.prototype, "getRenderingShapes", 1),
            de([Q], le.prototype, "_getAllPagesQuery", 1),
            de([Q], le.prototype, "getPages", 1),
            de([Q], le.prototype, "_getAllAssetsQuery", 1),
            de([Q], le.prototype, "_getShapeGeometryCache", 1),
            de([Q], le.prototype, "_getShapeOutlineSegmentsCache", 1),
            de([Q], le.prototype, "_getShapeHandlesCache", 1),
            de([Q], le.prototype, "_getShapePageTransformCache", 1),
            de([Q], le.prototype, "_getShapePageBoundsCache", 1),
            de([Q], le.prototype, "_getShapeClipPathCache", 1),
            de([Q], le.prototype, "_getShapeMaskCache", 1),
            de([Q], le.prototype, "getCurrentPageBounds", 1),
            de([Q], le.prototype, "getCurrentPageShapes", 1),
            de([Q], le.prototype, "getCurrentPageShapesSorted", 1),
            de([Q], le.prototype, "getCurrentPageRenderingShapesSorted", 1),
            de(
                [Q({isEqual: (e, t) => e.equals(t)})],
                le.prototype,
                "getSharedStyles",
                1
            ),
            de([Q], le.prototype, "getSharedOpacity", 1);
        function Jf(e, t = e.getCurrentPageId()) {
            const n = e.getPage(t).name;
            e.emit("max-shapes", {name: n, pageId: t, count: li});
        }
        function em() {
            const e = W();
            return X("isDarkMode", () => e.user.getIsDarkMode(), [e]);
        }
        const GU =
                '<path d="m12 24.4219v-16.015l11.591 11.619h-6.781l-.411.124z" fill="white"/><path d="m21.0845 25.0962-3.605 1.535-4.682-11.089 3.686-1.553z" fill="white"/><path d="m19.751 24.4155-1.844.774-3.1-7.374 1.841-.775z" fill="black"/><path d="m13 10.814v11.188l2.969-2.866.428-.139h4.768z" fill="black"/>',
            XU =
                '<path d="m13.3315 21.3799c-.284-.359-.629-1.093-1.243-1.984-.348-.504-1.211-1.453-1.468-1.935-.223-.426-.199-.617-.146-.97.094-.628.738-1.117 1.425-1.051.519.049.959.392 1.355.716.239.195.533.574.71.788.163.196.203.277.377.509.23.307.302.459.214.121-.071-.496-.187-1.343-.355-2.092-.128-.568-.159-.657-.281-1.093-.129-.464-.195-.789-.316-1.281-.084-.348-.235-1.059-.276-1.459-.057-.547-.087-1.439.264-1.849.275-.321.906-.418 1.297-.22.512.259.803 1.003.936 1.3.239.534.387 1.151.516 1.961.164 1.031.466 2.462.476 2.763.024-.369-.068-1.146-.004-1.5.058-.321.328-.694.666-.795.286-.085.621-.116.916-.055.313.064.643.288.766.499.362.624.369 1.899.384 1.831.086-.376.071-1.229.284-1.584.14-.234.497-.445.687-.479.294-.052.655-.068.964-.008.249.049.586.345.677.487.218.344.342 1.317.379 1.658.015.141.074-.392.293-.736.406-.639 1.843-.763 1.898.639.025.654.02.624.02 1.064 0 .517-.012.828-.04 1.202-.031.4-.117 1.304-.242 1.742-.086.301-.371.978-.652 1.384 0 0-1.074 1.25-1.191 1.813-.118.562-.079.566-.102.965-.023.398.121.922.121.922s-.802.104-1.234.035c-.391-.063-.875-.841-1-1.079-.172-.328-.539-.265-.682-.023-.225.383-.709 1.07-1.051 1.113-.668.084-2.054.031-3.139.02 0 0 .185-1.011-.227-1.358-.305-.259-.83-.784-1.144-1.06z" fill="white"/><g stroke="black" stroke-linecap="round" stroke-width=".75"><path d="m13.3315 21.3799c-.284-.359-.629-1.093-1.243-1.984-.348-.504-1.211-1.453-1.468-1.935-.223-.426-.199-.617-.146-.97.094-.628.738-1.117 1.425-1.051.519.049.959.392 1.355.716.239.195.533.574.71.788.163.196.203.277.377.509.23.307.302.459.214.121-.071-.496-.187-1.343-.355-2.092-.128-.568-.159-.657-.281-1.093-.129-.464-.195-.789-.316-1.281-.084-.348-.235-1.059-.276-1.459-.057-.547-.087-1.439.264-1.849.275-.321.906-.418 1.297-.22.512.259.803 1.003.936 1.3.239.534.387 1.151.516 1.961.164 1.031.466 2.462.476 2.763.024-.369-.068-1.146-.004-1.5.058-.321.328-.694.666-.795.286-.085.621-.116.916-.055.313.064.643.288.766.499.362.624.369 1.899.384 1.831.086-.376.071-1.229.284-1.584.14-.234.497-.445.687-.479.294-.052.655-.068.964-.008.249.049.586.345.677.487.218.344.342 1.317.379 1.658.015.141.074-.392.293-.736.406-.639 1.843-.763 1.898.639.025.654.02.624.02 1.064 0 .517-.012.828-.04 1.202-.031.4-.117 1.304-.242 1.742-.086.301-.371.978-.652 1.384 0 0-1.074 1.25-1.191 1.813-.118.562-.079.566-.102.965-.023.398.121.922.121.922s-.802.104-1.234.035c-.391-.063-.875-.841-1-1.079-.172-.328-.539-.265-.682-.023-.225.383-.709 1.07-1.051 1.113-.668.084-2.054.031-3.139.02 0 0 .185-1.011-.227-1.358-.305-.259-.83-.784-1.144-1.06z" stroke-linejoin="round"/><path d="m21.5664 21.7344v-3.459"/><path d="m19.5508 21.7461-.016-3.473"/><path d="m17.5547 18.3047.021 3.426"/></g>',
            qU =
                '<path d="m25 16h-6.01v-6h-2.98v6h-6.01v3h6.01v6h2.98v-6h6.01z" fill="white"/><path d="m23.9902 17.0103h-6v-6.01h-.98v6.01h-6v.98h6v6.01h.98v-6.01h6z" fill="%23231f1f"/>',
            ZU =
                '<path d="m19 14h1v1h-1zm1 6h-1v-1h1zm-5-5h-1v-1h1zm0 5h-1v-1h1zm2-10.987-7.985 7.988 5.222 5.221 2.763 2.763 7.984-7.985z" fill="white"/><g fill="black"><path d="m23.5664 16.9971-2.557-2.809v1.829h-4.009-4.001v-1.829l-2.571 2.809 2.572 2.808-.001-1.808h4.001 4.009l-.001 1.808z"/><path d="m17.9873 17h.013v-4.001l1.807.001-2.807-2.571-2.809 2.57h1.809v4.001h.008v4.002l-1.828-.001 2.807 2.577 2.805-2.576h-1.805z"/></g>',
            hE =
                "<path d='m19.7432 17.0869-4.072 4.068 2.829 2.828-8.473-.013-.013-8.47 2.841 2.842 4.075-4.068 1.414-1.415-2.844-2.842h8.486v8.484l-2.83-2.827z' fill='%23fff'/><path d='m18.6826 16.7334-4.427 4.424 1.828 1.828-5.056-.016-.014-5.054 1.842 1.841 4.428-4.422 2.474-2.475-1.844-1.843h5.073v5.071l-1.83-1.828z' fill='%23000'/>",
            pE =
                "<path d='m9 17.9907v.005l5.997 5.996.001-3.999h1.999 2.02v4l5.98-6.001-5.98-5.999.001 4.019-2.021.002h-2l.001-4.022zm1.411.003 3.587-3.588-.001 2.587h3.5 2.521v-2.585l3.565 3.586-3.564 3.585-.001-2.585h-2.521l-3.499-.001-.001 2.586z' fill='%23fff'/><path d='m17.4971 18.9932h2.521v2.586l3.565-3.586-3.565-3.585v2.605h-2.521-3.5v-2.607l-3.586 3.587 3.586 3.586v-2.587z' fill='%23000'/>",
            tm =
                '<path d="M22.4789 9.45728L25.9935 12.9942L22.4789 16.5283V14.1032C18.126 14.1502 14.6071 17.6737 14.5675 22.0283H17.05L13.513 25.543L9.97889 22.0283H12.5674C12.6071 16.5691 17.0214 12.1503 22.4789 12.1031L22.4789 9.45728Z" fill="black"/><path fill-rule="evenodd" clip-rule="evenodd" d="M21.4789 7.03223L27.4035 12.9945L21.4789 18.9521V15.1868C18.4798 15.6549 16.1113 18.0273 15.649 21.0284H19.475L13.5128 26.953L7.55519 21.0284H11.6189C12.1243 15.8155 16.2679 11.6677 21.4789 11.1559L21.4789 7.03223ZM22.4789 12.1031C17.0214 12.1503 12.6071 16.5691 12.5674 22.0284H9.97889L13.513 25.543L17.05 22.0284H14.5675C14.5705 21.6896 14.5947 21.3558 14.6386 21.0284C15.1157 17.4741 17.9266 14.6592 21.4789 14.1761C21.8063 14.1316 22.1401 14.1069 22.4789 14.1032V16.5284L25.9935 12.9942L22.4789 9.45729L22.4789 12.1031Z" fill="white"/>',
            QU =
                '<path fill="white" d="M7.94 0a5.25 5.25 0 0 0-3.47 1.17A5.27 5.27 0 0 0 1 0H0v3h1c1.41 0 1.85.7 2 1v3.94H2v3h1v3c-.13.3-.57 1-2 1H0v3h1a5.27 5.27 0 0 0 3.47-1.17c.98.8 2.21 1.21 3.47 1.17h1v-3h-1c-1.41 0-1.85-.7-2-1v-3H7v-3H6V4c.13-.3.57-1 2-1h1V0H7.94z"/><path fill="black" d="M7.94 2V1a4 4 0 0 0-3.47 1.64A4 4 0 0 0 1 1v1c1.3-.17 2.56.6 3 1.84v5.1H3v1h1v4.16c-.45 1.24-1.7 2-3 1.84v1a4.05 4.05 0 0 0 3.47-1.63 4.05 4.05 0 0 0 3.47 1.63v-1A2.82 2.82 0 0 1 5 14.1V9.93h1v-1H5V3.85A2.81 2.81 0 0 1 7.94 2z"/>',
            JU =
                "<path d='m13.5732 12.0361c.48-.178 1.427-.069 1.677.473.213.462.396 1.241.406 1.075.024-.369-.024-1.167.137-1.584.117-.304.347-.59.686-.691.285-.086.62-.116.916-.055.313.064.642.287.765.499.362.623.368 1.899.385 1.831.064-.272.07-1.229.283-1.584.141-.235.497-.445.687-.479.294-.052.656-.068.964-.008.249.049.586.344.677.487.219.344.342 1.316.379 1.658.016.141.074-.393.293-.736.406-.639 1.844-.763 1.898.639.026.654.02.624.02 1.064 0 .516-.012.828-.04 1.202-.03.399-.116 1.304-.241 1.742-.086.301-.371.978-.653 1.384 0 0-1.074 1.25-1.191 1.812-.117.563-.078.567-.102.965-.023.399.121.923.121.923s-.801.104-1.234.034c-.391-.062-.875-.84-1-1.078-.172-.328-.539-.265-.682-.023-.224.383-.709 1.07-1.05 1.113-.669.084-2.055.03-3.14.02 0 0 .185-1.011-.227-1.358-.305-.26-.83-.784-1.144-1.06l-.832-.921c-.283-.36-1.002-.929-1.243-1.985-.213-.936-.192-1.395.037-1.77.232-.381.67-.589.854-.625.208-.042.692-.039.875.062.223.123.313.159.488.391.23.307.312.456.213.121-.076-.262-.322-.595-.434-.97-.109-.361-.401-.943-.38-1.526.008-.221.103-.771.832-1.042' fill='white'/><g stroke='black' stroke-width='.75'><path d='m13.5732 12.0361c.48-.178 1.427-.069 1.677.473.213.462.396 1.241.406 1.075.024-.369-.024-1.167.137-1.584.117-.304.347-.59.686-.691.285-.086.62-.116.916-.055.313.064.642.287.765.499.362.623.368 1.899.385 1.831.064-.272.07-1.229.283-1.584.141-.235.497-.445.687-.479.294-.052.656-.068.964-.008.249.049.586.344.677.487.219.344.342 1.316.379 1.658.016.141.074-.393.293-.736.406-.639 1.844-.763 1.898.639.026.654.02.624.02 1.064 0 .516-.012.828-.04 1.202-.03.399-.116 1.304-.241 1.742-.086.301-.371.978-.653 1.384 0 0-1.074 1.25-1.191 1.812-.117.563-.078.567-.102.965-.023.399.121.923.121.923s-.801.104-1.234.034c-.391-.062-.875-.84-1-1.078-.172-.328-.539-.265-.682-.023-.224.383-.709 1.07-1.05 1.113-.669.084-2.055.03-3.14.02 0 0 .185-1.011-.227-1.358-.305-.26-.83-.784-1.144-1.06l-.832-.921c-.283-.36-1.002-.929-1.243-1.985-.213-.936-.192-1.395.037-1.77.232-.381.67-.589.854-.625.208-.042.692-.039.875.062.223.123.313.159.488.391.23.307.312.456.213.121-.076-.262-.322-.595-.434-.97-.109-.361-.401-.943-.38-1.526.008-.221.103-.771.832-1.042z' stroke-linejoin='round'/><path d='m20.5664 19.7344v-3.459' stroke-linecap='round'/><path d='m18.5508 19.7461-.016-3.473' stroke-linecap='round'/><path d='m16.5547 16.3047.021 3.426' stroke-linecap='round'/></g>",
            eH =
                '<path d="m13.5557 17.5742c-.098-.375-.196-.847-.406-1.552-.167-.557-.342-.859-.47-1.233-.155-.455-.303-.721-.496-1.181-.139-.329-.364-1.048-.457-1.44-.119-.509.033-.924.244-1.206.253-.339.962-.49 1.357-.351.371.13.744.512.916.788.288.46.357.632.717 1.542.393.992.564 1.918.611 2.231l.085.452c-.001-.04-.043-1.122-.044-1.162-.035-1.029-.06-1.823-.038-2.939.002-.126.064-.587.084-.715.078-.5.305-.8.673-.979.412-.201.926-.215 1.401-.017.423.173.626.55.687 1.022.014.109.094.987.093 1.107-.013 1.025.006 1.641.015 2.174.004.231.003 1.625.017 1.469.061-.656.094-3.189.344-3.942.144-.433.405-.746.794-.929.431-.203 1.113-.07 1.404.243.285.305.446.692.482 1.153.032.405-.019.897-.02 1.245 0 .867-.021 1.324-.037 2.121-.001.038-.015.298.023.182.094-.28.188-.542.266-.745.049-.125.241-.614.359-.859.114-.234.211-.369.415-.688.2-.313.415-.448.668-.561.54-.235 1.109.112 1.301.591.086.215.009.713-.028 1.105-.061.647-.254 1.306-.352 1.648-.128.447-.274 1.235-.34 1.601-.072.394-.234 1.382-.359 1.82-.086.301-.371.978-.652 1.384 0 0-1.074 1.25-1.192 1.812-.117.563-.078.567-.101.965-.024.399.121.923.121.923s-.802.104-1.234.034c-.391-.062-.875-.841-1-1.078-.172-.328-.539-.265-.682-.023-.225.383-.709 1.07-1.051 1.113-.668.084-2.054.03-3.139.02 0 0 .185-1.011-.227-1.358-.305-.26-.83-.784-1.144-1.06l-.832-.921c-.284-.36-.629-1.093-1.243-1.985-.348-.504-1.027-1.085-1.284-1.579-.223-.425-.331-.954-.19-1.325.225-.594.675-.897 1.362-.832.519.05.848.206 1.238.537.225.19.573.534.75.748.163.195.203.276.377.509.23.307.302.459.214.121" fill="white"/><g stroke="black" stroke-linecap="round" stroke-width=".75"><path d="m13.5557 17.5742c-.098-.375-.196-.847-.406-1.552-.167-.557-.342-.859-.47-1.233-.155-.455-.303-.721-.496-1.181-.139-.329-.364-1.048-.457-1.44-.119-.509.033-.924.244-1.206.253-.339.962-.49 1.357-.351.371.13.744.512.916.788.288.46.357.632.717 1.542.393.992.564 1.918.611 2.231l.085.452c-.001-.04-.043-1.122-.044-1.162-.035-1.029-.06-1.823-.038-2.939.002-.126.064-.587.084-.715.078-.5.305-.8.673-.979.412-.201.926-.215 1.401-.017.423.173.626.55.687 1.022.014.109.094.987.093 1.107-.013 1.025.006 1.641.015 2.174.004.231.003 1.625.017 1.469.061-.656.094-3.189.344-3.942.144-.433.405-.746.794-.929.431-.203 1.113-.07 1.404.243.285.305.446.692.482 1.153.032.405-.019.897-.02 1.245 0 .867-.021 1.324-.037 2.121-.001.038-.015.298.023.182.094-.28.188-.542.266-.745.049-.125.241-.614.359-.859.114-.234.211-.369.415-.688.2-.313.415-.448.668-.561.54-.235 1.109.112 1.301.591.086.215.009.713-.028 1.105-.061.647-.254 1.306-.352 1.648-.128.447-.274 1.235-.34 1.601-.072.394-.234 1.382-.359 1.82-.086.301-.371.978-.652 1.384 0 0-1.074 1.25-1.192 1.812-.117.563-.078.567-.101.965-.024.399.121.923.121.923s-.802.104-1.234.034c-.391-.062-.875-.841-1-1.078-.172-.328-.539-.265-.682-.023-.225.383-.709 1.07-1.051 1.113-.668.084-2.054.03-3.139.02 0 0 .185-1.011-.227-1.358-.305-.26-.83-.784-1.144-1.06l-.832-.921c-.284-.36-.629-1.093-1.243-1.985-.348-.504-1.027-1.085-1.284-1.579-.223-.425-.331-.954-.19-1.325.225-.594.675-.897 1.362-.832.519.05.848.206 1.238.537.225.19.573.534.75.748.163.195.203.276.377.509.23.307.302.459.214.121" stroke-linejoin="round"/><path d="m20.5664 21.7344v-3.459"/><path d="m18.5508 21.7461-.016-3.473"/><path d="m16.5547 18.3047.021 3.426"/></g>',
            tH =
                '<path d="m20.5 15c0 3.038-2.462 5.5-5.5 5.5s-5.5-2.462-5.5-5.5 2.462-5.5 5.5-5.5 5.5 2.462 5.5 5.5" fill="white"/><path d="m20.5 15c0 3.038-2.462 5.5-5.5 5.5s-5.5-2.462-5.5-5.5 2.462-5.5 5.5-5.5 5.5 2.462 5.5 5.5z" stroke="black"/><g fill="black"><path d="m18 14h-2v-2h-2v2h-2v1.98h2v2.02h2v-2.02h2z"/><path d="m23.5859 25 1.414-1.414-5.449-5.449-1.414 1.414z"/></g>',
            nH =
                '<path d="m20.5 15c0 3.038-2.462 5.5-5.5 5.5s-5.5-2.462-5.5-5.5 2.462-5.5 5.5-5.5 5.5 2.462 5.5 5.5" fill="white"/><path d="m20.5 15c0 3.038-2.462 5.5-5.5 5.5s-5.5-2.462-5.5-5.5 2.462-5.5 5.5-5.5 5.5 2.462 5.5 5.5z" stroke="black"/><g fill="black"><path d="m18 16h-5.98v-1.98h5.98z"/><path d="m23.5859 25 1.414-1.414-5.449-5.449-1.414 1.414z"/></g>';
        function Gt(e, t, n, r, o, i = 16, a = 16) {
            const s = (-n - t) * (Oe / 180),
                l = Math.sin(s),
                c = Math.cos(s),
                d = 1 * c - 1 * l,
                u = 1 * l + 1 * c;
            return (
                `url("data:image/svg+xml,<svg height='32' width='32' viewBox='0 0 32 32' xmlns='http://www.w3.org/2000/svg' style='color: ${o};'><defs><filter id='shadow' y='-40%' x='-40%' width='180px' height='180%' color-interpolation-filters='sRGB'><feDropShadow dx='${d}' dy='${u}' stdDeviation='1.2' flood-opacity='.5'/></filter></defs><g fill='none' transform='rotate(${
                    t + n
                } 16 16)${
                    r ? " scale(-1,-1) translate(0, -32)" : ""
                }' filter='url(%23shadow)'>` +
                e.replaceAll('"', "'") +
                `</g></svg>") ${i} ${a}, pointer`
            );
        }
        const rH = {
            none: () => "none",
            default: (e, t, n) => Gt(GU, e, 0, t, n, 12, 8),
            pointer: (e, t, n) => Gt(XU, e, 0, t, n, 14, 10),
            cross: (e, t, n) => Gt(qU, e, 0, t, n),
            move: (e, t, n) => Gt(ZU, e, 0, t, n),
            grab: (e, t, n) => Gt(eH, e, 0, t, n),
            grabbing: (e, t, n) => Gt(JU, e, 0, t, n),
            text: (e, t, n) => Gt(QU, e, 0, t, n, 4, 10),
            "ew-resize": (e, t, n) => Gt(pE, e, 0, t, n),
            "ns-resize": (e, t, n) => Gt(pE, e, 90, t, n),
            "nesw-resize": (e, t, n) => Gt(hE, e, 0, t, n),
            "nwse-resize": (e, t, n) => Gt(hE, e, 90, t, n),
            "nwse-rotate": (e, t, n) => Gt(tm, e, 0, t, n),
            "nesw-rotate": (e, t, n) => Gt(tm, e, 90, t, n),
            "senw-rotate": (e, t, n) => Gt(tm, e, 180, t, n),
            "swne-rotate": (e, t, n) => Gt(tm, e, 270, t, n),
            "zoom-in": (e, t, n) => Gt(tH, e, 0, t, n),
            "zoom-out": (e, t, n) => Gt(nH, e, 0, t, n),
        };
        function lr(e, t = 0, n = "black") {
            return rH[e](fj(t), !1, n);
        }
        const oH = [
            "default",
            "pointer",
            "cross",
            "move",
            "grab",
            "grabbing",
            "text",
        ];
        function iH() {
            const e = W(),
                t = dn(),
                n = em();
            Ja(
                "useCursor",
                () => {
                    const {type: r, rotation: o} = e.getInstanceState().cursor;
                    if (oH.includes(r)) {
                        t.style.setProperty("--tl-cursor", `var(--tl-cursor-${r})`);
                        return;
                    }
                    t.style.setProperty(
                        "--tl-cursor",
                        lr(r, o, n ? "white" : "black")
                    );
                },
                [e, t, n]
            );
        }
        function aH() {
            const e = W(),
                t = dn(),
                n = em(),
                r = X(Xe.forceSrgb);
            N.useEffect(() => {
                n
                    ? (t.setAttribute("data-color-mode", "dark"),
                        t.classList.remove("tl-theme__light"),
                        t.classList.add("tl-theme__dark"))
                    : (t.setAttribute("data-color-mode", "light"),
                        t.classList.remove("tl-theme__dark"),
                        t.classList.add("tl-theme__light")),
                    r
                        ? t.classList.add("tl-theme__force-sRGB")
                        : t.classList.remove("tl-theme__force-sRGB");
            }, [e, t, r, n]);
        }
        function sH(e) {
            const t = y.useRef();
            return (
                y.useLayoutEffect(() => {
                    t.current = e;
                }),
                    y.useDebugValue(e),
                    y.useCallback((...n) => {
                        const r = t.current;
                        return es(r, "fn does not exist"), r(...n);
                    }, [])
            );
        }
        function lH(e) {
            const t = W(),
                n = dn();
            y.useLayoutEffect(() => {
                e
                    ? (t.getInstanceState().isFocused ||
                    t.updateInstanceState({isFocused: !0}),
                        t.getContainer().focus())
                    : t.getInstanceState().isFocused &&
                    t.updateInstanceState({isFocused: !1});
            }, [t, n, e]);
        }
        function cH() {
            const [e, t] = y.useState(0);
            y.useEffect(() => t((n) => n + 1), []);
        }
        const Kl = "TLDRAW_TAB_ID_v2",
            Xt = globalThis.window;
        function dH() {
            return Xt
                ? [
                    "iPad Simulator",
                    "iPhone Simulator",
                    "iPod Simulator",
                    "iPad",
                    "iPhone",
                    "iPod",
                ].includes(Xt.navigator.platform) ||
                (Xt.navigator.userAgent.includes("Mac") &&
                    "ontouchend" in document)
                : !1;
        }
        const nm =
            (Xt == null ? void 0 : Xt[Kl]) ??
            (Xt == null ? void 0 : Xt.sessionStorage[Kl]) ??
            "TLDRAW_INSTANCE_STATE_V1_" + He();
        Xt &&
        ((Xt[Kl] = nm),
            dH() ? (Xt.sessionStorage[Kl] = nm) : delete Xt.sessionStorage[Kl]),
        Xt == null ||
        Xt.addEventListener("beforeunload", () => {
            Xt.sessionStorage[Kl] = nm;
        });
        const Su = {Initial: 0}.Initial,
            fE = Ie({
                version: ge,
                currentPageId: Wd,
                isFocusMode: Ce,
                exportBackground: Ce,
                isDebugMode: Ce,
                isToolLocked: Ce,
                isGridMode: Ce,
                pageStates: An(
                    Ie({
                        pageId: Wd,
                        camera: Ie({x: ge, y: ge, z: ge}),
                        selectedShapeIds: An(Wr),
                        focusedGroupId: Wr.nullable(),
                    })
                ),
            }),
            uH = Re({currentVersion: Su});
        function hH(e) {
            if (!e || typeof e != "object")
                return console.warn("Invalid instance state"), null;
            if (!("version" in e) || typeof e.version != "number")
                return console.warn("No version in instance state"), null;
            const t = wy({
                value: e,
                fromVersion: e.version,
                toVersion: Su,
                migrations: uH,
            });
            if (t.type === "error") return console.warn(t.reason), null;
            const n = {...t.value, version: Su};
            try {
                fE.validate(n);
            } catch (r) {
                return console.warn(r), null;
            }
            return n;
        }
        function pH(e) {
            const t = e.query.ids("page");
            return Q("sessionStateSnapshot", () => {
                const n = e.get(ln);
                if (!n) return null;
                const r = [...t.get()];
                return {
                    version: Su,
                    currentPageId: n.currentPageId,
                    exportBackground: n.exportBackground,
                    isFocusMode: n.isFocusMode,
                    isDebugMode: n.isDebugMode,
                    isToolLocked: n.isToolLocked,
                    isGridMode: n.isGridMode,
                    pageStates: r.map((o) => {
                        const i = e.get(Kt.createId(o)),
                            a = e.get(Vt.createId(o));
                        return {
                            pageId: o,
                            camera: {
                                x: (a == null ? void 0 : a.x) ?? 0,
                                y: (a == null ? void 0 : a.y) ?? 0,
                                z: (a == null ? void 0 : a.z) ?? 1,
                            },
                            selectedShapeIds:
                                (i == null ? void 0 : i.selectedShapeIds) ?? [],
                            focusedGroupId:
                                (i == null ? void 0 : i.focusedGroupId) ?? null,
                        };
                    }),
                };
            });
        }
        function fH(e, t) {
            const n = hH(t);
            if (!n) return;
            const r = e
                    .allRecords()
                    .filter(
                        (a) =>
                            a.typeName === "instance_page_state" ||
                            a.typeName === "camera"
                    ),
                o = {
                    added: {},
                    updated: {},
                    removed: {...aC(r.map((a) => [a.id, a]))},
                };
            e.has(ln) && (o.removed[ln] = e.get(ln));
            const i = {
                removed: {},
                updated: {},
                added: {
                    [ln]: e.schema.types.instance.create({
                        id: ln,
                        currentPageId: n.currentPageId,
                        isDebugMode: n.isDebugMode,
                        isFocusMode: n.isFocusMode,
                        isToolLocked: n.isToolLocked,
                        isGridMode: n.isGridMode,
                        exportBackground: n.exportBackground,
                    }),
                },
            };
            for (const a of n.pageStates) {
                const s = Vt.createId(a.pageId),
                    l = Kt.createId(a.pageId);
                (i.added[s] = Vt.create({
                    id: Vt.createId(a.pageId),
                    x: a.camera.x,
                    y: a.camera.y,
                    z: a.camera.z,
                })),
                    (i.added[l] = Kt.create({
                        id: Kt.createId(a.pageId),
                        pageId: a.pageId,
                        selectedShapeIds: a.selectedShapeIds,
                        focusedGroupId: a.focusedGroupId,
                    }));
            }
            _r(() => {
                e.applyDiff(pf([o, i])), e.ensureStoreIsUsable();
            });
        }
        function mH(e) {
            var o;
            const t = [];
            for (const i of Object.values(e))
                (o = i.typeName) != null &&
                o.match(/^(instance.*|pointer|camera)$/) &&
                t.push(i);
            const n = t.filter((i) => i.typeName === "instance" && i.id !== ln)[0];
            if (!n) return null;
            const r = {
                version: Su,
                currentPageId: n.currentPageId,
                exportBackground: !!n.exportBackground,
                isFocusMode: !!n.isFocusMode,
                isDebugMode: !!n.isDebugMode,
                isToolLocked: !!n.isToolLocked,
                isGridMode: !1,
                pageStates: t
                    .filter(
                        (i) =>
                            i.typeName === "instance_page_state" &&
                            i.instanceId === n.id
                    )
                    .map((i) => {
                        const a = e[i.cameraId] ?? {x: 0, y: 0, z: 1};
                        return {
                            pageId: i.pageId,
                            camera: {x: a.x, y: a.y, z: a.z},
                            selectedShapeIds: i.selectedShapeIds,
                            focusedGroupId: i.focusedGroupId,
                        };
                    }),
            };
            try {
                return fE.validate(r), r;
            } catch {
                return null;
            }
        }
        function gH() {
            window.alert(`Oops! We could not save changes to your browser's storage. We now need to reload the page and try again.

Keep seeing this message?
• If you're using tldraw in a private or "incognito" window, try loading tldraw in a regular window or in a different browser.
• If your hard disk is full, try clearing up some space and then reload the page.`);
        }
        function vH() {
            window.alert(`Oops! We could not access your browser's storage—and the app won't work correctly without that. We now need to reload the page and try again.

Keep seeing this message?
• If you're using tldraw in a private or "incognito" window, try loading tldraw in a regular window or in a different browser.`);
        }
        const bH = (e, t) => t.some((n) => e instanceof n);
        let mE, gE;
        function yH() {
            return (
                mE ||
                (mE = [
                    IDBDatabase,
                    IDBObjectStore,
                    IDBIndex,
                    IDBCursor,
                    IDBTransaction,
                ])
            );
        }
        function wH() {
            return (
                gE ||
                (gE = [
                    IDBCursor.prototype.advance,
                    IDBCursor.prototype.continue,
                    IDBCursor.prototype.continuePrimaryKey,
                ])
            );
        }
        const vE = new WeakMap(),
            h1 = new WeakMap(),
            bE = new WeakMap(),
            p1 = new WeakMap(),
            f1 = new WeakMap();
        function xH(e) {
            const t = new Promise((n, r) => {
                const o = () => {
                        e.removeEventListener("success", i),
                            e.removeEventListener("error", a);
                    },
                    i = () => {
                        n(pi(e.result)), o();
                    },
                    a = () => {
                        r(e.error), o();
                    };
                e.addEventListener("success", i), e.addEventListener("error", a);
            });
            return (
                t
                    .then((n) => {
                        n instanceof IDBCursor && vE.set(n, e);
                    })
                    .catch(() => {}),
                    f1.set(t, e),
                    t
            );
        }
        function SH(e) {
            if (h1.has(e)) return;
            const t = new Promise((n, r) => {
                const o = () => {
                        e.removeEventListener("complete", i),
                            e.removeEventListener("error", a),
                            e.removeEventListener("abort", a);
                    },
                    i = () => {
                        n(), o();
                    },
                    a = () => {
                        r(e.error || new DOMException("AbortError", "AbortError")),
                            o();
                    };
                e.addEventListener("complete", i),
                    e.addEventListener("error", a),
                    e.addEventListener("abort", a);
            });
            h1.set(e, t);
        }
        let m1 = {
            get(e, t, n) {
                if (e instanceof IDBTransaction) {
                    if (t === "done") return h1.get(e);
                    if (t === "objectStoreNames")
                        return e.objectStoreNames || bE.get(e);
                    if (t === "store")
                        return n.objectStoreNames[1]
                            ? void 0
                            : n.objectStore(n.objectStoreNames[0]);
                }
                return pi(e[t]);
            },
            set(e, t, n) {
                return (e[t] = n), !0;
            },
            has(e, t) {
                return e instanceof IDBTransaction &&
                (t === "done" || t === "store")
                    ? !0
                    : t in e;
            },
        };
        function _H(e) {
            m1 = e(m1);
        }
        function kH(e) {
            return e === IDBDatabase.prototype.transaction &&
            !("objectStoreNames" in IDBTransaction.prototype)
                ? function (t, ...n) {
                    const r = e.call(g1(this), t, ...n);
                    return bE.set(r, t.sort ? t.sort() : [t]), pi(r);
                }
                : wH().includes(e)
                    ? function (...t) {
                        return e.apply(g1(this), t), pi(vE.get(this));
                    }
                    : function (...t) {
                        return pi(e.apply(g1(this), t));
                    };
        }
        function CH(e) {
            return typeof e == "function"
                ? kH(e)
                : (e instanceof IDBTransaction && SH(e),
                    bH(e, yH()) ? new Proxy(e, m1) : e);
        }
        function pi(e) {
            if (e instanceof IDBRequest) return xH(e);
            if (p1.has(e)) return p1.get(e);
            const t = CH(e);
            return t !== e && (p1.set(e, t), f1.set(t, e)), t;
        }
        const g1 = (e) => f1.get(e);
        function EH(
            e,
            t,
            {blocked: n, upgrade: r, blocking: o, terminated: i} = {}
        ) {
            const a = indexedDB.open(e, t),
                s = pi(a);
            return (
                r &&
                a.addEventListener("upgradeneeded", (l) => {
                    r(
                        pi(a.result),
                        l.oldVersion,
                        l.newVersion,
                        pi(a.transaction),
                        l
                    );
                }),
                n &&
                a.addEventListener("blocked", (l) =>
                    n(l.oldVersion, l.newVersion, l)
                ),
                    s
                        .then((l) => {
                            i && l.addEventListener("close", () => i()),
                            o &&
                            l.addEventListener("versionchange", (c) =>
                                o(c.oldVersion, c.newVersion, c)
                            );
                        })
                        .catch(() => {}),
                    s
            );
        }
        function PH(e, {blocked: t} = {}) {
            const n = indexedDB.deleteDatabase(e);
            return (
                t && n.addEventListener("blocked", (r) => t(r.oldVersion, r)),
                    pi(n).then(() => {})
            );
        }
        const IH = ["get", "getKey", "getAll", "getAllKeys", "count"],
            TH = ["put", "add", "delete", "clear"],
            v1 = new Map();
        function yE(e, t) {
            if (!(e instanceof IDBDatabase && !(t in e) && typeof t == "string"))
                return;
            if (v1.get(t)) return v1.get(t);
            const n = t.replace(/FromIndex$/, ""),
                r = t !== n,
                o = TH.includes(n);
            if (
                !(n in (r ? IDBIndex : IDBObjectStore).prototype) ||
                !(o || IH.includes(n))
            )
                return;
            const i = async function (a, ...s) {
                const l = this.transaction(a, o ? "readwrite" : "readonly");
                let c = l.store;
                return (
                    r && (c = c.index(s.shift())),
                        (await Promise.all([c[n](...s), o && l.done]))[0]
                );
            };
            return v1.set(t, i), i;
        }
        _H((e) => ({
            ...e,
            get: (t, n, r) => yE(t, n) || e.get(t, n, r),
            has: (t, n) => !!yE(t, n) || e.has(t, n),
        }));
        const rm = "TLDRAW_DOCUMENT_v2",
            wE = "TLDRAW_DB_NAME_INDEX_v2",
            Be = {
                Records: "records",
                Schema: "schema",
                SessionState: "session_state",
            };
        async function om(e, t) {
            RH(e);
            const n = await EH(e, 3, {
                upgrade(r) {
                    r.objectStoreNames.contains(Be.Records) ||
                    r.createObjectStore(Be.Records),
                    r.objectStoreNames.contains(Be.Schema) ||
                    r.createObjectStore(Be.Schema),
                    r.objectStoreNames.contains(Be.SessionState) ||
                    r.createObjectStore(Be.SessionState);
                },
            });
            try {
                return await t(n);
            } finally {
                n.close();
            }
        }
        async function $H({persistenceKey: e, sessionId: t, didCancel: n}) {
            const r = rm + e;
            if (b1().includes(r))
                return (
                    await zH({persistenceKey: e, didCancel: n}),
                        await om(r, async (o) => {
                            var u, h;
                            if (n != null && n()) return;
                            const i = o.transaction(
                                    [Be.Records, Be.Schema, Be.SessionState],
                                    "readonly"
                                ),
                                a = i.objectStore(Be.Records),
                                s = i.objectStore(Be.Schema),
                                l = i.objectStore(Be.SessionState);
                            let c = t
                                ? (u = await l.get(t)) == null
                                    ? void 0
                                    : u.snapshot
                                : null;
                            c ||
                            (c =
                                (h = (await l.getAll())
                                    .sort((m, f) => m.updatedAt - f.updatedAt)
                                    .pop()) == null
                                    ? void 0
                                    : h.snapshot);
                            const d = {
                                records: await a.getAll(),
                                schema: await s.get(Be.Schema),
                                sessionStateSnapshot: c,
                            };
                            if (n != null && n()) {
                                i.abort();
                                return;
                            }
                            return await i.done, d;
                        })
                );
        }
        async function AH({
                              persistenceKey: e,
                              schema: t,
                              changes: n,
                              sessionId: r,
                              sessionStateSnapshot: o,
                              didCancel: i,
                          }) {
            const a = rm + e;
            await om(a, async (s) => {
                const l = s.transaction(
                        [Be.Records, Be.Schema, Be.SessionState],
                        "readwrite"
                    ),
                    c = l.objectStore(Be.Records),
                    d = l.objectStore(Be.Schema),
                    u = l.objectStore(Be.SessionState);
                for (const [h, p] of Object.entries(n.added)) await c.put(p, h);
                for (const [h, p] of Object.values(n.updated)) await c.put(p, p.id);
                for (const h of Object.keys(n.removed)) await c.delete(h);
                if (
                    (d.put(t.serialize(), Be.Schema),
                        o && r
                            ? u.put({snapshot: o, updatedAt: Date.now(), id: r}, r)
                            : (o || r) &&
                            console.error(
                                "sessionStateSnapshot and instanceId must be provided together"
                            ),
                    i != null && i())
                )
                    return l.abort();
                await l.done;
            });
        }
        async function MH({
                              persistenceKey: e,
                              schema: t,
                              snapshot: n,
                              sessionId: r,
                              sessionStateSnapshot: o,
                              didCancel: i,
                          }) {
            const a = rm + e;
            await om(a, async (s) => {
                const l = s.transaction(
                        [Be.Records, Be.Schema, Be.SessionState],
                        "readwrite"
                    ),
                    c = l.objectStore(Be.Records),
                    d = l.objectStore(Be.Schema),
                    u = l.objectStore(Be.SessionState);
                await c.clear();
                for (const [h, p] of Object.entries(n)) await c.put(p, h);
                if (
                    (d.put(t.serialize(), Be.Schema),
                        o && r
                            ? u.put({snapshot: o, updatedAt: Date.now(), id: r}, r)
                            : (o || r) &&
                            console.error(
                                "sessionStateSnapshot and instanceId must be provided together"
                            ),
                    i != null && i())
                )
                    return l.abort();
                await l.done;
            });
        }
        async function zH({persistenceKey: e, didCancel: t}) {
            await om(rm + e, async (n) => {
                const r = n.transaction([Be.SessionState], "readwrite"),
                    o = r.objectStore(Be.SessionState),
                    i = (await o.getAll()).sort(
                        (s, l) => s.updatedAt - l.updatedAt
                    );
                if (i.length < 10) {
                    await r.done;
                    return;
                }
                const a = i.slice(0, i.length - 10);
                for (const {id: s} of a) await o.delete(s);
                if (t != null && t()) return r.abort();
                await r.done;
            });
        }
        function b1() {
            const e =
                JSON.parse(
                    (window == null ? void 0 : window.localStorage.getItem(wE)) ||
                    "[]"
                ) ?? [];
            return Array.isArray(e) ? e : [];
        }
        function RH(e) {
            const t = new Set(b1());
            t.add(e),
            window == null ||
            window.localStorage.setItem(wE, JSON.stringify([...t]));
        }
        const OH = 350,
            DH = 1e4,
            xE = Symbol("UPDATE_INSTANCE_STATE"),
            LH = (e) => e;
        class jH {
            constructor(t) {
                w(this, "onmessage");
            }
            postMessage(t) {}
            close() {}
        }
        const NH = typeof BroadcastChannel > "u" ? jH : BroadcastChannel;
        class FH {
            constructor(
                t,
                {persistenceKey: n, sessionId: r = nm, onLoad: o, onLoadError: i},
                a = new NH(`tldraw-tab-sync-${n}`)
            ) {
                w(this, "disposables", new Set());
                w(this, "diffQueue", []);
                w(this, "didDispose", !1);
                w(this, "shouldDoFullDBWrite", !0);
                w(this, "isReloading", !1);
                w(this, "persistenceKey");
                w(this, "sessionId");
                w(this, "serializedSchema");
                w(this, "isDebugging", !1);
                w(this, "documentTypes");
                w(this, "$sessionStateSnapshot");
                w(this, "initTime", Date.now());
                w(this, "isPersisting", !1);
                w(this, "didLastWriteError", !1);
                w(this, "scheduledPersistTimeout", null);
                (this.store = t),
                    (this.channel = a),
                typeof window < "u" && (window.tlsync = this),
                    (this.persistenceKey = n),
                    (this.sessionId = r),
                    (this.serializedSchema = this.store.schema.serialize()),
                    (this.$sessionStateSnapshot = pH(this.store)),
                    this.disposables.add(
                        t.listen(
                            ({changes: s}) => {
                                this.diffQueue.push(s),
                                    this.channel.postMessage(
                                        LH({
                                            type: "diff",
                                            storeId: this.store.id,
                                            changes: s,
                                            schema: this.serializedSchema,
                                        })
                                    ),
                                    this.schedulePersist();
                            },
                            {source: "user", scope: "document"}
                        )
                    ),
                    this.disposables.add(
                        t.listen(
                            () => {
                                this.diffQueue.push(xE), this.schedulePersist();
                            },
                            {scope: "session"}
                        )
                    ),
                    this.connect(o, i),
                    (this.documentTypes = new Set(
                        Object.values(this.store.schema.types)
                            .filter((s) => s.scope === "document")
                            .map((s) => s.typeName)
                    ));
            }
            debug(...t) {
                this.isDebugging && console.debug(...t);
            }
            async connect(t, n) {
                this.debug("connecting");
                let r;
                try {
                    r = await $H({
                        persistenceKey: this.persistenceKey,
                        sessionId: this.sessionId,
                        didCancel: () => this.didDispose,
                    });
                } catch (o) {
                    n(o), vH(), typeof window < "u" && window.location.reload();
                    return;
                }
                if (
                    (this.debug(
                        "loaded data from store",
                        r,
                        "didDispose",
                        this.didDispose
                    ),
                        !this.didDispose)
                )
                    try {
                        if (r) {
                            const o = Object.fromEntries(
                                    r.records.map((s) => [s.id, s])
                                ),
                                i = r.sessionStateSnapshot ?? mH(o),
                                a = this.store.schema.migrateStoreSnapshot({
                                    store: o,
                                    schema:
                                        r.schema ??
                                        this.store.schema.serializeEarliestVersion(),
                                });
                            if (a.type === "error") {
                                console.error("failed to migrate store", a),
                                    n(
                                        new Error(
                                            `Failed to migrate store: ${a.reason}`
                                        )
                                    );
                                return;
                            }
                            this.store.mergeRemoteChanges(() => {
                                this.store.put(
                                    Object.values(a.value).filter((s) =>
                                        this.documentTypes.has(s.typeName)
                                    ),
                                    "initialize"
                                );
                            }),
                            i && fH(this.store, i);
                        }
                        (this.channel.onmessage = ({data: o}) => {
                            var s, l;
                            this.debug("got message", o);
                            const i = o,
                                a = _D(
                                    this.serializedSchema,
                                    i.schema ??
                                    this.store.schema.serializeEarliestVersion()
                                );
                            if (a === -1) {
                                if (Date.now() - this.initTime < 5e3) {
                                    n(
                                        new Error(
                                            "Schema mismatch, please close other tabs and reload the page"
                                        )
                                    );
                                    return;
                                }
                                this.debug("reloading"),
                                    (this.isReloading = !0),
                                (l =
                                    (s =
                                        window == null
                                            ? void 0
                                            : window.location) == null
                                        ? void 0
                                        : s.reload) == null || l.call(s);
                                return;
                            } else if (a === 1) {
                                this.debug("telling them to reload"),
                                    this.channel.postMessage({
                                        type: "announce",
                                        schema: this.serializedSchema,
                                    }),
                                    (this.shouldDoFullDBWrite = !0),
                                    this.persistIfNeeded();
                                return;
                            }
                            i.type === "diff" &&
                            (this.debug("applying diff"),
                                _r(() => {
                                    this.store.mergeRemoteChanges(() => {
                                        this.store.applyDiff(i.changes),
                                            this.store.ensureStoreIsUsable();
                                    });
                                }));
                        }),
                            this.channel.postMessage({
                                type: "announce",
                                schema: this.serializedSchema,
                            }),
                            this.disposables.add(() => {
                                this.channel.close();
                            }),
                            t(this);
                    } catch (o) {
                        if (
                            (this.debug("error loading data from store", o),
                                this.didDispose)
                        )
                            return;
                        n(o);
                        return;
                    }
            }
            close() {
                this.debug("closing"),
                    (this.didDispose = !0),
                    this.disposables.forEach((t) => t());
            }
            schedulePersist() {
                this.debug("schedulePersist", this.scheduledPersistTimeout),
                !this.scheduledPersistTimeout &&
                (this.scheduledPersistTimeout = setTimeout(
                    () => {
                        (this.scheduledPersistTimeout = null),
                            this.persistIfNeeded();
                    },
                    this.didLastWriteError ? DH : OH
                ));
            }
            persistIfNeeded() {
                this.debug("persistIfNeeded", {
                    isPersisting: this.isPersisting,
                    isReloading: this.isReloading,
                    shouldDoFullDBWrite: this.shouldDoFullDBWrite,
                    diffQueueLength: this.diffQueue.length,
                    storeIsPossiblyCorrupt: this.store.isPossiblyCorrupted(),
                }),
                this.scheduledPersistTimeout &&
                (clearTimeout(this.scheduledPersistTimeout),
                    (this.scheduledPersistTimeout = null)),
                !this.isPersisting &&
                (this.isReloading ||
                    this.store.isPossiblyCorrupted() ||
                    ((this.shouldDoFullDBWrite ||
                            this.diffQueue.length > 0) &&
                        this.doPersist()));
            }
            async doPersist() {
                es(!this.isPersisting, "persist already in progress"),
                    (this.isPersisting = !0),
                    this.debug("doPersist start");
                const t = this.diffQueue;
                this.diffQueue = [];
                try {
                    if (this.shouldDoFullDBWrite)
                        (this.shouldDoFullDBWrite = !1),
                            await MH({
                                persistenceKey: this.persistenceKey,
                                schema: this.store.schema,
                                snapshot: this.store.serialize(),
                                didCancel: () => this.didDispose,
                                sessionId: this.sessionId,
                                sessionStateSnapshot:
                                    this.$sessionStateSnapshot.get(),
                            });
                    else {
                        const n = pf(t.filter((r) => r !== xE));
                        await AH({
                            persistenceKey: this.persistenceKey,
                            changes: n,
                            schema: this.store.schema,
                            didCancel: () => this.didDispose,
                            sessionId: this.sessionId,
                            sessionStateSnapshot: this.$sessionStateSnapshot.get(),
                        });
                    }
                    this.didLastWriteError = !1;
                } catch (n) {
                    (this.shouldDoFullDBWrite = !0),
                        (this.didLastWriteError = !0),
                        console.error("failed to store changes in indexed db", n),
                        gH(),
                    typeof window < "u" && window.location.reload();
                }
                (this.isPersisting = !1),
                    this.debug("doPersist end"),
                    this.schedulePersist();
            }
        }
        function SE({initialData: e, defaultName: t = "", ...n}) {
            const r =
                "schema" in n && n.schema
                    ? n.schema
                    : fL({
                        shapes: BH(
                            q4(
                                "shapeUtils" in n && n.shapeUtils
                                    ? n.shapeUtils
                                    : []
                            )
                        ),
                    });
            return new hC({schema: r, initialData: e, props: {defaultName: t}});
        }
        function BH(e) {
            return Object.fromEntries(
                e.map((t) => [t.type, {props: t.props, migrations: t.migrations}])
            );
        }
        function _E(e) {
            const t = SE(e);
            return e.snapshot && t.loadSnapshot(e.snapshot), {store: t, opts: e};
        }
        function UH(e) {
            const [t, n] = y.useState(() => _E(e));
            if (!lC(t.opts, e)) {
                const r = _E(e);
                return n(r), r.store;
            }
            return t.store;
        }
        function HH({persistenceKey: e, sessionId: t, ...n}) {
            const [r, o] = y.useState(null),
                i = UH(n);
            return (
                y.useEffect(() => {
                    const a = He();
                    if (!e) {
                        o({
                            id: a,
                            storeWithStatus: {status: "not-synced", store: i},
                        });
                        return;
                    }
                    o({id: a, storeWithStatus: {status: "loading"}});
                    const s = (c) => {
                            o((d) =>
                                (d == null ? void 0 : d.id) === a
                                    ? {id: a, storeWithStatus: c}
                                    : d
                            );
                        },
                        l = new FH(i, {
                            sessionId: t,
                            persistenceKey: e,
                            onLoad() {
                                s({store: i, status: "synced-local"});
                            },
                            onLoadError(c) {
                                s({status: "error", error: c});
                            },
                        });
                    return () => {
                        o((c) => ((c == null ? void 0 : c.id) === a ? null : c)),
                            l.close();
                    };
                }, [e, i, t]),
                (r == null ? void 0 : r.storeWithStatus) ?? {status: "loading"}
            );
        }
        let kE = !1;
        if (typeof window < "u") {
            const e = window.navigator.userAgent,
                t = !!e.match(/iPad/i) || !!e.match(/iPhone/i),
                n = !!e.match(/WebKit/i);
            kE = t && n && !e.match(/CriOS/i);
        }
        function VH() {
            const e = W();
            y.useEffect(() => {
                if (!kE) return;
                function t(n) {
                    ((n.target instanceof HTMLInputElement &&
                            n.target.type === "text") ||
                        n.target instanceof HTMLTextAreaElement) &&
                    e.complete();
                }
                return (
                    document.addEventListener("focusout", t),
                        () => document.removeEventListener("focusout", t)
                );
            }, [e]);
        }
        function KH() {
            const e = W(),
                t = dn();
            y.useEffect(() => {
                const n = (i) => t.style.setProperty("--tl-zoom", i.toString()),
                    r = eC(n, 100),
                    o = new wl("useZoomCss", () => {
                        e.getCurrentPageShapeIds().size < 300
                            ? n(e.getZoomLevel())
                            : r(e.getZoomLevel());
                    });
                return (
                    o.attach(),
                        o.execute(),
                        () => {
                            o.detach();
                        }
                );
            }, [e, t]);
        }
        const WH = [],
            YH = [],
            GH = y.memo(function ({
                                      store: t,
                                      components: n,
                                      className: r,
                                      user: o,
                                      ...i
                                  }) {
                const [a, s] = N.useState(null),
                    l = y.useMemo(() => o ?? U4(), [o]),
                    c =
                        (n == null ? void 0 : n.ErrorFallback) === void 0
                            ? WC
                            : n == null
                                ? void 0
                                : n.ErrorFallback,
                    d = {
                        ...i,
                        shapeUtils: i.shapeUtils ?? WH,
                        tools: i.tools ?? YH,
                        components: n,
                    };
                return v.jsx("div", {
                    ref: s,
                    draggable: !1,
                    className: me("tl-container tl-theme__light", r),
                    onPointerDown: zt,
                    tabIndex: -1,
                    children: v.jsx(ru, {
                        fallback: c,
                        onError: (u) =>
                            my(u, {tags: {origin: "react.tldraw-before-app"}}),
                        children:
                            a &&
                            v.jsx(tj, {
                                container: a,
                                children: v.jsx(Wj, {
                                    overrides: n,
                                    children: t
                                        ? t instanceof hC
                                            ? v.jsx(EE, {...d, store: t, user: l})
                                            : v.jsx(CE, {...d, store: t, user: l})
                                        : v.jsx(XH, {...d, store: t, user: l}),
                                }),
                            }),
                    }),
                });
            });
        function XH(e) {
            const {
                    defaultName: t,
                    snapshot: n,
                    initialData: r,
                    shapeUtils: o,
                    persistenceKey: i,
                    sessionId: a,
                    user: s,
                } = e,
                l = HH({
                    shapeUtils: o,
                    initialData: r,
                    persistenceKey: i,
                    sessionId: a,
                    defaultName: t,
                    snapshot: n,
                });
            return v.jsx(CE, {...e, store: l, user: s});
        }
        const CE = y.memo(function ({store: t, user: n, ...r}) {
            var i;
            const o = dn();
            switch (
                (y.useLayoutEffect(() => {
                    n.userPreferences.get().isDarkMode &&
                    (o.classList.remove("tl-theme__light"),
                        o.classList.add("tl-theme__dark"));
                }, [o, n]),
                    t.status)
                ) {
                case "error":
                    throw t.error;
                case "loading": {
                    const a =
                        ((i = r.components) == null ? void 0 : i.LoadingScreen) ??
                        QB;
                    return v.jsx(a, {});
                }
            }
            return v.jsx(EE, {...r, store: t.store, user: n});
        });
        function EE({
                        onMount: e,
                        children: t,
                        store: n,
                        tools: r,
                        shapeUtils: o,
                        user: i,
                        initialState: a,
                        autoFocus: s = !0,
                        inferDarkMode: l,
                    }) {
            const {ErrorFallback: c} = Rt(),
                d = dn(),
                [u, h] = y.useState(null);
            y.useLayoutEffect(() => {
                const m = new le({
                    store: n,
                    shapeUtils: o,
                    tools: r,
                    getContainer: () => d,
                    user: i,
                    initialState: a,
                    inferDarkMode: l,
                });
                return (
                    (window.app = m),
                        (window.editor = m),
                        h(m),
                        () => {
                            m.dispose();
                        }
                );
            }, [d, o, r, n, i, a, l]);
            const p = y.useSyncExternalStore(
                y.useCallback(
                    (m) =>
                        u ? (u.on("crash", m), () => u.off("crash", m)) : () => {},
                    [u]
                ),
                () => (u == null ? void 0 : u.getCrashingError()) ?? null
            );
            return u
                ? v.jsx(ru, {
                    fallback: c,
                    onError: (m) =>
                        u.annotateError(m, {
                            origin: "react.tldraw",
                            willCrashApp: !0,
                        }),
                    children: p
                        ? v.jsx(ZH, {crashingError: p})
                        : v.jsx(Ny.Provider, {
                            value: u,
                            children: v.jsx(qH, {
                                autoFocus: s,
                                onMount: e,
                                children: t,
                            }),
                        }),
                })
                : null;
        }
        function qH({children: e, onMount: t, autoFocus: n}) {
            return (
                KH(),
                    iH(),
                    aH(),
                    VH(),
                    cH(),
                    lH(n),
                    JH(t),
                    EB(),
                    W().updateViewportScreenBounds(),
                e ?? v.jsx(t1, {})
            );
        }
        function ZH({crashingError: e}) {
            throw e;
        }
        function PE({children: e}) {
            const {Spinner: t} = Rt();
            return v.jsxs("div", {
                className: "tl-loading",
                children: [t ? v.jsx(t, {}) : null, e],
            });
        }
        function QH({children: e}) {
            return v.jsx("div", {className: "tl-loading", children: e});
        }
        function JH(e) {
            const t = W(),
                n = sH((r) => {
                    const o = e == null ? void 0 : e(r);
                    return r.emit("mount"), (window.tldrawReady = !0), o;
                });
            N.useLayoutEffect(() => {
                if (t) return n == null ? void 0 : n(t);
            }, [t, n]);
        }
        function us({children: e, className: t = "", ...n}) {
            return v.jsx("div", {
                ...n,
                className: `tl-html-container ${t}`,
                children: e,
            });
        }
        ze(function ({x: t = 0, y: n = 0, rotation: r = 0, ...o}) {
            const i = W(),
                a = y.useRef(null),
                s = i.getCamera();
            return (
                y.useLayoutEffect(() => {
                    const {x: l, y: c, z: d} = i.getCamera(),
                        u = a.current;
                    u &&
                    l !== void 0 &&
                    (u.style.transform = `translate(${l}px, ${c}px) scale(${d}) rotate(${r}rad) translate(${t}px, ${n}px)`);
                }, [s, i, t, n, r]),
                    v.jsx("div", {
                        ref: a,
                        ...o,
                        className: me("tl-positioned", o.className),
                    })
            );
        });
        function IE(e, t, n = {}) {
            const {newPoint: r, handle: o, scaleX: i, scaleY: a} = t,
                {
                    minWidth: s = 1,
                    maxWidth: l = 1 / 0,
                    minHeight: c = 1,
                    maxHeight: d = 1 / 0,
                } = n;
            let u = e.props.w * i,
                h = e.props.h * a;
            const p = new E(0, 0);
            if (u > 0) {
                if (u < s) {
                    switch (o) {
                        case "top_left":
                        case "left":
                        case "bottom_left": {
                            p.x = u - s;
                            break;
                        }
                        case "top":
                        case "bottom": {
                            p.x = (u - s) / 2;
                            break;
                        }
                        default:
                            p.x = 0;
                    }
                    u = s;
                }
            } else if (((p.x = u), (u = -u), u < s)) {
                switch (o) {
                    case "top_left":
                    case "left":
                    case "bottom_left": {
                        p.x = -u;
                        break;
                    }
                    default:
                        p.x = -s;
                }
                u = s;
            }
            if (h > 0) {
                if (h < c) {
                    switch (o) {
                        case "top_left":
                        case "top":
                        case "top_right": {
                            p.y = h - c;
                            break;
                        }
                        case "right":
                        case "left": {
                            p.y = (h - c) / 2;
                            break;
                        }
                        default:
                            p.y = 0;
                    }
                    h = c;
                }
            } else if (((p.y = h), (h = -h), h < c)) {
                switch (o) {
                    case "top_left":
                    case "top":
                    case "top_right": {
                        p.y = -h;
                        break;
                    }
                    default:
                        p.y = -c;
                }
                h = c;
            }
            const {x: m, y: f} = p.rot(e.rotation).add(r);
            return {x: m, y: f, props: {w: Math.min(l, u), h: Math.min(d, h)}};
        }
        class Wl extends qr {
            constructor() {
                super(...arguments);
                w(this, "onResize", (n, r) => IE(n, r));
            }
            getGeometry(n) {
                return new ia({width: n.props.w, height: n.props.h, isFilled: !0});
            }
        }
        let eV =
                ((V2 = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "onPointerDown", (n) => {
                            this.parent.transition("pointing", n);
                        });
                        w(this, "onEnter", () => {
                            this.editor.setCursor({type: "cross", rotation: 0});
                        });
                        w(this, "onCancel", () => {
                            this.editor.setCurrentTool("select");
                        });
                    }
                }),
                    w(V2, "id", "idle"),
                    V2),
            tV =
                ((K2 = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "markId", "");
                        w(this, "wasFocusedOnEnter", !1);
                        w(this, "onEnter", () => {
                            this.wasFocusedOnEnter = !this.editor.getIsMenuOpen();
                        });
                        w(this, "onPointerMove", (n) => {
                            if (this.editor.inputs.isDragging) {
                                const {originPagePoint: r} = this.editor.inputs,
                                    o = this.parent.shapeType,
                                    i = Ge();
                                (this.markId = `creating:${i}`),
                                    this.editor.mark(this.markId),
                                    this.editor
                                        .createShapes([
                                            {
                                                id: i,
                                                type: o,
                                                x: r.x,
                                                y: r.y,
                                                props: {w: 1, h: 1},
                                            },
                                        ])
                                        .select(i),
                                    this.editor.setCurrentTool("select.resizing", {
                                        ...n,
                                        target: "selection",
                                        handle: "bottom_right",
                                        isCreating: !0,
                                        creationCursorOffset: {x: 1, y: 1},
                                        onInteractionEnd: this.parent.id,
                                        onCreate: this.parent.onCreate,
                                    });
                            }
                        });
                        w(this, "onPointerUp", () => {
                            this.complete();
                        });
                        w(this, "onCancel", () => {
                            this.cancel();
                        });
                        w(this, "onComplete", () => {
                            this.complete();
                        });
                        w(this, "onInterrupt", () => {
                            this.cancel();
                        });
                    }
                    complete() {
                        const {originPagePoint: n} = this.editor.inputs;
                        if (!this.wasFocusedOnEnter) return;
                        this.editor.mark(this.markId);
                        const r = this.parent.shapeType,
                            o = Ge();
                        this.editor.mark(this.markId),
                            this.editor.createShapes([
                                {id: o, type: r, x: n.x, y: n.y},
                            ]);
                        const i = this.editor.getShape(o),
                            {w: a, h: s} = this.editor
                                .getShapeUtil(i)
                                .getDefaultProps(),
                            l = new E(a / 2, s / 2),
                            c = this.editor.getShapeParentTransform(i);
                        c && l.rot(-c.rotation()),
                            this.editor.updateShapes([
                                {id: o, type: r, x: i.x - l.x, y: i.y - l.y},
                            ]),
                            this.editor.setSelectedShapes([o]),
                            this.editor.getInstanceState().isToolLocked
                                ? this.parent.transition("idle")
                                : this.editor.setCurrentTool("select.idle");
                    }
                    cancel() {
                        this.parent.transition("idle");
                    }
                }),
                    w(K2, "id", "pointing"),
                    K2);
        class im extends ie {
            constructor() {
                super(...arguments);
                w(this, "onCreate");
            }
        }
        w(im, "id", "box"),
            w(im, "initial", "idle"),
            w(im, "children", () => [eV, tV]);
        function TE(e, t) {
            const n = y.useRef(e);
            return t(e, n.current) ? n.current : ((n.current = e), e);
        }
        function $E(e) {
            return TE(e, iD);
        }
        function nV(e) {
            return TE(e, lC);
        }
        function AE(e) {
            const t = W();
            return X("isCropping", () => t.getCroppingShapeId() === e, [t, e]);
        }
        function am(e) {
            const t = W();
            return X("isEditing", () => t.getEditingShapeId() === e, [t, e]);
        }
        function Co(e) {
            const t = W();
            return y.useMemo(
                function () {
                    const o = (c) => {
                        if (c.isKilled) return;
                        if (c.button === 2) {
                            t.dispatch({
                                type: "pointer",
                                target: "selection",
                                handle: e,
                                name: "right_click",
                                ...Wn(c),
                            });
                            return;
                        }
                        if (c.button !== 0) return;
                        const d = Pf(c.currentTarget);
                        function u() {
                            d.removeEventListener("pointerup", u), tu(d, c);
                        }
                        eu(d, c),
                            d.addEventListener("pointerup", u),
                            t.dispatch({
                                name: "pointer_down",
                                type: "pointer",
                                target: "selection",
                                handle: e,
                                ...Wn(c),
                            }),
                            zt(c);
                    };
                    let i, a;
                    function s(c) {
                        c.isKilled ||
                        (c.button === 0 &&
                            ((c.clientX === i && c.clientY === a) ||
                                ((i = c.clientX),
                                    (a = c.clientY),
                                    t.dispatch({
                                        name: "pointer_move",
                                        type: "pointer",
                                        target: "selection",
                                        handle: e,
                                        ...Wn(c),
                                    }))));
                    }
                    return {
                        onPointerDown: o,
                        onPointerMove: s,
                        onPointerUp: (c) => {
                            c.isKilled ||
                            (c.button === 0 &&
                                t.dispatch({
                                    name: "pointer_up",
                                    type: "pointer",
                                    target: "selection",
                                    handle: e,
                                    ...Wn(c),
                                }));
                        },
                    };
                },
                [t, e]
            );
        }
        const rV = 20,
            oV = 8;
        function y1(e, t = rV) {
            return Math.max(oV, Math.ceil(e / t));
        }
        class iV extends as {
            constructor(n) {
                super({...n, isFilled: !1, isClosed: !1});
                w(this, "_center");
                w(this, "radius");
                w(this, "start");
                w(this, "end");
                w(this, "measure");
                w(this, "length");
                w(this, "angleStart");
                w(this, "angleEnd");
                const {
                    center: r,
                    radius: o,
                    sweepFlag: i,
                    largeArcFlag: a,
                    start: s,
                    end: l,
                } = n;
                if (s.equals(l))
                    throw Error("Arc must have different start and end points.");
                (this.angleStart = E.Angle(r, s)),
                    (this.angleEnd = E.Angle(r, l)),
                    (this.measure = aV(this.angleStart, this.angleEnd, i, a)),
                    (this.length = this.measure * o),
                    (this.start = s),
                    (this.end = l),
                    (this._center = r),
                    (this.radius = o);
            }
            nearestPoint(n) {
                const {
                        _center: r,
                        measure: o,
                        radius: i,
                        angleEnd: a,
                        angleStart: s,
                        start: l,
                        end: c,
                    } = this,
                    d = ME(o, s, a, r.angle(n));
                if (d <= 0) return l;
                if (d >= 1) return c;
                const u = r.clone().add(n.clone().sub(r).uni().mul(i));
                let h = 1 / 0,
                    p;
                for (const m of [l, c, u])
                    n.dist(m) < h && ((p = m), (h = n.dist(m)));
                if (!p) throw Error("nearest point not found");
                return p;
            }
            hitTestLineSegment(n, r, o) {
                const {
                        _center: i,
                        radius: a,
                        measure: s,
                        angleStart: l,
                        angleEnd: c,
                    } = this,
                    d = Vf(n, r, i, a);
                return d === null
                    ? !1
                    : d.some((u) => {
                        const h = ME(s, l, c, i.angle(u));
                        return h >= 0 && h <= 1;
                    });
            }
            getVertices() {
                const {
                        _center: n,
                        measure: r,
                        length: o,
                        radius: i,
                        angleStart: a,
                    } = this,
                    s = [];
                for (let l = 0, c = y1(Math.abs(o)); l < c + 1; l++) {
                    const d = (l / c) * r,
                        u = a + d;
                    s.push(n.clone().add(new E(Math.cos(u), Math.sin(u)).mul(i)));
                }
                return s;
            }
        }
        function ME(e, t, n, r) {
            let o;
            if (Math.abs(e) > Oe) {
                o = su(t, r);
                const i = su(r, n);
                return Math.abs(o) < Math.abs(i) ? o / e : (e - i) / e;
            } else return (o = su(t, r)), o / e;
        }
        function aV(e, t, n, r) {
            const o = ((2 * ((t - e) % Fe)) % Fe) - ((t - e) % Fe);
            return r ? (Fe - Math.abs(o)) * (n ? 1 : -1) : o;
        }
        class zE extends as {
            constructor(n) {
                super({isClosed: !0, ...n});
                w(this, "_center");
                w(this, "radius");
                w(this, "x");
                w(this, "y");
                this.config = n;
                const {x: r = 0, y: o = 0, radius: i} = n;
                (this.x = r),
                    (this.y = o),
                    (this._center = new E(i + r, i + o)),
                    (this.radius = i);
            }
            getBounds() {
                return new ce(this.x, this.y, this.radius * 2, this.radius * 2);
            }
            getVertices() {
                const {_center: n, radius: r} = this,
                    o = Fe * r,
                    i = [];
                for (let a = 0, s = y1(o); a < s; a++) {
                    const l = (a / s) * Fe;
                    i.push(n.clone().add(E.FromAngle(l).mul(r)));
                }
                return i;
            }
            nearestPoint(n) {
                const {_center: r, radius: o} = this;
                return r.equals(n)
                    ? E.AddXY(r, o, 0)
                    : r.clone().add(n.clone().sub(r).uni().mul(o));
            }
            hitTestLineSegment(n, r, o) {
                const {_center: i, radius: a} = this;
                return Vf(n, r, i, a) !== null;
            }
        }
        class sV extends ss {
            constructor(n) {
                const {start: r, cp1: o, cp2: i, end: a} = n;
                super({...n, points: [r, a]});
                w(this, "a");
                w(this, "b");
                w(this, "c");
                w(this, "d");
                (this.a = r), (this.b = o), (this.c = i), (this.d = a);
            }
            getVertices() {
                const n = [],
                    {a: r, b: o, c: i, d: a} = this;
                for (let s = 0, l = 10; s <= l; s++) {
                    const c = s / l;
                    n.push(
                        new E(
                            (1 - c) * (1 - c) * (1 - c) * r.x +
                            3 * ((1 - c) * (1 - c)) * c * o.x +
                            3 * (1 - c) * (c * c) * i.x +
                            c * c * c * a.x,
                            (1 - c) * (1 - c) * (1 - c) * r.y +
                            3 * ((1 - c) * (1 - c)) * c * o.y +
                            3 * (1 - c) * (c * c) * i.y +
                            c * c * c * a.y
                        )
                    );
                }
                return n;
            }
            midPoint() {
                return lV(this, 0.5);
            }
            nearestPoint(n) {
                let r,
                    o = 1 / 0;
                for (const i of this.segments) {
                    const a = i.nearestPoint(n),
                        s = a.dist(n);
                    s < o && ((r = a), (o = s));
                }
                if (!r) throw Error("nearest point not found");
                return r;
            }
        }
        function lV(e, t) {
            const {a: n, b: r, c: o, d: i} = e;
            return new E(
                (1 - t) * (1 - t) * (1 - t) * n.x +
                3 * ((1 - t) * (1 - t)) * t * r.x +
                3 * (1 - t) * (t * t) * o.x +
                t * t * t * i.x,
                (1 - t) * (1 - t) * (1 - t) * n.y +
                3 * ((1 - t) * (1 - t)) * t * r.y +
                3 * (1 - t) * (t * t) * o.y +
                t * t * t * i.y
            );
        }
        class sm extends as {
            constructor(n) {
                super({...n, isClosed: !1, isFilled: !1});
                w(this, "points");
                w(this, "_segments");
                w(this, "_length");
                const {points: r} = n;
                this.points = r;
            }
            get segments() {
                if (!this._segments) {
                    this._segments = [];
                    const {points: n} = this,
                        r = n.length,
                        o = r - 2,
                        i = 1.25;
                    for (let a = 0; a < r - 1; a++) {
                        const s = a === 0 ? n[0] : n[a - 1],
                            l = n[a],
                            c = n[a + 1],
                            d = a === o ? c : n[a + 2],
                            u = l,
                            h =
                                a === 0
                                    ? s
                                    : new E(
                                        l.x + ((c.x - s.x) / 6) * i,
                                        l.y + ((c.y - s.y) / 6) * i
                                    ),
                            p =
                                a === o
                                    ? c
                                    : new E(
                                        c.x - ((d.x - l.x) / 6) * i,
                                        c.y - ((d.y - l.y) / 6) * i
                                    ),
                            m = c;
                        this._segments.push(
                            new sV({start: u, cp1: h, cp2: p, end: m})
                        );
                    }
                }
                return this._segments;
            }
            get length() {
                return (
                    this._length ||
                    (this._length = this.segments.reduce(
                        (n, r) => n + r.length,
                        0
                    )),
                        this._length
                );
            }
            getVertices() {
                const n = this.segments.reduce((r, o) => r.concat(o.vertices), []);
                return n.push(this.points[this.points.length - 1]), n;
            }
            nearestPoint(n) {
                let r,
                    o = 1 / 0;
                for (const i of this.segments) {
                    const a = i.nearestPoint(n),
                        s = a.dist(n);
                    s < o && ((r = a), (o = s));
                }
                if (!r) throw Error("nearest point not found");
                return r;
            }
            hitTestLineSegment(n, r, o) {
                return this.segments.some((i) => i.hitTestLineSegment(n, r, o));
            }
        }
        class RE extends as {
            constructor(n) {
                super({...n, isClosed: !0});
                w(this, "w");
                w(this, "h");
                w(this, "_edges");
                this.config = n;
                const {width: r, height: o} = n;
                (this.w = r), (this.h = o);
            }
            get edges() {
                if (!this._edges) {
                    const {vertices: n} = this;
                    this._edges = [];
                    for (let r = 0, o = n.length; r < o; r++) {
                        const i = n[r],
                            a = n[(r + 1) % o];
                        this._edges.push(new Wf({start: i, end: a}));
                    }
                }
                return this._edges;
            }
            getVertices() {
                const n = Math.max(1, this.w),
                    r = Math.max(1, this.h),
                    o = n / 2,
                    i = r / 2,
                    a = Math.pow(o - i, 2) / Math.pow(o + i, 2),
                    s = Oe * (o + i) * (1 + (3 * a) / (10 + Math.sqrt(4 - 3 * a))),
                    l = y1(s),
                    c = Fe / l,
                    d = Math.cos(c),
                    u = Math.sin(c);
                let h = 0,
                    p = 1,
                    m = 0,
                    f = 1;
                const g = Array(l);
                for (let b = 0; b < l; b++)
                    (g[b] = new E(o + o * p, i + i * h)),
                        (m = u * p + d * h),
                        (f = d * p - u * h),
                        (h = m),
                        (p = f);
                return g;
            }
            nearestPoint(n) {
                let r,
                    o = 1 / 0;
                for (const i of this.edges) {
                    const a = i.nearestPoint(n),
                        s = a.dist(n);
                    s < o && ((r = a), (o = s));
                }
                if (!r) throw Error("nearest point not found");
                return r;
            }
            hitTestLineSegment(n, r, o) {
                return this.edges.some((i) => i.hitTestLineSegment(n, r, o));
            }
            getBounds() {
                return new ce(0, 0, this.w, this.h);
            }
        }
        class cV extends RE {
            constructor(t) {
                super({...t}), (this.config = t);
            }
            getVertices() {
                const t = Math.max(1, this.w),
                    n = Math.max(1, this.h),
                    r = t / 2,
                    o = n / 2,
                    i = 10,
                    a = Array(i * 2 - 2);
                if (n > t)
                    for (let s = 0; s < i - 1; s++) {
                        const l = -Oe + (Oe * s) / (i - 2),
                            c = (Oe * s) / (i - 2);
                        (a[s] = new E(r + r * Math.cos(l), r + r * Math.sin(l))),
                            (a[s + (i - 1)] = new E(
                                r + r * Math.cos(c),
                                n - r + r * Math.sin(c)
                            ));
                    }
                else
                    for (let s = 0; s < i - 1; s++) {
                        const l = -qe + (Oe * s) / (i - 2),
                            c = qe + (Oe * -s) / (i - 2);
                        (a[s] = new E(
                            t - o + o * Math.cos(l),
                            n - o + o * Math.sin(l)
                        )),
                            (a[s + (i - 1)] = new E(
                                o - o * Math.cos(c),
                                n - o + o * Math.sin(c)
                            ));
                    }
                return a;
            }
        }
        function OE(e, t) {
            return e < 0
                ? 1
                : e > t
                    ? -1
                    : e < Rl
                        ? (Rl - e) / Rl
                        : e > t - Rl
                            ? -(Rl - t + e) / Rl
                            : 0;
        }
        function w1(e) {
            if (!e.inputs.isDragging || e.inputs.isPanning) return;
            const {
                    inputs: {
                        currentScreenPoint: {x: t, y: n},
                    },
                } = e,
                r = e.getZoomLevel(),
                o = e.getViewportScreenBounds(),
                i = o.w < 1e3 ? 0.612 : 1,
                a = o.h < 1e3 ? 0.612 : 1,
                s = OE(t - o.x, o.w),
                l = OE(n - o.y, o.h);
            if (s === 0 && l === 0) return;
            const c = e.user.getEdgeScrollSpeed() * zj,
                d = (c * s * i) / r,
                u = (c * l * a) / r,
                h = e.getCamera();
            e.setCamera({x: h.x + d, y: h.y + u});
        }
        async function dV({shouldReload: e = !0} = {}) {
            sessionStorage.clear(),
                await Promise.all(b1().map((t) => PH(t))),
                localStorage.clear(),
            e && window.location.reload();
        }
        typeof window < "u" && (window.__tldraw__hardReset = dV);
        function uV(e, t = "_blank") {
            Uy.openWindow(e, t);
        }
        var _u = function (e) {
                return e && e.Math === Math && e;
            },
            Mn =
                _u(typeof globalThis == "object" && globalThis) ||
                _u(typeof window == "object" && window) ||
                _u(typeof self == "object" && self) ||
                _u(typeof lt == "object" && lt) ||
                _u(typeof lt == "object" && lt) ||
                (function () {
                    return this;
                })() ||
                Function("return this")(),
            x1 = {},
            zn = function (e) {
                try {
                    return !!e();
                } catch {
                    return !0;
                }
            },
            hV = zn,
            ca = !hV(function () {
                return (
                    Object.defineProperty({}, 1, {
                        get: function () {
                            return 7;
                        },
                    })[1] !== 7
                );
            }),
            pV = zn,
            lm = !pV(function () {
                var e = function () {}.bind();
                return typeof e != "function" || e.hasOwnProperty("prototype");
            }),
            fV = lm,
            cm = Function.prototype.call,
            fi = fV
                ? cm.bind(cm)
                : function () {
                    return cm.apply(cm, arguments);
                },
            DE = {},
            LE = {}.propertyIsEnumerable,
            jE = Object.getOwnPropertyDescriptor,
            mV = jE && !LE.call({1: 2}, 1);
        DE.f = mV
            ? function (t) {
                var n = jE(this, t);
                return !!n && n.enumerable;
            }
            : LE;
        var NE = function (e, t) {
                return {
                    enumerable: !(e & 1),
                    configurable: !(e & 2),
                    writable: !(e & 4),
                    value: t,
                };
            },
            FE = lm,
            BE = Function.prototype,
            S1 = BE.call,
            gV = FE && BE.bind.bind(S1, S1),
            Dt = FE
                ? gV
                : function (e) {
                    return function () {
                        return S1.apply(e, arguments);
                    };
                },
            UE = Dt,
            vV = UE({}.toString),
            bV = UE("".slice),
            Yl = function (e) {
                return bV(vV(e), 8, -1);
            },
            yV = Dt,
            wV = zn,
            xV = Yl,
            _1 = Object,
            SV = yV("".split),
            _V = wV(function () {
                return !_1("z").propertyIsEnumerable(0);
            })
                ? function (e) {
                    return xV(e) === "String" ? SV(e, "") : _1(e);
                }
                : _1,
            dm = function (e) {
                return e == null;
            },
            kV = dm,
            CV = TypeError,
            Gl = function (e) {
                if (kV(e)) throw new CV("Can't call method on " + e);
                return e;
            },
            EV = _V,
            PV = Gl,
            um = function (e) {
                return EV(PV(e));
            },
            k1 = typeof document == "object" && document.all,
            Rn =
                typeof k1 > "u" && k1 !== void 0
                    ? function (e) {
                        return typeof e == "function" || e === k1;
                    }
                    : function (e) {
                        return typeof e == "function";
                    },
            IV = Rn,
            hs = function (e) {
                return typeof e == "object" ? e !== null : IV(e);
            },
            C1 = Mn,
            TV = Rn,
            $V = function (e) {
                return TV(e) ? e : void 0;
            },
            hm = function (e, t) {
                return arguments.length < 2 ? $V(C1[e]) : C1[e] && C1[e][t];
            },
            AV = Dt,
            HE = AV({}.isPrototypeOf),
            MV = Mn,
            VE = MV.navigator,
            KE = VE && VE.userAgent,
            zV = KE ? String(KE) : "",
            WE = Mn,
            E1 = zV,
            YE = WE.process,
            GE = WE.Deno,
            XE = (YE && YE.versions) || (GE && GE.version),
            qE = XE && XE.v8,
            Qr,
            pm;
        qE &&
        ((Qr = qE.split(".")),
            (pm = Qr[0] > 0 && Qr[0] < 4 ? 1 : +(Qr[0] + Qr[1]))),
        !pm &&
        E1 &&
        ((Qr = E1.match(/Edge\/(\d+)/)),
        (!Qr || Qr[1] >= 74) &&
        ((Qr = E1.match(/Chrome\/(\d+)/)), Qr && (pm = +Qr[1])));
        var RV = pm,
            ZE = RV,
            OV = zn,
            DV = Mn,
            LV = DV.String,
            QE =
                !!Object.getOwnPropertySymbols &&
                !OV(function () {
                    var e = Symbol("symbol detection");
                    return (
                        !LV(e) ||
                        !(Object(e) instanceof Symbol) ||
                        (!Symbol.sham && ZE && ZE < 41)
                    );
                }),
            jV = QE,
            JE = jV && !Symbol.sham && typeof Symbol.iterator == "symbol",
            NV = hm,
            FV = Rn,
            BV = HE,
            UV = JE,
            HV = Object,
            eP = UV
                ? function (e) {
                    return typeof e == "symbol";
                }
                : function (e) {
                    var t = NV("Symbol");
                    return FV(t) && BV(t.prototype, HV(e));
                },
            VV = String,
            KV = function (e) {
                try {
                    return VV(e);
                } catch {
                    return "Object";
                }
            },
            WV = Rn,
            YV = KV,
            GV = TypeError,
            P1 = function (e) {
                if (WV(e)) return e;
                throw new GV(YV(e) + " is not a function");
            },
            XV = P1,
            qV = dm,
            I1 = function (e, t) {
                var n = e[t];
                return qV(n) ? void 0 : XV(n);
            },
            T1 = fi,
            $1 = Rn,
            A1 = hs,
            ZV = TypeError,
            QV = function (e, t) {
                var n, r;
                if (
                    (t === "string" &&
                        $1((n = e.toString)) &&
                        !A1((r = T1(n, e)))) ||
                    ($1((n = e.valueOf)) && !A1((r = T1(n, e)))) ||
                    (t !== "string" && $1((n = e.toString)) && !A1((r = T1(n, e))))
                )
                    return r;
                throw new ZV("Can't convert object to primitive value");
            },
            tP = {exports: {}},
            nP = Mn,
            JV = Object.defineProperty,
            M1 = function (e, t) {
                try {
                    JV(nP, e, {value: t, configurable: !0, writable: !0});
                } catch {
                    nP[e] = t;
                }
                return t;
            },
            eK = Mn,
            tK = M1,
            rP = "__core-js_shared__",
            oP = (tP.exports = eK[rP] || tK(rP, {}));
        (oP.versions || (oP.versions = [])).push({
            version: "3.38.1",
            mode: "global",
            copyright: "© 2014-2024 Denis Pushkarev (zloirock.ru)",
            license: "https://github.com/zloirock/core-js/blob/v3.38.1/LICENSE",
            source: "https://github.com/zloirock/core-js",
        });
        var z1 = tP.exports,
            iP = z1,
            R1 = function (e, t) {
                return iP[e] || (iP[e] = t || {});
            },
            nK = Gl,
            rK = Object,
            ku = function (e) {
                return rK(nK(e));
            },
            oK = Dt,
            iK = ku,
            aK = oK({}.hasOwnProperty),
            da =
                Object.hasOwn ||
                function (t, n) {
                    return aK(iK(t), n);
                },
            sK = Dt,
            lK = 0,
            cK = Math.random(),
            dK = sK((1).toString),
            aP = function (e) {
                return (
                    "Symbol(" + (e === void 0 ? "" : e) + ")_" + dK(++lK + cK, 36)
                );
            },
            uK = Mn,
            hK = R1,
            sP = da,
            pK = aP,
            fK = QE,
            mK = JE,
            Xl = uK.Symbol,
            O1 = hK("wks"),
            gK = mK ? Xl.for || Xl : (Xl && Xl.withoutSetter) || pK,
            mi = function (e) {
                return (
                    sP(O1, e) ||
                    (O1[e] = fK && sP(Xl, e) ? Xl[e] : gK("Symbol." + e)),
                        O1[e]
                );
            },
            vK = fi,
            lP = hs,
            cP = eP,
            bK = I1,
            yK = QV,
            wK = mi,
            xK = TypeError,
            SK = wK("toPrimitive"),
            _K = function (e, t) {
                if (!lP(e) || cP(e)) return e;
                var n = bK(e, SK),
                    r;
                if (n) {
                    if (
                        (t === void 0 && (t = "default"),
                            (r = vK(n, e, t)),
                        !lP(r) || cP(r))
                    )
                        return r;
                    throw new xK("Can't convert object to primitive value");
                }
                return t === void 0 && (t = "number"), yK(e, t);
            },
            kK = _K,
            CK = eP,
            dP = function (e) {
                var t = kK(e, "string");
                return CK(t) ? t : t + "";
            },
            EK = Mn,
            uP = hs,
            D1 = EK.document,
            PK = uP(D1) && uP(D1.createElement),
            hP = function (e) {
                return PK ? D1.createElement(e) : {};
            },
            IK = ca,
            TK = zn,
            $K = hP,
            pP =
                !IK &&
                !TK(function () {
                    return (
                        Object.defineProperty($K("div"), "a", {
                            get: function () {
                                return 7;
                            },
                        }).a !== 7
                    );
                }),
            AK = ca,
            MK = fi,
            zK = DE,
            RK = NE,
            OK = um,
            DK = dP,
            LK = da,
            jK = pP,
            fP = Object.getOwnPropertyDescriptor;
        x1.f = AK
            ? fP
            : function (t, n) {
                if (((t = OK(t)), (n = DK(n)), jK))
                    try {
                        return fP(t, n);
                    } catch {}
                if (LK(t, n)) return RK(!MK(zK.f, t, n), t[n]);
            };
        var ql = {},
            NK = ca,
            FK = zn,
            mP =
                NK &&
                FK(function () {
                    return (
                        Object.defineProperty(function () {}, "prototype", {
                            value: 42,
                            writable: !1,
                        }).prototype !== 42
                    );
                }),
            BK = hs,
            UK = String,
            HK = TypeError,
            ps = function (e) {
                if (BK(e)) return e;
                throw new HK(UK(e) + " is not an object");
            },
            VK = ca,
            KK = pP,
            WK = mP,
            fm = ps,
            gP = dP,
            YK = TypeError,
            L1 = Object.defineProperty,
            GK = Object.getOwnPropertyDescriptor,
            j1 = "enumerable",
            N1 = "configurable",
            F1 = "writable";
        ql.f = VK
            ? WK
                ? function (t, n, r) {
                    if (
                        (fm(t),
                            (n = gP(n)),
                            fm(r),
                        typeof t == "function" &&
                        n === "prototype" &&
                        "value" in r &&
                        F1 in r &&
                        !r[F1])
                    ) {
                        var o = GK(t, n);
                        o &&
                        o[F1] &&
                        ((t[n] = r.value),
                            (r = {
                                configurable: N1 in r ? r[N1] : o[N1],
                                enumerable: j1 in r ? r[j1] : o[j1],
                                writable: !1,
                            }));
                    }
                    return L1(t, n, r);
                }
                : L1
            : function (t, n, r) {
                if ((fm(t), (n = gP(n)), fm(r), KK))
                    try {
                        return L1(t, n, r);
                    } catch {}
                if ("get" in r || "set" in r)
                    throw new YK("Accessors not supported");
                return "value" in r && (t[n] = r.value), t;
            };
        var XK = ca,
            qK = ql,
            ZK = NE,
            B1 = XK
                ? function (e, t, n) {
                    return qK.f(e, t, ZK(1, n));
                }
                : function (e, t, n) {
                    return (e[t] = n), e;
                },
            vP = {exports: {}},
            U1 = ca,
            QK = da,
            bP = Function.prototype,
            JK = U1 && Object.getOwnPropertyDescriptor,
            H1 = QK(bP, "name"),
            eW = H1 && function () {}.name === "something",
            tW = H1 && (!U1 || (U1 && JK(bP, "name").configurable)),
            nW = {EXISTS: H1, PROPER: eW, CONFIGURABLE: tW},
            rW = Dt,
            oW = Rn,
            V1 = z1,
            iW = rW(Function.toString);
        oW(V1.inspectSource) ||
        (V1.inspectSource = function (e) {
            return iW(e);
        });
        var yP = V1.inspectSource,
            aW = Mn,
            sW = Rn,
            wP = aW.WeakMap,
            lW = sW(wP) && /native code/.test(String(wP)),
            cW = R1,
            dW = aP,
            xP = cW("keys"),
            SP = function (e) {
                return xP[e] || (xP[e] = dW(e));
            },
            K1 = {},
            uW = lW,
            _P = Mn,
            hW = hs,
            pW = B1,
            W1 = da,
            Y1 = z1,
            fW = SP,
            mW = K1,
            kP = "Object already initialized",
            G1 = _P.TypeError,
            gW = _P.WeakMap,
            mm,
            Cu,
            gm,
            vW = function (e) {
                return gm(e) ? Cu(e) : mm(e, {});
            },
            bW = function (e) {
                return function (t) {
                    var n;
                    if (!hW(t) || (n = Cu(t)).type !== e)
                        throw new G1("Incompatible receiver, " + e + " required");
                    return n;
                };
            };
        if (uW || Y1.state) {
            var Eo = Y1.state || (Y1.state = new gW());
            (Eo.get = Eo.get),
                (Eo.has = Eo.has),
                (Eo.set = Eo.set),
                (mm = function (e, t) {
                    if (Eo.has(e)) throw new G1(kP);
                    return (t.facade = e), Eo.set(e, t), t;
                }),
                (Cu = function (e) {
                    return Eo.get(e) || {};
                }),
                (gm = function (e) {
                    return Eo.has(e);
                });
        } else {
            var Zl = fW("state");
            (mW[Zl] = !0),
                (mm = function (e, t) {
                    if (W1(e, Zl)) throw new G1(kP);
                    return (t.facade = e), pW(e, Zl, t), t;
                }),
                (Cu = function (e) {
                    return W1(e, Zl) ? e[Zl] : {};
                }),
                (gm = function (e) {
                    return W1(e, Zl);
                });
        }
        var CP = {set: mm, get: Cu, has: gm, enforce: vW, getterFor: bW},
            X1 = Dt,
            yW = zn,
            wW = Rn,
            vm = da,
            q1 = ca,
            xW = nW.CONFIGURABLE,
            SW = yP,
            EP = CP,
            _W = EP.enforce,
            kW = EP.get,
            PP = String,
            bm = Object.defineProperty,
            CW = X1("".slice),
            EW = X1("".replace),
            PW = X1([].join),
            IW =
                q1 &&
                !yW(function () {
                    return bm(function () {}, "length", {value: 8}).length !== 8;
                }),
            TW = String(String).split("String"),
            $W = (vP.exports = function (e, t, n) {
                CW(PP(t), 0, 7) === "Symbol(" &&
                (t = "[" + EW(PP(t), /^Symbol\(([^)]*)\).*$/, "$1") + "]"),
                n && n.getter && (t = "get " + t),
                n && n.setter && (t = "set " + t),
                (!vm(e, "name") || (xW && e.name !== t)) &&
                (q1
                    ? bm(e, "name", {value: t, configurable: !0})
                    : (e.name = t)),
                IW &&
                n &&
                vm(n, "arity") &&
                e.length !== n.arity &&
                bm(e, "length", {value: n.arity});
                try {
                    n && vm(n, "constructor") && n.constructor
                        ? q1 && bm(e, "prototype", {writable: !1})
                        : e.prototype && (e.prototype = void 0);
                } catch {}
                var r = _W(e);
                return (
                    vm(r, "source") ||
                    (r.source = PW(TW, typeof t == "string" ? t : "")),
                        e
                );
            });
        Function.prototype.toString = $W(function () {
            return (wW(this) && kW(this).source) || SW(this);
        }, "toString");
        var AW = vP.exports,
            MW = Rn,
            zW = ql,
            RW = AW,
            OW = M1,
            IP = function (e, t, n, r) {
                r || (r = {});
                var o = r.enumerable,
                    i = r.name !== void 0 ? r.name : t;
                if ((MW(n) && RW(n, i, r), r.global)) o ? (e[t] = n) : OW(t, n);
                else {
                    try {
                        r.unsafe ? e[t] && (o = !0) : delete e[t];
                    } catch {}
                    o
                        ? (e[t] = n)
                        : zW.f(e, t, {
                            value: n,
                            enumerable: !1,
                            configurable: !r.nonConfigurable,
                            writable: !r.nonWritable,
                        });
                }
                return e;
            },
            TP = {},
            DW = Math.ceil,
            LW = Math.floor,
            jW =
                Math.trunc ||
                function (t) {
                    var n = +t;
                    return (n > 0 ? LW : DW)(n);
                },
            NW = jW,
            fs = function (e) {
                var t = +e;
                return t !== t || t === 0 ? 0 : NW(t);
            },
            FW = fs,
            BW = Math.max,
            UW = Math.min,
            HW = function (e, t) {
                var n = FW(e);
                return n < 0 ? BW(n + t, 0) : UW(n, t);
            },
            VW = fs,
            KW = Math.min,
            $P = function (e) {
                var t = VW(e);
                return t > 0 ? KW(t, 9007199254740991) : 0;
            },
            WW = $P,
            Eu = function (e) {
                return WW(e.length);
            },
            YW = um,
            GW = HW,
            XW = Eu,
            AP = function (e) {
                return function (t, n, r) {
                    var o = YW(t),
                        i = XW(o);
                    if (i === 0) return !e && -1;
                    var a = GW(r, i),
                        s;
                    if (e && n !== n) {
                        for (; i > a; ) if (((s = o[a++]), s !== s)) return !0;
                    } else
                        for (; i > a; a++)
                            if ((e || a in o) && o[a] === n) return e || a || 0;
                    return !e && -1;
                };
            },
            qW = {includes: AP(!0), indexOf: AP(!1)},
            ZW = Dt,
            Z1 = da,
            QW = um,
            JW = qW.indexOf,
            eY = K1,
            MP = ZW([].push),
            zP = function (e, t) {
                var n = QW(e),
                    r = 0,
                    o = [],
                    i;
                for (i in n) !Z1(eY, i) && Z1(n, i) && MP(o, i);
                for (; t.length > r; )
                    Z1(n, (i = t[r++])) && (~JW(o, i) || MP(o, i));
                return o;
            },
            Q1 = [
                "constructor",
                "hasOwnProperty",
                "isPrototypeOf",
                "propertyIsEnumerable",
                "toLocaleString",
                "toString",
                "valueOf",
            ],
            tY = zP,
            nY = Q1,
            rY = nY.concat("length", "prototype");
        TP.f =
            Object.getOwnPropertyNames ||
            function (t) {
                return tY(t, rY);
            };
        var RP = {};
        RP.f = Object.getOwnPropertySymbols;
        var oY = hm,
            iY = Dt,
            aY = TP,
            sY = RP,
            lY = ps,
            cY = iY([].concat),
            dY =
                oY("Reflect", "ownKeys") ||
                function (t) {
                    var n = aY.f(lY(t)),
                        r = sY.f;
                    return r ? cY(n, r(t)) : n;
                },
            OP = da,
            uY = dY,
            hY = x1,
            pY = ql,
            fY = function (e, t, n) {
                for (var r = uY(t), o = pY.f, i = hY.f, a = 0; a < r.length; a++) {
                    var s = r[a];
                    !OP(e, s) && !(n && OP(n, s)) && o(e, s, i(t, s));
                }
            },
            mY = zn,
            gY = Rn,
            vY = /#|\.prototype\./,
            Pu = function (e, t) {
                var n = yY[bY(e)];
                return n === xY ? !0 : n === wY ? !1 : gY(t) ? mY(t) : !!t;
            },
            bY = (Pu.normalize = function (e) {
                return String(e).replace(vY, ".").toLowerCase();
            }),
            yY = (Pu.data = {}),
            wY = (Pu.NATIVE = "N"),
            xY = (Pu.POLYFILL = "P"),
            SY = Pu,
            ym = Mn,
            _Y = x1.f,
            kY = B1,
            CY = IP,
            EY = M1,
            PY = fY,
            IY = SY,
            Ql = function (e, t) {
                var n = e.target,
                    r = e.global,
                    o = e.stat,
                    i,
                    a,
                    s,
                    l,
                    c,
                    d;
                if (
                    (r
                        ? (a = ym)
                        : o
                            ? (a = ym[n] || EY(n, {}))
                            : (a = ym[n] && ym[n].prototype),
                        a)
                )
                    for (s in t) {
                        if (
                            ((c = t[s]),
                                e.dontCallGetSet
                                    ? ((d = _Y(a, s)), (l = d && d.value))
                                    : (l = a[s]),
                                (i = IY(r ? s : n + (o ? "." : "#") + s, e.forced)),
                            !i && l !== void 0)
                        ) {
                            if (typeof c == typeof l) continue;
                            PY(c, l);
                        }
                        (e.sham || (l && l.sham)) && kY(c, "sham", !0),
                            CY(a, s, c, e);
                    }
            },
            DP = {},
            TY = zP,
            $Y = Q1,
            AY =
                Object.keys ||
                function (t) {
                    return TY(t, $Y);
                },
            MY = ca,
            zY = mP,
            RY = ql,
            OY = ps,
            DY = um,
            LY = AY;
        DP.f =
            MY && !zY
                ? Object.defineProperties
                : function (t, n) {
                    OY(t);
                    for (
                        var r = DY(n), o = LY(n), i = o.length, a = 0, s;
                        i > a;

                    )
                        RY.f(t, (s = o[a++]), r[s]);
                    return t;
                };
        var jY = hm,
            NY = jY("document", "documentElement"),
            FY = ps,
            BY = DP,
            LP = Q1,
            UY = K1,
            HY = NY,
            VY = hP,
            KY = SP,
            jP = ">",
            NP = "<",
            J1 = "prototype",
            ew = "script",
            FP = KY("IE_PROTO"),
            tw = function () {},
            BP = function (e) {
                return NP + ew + jP + e + NP + "/" + ew + jP;
            },
            UP = function (e) {
                e.write(BP("")), e.close();
                var t = e.parentWindow.Object;
                return (e = null), t;
            },
            WY = function () {
                var e = VY("iframe"),
                    t = "java" + ew + ":",
                    n;
                return (
                    (e.style.display = "none"),
                        HY.appendChild(e),
                        (e.src = String(t)),
                        (n = e.contentWindow.document),
                        n.open(),
                        n.write(BP("document.F=Object")),
                        n.close(),
                        n.F
                );
            },
            wm,
            xm = function () {
                try {
                    wm = new ActiveXObject("htmlfile");
                } catch {}
                xm =
                    typeof document < "u"
                        ? document.domain && wm
                            ? UP(wm)
                            : WY()
                        : UP(wm);
                for (var e = LP.length; e--; ) delete xm[J1][LP[e]];
                return xm();
            };
        UY[FP] = !0;
        var HP =
                Object.create ||
                function (t, n) {
                    var r;
                    return (
                        t !== null
                            ? ((tw[J1] = FY(t)),
                                (r = new tw()),
                                (tw[J1] = null),
                                (r[FP] = t))
                            : (r = xm()),
                            n === void 0 ? r : BY.f(r, n)
                    );
                },
            YY = mi,
            GY = HP,
            XY = ql.f,
            nw = YY("unscopables"),
            rw = Array.prototype;
        rw[nw] === void 0 && XY(rw, nw, {configurable: !0, value: GY(null)});
        var ow = function (e) {
                rw[nw][e] = !0;
            },
            qY = Ql,
            ZY = ku,
            QY = Eu,
            JY = fs,
            eG = ow;
        qY(
            {target: "Array", proto: !0},
            {
                at: function (t) {
                    var n = ZY(this),
                        r = QY(n),
                        o = JY(t),
                        i = o >= 0 ? o : r + o;
                    return i < 0 || i >= r ? void 0 : n[i];
                },
            }
        ),
            eG("at");
        var tG = Mn,
            nG = Dt,
            Iu = function (e, t) {
                return nG(tG[e].prototype[t]);
            },
            rG = Iu;
        rG("Array", "at");
        var oG = Yl,
            VP =
                Array.isArray ||
                function (t) {
                    return oG(t) === "Array";
                },
            iG = TypeError,
            aG = 9007199254740991,
            sG = function (e) {
                if (e > aG) throw iG("Maximum allowed index exceeded");
                return e;
            },
            lG = Yl,
            cG = Dt,
            dG = function (e) {
                if (lG(e) === "Function") return cG(e);
            },
            KP = dG,
            uG = P1,
            hG = lm,
            pG = KP(KP.bind),
            fG = function (e, t) {
                return (
                    uG(e),
                        t === void 0
                            ? e
                            : hG
                                ? pG(e, t)
                                : function () {
                                    return e.apply(t, arguments);
                                }
                );
            },
            mG = VP,
            gG = Eu,
            vG = sG,
            bG = fG,
            WP = function (e, t, n, r, o, i, a, s) {
                for (var l = o, c = 0, d = a ? bG(a, s) : !1, u, h; c < r; )
                    c in n &&
                    ((u = d ? d(n[c], c, t) : n[c]),
                        i > 0 && mG(u)
                            ? ((h = gG(u)), (l = WP(e, t, u, h, l, i - 1) - 1))
                            : (vG(l + 1), (e[l] = u)),
                        l++),
                        c++;
                return l;
            },
            YP = WP,
            yG = mi,
            wG = yG("toStringTag"),
            GP = {};
        GP[wG] = "z";
        var xG = String(GP) === "[object z]",
            SG = xG,
            _G = Rn,
            Sm = Yl,
            kG = mi,
            CG = kG("toStringTag"),
            EG = Object,
            PG =
                Sm(
                    (function () {
                        return arguments;
                    })()
                ) === "Arguments",
            IG = function (e, t) {
                try {
                    return e[t];
                } catch {}
            },
            XP = SG
                ? Sm
                : function (e) {
                    var t, n, r;
                    return e === void 0
                        ? "Undefined"
                        : e === null
                            ? "Null"
                            : typeof (n = IG((t = EG(e)), CG)) == "string"
                                ? n
                                : PG
                                    ? Sm(t)
                                    : (r = Sm(t)) === "Object" && _G(t.callee)
                                        ? "Arguments"
                                        : r;
                },
            TG = Dt,
            $G = zn,
            qP = Rn,
            AG = XP,
            MG = hm,
            zG = yP,
            ZP = function () {},
            QP = MG("Reflect", "construct"),
            iw = /^\s*(?:class|function)\b/,
            RG = TG(iw.exec),
            OG = !iw.test(ZP),
            Tu = function (t) {
                if (!qP(t)) return !1;
                try {
                    return QP(ZP, [], t), !0;
                } catch {
                    return !1;
                }
            },
            JP = function (t) {
                if (!qP(t)) return !1;
                switch (AG(t)) {
                    case "AsyncFunction":
                    case "GeneratorFunction":
                    case "AsyncGeneratorFunction":
                        return !1;
                }
                try {
                    return OG || !!RG(iw, zG(t));
                } catch {
                    return !0;
                }
            };
        JP.sham = !0;
        var DG =
                !QP ||
                $G(function () {
                    var e;
                    return (
                        Tu(Tu.call) ||
                        !Tu(Object) ||
                        !Tu(function () {
                            e = !0;
                        }) ||
                        e
                    );
                })
                    ? JP
                    : Tu,
            e6 = VP,
            LG = DG,
            jG = hs,
            NG = mi,
            FG = NG("species"),
            t6 = Array,
            BG = function (e) {
                var t;
                return (
                    e6(e) &&
                    ((t = e.constructor),
                        LG(t) && (t === t6 || e6(t.prototype))
                            ? (t = void 0)
                            : jG(t) && ((t = t[FG]), t === null && (t = void 0))),
                        t === void 0 ? t6 : t
                );
            },
            UG = BG,
            n6 = function (e, t) {
                return new (UG(e))(t === 0 ? 0 : t);
            },
            HG = Ql,
            VG = YP,
            KG = ku,
            WG = Eu,
            YG = fs,
            GG = n6;
        HG(
            {target: "Array", proto: !0},
            {
                flat: function () {
                    var t = arguments.length ? arguments[0] : void 0,
                        n = KG(this),
                        r = WG(n),
                        o = GG(n, 0);
                    return (
                        (o.length = VG(o, n, n, r, 0, t === void 0 ? 1 : YG(t))), o
                    );
                },
            }
        );
        var XG = ow;
        XG("flat");
        var qG = Iu;
        qG("Array", "flat");
        var ZG = Ql,
            QG = YP,
            JG = P1,
            eX = ku,
            tX = Eu,
            nX = n6;
        ZG(
            {target: "Array", proto: !0},
            {
                flatMap: function (t) {
                    var n = eX(this),
                        r = tX(n),
                        o;
                    return (
                        JG(t),
                            (o = nX(n, 0)),
                            (o.length = QG(
                                o,
                                n,
                                n,
                                r,
                                0,
                                1,
                                t,
                                arguments.length > 1 ? arguments[1] : void 0
                            )),
                            o
                    );
                },
            }
        );
        var rX = ow;
        rX("flatMap");
        var oX = Iu;
        oX("Array", "flatMap");
        var iX = XP,
            aX = String,
            $u = function (e) {
                if (iX(e) === "Symbol")
                    throw new TypeError(
                        "Cannot convert a Symbol value to a string"
                    );
                return aX(e);
            },
            sX = Ql,
            lX = Dt,
            cX = Gl,
            dX = fs,
            uX = $u,
            hX = zn,
            pX = lX("".charAt),
            fX = hX(function () {
                return "𠮷".at(-2) !== "\uD842";
            });
        sX(
            {target: "String", proto: !0, forced: fX},
            {
                at: function (t) {
                    var n = uX(cX(this)),
                        r = n.length,
                        o = dX(t),
                        i = o >= 0 ? o : r + o;
                    return i < 0 || i >= r ? void 0 : pX(n, i);
                },
            }
        );
        var mX = Iu;
        mX("String", "at");
        var gX = ps,
            r6 = function () {
                var e = gX(this),
                    t = "";
                return (
                    e.hasIndices && (t += "d"),
                    e.global && (t += "g"),
                    e.ignoreCase && (t += "i"),
                    e.multiline && (t += "m"),
                    e.dotAll && (t += "s"),
                    e.unicode && (t += "u"),
                    e.unicodeSets && (t += "v"),
                    e.sticky && (t += "y"),
                        t
                );
            },
            aw = zn,
            vX = Mn,
            sw = vX.RegExp,
            lw = aw(function () {
                var e = sw("a", "y");
                return (e.lastIndex = 2), e.exec("abcd") !== null;
            }),
            bX =
                lw ||
                aw(function () {
                    return !sw("a", "y").sticky;
                }),
            yX =
                lw ||
                aw(function () {
                    var e = sw("^r", "gy");
                    return (e.lastIndex = 2), e.exec("str") !== null;
                }),
            wX = {BROKEN_CARET: yX, MISSED_STICKY: bX, UNSUPPORTED_Y: lw},
            xX = zn,
            SX = Mn,
            _X = SX.RegExp,
            kX = xX(function () {
                var e = _X(".", "s");
                return !(
                    e.dotAll &&
                    e.test(`
`) &&
                    e.flags === "s"
                );
            }),
            CX = zn,
            EX = Mn,
            PX = EX.RegExp,
            IX = CX(function () {
                var e = PX("(?<a>b)", "g");
                return (
                    e.exec("b").groups.a !== "b" || "b".replace(e, "$<a>c") !== "bc"
                );
            }),
            Jl = fi,
            _m = Dt,
            TX = $u,
            $X = r6,
            AX = wX,
            MX = R1,
            zX = HP,
            RX = CP.get,
            OX = kX,
            DX = IX,
            LX = MX("native-string-replace", String.prototype.replace),
            km = RegExp.prototype.exec,
            cw = km,
            jX = _m("".charAt),
            NX = _m("".indexOf),
            FX = _m("".replace),
            dw = _m("".slice),
            uw = (function () {
                var e = /a/,
                    t = /b*/g;
                return (
                    Jl(km, e, "a"),
                        Jl(km, t, "a"),
                    e.lastIndex !== 0 || t.lastIndex !== 0
                );
            })(),
            o6 = AX.BROKEN_CARET,
            hw = /()??/.exec("")[1] !== void 0,
            BX = uw || hw || o6 || OX || DX;
        BX &&
        (cw = function (t) {
            var n = this,
                r = RX(n),
                o = TX(t),
                i = r.raw,
                a,
                s,
                l,
                c,
                d,
                u,
                h;
            if (i)
                return (
                    (i.lastIndex = n.lastIndex),
                        (a = Jl(cw, i, o)),
                        (n.lastIndex = i.lastIndex),
                        a
                );
            var p = r.groups,
                m = o6 && n.sticky,
                f = Jl($X, n),
                g = n.source,
                b = 0,
                x = o;
            if (
                (m &&
                ((f = FX(f, "y", "")),
                NX(f, "g") === -1 && (f += "g"),
                    (x = dw(o, n.lastIndex)),
                n.lastIndex > 0 &&
                (!n.multiline ||
                    (n.multiline &&
                        jX(o, n.lastIndex - 1) !==
                        `
`)) &&
                ((g = "(?: " + g + ")"), (x = " " + x), b++),
                    (s = new RegExp("^(?:" + g + ")", f))),
                hw && (s = new RegExp("^" + g + "$(?!\\s)", f)),
                uw && (l = n.lastIndex),
                    (c = Jl(km, m ? s : n, x)),
                    m
                        ? c
                            ? ((c.input = dw(c.input, b)),
                                (c[0] = dw(c[0], b)),
                                (c.index = n.lastIndex),
                                (n.lastIndex += c[0].length))
                            : (n.lastIndex = 0)
                        : uw &&
                        c &&
                        (n.lastIndex = n.global ? c.index + c[0].length : l),
                hw &&
                c &&
                c.length > 1 &&
                Jl(LX, c[0], s, function () {
                    for (d = 1; d < arguments.length - 2; d++)
                        arguments[d] === void 0 && (c[d] = void 0);
                }),
                c && p)
            )
                for (c.groups = u = zX(null), d = 0; d < p.length; d++)
                    (h = p[d]), (u[h[0]] = c[h[1]]);
            return c;
        });
        var pw = cw,
            UX = Ql,
            i6 = pw;
        UX({target: "RegExp", proto: !0, forced: /./.exec !== i6}, {exec: i6});
        var HX = lm,
            a6 = Function.prototype,
            s6 = a6.apply,
            l6 = a6.call,
            VX =
                (typeof Reflect == "object" && Reflect.apply) ||
                (HX
                    ? l6.bind(s6)
                    : function () {
                        return l6.apply(s6, arguments);
                    }),
            c6 = fi,
            d6 = IP,
            KX = pw,
            u6 = zn,
            h6 = mi,
            WX = B1,
            YX = h6("species"),
            fw = RegExp.prototype,
            GX = function (e, t, n, r) {
                var o = h6(e),
                    i = !u6(function () {
                        var c = {};
                        return (
                            (c[o] = function () {
                                return 7;
                            }),
                            ""[e](c) !== 7
                        );
                    }),
                    a =
                        i &&
                        !u6(function () {
                            var c = !1,
                                d = /a/;
                            return (
                                e === "split" &&
                                ((d = {}),
                                    (d.constructor = {}),
                                    (d.constructor[YX] = function () {
                                        return d;
                                    }),
                                    (d.flags = ""),
                                    (d[o] = /./[o])),
                                    (d.exec = function () {
                                        return (c = !0), null;
                                    }),
                                    d[o](""),
                                    !c
                            );
                        });
                if (!i || !a || n) {
                    var s = /./[o],
                        l = t(o, ""[e], function (c, d, u, h, p) {
                            var m = d.exec;
                            return m === KX || m === fw.exec
                                ? i && !p
                                    ? {done: !0, value: c6(s, d, u, h)}
                                    : {done: !0, value: c6(c, u, d, h)}
                                : {done: !1};
                        });
                    d6(String.prototype, e, l[0]), d6(fw, o, l[1]);
                }
                r && WX(fw[o], "sham", !0);
            },
            mw = Dt,
            XX = fs,
            qX = $u,
            ZX = Gl,
            QX = mw("".charAt),
            p6 = mw("".charCodeAt),
            JX = mw("".slice),
            f6 = function (e) {
                return function (t, n) {
                    var r = qX(ZX(t)),
                        o = XX(n),
                        i = r.length,
                        a,
                        s;
                    return o < 0 || o >= i
                        ? e
                            ? ""
                            : void 0
                        : ((a = p6(r, o)),
                            a < 55296 ||
                            a > 56319 ||
                            o + 1 === i ||
                            (s = p6(r, o + 1)) < 56320 ||
                            s > 57343
                                ? e
                                    ? QX(r, o)
                                    : a
                                : e
                                    ? JX(r, o, o + 2)
                                    : ((a - 55296) << 10) + (s - 56320) + 65536);
                };
            },
            eq = {codeAt: f6(!1), charAt: f6(!0)},
            tq = eq.charAt,
            nq = function (e, t, n) {
                return t + (n ? tq(e, t).length : 1);
            },
            gw = Dt,
            rq = ku,
            oq = Math.floor,
            vw = gw("".charAt),
            iq = gw("".replace),
            bw = gw("".slice),
            aq = /\$([$&'`]|\d{1,2}|<[^>]*>)/g,
            sq = /\$([$&'`]|\d{1,2})/g,
            m6 = function (e, t, n, r, o, i) {
                var a = n + e.length,
                    s = r.length,
                    l = sq;
                return (
                    o !== void 0 && ((o = rq(o)), (l = aq)),
                        iq(i, l, function (c, d) {
                            var u;
                            switch (vw(d, 0)) {
                                case "$":
                                    return "$";
                                case "&":
                                    return e;
                                case "`":
                                    return bw(t, 0, n);
                                case "'":
                                    return bw(t, a);
                                case "<":
                                    u = o[bw(d, 1, -1)];
                                    break;
                                default:
                                    var h = +d;
                                    if (h === 0) return c;
                                    if (h > s) {
                                        var p = oq(h / 10);
                                        return p === 0
                                            ? c
                                            : p <= s
                                                ? r[p - 1] === void 0
                                                    ? vw(d, 1)
                                                    : r[p - 1] + vw(d, 1)
                                                : c;
                                    }
                                    u = r[h - 1];
                            }
                            return u === void 0 ? "" : u;
                        })
                );
            },
            g6 = fi,
            lq = ps,
            cq = Rn,
            dq = Yl,
            uq = pw,
            hq = TypeError,
            pq = function (e, t) {
                var n = e.exec;
                if (cq(n)) {
                    var r = g6(n, e, t);
                    return r !== null && lq(r), r;
                }
                if (dq(e) === "RegExp") return g6(uq, e, t);
                throw new hq("RegExp#exec called on incompatible receiver");
            },
            fq = VX,
            v6 = fi,
            Cm = Dt,
            mq = GX,
            gq = zn,
            vq = ps,
            bq = Rn,
            yq = dm,
            wq = fs,
            xq = $P,
            ec = $u,
            Sq = Gl,
            _q = nq,
            kq = I1,
            Cq = m6,
            Eq = pq,
            Pq = mi,
            yw = Pq("replace"),
            Iq = Math.max,
            Tq = Math.min,
            $q = Cm([].concat),
            ww = Cm([].push),
            b6 = Cm("".indexOf),
            y6 = Cm("".slice),
            Aq = function (e) {
                return e === void 0 ? e : String(e);
            },
            Mq = (function () {
                return "a".replace(/./, "$0") === "$0";
            })(),
            w6 = (function () {
                return /./[yw] ? /./[yw]("a", "$0") === "" : !1;
            })(),
            zq = !gq(function () {
                var e = /./;
                return (
                    (e.exec = function () {
                        var t = [];
                        return (t.groups = {a: "7"}), t;
                    }),
                    "".replace(e, "$<a>") !== "7"
                );
            });
        mq(
            "replace",
            function (e, t, n) {
                var r = w6 ? "$" : "$0";
                return [
                    function (i, a) {
                        var s = Sq(this),
                            l = yq(i) ? void 0 : kq(i, yw);
                        return l ? v6(l, i, s, a) : v6(t, ec(s), i, a);
                    },
                    function (o, i) {
                        var a = vq(this),
                            s = ec(o);
                        if (
                            typeof i == "string" &&
                            b6(i, r) === -1 &&
                            b6(i, "$<") === -1
                        ) {
                            var l = n(t, a, s, i);
                            if (l.done) return l.value;
                        }
                        var c = bq(i);
                        c || (i = ec(i));
                        var d = a.global,
                            u;
                        d && ((u = a.unicode), (a.lastIndex = 0));
                        for (
                            var h = [], p;
                            (p = Eq(a, s)), !(p === null || (ww(h, p), !d));

                        ) {
                            var m = ec(p[0]);
                            m === "" && (a.lastIndex = _q(s, xq(a.lastIndex), u));
                        }
                        for (var f = "", g = 0, b = 0; b < h.length; b++) {
                            p = h[b];
                            for (
                                var x = ec(p[0]),
                                    S = Iq(Tq(wq(p.index), s.length), 0),
                                    _ = [],
                                    k,
                                    C = 1;
                                C < p.length;
                                C++
                            )
                                ww(_, Aq(p[C]));
                            var P = p.groups;
                            if (c) {
                                var I = $q([x], _, S, s);
                                P !== void 0 && ww(I, P),
                                    (k = ec(fq(i, void 0, I)));
                            } else k = Cq(x, s, S, _, P, i);
                            S >= g && ((f += y6(s, g, S) + k), (g = S + x.length));
                        }
                        return f + y6(s, g);
                    },
                ];
            },
            !zq || !Mq || w6
        );
        var Rq = hs,
            Oq = Yl,
            Dq = mi,
            Lq = Dq("match"),
            jq = function (e) {
                var t;
                return Rq(e) && ((t = e[Lq]) !== void 0 ? !!t : Oq(e) === "RegExp");
            },
            Nq = fi,
            Fq = da,
            Bq = HE,
            Uq = r6,
            x6 = RegExp.prototype,
            Hq = function (e) {
                var t = e.flags;
                return t === void 0 &&
                !("flags" in x6) &&
                !Fq(e, "flags") &&
                Bq(x6, e)
                    ? Nq(Uq, e)
                    : t;
            },
            Vq = Ql,
            Kq = fi,
            xw = Dt,
            S6 = Gl,
            Wq = Rn,
            Yq = dm,
            Gq = jq,
            Au = $u,
            Xq = I1,
            qq = Hq,
            Zq = m6,
            Qq = mi,
            Jq = Qq("replace"),
            eZ = TypeError,
            Sw = xw("".indexOf);
        xw("".replace);
        var _6 = xw("".slice),
            tZ = Math.max;
        Vq(
            {target: "String", proto: !0},
            {
                replaceAll: function (t, n) {
                    var r = S6(this),
                        o,
                        i,
                        a,
                        s,
                        l,
                        c,
                        d,
                        u,
                        h,
                        p,
                        m = 0,
                        f = "";
                    if (!Yq(t)) {
                        if (((o = Gq(t)), o && ((i = Au(S6(qq(t)))), !~Sw(i, "g"))))
                            throw new eZ(
                                "`.replaceAll` does not allow non-global regexes"
                            );
                        if (((a = Xq(t, Jq)), a)) return Kq(a, t, r, n);
                    }
                    for (
                        s = Au(r),
                            l = Au(t),
                            c = Wq(n),
                        c || (n = Au(n)),
                            d = l.length,
                            u = tZ(1, d),
                            h = Sw(s, l);
                        h !== -1;

                    )
                        (p = c ? Au(n(l, h, s)) : Zq(l, s, h, [], void 0, n)),
                            (f += _6(s, m, h) + p),
                            (m = h + d),
                            (h = h + u > s.length ? -1 : Sw(s, l, h + u));
                    return m < s.length && (f += _6(s, m)), f;
                },
            }
        );
        var nZ = Iu;
        nZ("String", "replaceAll");
        const rZ = ({children: e}) => {
                const t = W();
                return X(
                    "shouldDisplayHandles",
                    () => t.isInAny("select.idle", "select.pointing_handle"),
                    [t]
                )
                    ? v.jsx("svg", {
                        className: "tl-user-handles tl-overlays__item",
                        children: e,
                    })
                    : null;
            },
            oZ = ({shapeId: e}) => {
                const t = W();
                return X(
                    "show hovered",
                    () =>
                        t.isIn("select.editing_shape")
                            ? t.getHoveredShapeId() !== t.getEditingShapeId()
                            : t.isInAny("select.idle"),
                    [t]
                )
                    ? v.jsx(ou, {className: "tl-user-indicator__hovered", id: e})
                    : null;
            },
            {PI: iZ} = Math,
            tc = iZ + 1e-4;
        function k6(e, t = {}) {
            const {size: n = 16, smoothing: r = 0.5} = t;
            if (e.length === 0 || n <= 0) return {left: [], right: []};
            const o = e[0],
                i = e[e.length - 1],
                a = i.runningLength,
                s = Math.pow(n * r, 2),
                l = [],
                c = [];
            let d = e[0].vector,
                u = e[0].point,
                h = u,
                p = u,
                m = h,
                f = !1,
                g;
            for (let b = 0; b < e.length; b++) {
                g = e[b];
                const {point: x, vector: S} = e[b],
                    _ = g.vector.dpr(d),
                    k = (b < e.length - 1 ? e[b + 1] : e[b]).vector,
                    C = b < e.length - 1 ? k.dpr(g.vector) : 1,
                    P = _ < 0 && !f,
                    I = C !== null && C < 0.2;
                if (P || I) {
                    if (C > -0.62 && a - g.runningLength > g.radius) {
                        const T = d.clone().mul(g.radius);
                        d.clone().cpr(k) < 0
                            ? ((p = E.Add(x, T)), (m = E.Sub(x, T)))
                            : ((p = E.Sub(x, T)), (m = E.Add(x, T))),
                            l.push(p),
                            c.push(m);
                    } else {
                        const T = d.clone().mul(g.radius).per(),
                            R = E.Sub(g.input, T);
                        for (let D = 1 / 13, j = 0; j < 1; j += D)
                            (p = E.RotWith(R, g.input, tc * j)),
                                l.push(p),
                                (m = E.RotWith(R, g.input, tc + tc * -j)),
                                c.push(m);
                    }
                    (u = p), (h = m), I && (f = !0);
                    continue;
                }
                if (((f = !1), g === o || g === i)) {
                    const T = E.Per(S).mul(g.radius);
                    l.push(E.Sub(x, T)), c.push(E.Add(x, T));
                    continue;
                }
                const $ = E.Lrp(k, S, C).per().mul(g.radius);
                (p = E.Sub(x, $)),
                (b <= 1 || E.Dist2(u, p) > s) && (l.push(p), (u = p)),
                    (m = E.Add(x, $)),
                (b <= 1 || E.Dist2(h, m) > s) && (c.push(m), (h = m)),
                    (d = S);
            }
            return {left: l, right: c};
        }
        function Mu(e, t = {}) {
            const {size: n = 16, start: r = {}, end: o = {}, last: i = !1} = t,
                {cap: a = !0} = r,
                {cap: s = !0} = o;
            if (e.length === 0 || n <= 0) return [];
            const l = e[0],
                c = e[e.length - 1],
                d = c.runningLength,
                u = r.taper === !1 ? 0 : r.taper === !0 ? Math.max(n, d) : r.taper,
                h = o.taper === !1 ? 0 : o.taper === !0 ? Math.max(n, d) : o.taper,
                {left: p, right: m} = k6(e, t),
                f = l.point,
                g = e.length > 1 ? e[e.length - 1].point : E.AddXY(l.point, 1, 1);
            if (e.length === 1 && (!(u || h) || i)) {
                const _ = E.Add(f, E.Sub(f, g).uni().per().mul(-l.radius)),
                    k = [];
                for (let C = 1 / 13, P = C; P <= 1; P += C)
                    k.push(E.RotWith(_, f, tc * 2 * P));
                return k;
            }
            const b = [];
            if (!(u || (h && e.length === 1)))
                if (a)
                    for (let _ = 1 / 8, k = _; k <= 1; k += _) {
                        const C = E.RotWith(m[0], f, tc * k);
                        b.push(C);
                    }
                else {
                    const _ = E.Sub(p[0], m[0]),
                        k = E.Mul(_, 0.5),
                        C = E.Mul(_, 0.51);
                    b.push(E.Sub(f, k), E.Sub(f, C), E.Add(f, C), E.Add(f, k));
                }
            const x = [],
                S = c.vector.clone().per().neg();
            if (h || (u && e.length === 1)) x.push(g);
            else if (s) {
                const _ = E.Add(g, E.Mul(S, c.radius));
                for (let k = 1 / 29, C = k; C < 1; C += k)
                    x.push(E.RotWith(_, g, tc * 3 * C));
            } else
                x.push(
                    E.Add(g, E.Mul(S, c.radius)),
                    E.Add(g, E.Mul(S, c.radius * 0.99)),
                    E.Sub(g, E.Mul(S, c.radius * 0.99)),
                    E.Sub(g, E.Mul(S, c.radius))
                );
            return p.concat(x, m.reverse(), b);
        }
        const aZ = 0.025,
            sZ = 0.01;
        function Jr(e, t = {}) {
            var g;
            const {streamline: n = 0.5, size: r = 16, simulatePressure: o = !1} = t;
            if (e.length === 0) return [];
            const i = 0.15 + (1 - n) * 0.85;
            let a = e.map(E.From),
                s = 0;
            if (!o) {
                let b = a[0];
                for (; b && !(b.z >= aZ); ) a.shift(), (b = a[0]);
            }
            if (!o) {
                let b = a[a.length - 1];
                for (; b && !(b.z >= sZ); ) a.pop(), (b = a[a.length - 1]);
            }
            if (a.length === 0)
                return [
                    {
                        point: E.From(e[0]),
                        input: E.From(e[0]),
                        pressure: o ? 0.5 : 0.15,
                        vector: new E(1, 1),
                        distance: 0,
                        runningLength: 0,
                        radius: 1,
                    },
                ];
            let l = a[1];
            for (; l && !(E.Dist(l, a[0]) > r / 3); )
                (a[0].z = Math.max(a[0].z, l.z)), a.splice(1, 1), (l = a[1]);
            const c = a.pop();
            for (l = a[a.length - 1]; l && !(E.Dist(l, c) > r / 3); )
                a.pop(), (l = a[a.length - 1]), s++;
            a.push(c);
            const d =
                t.last ||
                !t.simulatePressure ||
                (a.length > 1 && E.Dist(a[a.length - 1], a[a.length - 2]) < r) ||
                s > 0;
            if (a.length === 2 && t.simulatePressure) {
                const b = a[1];
                a = a.slice(0, -1);
                for (let x = 1; x < 5; x++) {
                    const S = E.Lrp(a[0], b, x / 4);
                    (S.z = ((a[0].z + (b.z - a[0].z)) * x) / 4), a.push(S);
                }
            }
            const u = [
                {
                    point: a[0],
                    input: a[0],
                    pressure: o ? 0.5 : a[0].z,
                    vector: new E(1, 1),
                    distance: 0,
                    runningLength: 0,
                    radius: 1,
                },
            ];
            let h = 0,
                p = u[0],
                m,
                f;
            d && n > 0 && a.push(a[a.length - 1].clone());
            for (let b = 1, x = a.length; b < x; b++)
                (m =
                    !i || (t.last && b === x - 1)
                        ? a[b].clone()
                        : a[b].clone().lrp(p.point, 1 - i)),
                !p.point.equals(m) &&
                ((f = E.Dist(m, p.point)),
                    (h += f),
                !(b < 4 && h < r) &&
                ((p = {
                    input: a[b],
                    point: m,
                    pressure: o ? 0.5 : a[b].z,
                    vector: E.Sub(p.point, m).uni(),
                    distance: f,
                    runningLength: h,
                    radius: 1,
                }),
                    u.push(p)));
            if (
                ((g = u[1]) != null &&
                g.vector &&
                (u[0].vector = u[1].vector.clone()),
                h < 1)
            ) {
                const b = Math.max(0.5, ...u.map((x) => x.pressure));
                u.forEach((x) => (x.pressure = b));
            }
            return u;
        }
        const {min: ua} = Math,
            _w = 0.275;
        function nc(e, t) {
            const {
                    size: n = 16,
                    thinning: r = 0.5,
                    simulatePressure: o = !0,
                    easing: i = (g) => g,
                    start: a = {},
                    end: s = {},
                } = t,
                {easing: l = un.easeOutQuad} = a,
                {easing: c = un.easeOutCubic} = s,
                d = e[e.length - 1].runningLength;
            let u,
                h = e[0].pressure,
                p;
            if (!o && d < n) {
                const g = e.reduce((b, x) => Math.max(b, x.pressure), 0.5);
                return (
                    e.forEach((b) => {
                        (b.pressure = g),
                            (b.radius = n * i(0.5 - r * (0.5 - b.pressure)));
                    }),
                        e
                );
            } else {
                let g;
                for (
                    let b = 0, x = e.length;
                    b < x && ((p = e[b]), !(p.runningLength > n * 5));
                    b++
                ) {
                    const S = ua(1, p.distance / n);
                    if (o) {
                        const _ = ua(1, 1 - S);
                        g = ua(1, h + (_ - h) * (S * _w));
                    } else g = ua(1, h + (p.pressure - h) * 0.5);
                    h = h + (g - h) * 0.5;
                }
                for (let b = 0; b < e.length; b++) {
                    if (((p = e[b]), r)) {
                        let {pressure: x} = p;
                        const S = ua(1, p.distance / n);
                        if (o) {
                            const _ = ua(1, 1 - S);
                            x = ua(1, h + (_ - h) * (S * _w));
                        } else x = ua(1, h + (x - h) * (S * _w));
                        (p.radius = n * i(0.5 - r * (0.5 - x))), (h = x);
                    } else p.radius = n / 2;
                    u === void 0 && (u = p.radius);
                }
            }
            const m =
                    a.taper === !1 ? 0 : a.taper === !0 ? Math.max(n, d) : a.taper,
                f = s.taper === !1 ? 0 : s.taper === !0 ? Math.max(n, d) : s.taper;
            if (m || f)
                for (let g = 0; g < e.length; g++) {
                    p = e[g];
                    const {runningLength: b} = p,
                        x = b < m ? l(b / m) : 1,
                        S = d - b < f ? c((d - b) / f) : 1;
                    p.radius = Math.max(0.01, p.radius * Math.min(x, S));
                }
            return e;
        }
        function lZ(e, t = {}) {
            return Mu(nc(Jr(e, t), t), t);
        }
        const C6 = ({scribble: e, zoom: t, color: n, opacity: r, className: o}) => {
                if (!e.points.length) return null;
                const i = lZ(e.points, {
                    size: e.size / t,
                    start: {taper: e.taper, easing: un.linear},
                    last: e.state === "stopping",
                    simulatePressure: !1,
                    streamline: 0.32,
                });
                let a;
                if (i.length < 4) {
                    const s = e.size / t / 2,
                        {x: l, y: c} = e.points[e.points.length - 1];
                    a = `M ${l - s},${c} a ${s},${s} 0 1,0 ${
                        s * 2
                    },0 a ${s},${s} 0 1,0 ${-s * 2},0`;
                } else a = uu(i);
                return v.jsx("svg", {
                    className: o && me("tl-overlays__item", o),
                    children: v.jsx("path", {
                        className: "tl-scribble",
                        d: a,
                        fill: n ?? `var(--color-${e.color})`,
                        opacity: r ?? e.opacity,
                    }),
                });
            },
            cZ = ({bounds: e, rotation: t}) => {
                const n = W();
                return X(
                    "should display",
                    () =>
                        n.isInAny(
                            "select.idle",
                            "select.brushing",
                            "select.scribble_brushing",
                            "select.pointing_shape",
                            "select.pointing_selection",
                            "text.resizing"
                        ),
                    [n]
                )
                    ? v.jsx(ZC, {bounds: e, rotation: t})
                    : null;
            };
        function Pr() {
            const e = W();
            return X("isReadonlyMode", () => e.getInstanceState().isReadonly, [e]);
        }
        function dZ({size: e, width: t, height: n, hideAlternateHandles: r}) {
            const o = M(e / 3),
                i = o / 2;
            return v.jsxs("svg", {
                className: "tl-overlays__item",
                children: [
                    v.jsx("polyline", {
                        className: "tl-corner-crop-handle",
                        points: `
						${M(0 - i)},${M(e)} 
						${M(0 - i)},${M(0 - i)} 
						${M(e)},${M(0 - i)}`,
                        strokeWidth: o,
                        "data-testid": "selection.crop.top_left",
                        "aria-label": "top_left handle",
                    }),
                    v.jsx("line", {
                        className: me("tl-corner-crop-edge-handle", {
                            "tl-hidden": r,
                        }),
                        x1: M(t / 2 - e),
                        y1: M(0 - i),
                        x2: M(t / 2 + e),
                        y2: M(0 - i),
                        strokeWidth: o,
                        "data-testid": "selection.crop.top",
                        "aria-label": "top handle",
                    }),
                    v.jsx("polyline", {
                        className: me("tl-corner-crop-handle", {"tl-hidden": r}),
                        points: `
						${M(t - e)},${M(0 - i)} 
						${M(t + i)},${M(0 - i)} 
						${M(t + i)},${M(e)}`,
                        strokeWidth: o,
                        "data-testid": "selection.crop.top_right",
                        "aria-label": "top_right handle",
                    }),
                    v.jsx("line", {
                        className: me("tl-corner-crop-edge-handle", {
                            "tl-hidden": r,
                        }),
                        x1: M(t + i),
                        y1: M(n / 2 - e),
                        x2: M(t + i),
                        y2: M(n / 2 + e),
                        strokeWidth: o,
                        "data-testid": "selection.crop.right",
                        "aria-label": "right handle",
                    }),
                    v.jsx("polyline", {
                        className: "tl-corner-crop-handle",
                        points: `
						${M(t + i)},${M(n - e)} 
						${M(t + i)},${M(n + i)}
						${M(t - e)},${M(n + i)}`,
                        strokeWidth: o,
                        "data-testid": "selection.crop.bottom_right",
                        "aria-label": "bottom_right handle",
                    }),
                    v.jsx("line", {
                        className: me("tl-corner-crop-edge-handle", {
                            "tl-hidden": r,
                        }),
                        x1: M(t / 2 - e),
                        y1: M(n + i),
                        x2: M(t / 2 + e),
                        y2: M(n + i),
                        strokeWidth: o,
                        "data-testid": "selection.crop.bottom",
                        "aria-label": "bottom handle",
                    }),
                    v.jsx("polyline", {
                        className: me("tl-corner-crop-handle", {"tl-hidden": r}),
                        points: `
						${M(0 + e)},${M(n + i)} 
						${M(0 - i)},${M(n + i)}
						${M(0 - i)},${M(n - e)}`,
                        strokeWidth: o,
                        "data-testid": "selection.crop.bottom_left",
                        "aria-label": "bottom_left handle",
                    }),
                    v.jsx("line", {
                        className: me("tl-corner-crop-edge-handle", {
                            "tl-hidden": r,
                        }),
                        x1: M(0 - i),
                        y1: M(n / 2 - e),
                        x2: M(0 - i),
                        y2: M(n / 2 + e),
                        strokeWidth: o,
                        "data-testid": "selection.crop.left",
                        "aria-label": "left handle",
                    }),
                ],
            });
        }
        const uZ = ze(function ({bounds: t, rotation: n}) {
                const r = W(),
                    o = y.useRef(null),
                    i = Pr(),
                    a = Co("top"),
                    s = Co("right"),
                    l = Co("bottom"),
                    c = Co("left"),
                    d = Co("top_left"),
                    u = Co("top_right"),
                    h = Co("bottom_right"),
                    p = Co("bottom_left"),
                    m =
                        !r.getIsMenuOpen() &&
                        r.getInstanceState().cursor.type === "default",
                    f = r.getInstanceState().isCoarsePointer,
                    g = r.getOnlySelectedShape(),
                    b = g && r.isShapeOrAncestorLocked(g),
                    x = g ? r.getShapeUtil(g).expandSelectionOutlinePx(g) : 0;
                if (
                    (Ml(
                        o,
                        t == null ? void 0 : t.x,
                        t == null ? void 0 : t.y,
                        1,
                        r.getSelectionRotation(),
                        {x: -x, y: -x}
                    ),
                        !t)
                )
                    return null;
                t = t.clone().expandBy(x).zeroFix();
                const S = r.getZoomLevel(),
                    _ = r.getInstanceState().isChangingStyle,
                    k = t.width,
                    C = t.height,
                    P = 8 / S,
                    I = k < P * 2,
                    $ = C < P * 2,
                    T = k < P * 4,
                    R = C < P * 4,
                    D = k < P * 5,
                    j = C < P * 5,
                    z = f ? 1.75 : 1,
                    O = (6 / S) * z,
                    F = (T ? O / 2 : O) * (z * 0.75),
                    K = (R ? O / 2 : O) * (z * 0.75),
                    V =
                        (g ? !r.getShapeUtil(g).hideSelectionBoundsFg(g) : !0) &&
                        !_;
                let B =
                    (V &&
                        r.isInAny(
                            "select.idle",
                            "select.brushing",
                            "select.scribble_brushing",
                            "select.pointing_canvas",
                            "select.pointing_selection",
                            "select.pointing_shape",
                            "select.crop.idle",
                            "select.crop.pointing_crop",
                            "select.pointing_resize_handle",
                            "select.pointing_crop_handle"
                        )) ||
                    (V &&
                        r.isIn("select.resizing") &&
                        g &&
                        r.isShapeOfType(g, "text"));
                g &&
                B &&
                r.environment.isFirefox &&
                r.isShapeOfType(g, "embed") &&
                (B = !1);
                const H =
                        r.isInAny(
                            "select.pointing_crop_handle",
                            "select.crop.idle",
                            "select.crop.pointing_crop"
                        ) &&
                        !_ &&
                        !i,
                    G =
                        r.isInAny(
                            "select.idle",
                            "select.pointing_selection",
                            "select.pointing_shape",
                            "select.crop.idle"
                        ) &&
                        !_ &&
                        !i,
                    ee =
                        !f &&
                        !(I || $) &&
                        (G || H) &&
                        (g ? !r.getShapeUtil(g).hideRotateHandle(g) : !0) &&
                        !b,
                    fe =
                        f &&
                        (!T || !R) &&
                        (G || H) &&
                        (g ? !r.getShapeUtil(g).hideRotateHandle(g) : !0) &&
                        !b,
                    Se =
                        G &&
                        (g
                            ? r.getShapeUtil(g).canResize(g) &&
                            !r.getShapeUtil(g).hideResizeHandles(g)
                            : !0) &&
                        !H &&
                        !b,
                    te = I || $,
                    ye = I && $,
                    Ae = D || j,
                    We = Se || H,
                    _e = !ee,
                    tt = !G || !fe,
                    Me = !G || !We,
                    Jt = !G || !We || te,
                    je = !G || !We || te,
                    _n = !G || !We || (ye && !H);
                let it = f;
                it && g && g.type === "text" && (it = !1);
                let wt = !0;
                H ? (wt = Ae) : Se && (wt = te || ye || it);
                const Or = Math.min(24 / S, C - K * 3),
                    Ma = G && f && g && r.isShapeOfType(g, "text") && Or * S >= 4;
                return v.jsx("svg", {
                    className: "tl-overlays__item tl-selection__fg tl-svg-context",
                    "data-testid": "selection-foreground",
                    children: v.jsxs("g", {
                        ref: o,
                        children: [
                            B &&
                            v.jsx("rect", {
                                className: me("tl-selection__fg__outline"),
                                width: M(k),
                                height: M(C),
                            }),
                            v.jsx(Em, {
                                "data-testid": "selection.rotate.top-left",
                                cx: 0,
                                cy: 0,
                                targetSize: O,
                                corner: "top_left_rotate",
                                cursor: m ? lr("nwse-rotate", n) : void 0,
                                isHidden: _e,
                            }),
                            v.jsx(Em, {
                                "data-testid": "selection.rotate.top-right",
                                cx: k + O * 3,
                                cy: 0,
                                targetSize: O,
                                corner: "top_right_rotate",
                                cursor: m ? lr("nesw-rotate", n) : void 0,
                                isHidden: _e,
                            }),
                            v.jsx(Em, {
                                "data-testid": "selection.rotate.bottom-left",
                                cx: 0,
                                cy: C + O * 3,
                                targetSize: O,
                                corner: "bottom_left_rotate",
                                cursor: m ? lr("swne-rotate", n) : void 0,
                                isHidden: _e,
                            }),
                            v.jsx(Em, {
                                "data-testid": "selection.rotate.bottom-right",
                                cx: k + O * 3,
                                cy: C + O * 3,
                                targetSize: O,
                                corner: "bottom_right_rotate",
                                cursor: m ? lr("senw-rotate", n) : void 0,
                                isHidden: _e,
                            }),
                            v.jsx(pZ, {
                                "data-testid": "selection.rotate.mobile",
                                cx: T ? -O * 1.5 : k / 2,
                                cy: T ? C / 2 : -O * 1.5,
                                size: P,
                                isHidden: tt,
                            }),
                            v.jsx("rect", {
                                className: me("tl-transparent", {"tl-hidden": wt}),
                                "data-testid": "selection.resize.top",
                                "aria-label": "top target",
                                pointerEvents: "all",
                                x: 0,
                                y: M(0 - (R ? K * 2 : K)),
                                width: M(k),
                                height: M(Math.max(1, K * 2)),
                                style: m ? {cursor: lr("ns-resize", n)} : void 0,
                                ...a,
                            }),
                            v.jsx("rect", {
                                className: me("tl-transparent", {"tl-hidden": wt}),
                                "data-testid": "selection.resize.right",
                                "aria-label": "right target",
                                pointerEvents: "all",
                                x: M(k - (T ? 0 : F)),
                                y: 0,
                                height: M(C),
                                width: M(Math.max(1, F * 2)),
                                style: m ? {cursor: lr("ew-resize", n)} : void 0,
                                ...s,
                            }),
                            v.jsx("rect", {
                                className: me("tl-transparent", {"tl-hidden": wt}),
                                "data-testid": "selection.resize.bottom",
                                "aria-label": "bottom target",
                                pointerEvents: "all",
                                x: 0,
                                y: M(C - (R ? 0 : K)),
                                width: M(k),
                                height: M(Math.max(1, K * 2)),
                                style: m ? {cursor: lr("ns-resize", n)} : void 0,
                                ...l,
                            }),
                            v.jsx("rect", {
                                className: me("tl-transparent", {"tl-hidden": wt}),
                                "data-testid": "selection.resize.left",
                                "aria-label": "left target",
                                pointerEvents: "all",
                                x: M(0 - (T ? F * 2 : F)),
                                y: 0,
                                height: M(C),
                                width: M(Math.max(1, F * 2)),
                                style: m ? {cursor: lr("ew-resize", n)} : void 0,
                                ...c,
                            }),
                            v.jsx("rect", {
                                className: me("tl-transparent", {"tl-hidden": Me}),
                                "data-testid": "selection.target.top-left",
                                "aria-label": "top-left target",
                                pointerEvents: "all",
                                x: M(0 - (T ? F * 2 : F * 1.5)),
                                y: M(0 - (R ? K * 2 : K * 1.5)),
                                width: M(F * 3),
                                height: M(K * 3),
                                style: m ? {cursor: lr("nwse-resize", n)} : void 0,
                                ...d,
                            }),
                            v.jsx("rect", {
                                className: me("tl-transparent", {"tl-hidden": Jt}),
                                "data-testid": "selection.target.top-right",
                                "aria-label": "top-right target",
                                pointerEvents: "all",
                                x: M(k - (T ? 0 : F * 1.5)),
                                y: M(0 - (R ? K * 2 : K * 1.5)),
                                width: M(F * 3),
                                height: M(K * 3),
                                style: m ? {cursor: lr("nesw-resize", n)} : void 0,
                                ...u,
                            }),
                            v.jsx("rect", {
                                className: me("tl-transparent", {"tl-hidden": _n}),
                                "data-testid": "selection.target.bottom-right",
                                "aria-label": "bottom-right target",
                                pointerEvents: "all",
                                x: M(k - (T ? F : F * 1.5)),
                                y: M(C - (R ? K : K * 1.5)),
                                width: M(F * 3),
                                height: M(K * 3),
                                style: m ? {cursor: lr("nwse-resize", n)} : void 0,
                                ...h,
                            }),
                            v.jsx("rect", {
                                className: me("tl-transparent", {"tl-hidden": je}),
                                "data-testid": "selection.target.bottom-left",
                                "aria-label": "bottom-left target",
                                pointerEvents: "all",
                                x: M(0 - (T ? F * 3 : F * 1.5)),
                                y: M(C - (R ? 0 : K * 1.5)),
                                width: M(F * 3),
                                height: M(K * 3),
                                style: m ? {cursor: lr("nesw-resize", n)} : void 0,
                                ...p,
                            }),
                            Se &&
                            v.jsxs(v.Fragment, {
                                children: [
                                    v.jsx("rect", {
                                        "data-testid":
                                            "selection.resize.top-left",
                                        className: me("tl-corner-handle", {
                                            "tl-hidden": Me,
                                        }),
                                        "aria-label": "top_left handle",
                                        x: M(0 - P / 2),
                                        y: M(0 - P / 2),
                                        width: M(P),
                                        height: M(P),
                                    }),
                                    v.jsx("rect", {
                                        "data-testid":
                                            "selection.resize.top-right",
                                        className: me("tl-corner-handle", {
                                            "tl-hidden": Jt,
                                        }),
                                        "aria-label": "top_right handle",
                                        x: M(k - P / 2),
                                        y: M(0 - P / 2),
                                        width: M(P),
                                        height: M(P),
                                    }),
                                    v.jsx("rect", {
                                        "data-testid":
                                            "selection.resize.bottom-right",
                                        className: me("tl-corner-handle", {
                                            "tl-hidden": _n,
                                        }),
                                        "aria-label": "bottom_right handle",
                                        x: M(k - P / 2),
                                        y: M(C - P / 2),
                                        width: M(P),
                                        height: M(P),
                                    }),
                                    v.jsx("rect", {
                                        "data-testid":
                                            "selection.resize.bottom-left",
                                        className: me("tl-corner-handle", {
                                            "tl-hidden": je,
                                        }),
                                        "aria-label": "bottom_left handle",
                                        x: M(0 - P / 2),
                                        y: M(C - P / 2),
                                        width: M(P),
                                        height: M(P),
                                    }),
                                ],
                            }),
                            Ma &&
                            v.jsxs(v.Fragment, {
                                children: [
                                    v.jsx("rect", {
                                        "data-testid":
                                            "selection.text-resize.left.handle",
                                        className: "tl-text-handle",
                                        "aria-label": "bottom_left handle",
                                        x: M(0 - P / 4),
                                        y: M(C / 2 - Or / 2),
                                        rx: P / 4,
                                        width: M(P / 2),
                                        height: M(Or),
                                    }),
                                    v.jsx("rect", {
                                        "data-testid":
                                            "selection.text-resize.right.handle",
                                        className: "tl-text-handle",
                                        "aria-label": "bottom_left handle",
                                        rx: P / 4,
                                        x: M(k - P / 4),
                                        y: M(C / 2 - Or / 2),
                                        width: M(P / 2),
                                        height: M(Or),
                                    }),
                                ],
                            }),
                            H &&
                            v.jsx(dZ, {
                                size: P,
                                width: k,
                                height: C,
                                hideAlternateHandles: Ae,
                            }),
                        ],
                    }),
                });
            }),
            Em = function ({
                               cx: t,
                               cy: n,
                               targetSize: r,
                               corner: o,
                               cursor: i,
                               isHidden: a,
                               "data-testid": s,
                           }) {
                const l = Co(o);
                return v.jsx("rect", {
                    className: me("tl-transparent", "tl-rotate-corner", {
                        "tl-hidden": a,
                    }),
                    "data-testid": s,
                    "aria-label": `${o} target`,
                    pointerEvents: "all",
                    x: M(t - r * 3),
                    y: M(n - r * 3),
                    width: M(Math.max(1, r * 3)),
                    height: M(Math.max(1, r * 3)),
                    cursor: i,
                    ...l,
                });
            },
            hZ = Math.sqrt(Math.PI),
            pZ = function ({cx: t, cy: n, size: r, isHidden: o, "data-testid": i}) {
                const a = Co("mobile_rotate"),
                    s = W(),
                    l = X("zoom level", () => s.getZoomLevel(), [s]),
                    c = Math.max(14 * (1 / l), 20 / Math.max(1, l));
                return v.jsxs("g", {
                    children: [
                        v.jsx("circle", {
                            "data-testid": i,
                            pointerEvents: "all",
                            className: me(
                                "tl-transparent",
                                "tl-mobile-rotate__bg",
                                {"tl-hidden": o}
                            ),
                            cx: t,
                            cy: n,
                            r: c,
                            ...a,
                        }),
                        v.jsx("circle", {
                            className: me("tl-mobile-rotate__fg", {"tl-hidden": o}),
                            cx: t,
                            cy: n,
                            r: r / hZ,
                        }),
                    ],
                });
            },
            qt = {
                lineHeight: 1.35,
                fontWeight: "normal",
                fontVariant: "normal",
                fontStyle: "normal",
                padding: "0px",
            },
            fn = {s: 2, m: 3.5, l: 5, xl: 10},
            ha = {s: 18, m: 24, l: 36, xl: 44},
            rc = {s: 18, m: 22, l: 26, xl: 32},
            pa = {s: 18, m: 20, l: 24, xl: 28},
            gi = {
                draw: "var(--tl-font-draw)",
                sans: "var(--tl-font-sans)",
                serif: "var(--tl-font-serif)",
                mono: "var(--tl-font-mono)",
            };
        var E6 = {exports: {}};
        (function (e) {
            (function (t, n) {
                e.exports ? (e.exports = n()) : (t.downscale = n());
            })(lt, function () {
                function t(I, b, x, S, _, k, C, P) {
                    var I = document.createElement("canvas");
                    (I.width = x), (I.height = S);
                    var $ = I.getContext("2d");
                    return (
                        ($.mozImageSmoothingEnabled = !0),
                            ($.imageSmoothingQuality = "high"),
                            ($.webkitImageSmoothingEnabled = !0),
                            ($.msImageSmoothingEnabled = !0),
                            ($.imageSmoothingEnabled = !0),
                            $.drawImage(b, _, k, C, P, 0, 0, x, S),
                            I
                    );
                }
                function n(g) {
                    return (g + 0.49) << 0;
                }
                function r(g, b, x, S, _, k, C) {
                    for (
                        var P = new ImageData(b, x),
                            I = new Int32Array(g.data.buffer),
                            $ = g.width,
                            T = new Int32Array(P.data.buffer),
                            R = P.width,
                            D = b / k,
                            j = x / C,
                            z = n(1 / D),
                            O = n(1 / j),
                            F = z * O,
                            K = 0;
                        K < P.height;
                        K++
                    )
                        for (var V = 0; V < R; V++) {
                            for (
                                var B = S + n(V / D) + (_ + n(K / j)) * $,
                                    H = 0,
                                    G = 0,
                                    ee = 0,
                                    fe = 0,
                                    Se = 0;
                                Se < O;
                                Se++
                            )
                                for (var te = 0; te < z; te++) {
                                    var ye = I[B + te + Se * $];
                                    (H += (ye << 24) >>> 24),
                                        (G += (ye << 16) >>> 24),
                                        (ee += (ye << 8) >>> 24),
                                        (fe += ye >>> 24);
                                }
                            (H = n(H / F)),
                                (G = n(G / F)),
                                (ee = n(ee / F)),
                                (fe = n(fe / F)),
                                (T[V + K * R] =
                                    (fe << 24) | (ee << 16) | (G << 8) | H);
                        }
                    return P;
                }
                function o(g, b, x, S) {
                    var _ = new Date(),
                        k = {},
                        C = _,
                        P = "01";
                    return {
                        mark: g
                            ? function (I) {
                                (I = P + ". " + (I || "...")),
                                    (k[I] = {"time (ms)": new Date() - C}),
                                    (C = new Date()),
                                    (P = ("0" + ((P >> 0) + 1)).substr(-2));
                            }
                            : new Function(),
                        finish: g
                            ? function () {
                                (k[P + " TOTAL"] = {"time (ms)": new Date() - _}),
                                    console.log("IMAGE SOURCE:", b),
                                    console.log("DOWNSCALE TO:", x + "x" + S),
                                    console.table(k);
                            }
                            : new Function(),
                    };
                }
                function i() {
                    var g = [],
                        b = [],
                        x = [],
                        S = new Object();
                    return {
                        createSetter: function (_) {
                            if (!this.get(_)) {
                                var k = g.push(_) - 1;
                                return (
                                    b.push(S),
                                        x.push([]),
                                        function (C) {
                                            (b[k] = C),
                                                (x[k] = x[k].reduce(function (P, I) {
                                                    I(C);
                                                }, []));
                                        }
                                );
                            }
                        },
                        get: function (_, k) {
                            var C = g.indexOf(_);
                            if (~C) {
                                if (b[C] === S) {
                                    x[C].push(k);
                                    return;
                                }
                                k(b[C]);
                            }
                        },
                        has: function (_) {
                            return !!~g.indexOf(_);
                        },
                    };
                }
                function a(g, b, x, S) {
                    (g.width = x), (g.height = S);
                    var _ = g.getContext("2d");
                    return _.drawImage(b, 0, 0), _.getImageData(0, 0, x, S);
                }
                function s(g, b) {
                    (g.width = b.width), (g.height = b.height);
                    var x = g.getContext("2d");
                    return x.putImageData(b, 0, 0), g;
                }
                function l(g, b, T, R, _, k) {
                    var C = _,
                        P = k,
                        I = _ / k;
                    g === 0 && (g = (b * I) >> 0), b === 0 && (b = (g / I) >> 0);
                    var $ = g / b;
                    $ > I ? (k = (_ / $) >> 0) : (_ = (k * $) >> 0);
                    var T = T || ((C - _) / 2) >> 0,
                        R = R || ((P - k) / 2) >> 0;
                    return {
                        destWidth: g,
                        destHeight: b,
                        sourceX: T,
                        sourceY: R,
                        sourceWidth: _,
                        sourceHeight: k,
                    };
                }
                function c(g, b, x) {
                    if (b.returnCanvas) {
                        x(g);
                        return;
                    }
                    if (b.returnBlob) {
                        g.toBlob(
                            x,
                            "image/" + (b.imageType || "jpeg"),
                            b.quality || 0.85
                        );
                        return;
                    }
                    var S = g.toDataURL(
                        "image/" + (b.imageType || "jpeg"),
                        b.quality || 0.85
                    );
                    x(S);
                }
                function d(g, b) {
                    var x = new XMLHttpRequest();
                    x.open("GET", g),
                        (x.responseType = "arraybuffer"),
                        x.addEventListener("load", function () {
                            b(this.response);
                        }),
                        x.send();
                }
                function u(g, b) {
                    g.complete ? b() : g.addEventListener("load", b);
                }
                function h(g, b) {
                    g.readyState > 1 ? b() : g.addEventListener("loadeddata", b);
                }
                function p(g) {
                    if (g instanceof File) return "File";
                    if (g instanceof HTMLImageElement) return "HTMLImageElement";
                    if (g instanceof HTMLVideoElement) return "HTMLVideoElement";
                    if (typeof g == "string") return "URL";
                }
                function m(g) {
                    if (g.length < 3)
                        return new TypeError(
                            "3 arguments required, but only " +
                            g.length +
                            " present."
                        );
                    if (!p(g[0]))
                        return new TypeError(
                            "First argument should be HTMLImageElement, HTMLVideoElement, File of String"
                        );
                    if (typeof g[1] != "number")
                        return new TypeError("Second argument should be a number");
                    if (typeof g[2] != "number")
                        return new TypeError("Third argument should be a number");
                }
                function f(g, b, x, S) {
                    var _ = o((S && S.debug) || !1, g, b, x),
                        k = m(arguments);
                    if (k instanceof TypeError) return Promise.reject(k);
                    S = S || {};
                    var C,
                        P = new Promise(function (j, z) {
                            C = j;
                        });
                    (f.canvas = f.canvas || document.createElement("canvas")),
                        (f.cache = f.cache || i());
                    var I = f.canvas,
                        $ = f.cache;
                    if ($.has(g))
                        return (
                            _.mark(),
                                $.get(g, function (j) {
                                    _.mark("PENDING CACHE");
                                    var z = j[0],
                                        O = j[1],
                                        F = l(
                                            b,
                                            x,
                                            S.sourceX,
                                            S.sourceY,
                                            O.width,
                                            O.height
                                        );
                                    if (
                                        F.sourceWidth / F.destWidth >= 2 &&
                                        F.sourceHeight / F.destHeight >= 2
                                    ) {
                                        _.mark();
                                        var K = r(
                                            O,
                                            F.destWidth,
                                            F.destHeight,
                                            F.sourceX,
                                            F.sourceY,
                                            F.sourceWidth,
                                            F.sourceHeight
                                        );
                                        _.mark("DOWNSCALE"), (I = s(I, K));
                                    } else (I = t(I, z, F.destWidth, F.destHeight, F.sourceX, F.sourceY, F.sourceWidth, F.sourceHeight)), _.mark("RESIZE WITH CANVAS");
                                    c(I, S, function (V) {
                                        _.mark("PRODUCE RESULT"), C(V), _.finish();
                                    });
                                }),
                                P
                        );
                    var T = function (j, z, O) {
                            var F = l(b, x, S.sourceX, S.sourceY, z, O);
                            if (
                                F.sourceWidth / F.destWidth >= 2 &&
                                F.sourceHeight / F.destHeight >= 2
                            ) {
                                _.mark();
                                var K = a(I, j, z, O);
                                _.mark("GET IMAGE DATA");
                                var V = r(
                                    K,
                                    F.destWidth,
                                    F.destHeight,
                                    F.sourceX,
                                    F.sourceY,
                                    F.sourceWidth,
                                    F.sourceHeight
                                );
                                _.mark("DOWNSCALE"),
                                    (I = s(I, V)),
                                p(j) !== "HTMLVideoElement" &&
                                $.createSetter(j)([j, K]);
                            } else
                                (I = t(
                                    I,
                                    j,
                                    F.destWidth,
                                    F.destHeight,
                                    F.sourceX,
                                    F.sourceY,
                                    F.sourceWidth,
                                    F.sourceHeight
                                )),
                                    _.mark("RESIZE WITH CANVAS");
                            c(I, S, function (B) {
                                _.mark("PRODUCE RESULT"), C(B), _.finish();
                            });
                        },
                        R = window.URL || window.webkitURL;
                    switch (p(g)) {
                        case "File":
                            var D = document.createElement("img");
                            _.mark(),
                                (D.src = R.createObjectURL(g)),
                                _.mark("READ FILE"),
                                u(D, function () {
                                    _.mark("LOAD IMAGE"),
                                        T(D, D.naturalWidth, D.naturalHeight);
                                });
                            break;
                        case "HTMLImageElement":
                            _.mark(),
                                u(g, function () {
                                    _.mark("LOAD IMAGE"),
                                        T(g, g.naturalWidth, g.naturalHeight);
                                });
                            break;
                        case "HTMLVideoElement":
                            h(g, function () {
                                T(g, g.videoWidth, g.videoHeight);
                            });
                            break;
                        case "URL":
                            _.mark(),
                                setTimeout(function () {
                                    d(g, function (j) {
                                        _.mark("LOAD ARRAY BUFFER");
                                        var z = new Uint8Array(j),
                                            O = new Blob([z], {type: "image/jpeg"}),
                                            F = document.createElement("img");
                                        (F.src = R.createObjectURL(O)),
                                            _.mark(),
                                            u(F, function () {
                                                _.mark("LOAD IMAGE"),
                                                    T(
                                                        F,
                                                        F.naturalWidth,
                                                        F.naturalHeight
                                                    );
                                            });
                                    });
                                });
                            break;
                    }
                    return P;
                }
                return f;
            });
        })(E6);
        var fZ = E6.exports;
        const mZ = Da(fZ);
        /*!
     * canvas-size
     * v1.2.6
     * https://github.com/jhildenbiddle/canvas-size
     * (c) 2015-2023 John Hildenbiddle <http://hildenbiddle.com>
     * MIT license
     */ function gZ(e, t) {
            var n =
                e == null
                    ? null
                    : (typeof Symbol < "u" && e[Symbol.iterator]) ||
                    e["@@iterator"];
            if (n != null) {
                var r,
                    o,
                    i,
                    a,
                    s = [],
                    l = !0,
                    c = !1;
                try {
                    if (((i = (n = n.call(e)).next), t === 0)) {
                        if (Object(n) !== n) return;
                        l = !1;
                    } else
                        for (
                            ;
                            !(l = (r = i.call(n)).done) &&
                            (s.push(r.value), s.length !== t);
                            l = !0
                        );
                } catch (d) {
                    (c = !0), (o = d);
                } finally {
                    try {
                        if (
                            !l &&
                            n.return != null &&
                            ((a = n.return()), Object(a) !== a)
                        )
                            return;
                    } finally {
                        if (c) throw o;
                    }
                }
                return s;
            }
        }
        function P6(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t &&
                (r = r.filter(function (o) {
                    return Object.getOwnPropertyDescriptor(e, o).enumerable;
                })),
                    n.push.apply(n, r);
            }
            return n;
        }
        function cr(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t] != null ? arguments[t] : {};
                t % 2
                    ? P6(Object(n), !0).forEach(function (r) {
                        vZ(e, r, n[r]);
                    })
                    : Object.getOwnPropertyDescriptors
                        ? Object.defineProperties(
                            e,
                            Object.getOwnPropertyDescriptors(n)
                        )
                        : P6(Object(n)).forEach(function (r) {
                            Object.defineProperty(
                                e,
                                r,
                                Object.getOwnPropertyDescriptor(n, r)
                            );
                        });
            }
            return e;
        }
        function vZ(e, t, n) {
            return (
                (t = EZ(t)),
                    t in e
                        ? Object.defineProperty(e, t, {
                            value: n,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                        })
                        : (e[t] = n),
                    e
            );
        }
        function bZ(e, t) {
            if (e == null) return {};
            var n = {},
                r = Object.keys(e),
                o,
                i;
            for (i = 0; i < r.length; i++)
                (o = r[i]), !(t.indexOf(o) >= 0) && (n[o] = e[o]);
            return n;
        }
        function yZ(e, t) {
            if (e == null) return {};
            var n = bZ(e, t),
                r,
                o;
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                for (o = 0; o < i.length; o++)
                    (r = i[o]),
                    !(t.indexOf(r) >= 0) &&
                    Object.prototype.propertyIsEnumerable.call(e, r) &&
                    (n[r] = e[r]);
            }
            return n;
        }
        function I6(e, t) {
            return xZ(e) || gZ(e, t) || T6(e, t) || kZ();
        }
        function Pm(e) {
            return wZ(e) || SZ(e) || T6(e) || _Z();
        }
        function wZ(e) {
            if (Array.isArray(e)) return kw(e);
        }
        function xZ(e) {
            if (Array.isArray(e)) return e;
        }
        function SZ(e) {
            if (
                (typeof Symbol < "u" && e[Symbol.iterator] != null) ||
                e["@@iterator"] != null
            )
                return Array.from(e);
        }
        function T6(e, t) {
            if (e) {
                if (typeof e == "string") return kw(e, t);
                var n = Object.prototype.toString.call(e).slice(8, -1);
                if (
                    (n === "Object" && e.constructor && (n = e.constructor.name),
                    n === "Map" || n === "Set")
                )
                    return Array.from(e);
                if (
                    n === "Arguments" ||
                    /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)
                )
                    return kw(e, t);
            }
        }
        function kw(e, t) {
            (t == null || t > e.length) && (t = e.length);
            for (var n = 0, r = new Array(t); n < t; n++) r[n] = e[n];
            return r;
        }
        function _Z() {
            throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }
        function kZ() {
            throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
        }
        function CZ(e, t) {
            if (typeof e != "object" || e === null) return e;
            var n = e[Symbol.toPrimitive];
            if (n !== void 0) {
                var r = n.call(e, t || "default");
                if (typeof r != "object") return r;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        function EZ(e) {
            var t = CZ(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function zu(e) {
            var t = e.sizes.shift(),
                n = Math.max(Math.ceil(t[0]), 1),
                r = Math.max(Math.ceil(t[1]), 1),
                o = [n - 1, r - 1, 1, 1],
                i = Date.now(),
                a =
                    typeof WorkerGlobalScope < "u" &&
                    self instanceof WorkerGlobalScope,
                s,
                l;
            a
                ? ((s = new OffscreenCanvas(1, 1)), (l = new OffscreenCanvas(n, r)))
                : ((s = document.createElement("canvas")),
                    (s.width = 1),
                    (s.height = 1),
                    (l = document.createElement("canvas")),
                    (l.width = n),
                    (l.height = r));
            var c = s.getContext("2d"),
                d = l.getContext("2d");
            d &&
            (d.fillRect.apply(d, o),
                c.drawImage(l, n - 1, r - 1, 1, 1, 0, 0, 1, 1));
            var u = c && c.getImageData(0, 0, 1, 1).data[3] !== 0,
                h = Date.now() - i;
            return (
                [s, l].forEach(function (p) {
                    (p.height = 0), (p.width = 0);
                }),
                    a
                        ? (postMessage({
                            width: n,
                            height: r,
                            benchmark: h,
                            isTestPass: u,
                        }),
                        !u && e.sizes.length && zu(e))
                        : u
                            ? e.onSuccess(n, r, h)
                            : (e.onError(n, r, h), e.sizes.length && zu(e)),
                    u
            );
        }
        var Cw = {
                area: [16384, 14188, 11402, 11180, 10836, 8192, 4096, 1],
                height: [8388607, 65535, 32767, 16384, 8192, 4096, 1],
                width: [4194303, 65535, 32767, 16384, 8192, 4096, 1],
            },
            PZ = ["onError", "onSuccess"],
            oc = {
                max: null,
                min: 1,
                sizes: [],
                step: 1024,
                usePromise: !1,
                useWorker: !1,
                onError: Function.prototype,
                onSuccess: Function.prototype,
            },
            Ru = {};
        function Ew(e) {
            var t = e.width === e.height,
                n = e.height === 1,
                r = e.width === 1,
                o = [];
            if (!e.width || !e.height)
                e.sizes.forEach(function (d) {
                    var u = t || n ? d : 1,
                        h = t || r ? d : 1;
                    o.push([u, h]);
                });
            else
                for (
                    var i = e.min || oc.min,
                        a = e.step || oc.step,
                        s = Math.max(e.width, e.height);
                    s >= i;

                ) {
                    var l = t || n ? s : 1,
                        c = t || r ? s : 1;
                    o.push([l, c]), (s -= a);
                }
            return o;
        }
        function Im(e) {
            var t = window && "HTMLCanvasElement" in window,
                n = window && "OffscreenCanvas" in window,
                r = Date.now(),
                o = e.onError,
                i = e.onSuccess,
                a = yZ(e, PZ),
                s = null;
            if (!t) return !1;
            if (e.useWorker && n) {
                var l = `
            var canvasTest = `.concat(
                        zu.toString(),
                        `;
            onmessage = function(e) {
                canvasTest(e.data);
            };
        `
                    ),
                    c = new Blob([l], {type: "application/javascript"}),
                    d = URL.createObjectURL(c);
                (s = new Worker(d)),
                    URL.revokeObjectURL(d),
                    (s.onmessage = function (u) {
                        var h = u.data,
                            p = h.width,
                            m = h.height,
                            f = h.benchmark,
                            g = h.isTestPass;
                        g
                            ? (Ru[r].onSuccess(p, m, f), delete Ru[r])
                            : Ru[r].onError(p, m, f);
                    });
            }
            if (e.usePromise)
                return new Promise(function (u, h) {
                    var p = cr(
                        cr({}, e),
                        {},
                        {
                            onError: function (b, x, S) {
                                var _;
                                if (e.sizes.length === 0) _ = !0;
                                else {
                                    var k = e.sizes.slice(-1),
                                        C = I6(k, 1),
                                        P = I6(C[0], 2),
                                        I = P[0],
                                        $ = P[1];
                                    _ = b === I && x === $;
                                }
                                o(b, x, S),
                                _ && h({width: b, height: x, benchmark: S});
                            },
                            onSuccess: function (b, x, S) {
                                i(b, x, S), u({width: b, height: x, benchmark: S});
                            },
                        }
                    );
                    if (s) {
                        var m = p.onError,
                            f = p.onSuccess;
                        (Ru[r] = {onError: m, onSuccess: f}), s.postMessage(a);
                    } else zu(p);
                });
            if (s) (Ru[r] = {onError: o, onSuccess: i}), s.postMessage(a);
            else return zu(e);
        }
        var Pw = {
            maxArea: function () {
                var t =
                        arguments.length > 0 && arguments[0] !== void 0
                            ? arguments[0]
                            : {},
                    n = Ew({
                        width: t.max,
                        height: t.max,
                        min: t.min,
                        step: t.step,
                        sizes: Pm(Cw.area),
                    }),
                    r = cr(cr(cr({}, oc), t), {}, {sizes: n});
                return Im(r);
            },
            maxHeight: function () {
                var t =
                        arguments.length > 0 && arguments[0] !== void 0
                            ? arguments[0]
                            : {},
                    n = Ew({
                        width: 1,
                        height: t.max,
                        min: t.min,
                        step: t.step,
                        sizes: Pm(Cw.height),
                    }),
                    r = cr(cr(cr({}, oc), t), {}, {sizes: n});
                return Im(r);
            },
            maxWidth: function () {
                var t =
                        arguments.length > 0 && arguments[0] !== void 0
                            ? arguments[0]
                            : {},
                    n = Ew({
                        width: t.max,
                        height: 1,
                        min: t.min,
                        step: t.step,
                        sizes: Pm(Cw.width),
                    }),
                    r = cr(cr(cr({}, oc), t), {}, {sizes: n});
                return Im(r);
            },
            test: function () {
                var t =
                        arguments.length > 0 && arguments[0] !== void 0
                            ? arguments[0]
                            : {},
                    n = cr(cr({}, oc), t);
                return (
                    (n.sizes = Pm(n.sizes)),
                    n.width && n.height && (n.sizes = [[n.width, n.height]]),
                        Im(n)
                );
            },
        };
        let Iw = null;
        function $6() {
            return Iw || (Iw = IZ()), Iw;
        }
        async function IZ() {
            const e = await Pw.maxWidth({usePromise: !0}),
                t = await Pw.maxHeight({usePromise: !0}),
                n = await Pw.maxArea({usePromise: !0});
            return {
                maxWidth: e.width,
                maxHeight: t.height,
                maxArea: n.width * n.height,
            };
        }
        function A6(e, t) {
            let n = 0;
            for (; e[t + n]; ) n += e[t + n] + 1;
            return n + 1;
        }
        function TZ(e) {
            return new TextDecoder("ascii").decode(e.slice(0, 3)) === "GIF";
        }
        function $Z(e) {
            const t = new Uint8Array(e);
            let n,
                r,
                o = 0,
                i = 0;
            if (!TZ(e)) return !1;
            for (
                n = t[10] & 128,
                    r = t[10] & 7,
                    o += 6,
                    o += 7,
                    o += n ? 3 * Math.pow(2, r + 1) : 0;
                i < 2 && o < t.length;

            )
                switch (t[o]) {
                    case 44:
                        (i += 1),
                            (n = t[o + 9] & 128),
                            (r = t[o + 9] & 7),
                            (o += 10),
                            (o += n ? 3 * Math.pow(2, r + 1) : 0),
                            (o += A6(t, o + 1) + 1);
                        break;
                    case 33:
                        (o += 2), (o += A6(t, o));
                        break;
                    case 59:
                        o = t.length;
                        break;
                    default:
                        o = t.length;
                        break;
                }
            return i > 1;
        }
        function AZ(e, t) {
            const n = e.w / t.w,
                r = e.h / t.h;
            return n <= 1 && r <= 1
                ? e
                : n > r
                    ? {w: e.w / n, h: e.h / n}
                    : {w: e.w / r, h: e.h / r};
        }
        async function MZ(e, t, n, r = {}) {
            let o = t * 2,
                i = n * 2;
            const {type: a = "image/jpeg", quality: s = 0.92} = r,
                l = await $6(),
                c = t / n;
            if (
                (o > l.maxWidth && ((o = l.maxWidth), (i = o / c)),
                i > l.maxHeight && ((i = l.maxHeight), (o = i * c)),
                o * i > l.maxArea)
            ) {
                const d = Math.sqrt(l.maxArea / (o * i));
                (o *= d), (i *= d);
            }
            return await mZ(e, o, i, {
                imageType: a.replace("image/", ""),
                quality: s,
            });
        }
        async function zZ(e) {
            return await new Promise((t, n) => {
                const r = new FileReader();
                (r.onerror = () => n(r.error)),
                    (r.onload = () => {
                        t(r.result ? $Z(r.result) : !1);
                    }),
                    r.readAsArrayBuffer(e);
            });
        }
        function RZ(e) {
            if (typeof e != "string") throw new TypeError("Expected a string");
            return e.replace(/[|\\{}()[\]^$+*?.]/g, "\\$&").replace(/-/g, "\\x2d");
        }
        function OZ(e) {
            const t = new URL(e).host.replace("www.", "");
            for (const n of $l)
                if (M6(n.hostnames, t)) {
                    const r = n.fromEmbedUrl(e);
                    if (r) return {definition: n, url: r, embedUrl: e};
                }
        }
        const DZ = (e) =>
                e
                    .split("*")
                    .map((t) => RZ(t))
                    .join(".+"),
            M6 = (e, t) =>
                !!e.find((n) => {
                    const r = new RegExp(DZ(n));
                    return t.match(r);
                });
        function LZ(e) {
            const t = new URL(e).host.replace("www.", "");
            for (const n of $l)
                if (M6(n.hostnames, t)) {
                    const r = n.toEmbedUrl(e);
                    if (r) return {definition: n, embedUrl: r, url: e};
                }
        }
        function z6(e) {
            return LZ(e) ?? OZ(e);
        }
        function vi(e) {
            try {
                return z6(e);
            } catch (t) {
                console.error(t);
            }
        }
        const ic = "  ",
            On = class On {
                static insertTextFirefox(t, n) {
                    t.setRangeText(
                        n,
                        t.selectionStart || 0,
                        t.selectionEnd || 0,
                        "end"
                    ),
                        t.dispatchEvent(
                            new InputEvent("input", {
                                data: n,
                                inputType: "insertText",
                                isComposing: !1,
                            })
                        );
                }
                static insert(t, n) {
                    const r = t.ownerDocument,
                        o = r.activeElement;
                    o !== t && t.focus(),
                    r.execCommand("insertText", !1, n) ||
                    On.insertTextFirefox(t, n),
                        o === r.body
                            ? t.blur()
                            : o instanceof HTMLElement && o !== t && o.focus();
                }
                static set(t, n) {
                    t.select(), On.insert(t, n);
                }
                static getSelection(t) {
                    const {selectionStart: n, selectionEnd: r} = t;
                    return t.value.slice(n || void 0, r || void 0);
                }
                static wrapSelection(t, n, r) {
                    const {selectionStart: o, selectionEnd: i} = t,
                        a = On.getSelection(t);
                    On.insert(t, n + a + (r ?? n)),
                        (t.selectionStart = (o || 0) + n.length),
                        (t.selectionEnd = (i || 0) + n.length);
                }
                static replace(t, n, r) {
                    let o = 0;
                    t.value.replace(n, (...i) => {
                        const a = o + i[i.length - 2],
                            s = i[0].length;
                        (t.selectionStart = a), (t.selectionEnd = a + s);
                        const l = typeof r == "string" ? r : r(...i);
                        return (
                            On.insert(t, l),
                                (t.selectionStart = a),
                                (o += l.length - s),
                                l
                        );
                    });
                }
                static findLineEnd(t, n) {
                    const r =
                        t.lastIndexOf(
                            `
`,
                            n - 1
                        ) + 1;
                    return t.charAt(r) !== "	" ? n : r + 1;
                }
                static indent(t) {
                    var s;
                    const {selectionStart: n, selectionEnd: r, value: o} = t,
                        i = o.slice(n, r),
                        a = (s = /\n/g.exec(i)) == null ? void 0 : s.length;
                    if (a && a > 0) {
                        const l =
                                o.lastIndexOf(
                                    `
`,
                                    n - 1
                                ) + 1,
                            c = t.value.slice(l, r - 1),
                            d = c.replace(/^|\n/g, `$&${ic}`),
                            u = d.length - c.length;
                        t.setSelectionRange(l, r - 1),
                            On.insert(t, d),
                            t.setSelectionRange(n + 1, r + u);
                    } else On.insert(t, ic);
                }
                static unindent(t) {
                    const {selectionStart: n, selectionEnd: r, value: o} = t,
                        i =
                            o.lastIndexOf(
                                `
`,
                                n - 1
                            ) + 1,
                        a = On.findLineEnd(o, r),
                        s = t.value.slice(i, a),
                        l = s.replace(/(^|\n)(\t| {1,2})/g, "$1"),
                        c = s.length - l.length;
                    t.setSelectionRange(i, a), On.insert(t, l);
                    const d = /\t| {1,2}/.exec(o.slice(i, n)),
                        u = d ? d[0].length : 0,
                        h = n - u;
                    t.setSelectionRange(n - u, Math.max(h, r - c));
                }
                static indentCE(t) {
                    var l;
                    const n = window.getSelection(),
                        r = t.innerText,
                        o = Tm(t) ?? 0,
                        i = Tm(t) ?? 0,
                        a = r.slice(o, i),
                        s = (l = /\n/g.exec(a)) == null ? void 0 : l.length;
                    if (s && s > 0) {
                        const c =
                                r.lastIndexOf(
                                    `
`,
                                    o - 1
                                ) + 1,
                            d = r.slice(c, i - 1),
                            h = d.replace(/^|\n/g, `$&${ic}`).length - d.length;
                        n && n.setBaseAndExtent(t, o + 1, t, i + h);
                    } else {
                        const c = window.getSelection();
                        (t.innerText = r.slice(0, o) + ic + r.slice(o)),
                        c == null || c.setBaseAndExtent(t, o + 1, t, o + 2);
                    }
                }
                static unindentCE(t) {
                    const n = window.getSelection(),
                        r = t.innerText,
                        o = Tm(t) ?? 0,
                        i = Tm(t) ?? 0,
                        a =
                            r.lastIndexOf(
                                `
`,
                                o - 1
                            ) + 1,
                        s = On.findLineEnd(r, i),
                        l = r.slice(a, s),
                        c = l.replace(/(^|\n)(\t| {1,2})/g, "$1"),
                        d = l.length - c.length;
                    if (n) {
                        n.setBaseAndExtent(t, a, t, s);
                        const u = /\t| {1,2}/.exec(r.slice(a, o)),
                            h = u ? u[0].length : 0,
                            p = o - h;
                        n.setBaseAndExtent(t, o - h, t, Math.max(p, i - d));
                    }
                }
                static normalizeText(t) {
                    return t.replace(
                        On.fixNewLines,
                        `
`
                    );
                }
                static normalizeTextForDom(t) {
                    return t
                        .replace(
                            On.fixNewLines,
                            `
`
                        )
                        .split(
                            `
`
                        )
                        .map((n) => n || " ").join(`
`);
                }
            };
        w(On, "fixNewLines", /\r?\n|\r/g);
        let fa = On;
        function Tm(e) {
            if (typeof window.getSelection > "u") return;
            const t = window.getSelection();
            if (!t) return;
            let n = 0;
            if (t.rangeCount !== 0) {
                const r = t.getRangeAt(0),
                    o = r.cloneRange();
                o.selectNodeContents(e),
                    o.setEnd(r.endContainer, r.endOffset),
                    (n = o.toString().length);
            }
            return n;
        }
        const jZ =
            /[\u0590-\u05FF\u0600-\u06FF\u0750-\u077F\u08A0-\u08FF\uFB50-\uFDFF\uFE70-\uFEFF]/;
        function NZ(e) {
            return jZ.test(e);
        }
        function FZ(e) {
            return e.replace(/\t/g, ic);
        }
        function BZ(e) {
            const t = e.split(`
`);
            for (; t[0] && t[0].trim().length === 0; ) t.shift();
            let n = 1 / 0;
            for (const r of t)
                if (r.trim().length > 0) {
                    const o = r.length - r.trimStart().length;
                    n = Math.min(n, o);
                }
            return t.map((r) => r.slice(n)).join(`
`);
        }
        function UZ(e) {
            return e.replace(/[ \t]+$/gm, "").replace(/\n+$/, "");
        }
        function HZ(e) {
            return UZ(BZ(FZ(e)));
        }
        const Ou = (e, t) => (e.length <= t ? e : e.substring(0, t - 3) + "...");
        function VZ(
            e,
            {
                maxImageDimension: t,
                maxAssetSize: n,
                acceptedImageMimeTypes: r,
                acceptedVideoMimeTypes: o,
            }
        ) {
            e.registerExternalAssetHandler(
                "file",
                async ({file: i}) =>
                    await new Promise((a, s) => {
                        !r.includes(i.type) &&
                        !o.includes(i.type) &&
                        (console.warn(`File type not allowed: ${i.type}`), s()),
                        i.size > n &&
                        (console.warn(
                            `File size too big: ${(
                                i.size / 1024
                            ).toFixed()}kb > ${(n / 1024).toFixed()}kb`
                        ),
                            s());
                        const l = new FileReader();
                        (l.onerror = () => s(l.error)),
                            (l.onload = async () => {
                                let c = l.result;
                                i.type === "video/quicktime" &&
                                c.includes("video/quicktime") &&
                                (c = c.replace("video/quicktime", "video/mp4"));
                                const d = r.includes(i.type);
                                let u, h;
                                if (
                                    (d
                                        ? ((u = await oC.getImageSizeFromSrc(c)),
                                            (h =
                                                i.type === "image/gif" &&
                                                (await zZ(i))))
                                        : ((h = !0),
                                            (u = await oC.getVideoSizeFromSrc(c))),
                                        isFinite(t))
                                ) {
                                    const f = AZ(u, {w: t, h: t});
                                    u !== f &&
                                    (i.type === "image/jpeg" ||
                                        i.type === "image/png") &&
                                    (u = f);
                                }
                                (i.type === "image/jpeg" ||
                                    i.type === "image/png") &&
                                (c = await MZ(c, u.w, u.h, {
                                    type: i.type,
                                    quality: 0.92,
                                }));
                                const p = ns.createId(sf(c)),
                                    m = ns.create({
                                        id: p,
                                        type: d ? "image" : "video",
                                        typeName: "asset",
                                        props: {
                                            name: i.name,
                                            src: c,
                                            w: u.w,
                                            h: u.h,
                                            mimeType: i.type,
                                            isAnimated: h,
                                        },
                                    });
                                a(m);
                            }),
                            l.readAsDataURL(i);
                    })
            ),
                e.registerExternalAssetHandler("url", async ({url: i}) => {
                    var s, l, c;
                    let a;
                    try {
                        const u = await (
                                await fetch(i, {method: "GET", mode: "no-cors"})
                            ).text(),
                            h = new DOMParser().parseFromString(u, "text/html");
                        a = {
                            image:
                                ((s = h.head.querySelector(
                                    'meta[property="og:image"]'
                                )) == null
                                    ? void 0
                                    : s.getAttribute("content")) ?? "",
                            title:
                                ((l = h.head.querySelector(
                                    'meta[property="og:title"]'
                                )) == null
                                    ? void 0
                                    : l.getAttribute("content")) ?? Ou(i, 32),
                            description:
                                ((c = h.head.querySelector(
                                    'meta[property="og:description"]'
                                )) == null
                                    ? void 0
                                    : c.getAttribute("content")) ?? "",
                        };
                    } catch (d) {
                        console.error(d),
                            (a = {image: "", title: Ou(i, 32), description: ""});
                    }
                    return {
                        id: ns.createId(sf(i)),
                        typeName: "asset",
                        type: "bookmark",
                        props: {
                            src: i,
                            description: a.description,
                            image: a.image,
                            title: a.title,
                        },
                        meta: {},
                    };
                }),
                e.registerExternalContentHandler(
                    "svg-text",
                    async ({point: i, text: a}) => {
                        const s =
                                i ??
                                (e.inputs.shiftKey
                                    ? e.inputs.currentPagePoint
                                    : e.getViewportPageCenter()),
                            l = new DOMParser()
                                .parseFromString(a, "image/svg+xml")
                                .querySelector("svg");
                        if (!l) throw new Error("No <svg/> element present");
                        let c = parseFloat(l.getAttribute("width") || "0"),
                            d = parseFloat(l.getAttribute("height") || "0");
                        if (!(c && d)) {
                            document.body.appendChild(l);
                            const h = l.getBoundingClientRect();
                            document.body.removeChild(l),
                                (c = h.width),
                                (d = h.height);
                        }
                        const u = await e.getAssetForExternalContent({
                            type: "file",
                            file: new File([a], "asset.svg", {
                                type: "image/svg+xml",
                            }),
                        });
                        if (!u) throw Error("Could not create an asset");
                        R6(e, [u], s);
                    }
                ),
                e.registerExternalContentHandler(
                    "embed",
                    ({point: i, url: a, embed: s}) => {
                        const l =
                                i ??
                                (e.inputs.shiftKey
                                    ? e.inputs.currentPagePoint
                                    : e.getViewportPageCenter()),
                            {width: c, height: d} = s,
                            u = Ge(),
                            h = {
                                id: u,
                                type: "embed",
                                x: l.x - (c || 450) / 2,
                                y: l.y - (d || 450) / 2,
                                props: {w: c, h: d, url: a},
                            };
                        e.createShapes([h]).select(u);
                    }
                ),
                e.registerExternalContentHandler(
                    "files",
                    async ({point: i, files: a}) => {
                        const s =
                                i ??
                                (e.inputs.shiftKey
                                    ? e.inputs.currentPagePoint
                                    : e.getViewportPageCenter()),
                            l = new E(s.x, s.y),
                            c = [];
                        await Promise.all(
                            a.map(async (d, u) => {
                                if (d.size > n)
                                    return (
                                        console.warn(
                                            `File size too big: ${(
                                                d.size / 1024
                                            ).toFixed()}kb > ${(
                                                n / 1024
                                            ).toFixed()}kb`
                                        ),
                                            null
                                    );
                                if (!d.type) throw new Error("No mime type");
                                if (!r.concat(o).includes(d.type))
                                    return (
                                        console.warn(
                                            `${d.name} not loaded - Extension not allowed.`
                                        ),
                                            null
                                    );
                                try {
                                    const h = await e.getAssetForExternalContent({
                                        type: "file",
                                        file: d,
                                    });
                                    if (!h)
                                        throw Error("Could not create an asset");
                                    c[u] = h;
                                } catch (h) {
                                    return console.error(h), null;
                                }
                            })
                        ),
                            R6(e, pe(c), l);
                    }
                ),
                e.registerExternalContentHandler(
                    "text",
                    async ({point: i, text: a}) => {
                        const s =
                                i ??
                                (e.inputs.shiftKey
                                    ? e.inputs.currentPagePoint
                                    : e.getViewportPageCenter()),
                            l = e.getShapeUtil("text").getDefaultProps(),
                            c = HZ(a);
                        let d,
                            u,
                            h,
                            p = "middle";
                        const m =
                                c.split(`
`).length > 1,
                            f = NZ(c);
                        m && (p = m ? (f ? "end" : "start") : "middle");
                        const g = e.textMeasure.measureText(c, {
                                ...qt,
                                fontFamily: gi[l.font],
                                fontSize: ha[l.size],
                                maxWidth: null,
                            }),
                            b = Math.min(
                                m ? e.getViewportPageBounds().width * 0.9 : 920,
                                Math.max(200, e.getViewportPageBounds().width * 0.9)
                            );
                        if (g.w > b) {
                            const x = e.textMeasure.measureText(c, {
                                ...qt,
                                fontFamily: gi[l.font],
                                fontSize: ha[l.size],
                                maxWidth: b,
                            });
                            (d = x.w),
                                (u = x.h),
                                (h = !1),
                                (p = f ? "end" : "start");
                        } else (d = g.w), (u = g.h), (h = !0);
                        s.y - u / 2 < e.getViewportPageBounds().minY + 40 &&
                        (s.y = e.getViewportPageBounds().minY + 40 + u / 2),
                            e.createShapes([
                                {
                                    id: Ge(),
                                    type: "text",
                                    x: s.x - d / 2,
                                    y: s.y - u / 2,
                                    props: {text: c, align: p, autoSize: h, w: d},
                                },
                            ]);
                    }
                ),
                e.registerExternalContentHandler(
                    "url",
                    async ({point: i, url: a}) => {
                        const s = vi(a);
                        if (s)
                            return e.putExternalContent({
                                type: "embed",
                                url: s.url,
                                point: i,
                                embed: s.definition,
                            });
                        const l =
                                i ??
                                (e.inputs.shiftKey
                                    ? e.inputs.currentPagePoint
                                    : e.getViewportPageCenter()),
                            c = ns.createId(sf(a)),
                            d = KZ(e, a, l);
                        let u = e.getAsset(c),
                            h = !1;
                        if (!u) {
                            h = !0;
                            const p = await e.getAssetForExternalContent({
                                type: "url",
                                url: a,
                            });
                            if (!p) throw Error("Could not create an asset");
                            u = p;
                        }
                        e.batch(() => {
                            h && e.createAssets([u]),
                                e.updateShapes([
                                    {
                                        id: d.id,
                                        type: d.type,
                                        props: {assetId: u.id},
                                    },
                                ]);
                        });
                    }
                );
        }
        async function R6(e, t, n) {
            if (!t.length) return [];
            const r = E.From(n),
                o = [];
            for (const i of t)
                switch (i.type) {
                    case "bookmark": {
                        o.push({
                            id: Ge(),
                            type: "bookmark",
                            x: r.x - 150,
                            y: r.y - 160,
                            opacity: 1,
                            props: {assetId: i.id, url: i.props.src},
                        }),
                            (r.x += 300);
                        break;
                    }
                    case "image": {
                        o.push({
                            id: Ge(),
                            type: "image",
                            x: r.x - i.props.w / 2,
                            y: r.y - i.props.h / 2,
                            opacity: 1,
                            props: {assetId: i.id, w: i.props.w, h: i.props.h},
                        }),
                            (r.x += i.props.w);
                        break;
                    }
                    case "video":
                        o.push({
                            id: Ge(),
                            type: "video",
                            x: r.x - i.props.w / 2,
                            y: r.y - i.props.h / 2,
                            opacity: 1,
                            props: {assetId: i.id, w: i.props.w, h: i.props.h},
                        }),
                            (r.x += i.props.w);
                }
            return (
                e.batch(() => {
                    const i = t.filter((a) => !e.getAsset(a.id));
                    i.length && e.createAssets(i),
                        e.createShapes(o).select(...o.map((a) => a.id)),
                        O6(e, n);
                }),
                    o.map((i) => i.id)
            );
        }
        function O6(e, t) {
            const n = e.getViewportPageBounds();
            let r = e.getSelectionPageBounds();
            if (r) {
                const o = r.center.sub(t);
                e.updateShapes(
                    e.getSelectedShapes().map((i) => {
                        const a = e.getShapeParentTransform(i).decompose().rotation,
                            s = E.Rot(o, -a);
                        return {id: i.id, type: i.type, x: i.x - s.x, y: i.y - s.y};
                    })
                );
            }
            (r = e.getSelectionPageBounds()),
            r && !n.contains(r) && e.zoomToSelection();
        }
        function KZ(e, t, n) {
            const r = {
                id: Ge(),
                type: "bookmark",
                x: n.x - 150,
                y: n.y - 160,
                opacity: 1,
                props: {assetId: null, url: t},
            };
            return (
                e.batch(() => {
                    e.createShapes([r]).select(r.id), O6(e, n);
                }),
                    e.getShape(r.id)
            );
        }
        let WZ =
                ((W2 = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "onPointerDown", (n) => {
                            this.parent.transition("pointing", n);
                        });
                        w(this, "onEnter", () => {
                            this.editor.setCursor({type: "cross", rotation: 0});
                        });
                        w(this, "onCancel", () => {
                            this.editor.setCurrentTool("select");
                        });
                        w(this, "onKeyUp", (n) => {
                            var r;
                            if (n.key === "Enter") {
                                if (this.editor.getInstanceState().isReadonly)
                                    return null;
                                const o = this.editor.getOnlySelectedShape();
                                o &&
                                this.editor.getShapeUtil(o).canEdit(o) &&
                                (this.editor.setCurrentTool("select"),
                                    this.editor.setEditingShape(o.id),
                                (r = this.editor.root.getCurrent()) == null ||
                                r.transition("editing_shape", {
                                    ...n,
                                    target: "shape",
                                    shape: o,
                                }));
                            }
                        });
                    }
                }),
                    w(W2, "id", "idle"),
                    W2),
            YZ =
                ((Y2 = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "shape");
                        w(this, "markId", "");
                        w(this, "onEnter", () => {
                            this.didTimeout = !1;
                            const n = this.editor.getShapeAtPoint(
                                this.editor.inputs.currentPagePoint,
                                {
                                    filter: (r) =>
                                        !r.isLocked &&
                                        this.editor.getShapeUtil(r).canBind(r),
                                    margin: 0,
                                    hitInside: !0,
                                    renderingOnly: !0,
                                }
                            );
                            n
                                ? this.editor.setHintingShapes([n.id])
                                : this.createArrowShape(),
                                this.startPreciseTimeout();
                        });
                        w(this, "onExit", () => {
                            (this.shape = void 0),
                                this.editor.setHintingShapes([]),
                                this.clearPreciseTimeout();
                        });
                        w(this, "onPointerMove", () => {
                            if (this.editor.inputs.isDragging) {
                                if (
                                    (this.shape || this.createArrowShape(),
                                        !this.shape)
                                )
                                    throw Error("expected shape");
                                this.updateArrowShapeEndHandle(),
                                    this.editor.setCurrentTool(
                                        "select.dragging_handle",
                                        {
                                            shape: this.shape,
                                            handle: this.editor
                                                .getShapeHandles(this.shape)
                                                .find((n) => n.id === "end"),
                                            isCreating: !0,
                                            onInteractionEnd: "arrow",
                                        }
                                    );
                            }
                        });
                        w(this, "onPointerUp", () => {
                            this.cancel();
                        });
                        w(this, "onCancel", () => {
                            this.cancel();
                        });
                        w(this, "onComplete", () => {
                            this.cancel();
                        });
                        w(this, "onInterrupt", () => {
                            this.cancel();
                        });
                        w(this, "preciseTimeout", -1);
                        w(this, "didTimeout", !1);
                    }
                    cancel() {
                        this.shape && this.editor.bailToMark(this.markId),
                            this.editor.setHintingShapes([]),
                            this.parent.transition("idle");
                    }
                    createArrowShape() {
                        var d, u;
                        const {originPagePoint: n} = this.editor.inputs,
                            r = Ge();
                        (this.markId = `creating:${r}`),
                            this.editor.mark(this.markId),
                            this.editor.createShapes([
                                {id: r, type: "arrow", x: n.x, y: n.y},
                            ]);
                        const o = this.editor.getShape(r);
                        if (!o) throw Error("expected shape");
                        const i = this.editor.getShapeHandles(o);
                        if (!i) throw Error("expected handles for arrow");
                        const a = this.editor.getShapeUtil("arrow"),
                            s = this.shape,
                            l = i.find((h) => h.id === "start"),
                            c =
                                (d = a.onHandleChange) == null
                                    ? void 0
                                    : d.call(a, o, {
                                        handle: {...l, x: 0, y: 0},
                                        isPrecise: !0,
                                        initial: s,
                                    });
                        if (c) {
                            const h = (u = c.props) == null ? void 0 : u.start;
                            (h == null ? void 0 : h.type) === "binding" &&
                            this.editor.setHintingShapes([h.boundShapeId]),
                                this.editor.updateShapes([c], {squashing: !0});
                        }
                        (this.shape = this.editor.getShape(r)),
                            this.editor.select(r);
                    }
                    updateArrowShapeEndHandle() {
                        var i, a, s;
                        const n = this.shape;
                        if (!n) throw Error("expected shape");
                        const r = this.editor.getShapeHandles(n);
                        if (!r) throw Error("expected handles for arrow");
                        const o = {
                            ...n,
                            props: {...n.props, end: {...n.props.end, x: 0, y: 0}},
                        };
                        {
                            const l = this.editor.getShapeUtil("arrow"),
                                c = this.shape,
                                d = this.editor.getPointInShapeSpace(
                                    n,
                                    this.editor.inputs.currentPagePoint
                                ),
                                u = r.find((p) => p.id === "end"),
                                h =
                                    (i = l.onHandleChange) == null
                                        ? void 0
                                        : i.call(l, o, {
                                            handle: {...u, x: d.x, y: d.y},
                                            isPrecise: !1,
                                            initial: c,
                                        });
                            if (h) {
                                const p = (a = h.props) == null ? void 0 : a.end;
                                (p == null ? void 0 : p.type) === "binding" &&
                                this.editor.setHintingShapes([p.boundShapeId]),
                                    this.editor.updateShapes([h], {squashing: !0});
                            }
                        }
                        {
                            const l = this.editor.getShapeUtil("arrow"),
                                c = this.shape,
                                d = r.find((h) => h.id === "start"),
                                u =
                                    (s = l.onHandleChange) == null
                                        ? void 0
                                        : s.call(l, o, {
                                            handle: {...d, x: 0, y: 0},
                                            isPrecise: this.didTimeout,
                                            initial: c,
                                        });
                            u && this.editor.updateShapes([u], {squashing: !0});
                        }
                        this.shape = this.editor.getShape(n.id);
                    }
                    startPreciseTimeout() {
                        this.preciseTimeout = window.setTimeout(() => {
                            this.getIsActive() && (this.didTimeout = !0);
                        }, 320);
                    }
                    clearPreciseTimeout() {
                        clearTimeout(this.preciseTimeout);
                    }
                }),
                    w(Y2, "id", "pointing"),
                    Y2);
        class $m extends ie {
            constructor() {
                super(...arguments);
                w(this, "shapeType", "arrow");
            }
        }
        w($m, "id", "arrow"),
            w($m, "initial", "idle"),
            w($m, "children", () => [WZ, YZ]);
        class Tw extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "initialShape");
                w(
                    this,
                    "shapeType",
                    this.parent.id === "highlight" ? "highlight" : "draw"
                );
                w(this, "util", this.editor.getShapeUtil(this.shapeType));
                w(this, "isPen", !1);
                w(this, "segmentMode", "free");
                w(this, "didJustShiftClickToExtendPreviousShapeLine", !1);
                w(this, "pagePointWhereCurrentSegmentChanged", {});
                w(this, "pagePointWhereNextSegmentChanged", null);
                w(this, "lastRecordedPoint", {});
                w(this, "mergeNextPoint", !1);
                w(this, "currentLineLength", 0);
                w(this, "canDraw", !1);
                w(this, "markId", null);
                w(this, "onEnter", (n) => {
                    (this.markId = null),
                        (this.info = n),
                        (this.canDraw = !this.editor.getIsMenuOpen()),
                        (this.lastRecordedPoint =
                            this.editor.inputs.currentPagePoint.clone()),
                    this.canDraw && this.startShape();
                });
                w(this, "onPointerMove", () => {
                    const {
                        editor: {inputs: n},
                    } = this;
                    if (this.isPen !== n.isPen) {
                        if (this.markId) {
                            this.editor.bailToMark(this.markId), this.startShape();
                            return;
                        }
                    } else
                        !this.canDraw &&
                        n.isDragging &&
                        (this.startShape(), (this.canDraw = !0));
                    this.canDraw &&
                    (n.isPen
                        ? E.Dist(n.currentPagePoint, this.lastRecordedPoint) >=
                        1 / this.editor.getZoomLevel()
                            ? ((this.lastRecordedPoint =
                                n.currentPagePoint.clone()),
                                (this.mergeNextPoint = !1))
                            : (this.mergeNextPoint = !0)
                        : (this.mergeNextPoint = !1),
                        this.updateShapes());
                });
                w(this, "onKeyDown", (n) => {
                    if (n.key === "Shift")
                        switch (this.segmentMode) {
                            case "free": {
                                (this.segmentMode = "starting_straight"),
                                    (this.pagePointWhereNextSegmentChanged =
                                        this.editor.inputs.currentPagePoint.clone());
                                break;
                            }
                            case "starting_free":
                                this.segmentMode = "starting_straight";
                        }
                    this.updateShapes();
                });
                w(this, "onKeyUp", (n) => {
                    if (n.key === "Shift")
                        switch ((this.editor.snaps.clear(), this.segmentMode)) {
                            case "straight": {
                                (this.segmentMode = "starting_free"),
                                    (this.pagePointWhereNextSegmentChanged =
                                        this.editor.inputs.currentPagePoint.clone());
                                break;
                            }
                            case "starting_straight": {
                                (this.pagePointWhereNextSegmentChanged = null),
                                    (this.segmentMode = "free");
                                break;
                            }
                        }
                    this.updateShapes();
                });
                w(this, "onExit", () => {
                    this.editor.snaps.clear(),
                        (this.pagePointWhereCurrentSegmentChanged =
                            this.editor.inputs.currentPagePoint.clone());
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
                w(this, "onInterrupt", () => {
                    this.editor.inputs.isDragging ||
                    (this.markId && this.editor.bailToMark(this.markId),
                        this.cancel());
                });
            }
            canClose() {
                return this.shapeType !== "highlight";
            }
            getIsClosed(n, r) {
                if (!this.canClose()) return !1;
                const o = fn[r],
                    i = n[0].points[0],
                    a = n[n.length - 1],
                    s = a.points[a.points.length - 1];
                return (
                    i !== s &&
                    this.currentLineLength > o * 4 &&
                    E.Dist(i, s) < o * 2
                );
            }
            startShape() {
                const {
                    inputs: {originPagePoint: n, isPen: r},
                } = this.editor;
                (this.markId = "draw start " + He()),
                    this.editor.mark(this.markId),
                    (this.isPen = r);
                const o = this.isPen ? this.info.point.z * 1.25 : 0.5;
                if (
                    ((this.segmentMode = this.editor.inputs.shiftKey
                        ? "straight"
                        : "free"),
                        (this.didJustShiftClickToExtendPreviousShapeLine = !1),
                        (this.lastRecordedPoint = n.clone()),
                        this.initialShape)
                ) {
                    const a = this.editor.getShape(this.initialShape.id);
                    if (a && this.segmentMode === "straight") {
                        this.didJustShiftClickToExtendPreviousShapeLine = !0;
                        const s = Bn(a.props.segments);
                        if (!s) throw Error("Expected a previous segment!");
                        const l = Bn(s.points);
                        if (!l) throw Error("Expected a previous point!");
                        const {x: c, y: d} = this.editor
                                .getPointInShapeSpace(a, n)
                                .toFixed(),
                            u = this.isPen ? this.info.point.z * 1.25 : 0.5,
                            h = {
                                type: this.segmentMode,
                                points: [
                                    {x: l.x, y: l.y, z: +u.toFixed(2)},
                                    {x: c, y: d, z: +u.toFixed(2)},
                                ],
                            },
                            p = re.applyToPoint(
                                this.editor.getShapePageTransform(a.id),
                                l
                            );
                        (this.pagePointWhereCurrentSegmentChanged = p),
                            (this.pagePointWhereNextSegmentChanged = null);
                        const m = [...a.props.segments, h];
                        this.currentLineLength = this.getLineLength(m);
                        const f = {
                            id: a.id,
                            type: this.shapeType,
                            props: {segments: m},
                        };
                        this.canClose() &&
                        (f.props.isClosed = this.getIsClosed(m, a.props.size)),
                            this.editor.updateShapes([f]);
                        return;
                    }
                }
                this.pagePointWhereCurrentSegmentChanged = n.clone();
                const i = Ge();
                this.editor.createShapes([
                    {
                        id: i,
                        type: this.shapeType,
                        x: n.x,
                        y: n.y,
                        props: {
                            isPen: this.isPen,
                            segments: [
                                {
                                    type: this.segmentMode,
                                    points: [{x: 0, y: 0, z: +o.toFixed(2)}],
                                },
                            ],
                        },
                    },
                ]),
                    (this.currentLineLength = 0),
                    (this.initialShape = this.editor.getShape(i));
            }
            updateShapes() {
                const {inputs: n} = this.editor,
                    {initialShape: r} = this;
                if (!r) return;
                const {
                        id: o,
                        props: {size: i},
                    } = r,
                    a = this.editor.getShape(o);
                if (!a) return;
                const {segments: s} = a.props,
                    {
                        x: l,
                        y: c,
                        z: d,
                    } = this.editor
                        .getPointInShapeSpace(a, n.currentPagePoint)
                        .toFixed(),
                    u = {x: l, y: c, z: this.isPen ? +(d * 1.25).toFixed(2) : 0.5};
                switch (this.segmentMode) {
                    case "starting_straight": {
                        const {pagePointWhereNextSegmentChanged: h} = this;
                        if (h === null)
                            throw Error(
                                "We should have a point where the segment changed"
                            );
                        if (E.Dist(h, n.currentPagePoint) > du) {
                            (this.pagePointWhereCurrentSegmentChanged =
                                this.pagePointWhereNextSegmentChanged.clone()),
                                (this.pagePointWhereNextSegmentChanged = null),
                                (this.segmentMode = "straight");
                            const m = Bn(s);
                            if (!m) throw Error("Expected a previous segment!");
                            const f = Bn(m.points);
                            if (!f) throw Error("Expected a previous last point!");
                            let g;
                            const b = this.editor
                                .getPointInShapeSpace(
                                    a,
                                    this.pagePointWhereCurrentSegmentChanged
                                )
                                .toFixed()
                                .toJson();
                            if (m.type === "straight") {
                                (this.currentLineLength += E.Dist(f, b)),
                                    (g = {type: "straight", points: [{...f}, b]});
                                const S = this.editor.getShapePageTransform(a);
                                this.pagePointWhereCurrentSegmentChanged =
                                    re.applyToPoint(S, f);
                            } else g = {type: "straight", points: [b, u]};
                            const x = {
                                id: o,
                                type: this.shapeType,
                                props: {segments: [...s, g]},
                            };
                            this.canClose() &&
                            (x.props.isClosed = this.getIsClosed(s, i)),
                                this.editor.updateShapes([x], {squashing: !0});
                        }
                        break;
                    }
                    case "starting_free": {
                        const {pagePointWhereNextSegmentChanged: h} = this;
                        if (h === null)
                            throw Error(
                                "We should have a point where the segment changed"
                            );
                        if (E.Dist(h, n.currentPagePoint) > du) {
                            (this.pagePointWhereCurrentSegmentChanged =
                                this.pagePointWhereNextSegmentChanged.clone()),
                                (this.pagePointWhereNextSegmentChanged = null),
                                (this.segmentMode = "free");
                            const m = s.slice(),
                                f = m[m.length - 1],
                                g = Bn(f.points);
                            if (!g) throw Error("No previous point!");
                            const b = {
                                    type: "free",
                                    points: [
                                        ...E.PointsBetween(g, u, 6).map((_) =>
                                            _.toFixed().toJson()
                                        ),
                                    ],
                                },
                                x = [...m, b];
                            this.currentLineLength = this.getLineLength(x);
                            const S = {
                                id: o,
                                type: this.shapeType,
                                props: {segments: x},
                            };
                            this.canClose() &&
                            (S.props.isClosed = this.getIsClosed(x, i)),
                                this.editor.updateShapes([S], {squashing: !0});
                        }
                        break;
                    }
                    case "straight": {
                        const h = s.slice(),
                            p = h[h.length - 1],
                            {pagePointWhereCurrentSegmentChanged: m} = this,
                            {currentPagePoint: f, ctrlKey: g} = this.editor.inputs;
                        if (!m)
                            throw Error(
                                "We should have a point where the segment changed"
                            );
                        let b,
                            x = !1;
                        this.didJustShiftClickToExtendPreviousShapeLine
                            ? this.editor.inputs.isDragging &&
                            ((x = !g),
                                (this.didJustShiftClickToExtendPreviousShapeLine =
                                    !1))
                            : (x = !g);
                        let S = this.editor
                                .getPointInShapeSpace(a, f)
                                .toFixed()
                                .toJson(),
                            _ = !1,
                            k;
                        if (
                            (this.editor.user.getIsSnapMode() ? !g : g) &&
                            h.length > 2
                        ) {
                            let I,
                                $ = 8 / this.editor.getZoomLevel();
                            for (let T = 0, R = s.length - 2; T < R; T++) {
                                const D = s[T];
                                if (!D) break;
                                if (D.type === "free") continue;
                                const j = D.points[0],
                                    z = Bn(D.points);
                                if (!(j && z)) continue;
                                const O = E.NearestPointOnLineSegment(j, z, S),
                                    F = E.Dist(O, S);
                                if (F < $) {
                                    (I = O.toFixed().toJson()), ($ = F), (k = D);
                                    break;
                                }
                            }
                            I && ((_ = !0), (S = I));
                        }
                        if (_ && k) {
                            const I = this.editor.getShapePageTransform(a),
                                $ = k.points[0],
                                T = Bn(k.points);
                            if (!T) throw Error("Expected a last point!");
                            const R = re.applyToPoint(I, $),
                                D = re.applyToPoint(I, T),
                                j = re.applyToPoint(I, S);
                            this.editor.snaps.setLines([
                                {id: He(), type: "points", points: [R, j, D]},
                            ]);
                        } else {
                            if ((this.editor.snaps.clear(), x)) {
                                const I = E.Angle(m, f),
                                    T = $f(I, 24) - I;
                                b = E.RotWith(f, m, T);
                            } else b = f;
                            S = this.editor
                                .getPointInShapeSpace(a, b)
                                .toFixed()
                                .toJson();
                        }
                        (this.currentLineLength += E.Dist(p.points[0], S)),
                            (h[h.length - 1] = {
                                ...p,
                                type: "straight",
                                points: [p.points[0], S],
                            });
                        const P = {
                            id: o,
                            type: this.shapeType,
                            props: {segments: h},
                        };
                        this.canClose() &&
                        (P.props.isClosed = this.getIsClosed(s, i)),
                            this.editor.updateShapes([P], {squashing: !0});
                        break;
                    }
                    case "free": {
                        const h = s.slice(),
                            p = h[h.length - 1],
                            m = [...p.points];
                        if (m.length && this.mergeNextPoint) {
                            const {z: g} = m[m.length - 1];
                            m[m.length - 1] = {
                                x: u.x,
                                y: u.y,
                                z: g ? Math.max(g, u.z) : u.z,
                            };
                        } else
                            (this.currentLineLength += E.Dist(m[m.length - 1], u)),
                                m.push(u);
                        (h[h.length - 1] = {...p, points: m}),
                            (this.currentLineLength = this.getLineLength(h));
                        const f = {
                            id: o,
                            type: this.shapeType,
                            props: {segments: h},
                        };
                        if (
                            (this.canClose() &&
                            (f.props.isClosed = this.getIsClosed(h, i)),
                                this.editor.updateShapes([f], {squashing: !0}),
                            m.length > 500)
                        ) {
                            this.editor.updateShapes([
                                {
                                    id: o,
                                    type: this.shapeType,
                                    props: {isComplete: !0},
                                },
                            ]);
                            const {currentPagePoint: g} = this.editor.inputs,
                                b = Ge();
                            this.editor.createShapes([
                                {
                                    id: b,
                                    type: this.shapeType,
                                    x: Af(g.x),
                                    y: Af(g.y),
                                    props: {
                                        isPen: this.isPen,
                                        segments: [
                                            {
                                                type: "free",
                                                points: [
                                                    {
                                                        x: 0,
                                                        y: 0,
                                                        z: this.isPen
                                                            ? +(d * 1.25).toFixed()
                                                            : 0.5,
                                                    },
                                                ],
                                            },
                                        ],
                                    },
                                },
                            ]),
                                (this.initialShape = structuredClone(
                                    this.editor.getShape(b)
                                )),
                                (this.mergeNextPoint = !1),
                                (this.lastRecordedPoint =
                                    this.editor.inputs.currentPagePoint.clone()),
                                (this.currentLineLength = 0);
                        }
                        break;
                    }
                }
            }
            getLineLength(n) {
                let r = 0;
                for (const o of n)
                    for (let i = 0; i < o.points.length - 1; i++) {
                        const a = o.points[i],
                            s = o.points[i + 1];
                        r += E.Sub(s, a).len2();
                    }
                return Math.sqrt(r);
            }
            complete() {
                if (!this.canDraw) {
                    this.cancel();
                    return;
                }
                const {initialShape: n} = this;
                n &&
                (this.editor.updateShapes([
                    {id: n.id, type: n.type, props: {isComplete: !0}},
                ]),
                    this.parent.transition("idle"));
            }
            cancel() {
                this.parent.transition("idle", this.info);
            }
        }
        w(Tw, "id", "drawing");
        let D6 =
            ((G2 = class extends ie {
                constructor() {
                    super(...arguments);
                    w(this, "onPointerDown", (n) => {
                        this.parent.transition("drawing", n);
                    });
                    w(this, "onEnter", () => {
                        this.editor.setCursor({type: "cross", rotation: 0});
                    });
                    w(this, "onCancel", () => {
                        this.editor.setCurrentTool("select");
                    });
                }
            }),
                w(G2, "id", "idle"),
                G2);
        class Am extends ie {
            constructor() {
                super(...arguments);
                w(this, "shapeType", "draw");
                w(this, "onExit", () => {
                    const n = this.children.drawing;
                    n.initialShape = void 0;
                });
            }
        }
        w(Am, "id", "draw"),
            w(Am, "initial", "idle"),
            w(Am, "children", () => [D6, Tw]);
        class $w extends im {
            constructor() {
                super(...arguments);
                w(this, "shapeType", "frame");
                w(this, "onCreate", (n) => {
                    if (!n) return;
                    const r = this.editor.getShapePageBounds(n),
                        o = [],
                        i = this.editor.getShapeAncestors(n).map((a) => a.id);
                    this.editor.getCurrentPageShapes().map((a) => {
                        if (a.id === n.id || a.isLocked) return;
                        const s = this.editor.getShapePageBounds(a);
                        s && r.contains(s) && GZ(a, i, n) && o.push(a.id);
                    }),
                        this.editor.reparentShapes(o, n.id),
                        this.editor.getInstanceState().isToolLocked
                            ? this.editor.setCurrentTool("frame")
                            : this.editor.setCurrentTool("select.idle");
                });
            }
        }
        w($w, "id", "frame"), w($w, "initial", "idle");
        function GZ(e, t, n) {
            return t.includes(e.id) ? !1 : e.parentId === n.parentId;
        }
        let XZ =
                ((X2 = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "onPointerDown", (n) => {
                            this.parent.transition("pointing", n);
                        });
                        w(this, "onEnter", () => {
                            this.editor.setCursor({type: "cross", rotation: 0});
                        });
                        w(this, "onKeyUp", (n) => {
                            var r;
                            if (n.key === "Enter") {
                                if (this.editor.getInstanceState().isReadonly)
                                    return null;
                                const o = this.editor.getOnlySelectedShape();
                                o &&
                                this.editor.getShapeUtil(o).canEdit(o) &&
                                (this.editor.setCurrentTool("select"),
                                    this.editor.setEditingShape(o.id),
                                (r = this.editor.root.getCurrent()) == null ||
                                r.transition("editing_shape", {
                                    ...n,
                                    target: "shape",
                                    shape: o,
                                }));
                            }
                        });
                        w(this, "onCancel", () => {
                            this.editor.setCurrentTool("select");
                        });
                    }
                }),
                    w(X2, "id", "idle"),
                    X2),
            qZ =
                ((q2 = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "markId", "");
                        w(this, "onPointerUp", () => {
                            this.complete();
                        });
                        w(this, "onPointerMove", (n) => {
                            if (this.editor.inputs.isDragging) {
                                const {originPagePoint: r} = this.editor.inputs,
                                    o = Ge();
                                (this.markId = `creating:${o}`),
                                    this.editor.mark(this.markId),
                                    this.editor
                                        .createShapes([
                                            {
                                                id: o,
                                                type: "geo",
                                                x: r.x,
                                                y: r.y,
                                                props: {
                                                    w: 1,
                                                    h: 1,
                                                    geo: this.editor.getStyleForNextShape(
                                                        xo
                                                    ),
                                                },
                                            },
                                        ])
                                        .select(o)
                                        .setCurrentTool("select.resizing", {
                                            ...n,
                                            target: "selection",
                                            handle: "bottom_right",
                                            isCreating: !0,
                                            creationCursorOffset: {x: 1, y: 1},
                                            onInteractionEnd: "geo",
                                        });
                            }
                        });
                        w(this, "onCancel", () => {
                            this.cancel();
                        });
                        w(this, "onComplete", () => {
                            this.complete();
                        });
                        w(this, "onInterrupt", () => {
                            this.cancel();
                        });
                    }
                    complete() {
                        const {originPagePoint: n} = this.editor.inputs,
                            r = Ge();
                        (this.markId = `creating:${r}`),
                            this.editor.mark(this.markId),
                            this.editor.createShapes([
                                {
                                    id: r,
                                    type: "geo",
                                    x: n.x,
                                    y: n.y,
                                    props: {
                                        geo: this.editor.getStyleForNextShape(xo),
                                        w: 1,
                                        h: 1,
                                    },
                                },
                            ]);
                        const o = this.editor.getShape(r);
                        if (!o) return;
                        const i =
                                o.props.geo === "star"
                                    ? new ce(0, 0, 200, 190)
                                    : o.props.geo === "cloud"
                                        ? new ce(0, 0, 300, 180)
                                        : new ce(0, 0, 200, 200),
                            a = i.center,
                            s = this.editor.getShapeParentTransform(o);
                        s && a.rot(-s.rotation()),
                            this.editor.select(r),
                            this.editor.updateShapes([
                                {
                                    id: o.id,
                                    type: "geo",
                                    x: o.x - a.x,
                                    y: o.y - a.y,
                                    props: {
                                        geo: this.editor.getStyleForNextShape(xo),
                                        w: i.width,
                                        h: i.height,
                                    },
                                },
                            ]),
                            this.editor.getInstanceState().isToolLocked
                                ? this.parent.transition("idle")
                                : this.editor.setCurrentTool("select", {});
                    }
                    cancel() {
                        this.parent.transition("idle");
                    }
                }),
                    w(q2, "id", "pointing"),
                    q2);
        class Mm extends ie {
            constructor() {
                super(...arguments);
                w(this, "shapeType", "geo");
            }
        }
        w(Mm, "id", "geo"),
            w(Mm, "initial", "idle"),
            w(Mm, "children", () => [XZ, qZ]);
        class zm extends ie {
            constructor() {
                super(...arguments);
                w(this, "shapeType", "highlight");
                w(this, "onExit", () => {
                    const n = this.children.drawing;
                    n.initialShape = void 0;
                });
            }
        }
        w(zm, "id", "highlight"),
            w(zm, "initial", "idle"),
            w(zm, "children", () => [D6, Tw]);
        let ZZ =
            ((Z2 = class extends ie {
                constructor() {
                    super(...arguments);
                    w(this, "shapeId", "");
                    w(this, "onEnter", (n) => {
                        (this.shapeId = n.shapeId),
                            this.editor.setCursor({type: "cross", rotation: 0});
                    });
                    w(this, "onPointerDown", () => {
                        this.parent.transition("pointing", {shapeId: this.shapeId});
                    });
                    w(this, "onCancel", () => {
                        this.editor.setCurrentTool("select");
                    });
                }
            }),
                w(Z2, "id", "idle"),
                Z2);
        const L6 = 2;
        let QZ =
            ((Q2 = class extends ie {
                constructor() {
                    super(...arguments);
                    w(this, "shape", {});
                    w(this, "markId");
                    w(this, "onEnter", (n) => {
                        const {inputs: r} = this.editor,
                            {currentPagePoint: o} = r;
                        this.markId = void 0;
                        const i = n.shapeId && this.editor.getShape(n.shapeId);
                        if (i && r.shiftKey) {
                            (this.markId = `creating:${i.id}`),
                                this.editor.mark(this.markId),
                                (this.shape = i);
                            const a = this.editor.getShapeHandles(this.shape);
                            if (!a) return;
                            const s = a.filter((g) => g.type === "vertex").sort(pn),
                                l = s[s.length - 1],
                                c = s[s.length - 2],
                                d = re.applyToPoint(
                                    this.editor.getShapeParentTransform(this.shape),
                                    new E(this.shape.x, this.shape.y)
                                );
                            let u, h, p;
                            const m = E.Sub(o, d);
                            E.Dist(l, c) < L6 || E.Dist(m, l) < L6
                                ? ((u = l.index),
                                    (h = l.id),
                                    (p = {...l, x: m.x + 0.1, y: m.y + 0.1}))
                                : ((u = di(l.index)),
                                    (h = "handle:" + u),
                                    (p = {
                                        id: h,
                                        type: "vertex",
                                        index: u,
                                        x: m.x + 0.1,
                                        y: m.y + 0.1,
                                        canBind: !1,
                                    }));
                            const f = na(this.shape.props.handles);
                            (f[p.id] = p),
                                this.editor.updateShapes([
                                    {
                                        id: this.shape.id,
                                        type: this.shape.type,
                                        props: {handles: f},
                                    },
                                ]);
                        } else {
                            const a = Ge();
                            (this.markId = `creating:${a}`),
                                this.editor.mark(this.markId),
                                this.editor.createShapes([
                                    {id: a, type: "line", x: o.x, y: o.y},
                                ]),
                                this.editor.select(a),
                                (this.shape = this.editor.getShape(a));
                        }
                    });
                    w(this, "onPointerMove", () => {
                        if (this.shape && this.editor.inputs.isDragging) {
                            const n = this.editor.getShapeHandles(this.shape);
                            if (!n)
                                throw (
                                    (this.markId &&
                                    this.editor.bailToMark(this.markId),
                                        Error("No handles found"))
                                );
                            const r = Bn(n);
                            this.editor.setCurrentTool("select.dragging_handle", {
                                shape: this.shape,
                                isCreating: !0,
                                handle: {...r, x: r.x - 0.1, y: r.y - 0.1},
                                onInteractionEnd: "line",
                            });
                        }
                    });
                    w(this, "onPointerUp", () => {
                        this.complete();
                    });
                    w(this, "onCancel", () => {
                        this.cancel();
                    });
                    w(this, "onComplete", () => {
                        this.complete();
                    });
                    w(this, "onInterrupt", () => {
                        this.parent.transition("idle"),
                        this.markId && this.editor.bailToMark(this.markId),
                            this.editor.snaps.clear();
                    });
                }
                complete() {
                    this.parent.transition("idle", {shapeId: this.shape.id}),
                        this.editor.snaps.clear();
                }
                cancel() {
                    this.markId && this.editor.bailToMark(this.markId),
                        this.parent.transition("idle", {shapeId: this.shape.id}),
                        this.editor.snaps.clear();
                }
            }),
                w(Q2, "id", "pointing"),
                Q2);
        class Rm extends ie {
            constructor() {
                super(...arguments);
                w(this, "shapeType", "line");
            }
        }
        w(Rm, "id", "line"),
            w(Rm, "initial", "idle"),
            w(Rm, "children", () => [ZZ, QZ]);
        let JZ =
                ((J2 = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "onPointerDown", (n) => {
                            this.parent.transition("pointing", n);
                        });
                        w(this, "onEnter", () => {
                            this.editor.setCursor({type: "cross", rotation: 0});
                        });
                        w(this, "onCancel", () => {
                            this.editor.setCurrentTool("select");
                        });
                    }
                }),
                    w(J2, "id", "idle"),
                    J2),
            eQ =
                ((e_ = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "dragged", !1);
                        w(this, "info", {});
                        w(this, "wasFocusedOnEnter", !1);
                        w(this, "markId", "");
                        w(this, "shape", {});
                        w(this, "onEnter", () => {
                            (this.wasFocusedOnEnter = !this.editor.getIsMenuOpen()),
                            this.wasFocusedOnEnter &&
                            (this.shape = this.createShape());
                        });
                        w(this, "onPointerMove", (n) => {
                            this.editor.inputs.isDragging &&
                            (this.wasFocusedOnEnter ||
                            (this.shape = this.createShape()),
                                this.editor.setCurrentTool("select.translating", {
                                    ...n,
                                    target: "shape",
                                    shape: this.shape,
                                    onInteractionEnd: "note",
                                    isCreating: !0,
                                    onCreate: () => {
                                        this.editor.setEditingShape(this.shape.id),
                                            this.editor.setCurrentTool(
                                                "select.editing_shape"
                                            );
                                    },
                                }));
                        });
                        w(this, "onPointerUp", () => {
                            this.complete();
                        });
                        w(this, "onInterrupt", () => {
                            this.cancel();
                        });
                        w(this, "onComplete", () => {
                            this.complete();
                        });
                        w(this, "onCancel", () => {
                            this.cancel();
                        });
                    }
                    complete() {
                        this.wasFocusedOnEnter &&
                        (this.editor.getInstanceState().isToolLocked
                            ? this.parent.transition("idle")
                            : (this.editor.setEditingShape(this.shape.id),
                                this.editor.setCurrentTool(
                                    "select.editing_shape",
                                    {
                                        ...this.info,
                                        target: "shape",
                                        shape: this.shape,
                                    }
                                )));
                    }
                    cancel() {
                        this.editor.bailToMark(this.markId),
                            this.parent.transition("idle", this.info);
                    }
                    createShape() {
                        const {
                                inputs: {originPagePoint: n},
                            } = this.editor,
                            r = Ge();
                        (this.markId = `creating:${r}`),
                            this.editor.mark(this.markId),
                            this.editor
                                .createShapes([
                                    {id: r, type: "note", x: n.x, y: n.y},
                                ])
                                .select(r);
                        const o = this.editor.getShape(r),
                            i = this.editor.getShapeGeometry(o).bounds;
                        return (
                            this.editor.updateShapes([
                                {
                                    id: r,
                                    type: "note",
                                    x: o.x - i.width / 2,
                                    y: o.y - i.height / 2,
                                },
                            ]),
                                this.editor.getShape(r)
                        );
                    }
                }),
                    w(e_, "id", "pointing"),
                    e_);
        class Om extends ie {
            constructor() {
                super(...arguments);
                w(this, "shapeType", "note");
            }
        }
        w(Om, "id", "note"),
            w(Om, "initial", "idle"),
            w(Om, "children", () => [JZ, eQ]);
        function Du(e) {
            const t = e.getShapeAtPoint(e.inputs.currentPagePoint, {
                hitInside: !1,
                hitLabels: !1,
                margin: Xr / e.getZoomLevel(),
                renderingOnly: !0,
            });
            if (!t) return e.setHoveredShape(null);
            let n;
            const r = e.getOutermostSelectableShape(t);
            return (
                r === t ||
                r.id === e.getFocusedGroupId() ||
                e.getSelectedShapeIds().includes(r.id)
                    ? (n = t)
                    : (n = r),
                    e.setHoveredShape(n.id)
            );
        }
        let tQ =
                ((t_ = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "onPointerMove", (n) => {
                            switch (n.target) {
                                case "shape":
                                case "canvas":
                                    Du(this.editor);
                            }
                        });
                        w(this, "onPointerDown", (n) => {
                            this.parent.transition("pointing", n);
                        });
                        w(this, "onEnter", () => {
                            this.editor.setCursor({type: "cross", rotation: 0});
                        });
                        w(this, "onKeyDown", (n) => {
                            var r;
                            if (n.key === "Enter") {
                                if (this.editor.getInstanceState().isReadonly)
                                    return null;
                                const o = this.editor.getOnlySelectedShape();
                                o &&
                                this.editor.getShapeUtil(o).canEdit(o) &&
                                (this.editor.setCurrentTool("select"),
                                    this.editor.setEditingShape(o.id),
                                (r = this.editor.root.getCurrent()) == null ||
                                r.transition("editing_shape", {
                                    ...n,
                                    target: "shape",
                                    shape: o,
                                }));
                            }
                        });
                        w(this, "onCancel", () => {
                            this.editor.setCurrentTool("select");
                        });
                    }
                }),
                    w(t_, "id", "idle"),
                    t_),
            nQ =
                ((n_ = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "shape");
                        w(this, "markId", "");
                        w(this, "onExit", () => {
                            this.editor.setHintingShapes([]);
                        });
                        w(this, "onPointerMove", (n) => {
                            if (this.editor.inputs.isDragging) {
                                const {
                                        inputs: {originPagePoint: r},
                                    } = this.editor,
                                    o = Ge();
                                if (
                                    ((this.markId = `creating:${o}`),
                                        this.editor.mark(this.markId),
                                        this.editor.createShapes([
                                            {
                                                id: o,
                                                type: "text",
                                                x: r.x,
                                                y: r.y,
                                                props: {text: "", autoSize: !1, w: 20},
                                            },
                                        ]),
                                        this.editor.select(o),
                                        (this.shape = this.editor.getShape(o)),
                                        !this.shape)
                                )
                                    return;
                                const {shape: i} = this;
                                this.editor.setCurrentTool("select.resizing", {
                                    ...n,
                                    target: "selection",
                                    handle: "right",
                                    isCreating: !0,
                                    creationCursorOffset: {x: 1, y: 1},
                                    onInteractionEnd: "text",
                                    onCreate: () => {
                                        this.editor.setEditingShape(i.id),
                                            this.editor.setCurrentTool(
                                                "select.editing_shape"
                                            );
                                    },
                                });
                            }
                        });
                        w(this, "onPointerUp", () => {
                            this.complete();
                        });
                        w(this, "onComplete", () => {
                            this.cancel();
                        });
                        w(this, "onCancel", () => {
                            this.cancel();
                        });
                        w(this, "onInterrupt", () => {
                            this.cancel();
                        });
                    }
                    complete() {
                        var i;
                        this.editor.mark("creating text shape");
                        const n = Ge(),
                            {x: r, y: o} = this.editor.inputs.currentPagePoint;
                        this.editor
                            .createShapes([
                                {
                                    id: n,
                                    type: "text",
                                    x: r,
                                    y: o,
                                    props: {text: "", autoSize: !0},
                                },
                            ])
                            .select(n),
                            this.editor.setEditingShape(n),
                            this.editor.setCurrentTool("select"),
                        (i = this.editor.root.getCurrent()) == null ||
                        i.transition("editing_shape");
                    }
                    cancel() {
                        this.parent.transition("idle"),
                            this.editor.bailToMark(this.markId);
                    }
                }),
                    w(n_, "id", "pointing"),
                    n_);
        class Dm extends ie {
            constructor() {
                super(...arguments);
                w(this, "shapeType", "text");
            }
        }
        w(Dm, "id", "text"),
            w(Dm, "initial", "idle"),
            w(Dm, "children", () => [tQ, nQ]);
        const rQ = [Dm, Am, Mm, Om, Rm, $w, $m, zm];
        function Lt() {
            return Kn({isDarkMode: em()});
        }
        const _t = N.memo(function ({theme: t, d: n, color: r, fill: o}) {
                switch (o) {
                    case "none":
                        return null;
                    case "solid":
                        return v.jsx("path", {fill: t[r].semi, d: n});
                    case "semi":
                        return v.jsx("path", {fill: t.solid, d: n});
                    case "pattern":
                        return v.jsx(oQ, {theme: t, color: r, fill: o, d: n});
                }
            }),
            oQ = function ({d: t, color: n, theme: r}) {
                const o = W(),
                    i = X("zoomLevel", () => o.getZoomLevel(), [o]),
                    a = Math.ceil(i),
                    s = o.getZoomLevel() <= 0.18;
                return v.jsxs(v.Fragment, {
                    children: [
                        v.jsx("path", {fill: r[n].pattern, d: t}),
                        v.jsx("path", {
                            fill: s ? r[n].semi : `url(#${Rf[`${a}_${r.id}`]})`,
                            d: t,
                        }),
                    ],
                });
            };
        function dr({d: e, color: t, fill: n, theme: r}) {
            if (n === "none") return;
            if (n === "pattern") {
                const i = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "g"
                    ),
                    a = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "path"
                    );
                a.setAttribute("d", e), a.setAttribute("fill", r[t].pattern);
                const s = document.createElementNS(
                    "http://www.w3.org/2000/svg",
                    "path"
                );
                return (
                    s.setAttribute("d", e),
                        s.setAttribute("fill", "url(#hash_pattern)"),
                        i.appendChild(a),
                        i.appendChild(s),
                        i
                );
            }
            const o = document.createElementNS(
                "http://www.w3.org/2000/svg",
                "path"
            );
            switch ((o.setAttribute("d", e), n)) {
                case "semi": {
                    o.setAttribute("fill", r.solid);
                    break;
                }
                case "solid": {
                    o.setAttribute("fill", r[t].semi);
                    break;
                }
            }
            return o;
        }
        function eo(e, t) {
            if (t) {
                const n = document.createElementNS(
                    "http://www.w3.org/2000/svg",
                    "g"
                );
                return n.appendChild(t), n.appendChild(e), n;
            } else return e;
        }
        function iQ(e) {
            return e.replace(/\s/g, " ");
        }
        function Lm(e, t, n) {
            const {padding: r = 0} = n,
                o = document.createElementNS("http://www.w3.org/2000/svg", "text");
            if (
                (o.setAttribute("font-size", n.fontSize + "px"),
                    o.setAttribute("font-family", n.fontFamily),
                    o.setAttribute("font-style", n.fontStyle),
                    o.setAttribute("font-weight", n.fontWeight),
                    o.setAttribute("line-height", n.lineHeight * n.fontSize + "px"),
                    o.setAttribute("dominant-baseline", "mathematical"),
                    o.setAttribute("alignment-baseline", "mathematical"),
                t.length === 0)
            )
                return o;
            const i = ce.From(t[0].box);
            for (const {box: c} of t) i.union(c);
            const a = r + (n.offsetX ?? 0),
                s =
                    (n.offsetY ?? 0) +
                    n.fontSize / 2 +
                    (n.verticalTextAlign === "start"
                        ? r
                        : n.verticalTextAlign === "end"
                            ? n.height - r - i.height
                            : (Math.ceil(n.height) - i.height) / 2);
            let l = null;
            for (const {text: c, box: d} of t) {
                if (l !== null && d.y > l) {
                    const m = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "tspan"
                    );
                    m.setAttribute("alignment-baseline", "mathematical"),
                        m.setAttribute("x", a + "px"),
                        m.setAttribute("y", d.y + s + "px"),
                        (m.textContent = `
`),
                        o.appendChild(m);
                }
                const h = document.createElementNS(
                    "http://www.w3.org/2000/svg",
                    "tspan"
                );
                h.setAttribute("alignment-baseline", "mathematical"),
                    h.setAttribute("x", d.x + a + "px"),
                    h.setAttribute("y", d.y + s + "px");
                const p = iQ(c);
                (h.textContent = p), o.appendChild(h), (l = d.y);
            }
            return (
                n.stroke &&
                n.strokeWidth &&
                (o.setAttribute("stroke", n.stroke),
                    o.setAttribute("stroke-width", n.strokeWidth + "px")),
                n.fill && o.setAttribute("fill", n.fill),
                    o
            );
        }
        function jm(e) {
            return {
                key: `${yo.id}:${e}`,
                getElement: async () => {
                    const t = aQ(e);
                    if (!t) return null;
                    const n = t.$$_url,
                        r = t.$$_fontface;
                    if (!n || !r) return null;
                    const o = await (await fetch(n)).blob(),
                        i = await new Promise((l, c) => {
                            const d = new FileReader();
                            (d.onload = () => l(d.result)),
                                (d.onerror = c),
                                d.readAsDataURL(o);
                        }),
                        a = r.replace(n, i),
                        s = document.createElementNS(
                            "http://www.w3.org/2000/svg",
                            "style"
                        );
                    return (s.textContent = a), s;
                },
            };
        }
        function aQ(e) {
            const t = qd[e];
            for (const n of document.fonts) if (t.includes(n.family)) return n;
            return null;
        }
        function Aw(e, t) {
            return {
                key: `${yo.id}:${e}`,
                getElement: async () => {
                    if (e !== "pattern") return null;
                    const n = 8 / 12,
                        r = document.createElement("div");
                    return (
                        (r.innerHTML = `
				<svg>
					<defs>
						<mask id="hash_pattern_mask">
							<rect x="0" y="0" width="8" height="8" fill="white" />
							<g
								strokeLinecap="round"
								stroke="black"
							>
								<line x1="${n * 1}" y1="${n * 3}" x2="${n * 3}" y2="${n * 1}" />
								<line x1="${n * 5}" y1="${n * 7}" x2="${n * 7}" y2="${n * 5}" />
								<line x1="${n * 9}" y1="${n * 11}" x2="${n * 11}" y2="${n * 9}" />
							</g>
						</mask>
						<pattern
							id="hash_pattern"
							width="8"
							height="8"
							patternUnits="userSpaceOnUse"
						>
							<rect x="0" y="0" width="8" height="8" fill="${
                            t.solid
                        }" mask="url(#hash_pattern_mask)" />
						</pattern>
					</defs>
				</svg>
			`),
                            Array.from(r.querySelectorAll("defs > *"))
                    );
                },
            };
        }
        function Mw() {
            return {key: `${yo.id}:pattern`, component: cQ};
        }
        const Lu = 8,
            j6 = (e, t, n) =>
                new Promise((r, o) => {
                    const i = Lu * t * e,
                        a = document.createElement("canvas");
                    (a.width = i), (a.height = i);
                    const s = a.getContext("2d");
                    if (!s) return;
                    (s.fillStyle = n ? "#212529" : "#f8f9fa"),
                        s.fillRect(0, 0, i, i),
                        (s.globalCompositeOperation = "destination-out"),
                        (s.lineCap = "round"),
                        (s.lineWidth = 1.25 * t * e);
                    const l = 8 / 12,
                        c = (d) => d * t * e;
                    s.beginPath(),
                        s.moveTo(c(l * 1), c(l * 3)),
                        s.lineTo(c(l * 3), c(l * 1)),
                        s.moveTo(c(l * 5), c(l * 7)),
                        s.lineTo(c(l * 7), c(l * 5)),
                        s.moveTo(c(l * 9), c(l * 11)),
                        s.lineTo(c(l * 11), c(l * 9)),
                        s.stroke(),
                        a.toBlob((d) => {
                            !d || Xe.throwToBlob.get() ? o() : r(d);
                        });
                }),
            N6 = (e, t) => {
                const n = document.createElement("canvas");
                (n.width = e[0]), (n.height = e[1]);
                const r = n.getContext("2d");
                return r ? (t(r), n.toDataURL()) : "";
            },
            sQ = () => {
                const e = [];
                for (let t = 1; t <= Math.ceil(ra); t++) {
                    const n = N6([1, 1], (o) => {
                            (o.fillStyle = xf.lightMode.black.semi),
                                o.fillRect(0, 0, 1, 1);
                        }),
                        r = N6([1, 1], (o) => {
                            (o.fillStyle = xf.darkMode.black.semi),
                                o.fillRect(0, 0, 1, 1);
                        });
                    e.push({zoom: t, url: n, darkMode: !1}),
                        e.push({zoom: t, url: r, darkMode: !0});
                }
                return e;
            };
        function lQ() {
            const t = W().getInstanceState().devicePixelRatio,
                [n, r] = y.useState(!1),
                o = y.useMemo(() => sQ(), []),
                [i, a] = y.useState(o);
            return (
                y.useEffect(() => {
                    const l = [];
                    for (let d = 1; d <= Math.ceil(ra); d++)
                        l.push(
                            j6(t, d, !1).then((u) => ({
                                zoom: d,
                                url: URL.createObjectURL(u),
                                darkMode: !1,
                            }))
                        ),
                            l.push(
                                j6(t, d, !0).then((u) => ({
                                    zoom: d,
                                    url: URL.createObjectURL(u),
                                    darkMode: !0,
                                }))
                            );
                    let c = !1;
                    return (
                        Promise.all(l).then((d) => {
                            c || (a(d), r(!0));
                        }),
                            () => {
                                (c = !0), r(!1);
                            }
                    );
                }, [t]),
                    {
                        defs: v.jsx(v.Fragment, {
                            children: i.map((l) => {
                                const c = l.zoom + (l.darkMode ? "_dark" : "_light");
                                return v.jsx(
                                    "pattern",
                                    {
                                        id: Rf[c],
                                        width: Lu,
                                        height: Lu,
                                        patternUnits: "userSpaceOnUse",
                                        children: v.jsx("image", {
                                            href: l.url,
                                            width: Lu,
                                            height: Lu,
                                        }),
                                    },
                                    c
                                );
                            }),
                        }),
                        isReady: n,
                    }
            );
        }
        function cQ() {
            const e = W(),
                t = y.useRef(null),
                {defs: n, isReady: r} = lQ();
            return (
                y.useEffect(() => {
                    if (r && e.environment.isSafari) {
                        const o = F6(t.current);
                        o &&
                        requestAnimationFrame(() => {
                            (o.style.display = "none"),
                                requestAnimationFrame(() => {
                                    o.style.display = "";
                                });
                        });
                    }
                }, [e, r]),
                    v.jsx("g", {ref: t, children: n})
            );
        }
        function F6(e) {
            return e.classList.contains("tl-html-layer")
                ? e
                : e.parentElement
                    ? F6(e.parentElement)
                    : null;
        }
        function mn(e, t, n = {}) {
            const {
                closed: r = !1,
                snap: o = 1,
                start: i = "outset",
                end: a = "outset",
                lengthRatio: s = 2,
                style: l = "dashed",
            } = n;
            let c = 0,
                d = 0,
                u = 1,
                h = 0,
                p = 0;
            switch (l) {
                case "dashed": {
                    (u = 1), (c = Math.min(t * s, e / 4));
                    break;
                }
                case "dotted": {
                    (u = 100), (c = t / u);
                    break;
                }
                default:
                    return {strokeDasharray: "none", strokeDashoffset: "none"};
            }
            return (
                r ||
                (i === "outset"
                    ? ((e += c / 2), (p += c / 2))
                    : i === "skip" && ((e -= c), (p -= c)),
                    a === "outset" ? (e += c / 2) : a === "skip" && (e -= c)),
                    (d = Math.floor(e / c / (2 * u))),
                    (d -= d % o),
                    d < 3 && l === "dashed"
                        ? e / t < 5
                            ? ((c = e), (d = 1), (h = 0))
                            : ((c = e * 0.333), (h = e * 0.333))
                        : ((d = Math.max(d, 3)),
                            (c = e / d / (2 * u)),
                            r
                                ? ((p = c / 2), (h = (e - d * c) / d))
                                : (h = (e - d * c) / Math.max(1, d - 1))),
                    {strokeDasharray: [c, h].join(" "), strokeDashoffset: p.toString()}
            );
        }
        function dQ(e, t, n) {
            const r = t === "end" ? e.end.point : e.start.point,
                o = t === "end" ? e.start.point : e.end.point,
                i = e.isStraight ? E.Dist(o, r) : Math.abs(e.bodyArc.length),
                a = Math.max(Math.min(i / 5, n * 3), n);
            let s;
            if (e.isStraight) s = E.Nudge(r, o, a);
            else {
                const l = lU(r, a, e.handleArc.center, e.handleArc.radius);
                s =
                    t === "end"
                        ? e.handleArc.sweepFlag
                            ? l[0]
                            : l[1]
                        : e.handleArc.sweepFlag
                            ? l[1]
                            : l[0];
            }
            return {point: r, int: s};
        }
        function uQ({point: e, int: t}) {
            const n = E.RotWith(t, e, Oe / 6),
                r = E.RotWith(t, e, -Oe / 6);
            return `M ${n.x} ${n.y} L ${e.x} ${e.y} L ${r.x} ${r.y}`;
        }
        function hQ({point: e, int: t}) {
            const n = E.RotWith(t, e, Oe / 6),
                r = E.RotWith(t, e, -Oe / 6);
            return `M ${n.x} ${n.y} L ${e.x} ${e.y} L ${r.x} ${r.y} Z`;
        }
        function pQ({point: e, int: t}) {
            const n = E.Sub(t, e).div(2),
                r = E.Add(e, E.Rot(n, qe)),
                o = E.Sub(e, E.Rot(n, qe));
            return `M ${r.x} ${r.y} L ${t.x} ${t.y} L ${o.x} ${o.y} Z`;
        }
        function fQ({point: e, int: t}) {
            const n = E.Lrp(e, t, 0.45),
                r = E.Dist(n, e);
            return `M ${n.x - r},${n.y}
  a ${r},${r} 0 1,0 ${r * 2},0
  a ${r},${r} 0 1,0 -${r * 2},0 `;
        }
        function mQ({point: e, int: t}) {
            const n = E.Lrp(e, t, 0.75),
                r = E.RotWith(n, e, Oe / 4),
                o = E.RotWith(n, e, -Oe / 4),
                i = E.Lrp(r, o, 0.5);
            return (
                i.add(E.Sub(i, e)),
                    `M ${i.x} ${i.y} L ${r.x} ${r.y} ${e.x} ${e.y} L ${o.x} ${o.y} Z`
            );
        }
        function gQ({int: e, point: t}) {
            const n = E.Lrp(t, e, 0.85),
                r = E.Sub(n, t).div(2),
                o = E.Add(t, E.Rot(r, qe)),
                i = E.Sub(t, E.Rot(r, qe)),
                a = E.Add(n, E.Rot(r, qe)),
                s = E.Sub(n, E.Rot(r, qe));
            return `M ${o.x} ${o.y} L ${a.x} ${a.y} L ${s.x} ${s.y} L ${i.x} ${i.y} Z`;
        }
        function vQ({int: e, point: t}) {
            const n = E.Sub(e, t).div(2),
                r = E.Add(t, E.Rot(n, qe)),
                o = E.Sub(t, E.Rot(n, qe));
            return `M ${r.x} ${r.y} L ${o.x} ${o.y}`;
        }
        function ac(e, t, n) {
            const r = t === "end" ? e.end.arrowhead : e.start.arrowhead;
            if (r === "none") return;
            const o = dQ(e, t, n);
            if (o) {
                switch (r) {
                    case "bar":
                        return vQ(o);
                    case "square":
                        return gQ(o);
                    case "diamond":
                        return mQ(o);
                    case "dot":
                        return fQ(o);
                    case "inverted":
                        return pQ(o);
                    case "arrow":
                        return uQ(o);
                    case "triangle":
                        return hQ(o);
                }
                return "";
            }
        }
        function bQ(e) {
            const {
                start: t,
                end: n,
                handleArc: {radius: r, largeArcFlag: o, sweepFlag: i},
            } = e;
            return `M${t.handle.x},${t.handle.y} A${r} ${r} 0 ${o} ${i} ${n.handle.x},${n.handle.y}`;
        }
        function zw(e) {
            const {
                start: t,
                end: n,
                bodyArc: {radius: r, largeArcFlag: o, sweepFlag: i},
            } = e;
            return `M${t.point.x},${t.point.y} A${r} ${r} 0 ${o} ${i} ${n.point.x},${n.point.y}`;
        }
        function B6(e, t) {
            return `M${e.x},${e.y}L${t.x},${t.y}`;
        }
        function yQ(e) {
            return B6(e.start.handle, e.end.handle);
        }
        function Rw(e) {
            return B6(e.start.point, e.end.point);
        }
        function Ow(e, t, n) {
            const r = W(),
                o = y.useRef(null),
                i = y.useRef(!1),
                a = y.useRef(),
                s = X("isEditing", () => r.getEditingShapeId() === e, [r, e]);
            y.useEffect(() => {
                const f = o.current;
                f && s && document.activeElement !== f && f.focus();
            }, [s]);
            const l = y.useCallback(() => {
                    const f = i.current;
                    (i.current = !1),
                        requestAnimationFrame(() => {
                            const g = o.current;
                            if (!g) return;
                            const b = r.getShape(e);
                            b &&
                            ((g.value = b.props.text),
                            g.value.length && !f && g.select());
                        });
                }, [r, e]),
                c = y.useCallback(() => {
                    const f = a.current;
                    requestAnimationFrame(() => {
                        var x;
                        const g = o.current,
                            b = r.getEditingShapeId();
                        if (g && b) {
                            if (b === e)
                                if (f)
                                    if (!f.length) g.focus();
                                    else {
                                        (i.current = !0), g.focus();
                                        const S = window.getSelection();
                                        S && f.forEach((_) => S.addRange(_));
                                    }
                                else g.focus();
                        } else
                            (x = window.getSelection()) == null ||
                            x.removeAllRanges(),
                                r.complete();
                    });
                }, [r, e]),
                d = y.useCallback(
                    (f) => {
                        if (s)
                            switch (((f.ctrlKey || f.metaKey) && zt(f), f.key)) {
                                case "Enter": {
                                    (f.ctrlKey || f.metaKey) && r.complete();
                                    break;
                                }
                                case "Tab": {
                                    $e(f),
                                        f.shiftKey
                                            ? fa.unindent(f.currentTarget)
                                            : fa.indent(f.currentTarget);
                                    break;
                                }
                            }
                    },
                    [r, s]
                ),
                u = y.useCallback(
                    (f) => {
                        if (!s) return;
                        let g = fa.normalizeText(f.currentTarget.value);
                        const b = g.replace(/\t/g, ic);
                        if (b !== g) {
                            const x = f.currentTarget.selectionStart;
                            (f.currentTarget.value = b),
                                (f.currentTarget.selectionStart =
                                    x + (b.length - g.length)),
                                (f.currentTarget.selectionEnd =
                                    x + (b.length - g.length)),
                                (g = b);
                        }
                        r.updateShapes([{id: e, type: t, props: {text: g}}]);
                    },
                    [r, e, t, s]
                ),
                h = n.trim().length === 0;
            y.useEffect(() => {
                if (!s) return;
                if (o.current) {
                    let g = function () {
                        var x, S;
                        const b =
                            (x = window.getSelection) == null
                                ? void 0
                                : x.call(window);
                        if (b && b.type !== "None") {
                            const _ = [];
                            if (b)
                                for (let k = 0; k < b.rangeCount; k++)
                                    _.push(
                                        (S = b.getRangeAt) == null
                                            ? void 0
                                            : S.call(b, k)
                                    );
                            a.current = _;
                        }
                    };
                    return (
                        document.addEventListener("selectionchange", g),
                            () => {
                                document.removeEventListener("selectionchange", g);
                            }
                    );
                }
            }, [s]);
            const p = y.useCallback(
                (f) => {
                    r.dispatch({
                        ...Wn(f),
                        type: "pointer",
                        name: "pointer_down",
                        target: "shape",
                        shape: r.getShape(e),
                    }),
                        zt(f);
                },
                [r, e]
            );
            return {
                rInput: o,
                isEditing: s,
                handleFocus: l,
                handleBlur: c,
                handleKeyDown: d,
                handleChange: u,
                handleInputPointerDown: p,
                handleDoubleClick: zt,
                isEmpty: h,
            };
        }
        const wQ = y.memo(function ({
                                        id: t,
                                        text: n,
                                        size: r,
                                        font: o,
                                        position: i,
                                        width: a,
                                        labelColor: s,
                                    }) {
            const {
                    rInput: l,
                    isEditing: c,
                    handleFocus: d,
                    handleBlur: u,
                    handleKeyDown: h,
                    handleChange: p,
                    isEmpty: m,
                    handleInputPointerDown: f,
                    handleDoubleClick: g,
                } = Ow(t, "arrow", n),
                x = fa.normalizeTextForDom(n).trim().length > 0;
            return !c && !x
                ? null
                : v.jsx("div", {
                    className: "tl-arrow-label",
                    "data-font": o,
                    "data-align": "center",
                    "data-hastext": !m,
                    "data-isediting": c,
                    style: {
                        textAlign: "center",
                        fontSize: pa[r],
                        lineHeight: pa[r] * qt.lineHeight + "px",
                        transform: `translate(${i.x}px, ${i.y}px)`,
                        color: s,
                    },
                    children: v.jsxs("div", {
                        className: "tl-arrow-label__inner",
                        children: [
                            v.jsx("p", {
                                style: {width: a || "9px"},
                                children: n ? fa.normalizeTextForDom(n) : " ",
                            }),
                            c &&
                            v.jsx("textarea", {
                                ref: l,
                                className: "tl-text tl-text-input",
                                name: "text",
                                tabIndex: -1,
                                autoComplete: "false",
                                autoCapitalize: "false",
                                autoCorrect: "false",
                                autoSave: "false",
                                autoFocus: !0,
                                placeholder: "",
                                spellCheck: "true",
                                wrap: "off",
                                dir: "auto",
                                datatype: "wysiwyg",
                                defaultValue: n,
                                onFocus: d,
                                onChange: p,
                                onKeyDown: h,
                                onBlur: u,
                                onContextMenu: zt,
                                onPointerDown: f,
                                onDoubleClick: g,
                            }),
                        ],
                    }),
                });
        });
        let xQ = 0;
        class Nm extends qr {
            constructor() {
                super(...arguments);
                w(this, "canEdit", () => !0);
                w(this, "canBind", () => !1);
                w(this, "canSnap", () => !1);
                w(this, "hideResizeHandles", () => !0);
                w(this, "hideRotateHandle", () => !0);
                w(this, "hideSelectionBoundsBg", () => !0);
                w(this, "hideSelectionBoundsFg", () => !0);
                w(this, "onHandleChange", (n, {handle: r, isPrecise: o}) => {
                    const i = r.id;
                    if (i === "middle") {
                        const {start: g, end: b} = Zr(this.editor, n),
                            x = E.Sub(b, g),
                            S = E.Per(x),
                            _ = E.Med(b, g),
                            k = E.Sub(_, S),
                            C = E.Add(_, S),
                            P = E.NearestPointOnLineSegment(k, C, r, !1);
                        let I = E.Dist(P, _);
                        return (
                            E.Clockwise(P, b, _) && (I *= -1),
                                {id: n.id, type: n.type, props: {bend: I}}
                        );
                    }
                    const a = sn(n),
                        l = this.editor.getShapePageTransform(a.id).applyToPoint(r);
                    if (this.editor.inputs.ctrlKey)
                        return (a.props[i] = {type: "point", x: r.x, y: r.y}), a;
                    const c = this.editor
                            .getShapePageTransform(n.id)
                            .applyToPoint(r),
                        d = this.editor.getShapeAtPoint(c, {
                            hitInside: !0,
                            hitFrameInside: !0,
                            margin: 0,
                            filter: (g) =>
                                !g.isLocked &&
                                this.editor.getShapeUtil(g).canBind(g),
                        });
                    if (!d)
                        return (a.props[i] = {type: "point", x: r.x, y: r.y}), a;
                    const u = this.editor.getShapeGeometry(d),
                        h = ce.ZeroFix(u.bounds),
                        p = this.editor.getPointInShapeSpace(d, l);
                    let m = o;
                    if (!m) {
                        const g = a.props[i];
                        (g.type === "point" ||
                            (g.type === "binding" && d.id !== g.boundShapeId)) &&
                        (m = this.editor.inputs.pointerVelocity.len() < 0.5);
                    }
                    if (!o) {
                        u.isClosed || (m = !0);
                        const g = a.props[i === "start" ? "end" : "start"];
                        g.type === "binding" &&
                        d.id === g.boundShapeId &&
                        g.isPrecise &&
                        (m = !0);
                    }
                    const f = {
                        x: (p.x - h.minX) / h.width,
                        y: (p.y - h.minY) / h.height,
                    };
                    return (
                        m &&
                        E.Dist(p, h.center) <
                        Math.max(
                            4,
                            Math.min(Math.min(h.width, h.height) * 0.15, 16)
                        ) /
                        this.editor.getZoomLevel() &&
                        ((f.x = 0.5), (f.y = 0.5)),
                            (a.props[i] = {
                                type: "binding",
                                boundShapeId: d.id,
                                normalizedAnchor: f,
                                isPrecise: m,
                                isExact: this.editor.inputs.altKey,
                            }),
                        a.props.start.type === "binding" &&
                        a.props.end.type === "binding" &&
                        a.props.start.boundShapeId ===
                        a.props.end.boundShapeId &&
                        E.Equals(
                            a.props.start.normalizedAnchor,
                            a.props.end.normalizedAnchor
                        ) &&
                        (a.props.end.normalizedAnchor.x += 0.05),
                            a
                    );
                });
                w(this, "onTranslateStart", (n) => {
                    const r =
                            n.props.start.type === "binding"
                                ? n.props.start.boundShapeId
                                : null,
                        o =
                            n.props.end.type === "binding"
                                ? n.props.end.boundShapeId
                                : null,
                        i = this.editor.getSelectedShapeIds();
                    if (
                        (r &&
                            (i.includes(r) || this.editor.isAncestorSelected(r))) ||
                        (o && (i.includes(o) || this.editor.isAncestorSelected(o)))
                    )
                        return;
                    const {start: a, end: s} = Zr(this.editor, n);
                    return {
                        id: n.id,
                        type: n.type,
                        props: {
                            ...n.props,
                            start: {type: "point", x: a.x, y: a.y},
                            end: {type: "point", x: s.x, y: s.y},
                        },
                    };
                });
                w(this, "onResize", (n, r) => {
                    const {scaleX: o, scaleY: i} = r,
                        a = Zr(this.editor, n),
                        {start: s, end: l} = sn(n.props);
                    let {bend: c} = n.props;
                    s.type === "point" &&
                    ((s.x = a.start.x * o), (s.y = a.start.y * i)),
                    l.type === "point" &&
                    ((l.x = a.end.x * o), (l.y = a.end.y * i));
                    const d = Math.abs(o),
                        u = Math.abs(i);
                    return (
                        o < 0 && i >= 0
                            ? (c !== 0 && ((c *= -1), (c *= Math.max(d, u))),
                            s.type === "binding" &&
                            (s.normalizedAnchor.x = 1 - s.normalizedAnchor.x),
                            l.type === "binding" &&
                            (l.normalizedAnchor.x = 1 - l.normalizedAnchor.x))
                            : o >= 0 && i < 0
                                ? (c !== 0 && ((c *= -1), (c *= Math.max(d, u))),
                                s.type === "binding" &&
                                (s.normalizedAnchor.y = 1 - s.normalizedAnchor.y),
                                l.type === "binding" &&
                                (l.normalizedAnchor.y = 1 - l.normalizedAnchor.y))
                                : o >= 0 && i >= 0
                                    ? c !== 0 && (c *= Math.max(d, u))
                                    : o < 0 &&
                                    i < 0 &&
                                    (c !== 0 && (c *= Math.max(d, u)),
                                    s.type === "binding" &&
                                    ((s.normalizedAnchor.x =
                                        1 - s.normalizedAnchor.x),
                                        (s.normalizedAnchor.y =
                                            1 - s.normalizedAnchor.y)),
                                    l.type === "binding" &&
                                    ((l.normalizedAnchor.x =
                                        1 - l.normalizedAnchor.x),
                                        (l.normalizedAnchor.y =
                                            1 - l.normalizedAnchor.y))),
                            {props: {start: s, end: l, bend: c}}
                    );
                });
                w(this, "onDoubleClickHandle", (n, r) => {
                    switch (r.id) {
                        case "start":
                            return {
                                id: n.id,
                                type: n.type,
                                props: {
                                    ...n.props,
                                    arrowheadStart:
                                        n.props.arrowheadStart === "none"
                                            ? "arrow"
                                            : "none",
                                },
                            };
                        case "end":
                            return {
                                id: n.id,
                                type: n.type,
                                props: {
                                    ...n.props,
                                    arrowheadEnd:
                                        n.props.arrowheadEnd === "none"
                                            ? "arrow"
                                            : "none",
                                },
                            };
                    }
                });
                w(this, "onEditEnd", (n) => {
                    const {
                        id: r,
                        type: o,
                        props: {text: i},
                    } = n;
                    i.trimEnd() !== n.props.text &&
                    this.editor.updateShapes([
                        {id: r, type: o, props: {text: i.trimEnd()}},
                    ]);
                });
            }
            getDefaultProps() {
                return {
                    dash: "draw",
                    size: "m",
                    fill: "none",
                    color: "black",
                    labelColor: "black",
                    bend: 0,
                    start: {type: "point", x: 0, y: 0},
                    end: {type: "point", x: 2, y: 0},
                    arrowheadStart: "none",
                    arrowheadEnd: "arrow",
                    text: "",
                    font: "draw",
                };
            }
            getGeometry(n) {
                const r = this.editor.getArrowInfo(n),
                    o = r.isStraight
                        ? new Wf({
                            start: E.From(r.start.point),
                            end: E.From(r.end.point),
                        })
                        : new iV({
                            center: E.Cast(r.handleArc.center),
                            radius: r.handleArc.radius,
                            start: E.Cast(r.start.point),
                            end: E.Cast(r.end.point),
                            sweepFlag: r.bodyArc.sweepFlag,
                            largeArcFlag: r.bodyArc.largeArcFlag,
                        });
                let i;
                if (n.props.text.trim()) {
                    const a = o.bounds,
                        {w: s, h: l} = this.editor.textMeasure.measureText(
                            n.props.text,
                            {
                                ...qt,
                                fontFamily: gi[n.props.font],
                                fontSize: pa[n.props.size],
                                maxWidth: null,
                            }
                        );
                    let c = s,
                        d = l;
                    if (a.width > a.height) {
                        c = Math.max(Math.min(s, 64), Math.min(a.width - 64, s));
                        const {w: u, h} = this.editor.textMeasure.measureText(
                            n.props.text,
                            {
                                ...qt,
                                fontFamily: gi[n.props.font],
                                fontSize: pa[n.props.size],
                                maxWidth: c,
                            }
                        );
                        (c = u), (d = h);
                    }
                    if (c > 16 * pa[n.props.size]) {
                        c = 16 * pa[n.props.size];
                        const {w: u, h} = this.editor.textMeasure.measureText(
                            n.props.text,
                            {
                                ...qt,
                                fontFamily: gi[n.props.font],
                                fontSize: pa[n.props.size],
                                maxWidth: c,
                            }
                        );
                        (c = u), (d = h);
                    }
                    i = new ia({
                        x: r.middle.x - c / 2 - 4.25,
                        y: r.middle.y - d / 2 - 4.25,
                        width: c + 8.5,
                        height: d + 8.5,
                        isFilled: !0,
                        isLabel: !0,
                    });
                }
                return new oa({children: i ? [o, i] : [o], isSnappable: !1});
            }
            getHandles(n) {
                const r = this.editor.getArrowInfo(n);
                return [
                    {
                        id: "start",
                        type: "vertex",
                        index: "a0",
                        x: r.start.handle.x,
                        y: r.start.handle.y,
                        canBind: !0,
                    },
                    {
                        id: "middle",
                        type: "virtual",
                        index: "a2",
                        x: r.middle.x,
                        y: r.middle.y,
                        canBind: !1,
                    },
                    {
                        id: "end",
                        type: "vertex",
                        index: "a3",
                        x: r.end.handle.x,
                        y: r.end.handle.y,
                        canBind: !0,
                    },
                ];
            }
            component(n) {
                const r = Lt(),
                    o = this.editor.getOnlySelectedShape(),
                    i =
                        this.editor.isInAny(
                            "select.idle",
                            "select.pointing_handle",
                            "select.dragging_handle",
                            "arrow.dragging"
                        ) && !this.editor.getInstanceState().isReadonly,
                    a = this.editor.getArrowInfo(n),
                    s = ce.ZeroFix(this.editor.getShapeGeometry(n).bounds),
                    l = N.useMemo(
                        () => (this.editor.environment.isSafari ? (xQ += 1) : 0),
                        [n]
                    );
                if (!(a != null && a.isValid)) return null;
                const c = fn[n.props.size],
                    d = a.start.arrowhead && ac(a, "start", c),
                    u = a.end.arrowhead && ac(a, "end", c),
                    h = a.isStraight ? Rw(a) : zw(a);
                let p = null;
                if (o === n && i) {
                    const {strokeDasharray: k, strokeDashoffset: C} = mn(
                        a.isStraight
                            ? E.Dist(a.start.handle, a.end.handle)
                            : Math.abs(a.handleArc.length),
                        2,
                        {end: "skip", start: "skip", lengthRatio: 2.5}
                    );
                    p =
                        n.props.start.type === "binding" ||
                        n.props.end.type === "binding"
                            ? v.jsx("path", {
                                className: "tl-arrow-hint",
                                d: a.isStraight ? yQ(a) : bQ(a),
                                strokeDasharray: k,
                                strokeDashoffset: C,
                                strokeWidth: 2,
                                markerStart:
                                    n.props.start.type === "binding"
                                        ? n.props.start.isExact
                                            ? ""
                                            : n.props.start.isPrecise
                                                ? "url(#arrowhead-cross)"
                                                : "url(#arrowhead-dot)"
                                        : "",
                                markerEnd:
                                    n.props.end.type === "binding"
                                        ? n.props.end.isExact
                                            ? ""
                                            : n.props.end.isPrecise
                                                ? "url(#arrowhead-cross)"
                                                : "url(#arrowhead-dot)"
                                        : "",
                                opacity: 0.16,
                            })
                            : null;
                }
                const {strokeDasharray: m, strokeDashoffset: f} = mn(
                        a.isStraight ? a.length : Math.abs(a.bodyArc.length),
                        c,
                        {style: n.props.dash}
                    ),
                    g = n.props.text.trim()
                        ? this.editor.getShapeGeometry(n).children[1]
                        : null,
                    b = !(
                        a.start.arrowhead === "none" ||
                        a.start.arrowhead === "arrow"
                    ),
                    x = !(
                        a.end.arrowhead === "none" || a.end.arrowhead === "arrow"
                    ),
                    S = (n.id + "_clip_" + l).replace(":", "_");
                return v.jsxs(v.Fragment, {
                    children: [
                        v.jsxs(ar, {
                            id: n.id,
                            style: {minWidth: 50, minHeight: 50},
                            children: [
                                v.jsx("defs", {
                                    children: v.jsxs("mask", {
                                        id: S,
                                        children: [
                                            v.jsx("rect", {
                                                x: M(-100 + s.minX),
                                                y: M(-100 + s.minY),
                                                width: M(s.width + 200),
                                                height: M(s.height + 200),
                                                fill: "white",
                                            }),
                                            g &&
                                            v.jsx("rect", {
                                                x: g.x,
                                                y: g.y,
                                                width: g.w,
                                                height: g.h,
                                                fill: "black",
                                                rx: 4,
                                                ry: 4,
                                            }),
                                            d &&
                                            b &&
                                            v.jsx("path", {
                                                d,
                                                fill:
                                                    a.start.arrowhead ===
                                                    "arrow"
                                                        ? "none"
                                                        : "black",
                                                stroke: "none",
                                            }),
                                            u &&
                                            x &&
                                            v.jsx("path", {
                                                d: u,
                                                fill:
                                                    a.end.arrowhead === "arrow"
                                                        ? "none"
                                                        : "black",
                                                stroke: "none",
                                            }),
                                        ],
                                    }),
                                }),
                                v.jsxs("g", {
                                    fill: "none",
                                    stroke: r[n.props.color].solid,
                                    strokeWidth: c,
                                    strokeLinejoin: "round",
                                    strokeLinecap: "round",
                                    pointerEvents: "none",
                                    children: [
                                        p,
                                        v.jsxs("g", {
                                            mask: `url(#${S})`,
                                            children: [
                                                v.jsx("rect", {
                                                    x: M(s.minX - 100),
                                                    y: M(s.minY - 100),
                                                    width: M(s.width + 200),
                                                    height: M(s.height + 200),
                                                    opacity: 0,
                                                }),
                                                v.jsx("path", {
                                                    d: h,
                                                    strokeDasharray: m,
                                                    strokeDashoffset: f,
                                                }),
                                            ],
                                        }),
                                        d &&
                                        b &&
                                        n.props.fill !== "none" &&
                                        v.jsx(_t, {
                                            theme: r,
                                            d,
                                            color: n.props.color,
                                            fill: n.props.fill,
                                        }),
                                        u &&
                                        x &&
                                        n.props.fill !== "none" &&
                                        v.jsx(_t, {
                                            theme: r,
                                            d: u,
                                            color: n.props.color,
                                            fill: n.props.fill,
                                        }),
                                        d && v.jsx("path", {d}),
                                        u && v.jsx("path", {d: u}),
                                    ],
                                }),
                            ],
                        }),
                        v.jsx(wQ, {
                            id: n.id,
                            text: n.props.text,
                            font: n.props.font,
                            size: n.props.size,
                            position: a.middle,
                            width: (g == null ? void 0 : g.w) ?? 0,
                            labelColor: r[n.props.labelColor].solid,
                        }),
                    ],
                });
            }
            indicator(n) {
                const {start: r, end: o} = Zr(this.editor, n),
                    i = this.editor.getArrowInfo(n),
                    a = this.editor.getShapeGeometry(n),
                    s = a.bounds,
                    l = n.props.text.trim() ? a.children[1] : null,
                    c = am(n.id);
                if (!i || E.Equals(r, o)) return null;
                const d = fn[n.props.size],
                    u = i.start.arrowhead && ac(i, "start", d),
                    h = i.end.arrowhead && ac(i, "end", d),
                    p = i.isStraight ? Rw(i) : zw(i),
                    m =
                        (u && i.start.arrowhead !== "arrow") ||
                        (h && i.end.arrowhead !== "arrow") ||
                        !!l,
                    f = (n.id + "_clip").replace(":", "_");
                return c && l
                    ? v.jsx("rect", {
                        x: M(l.x),
                        y: M(l.y),
                        width: l.w,
                        height: l.h,
                        rx: 3.5,
                        ry: 3.5,
                    })
                    : v.jsxs("g", {
                        children: [
                            m &&
                            v.jsx("defs", {
                                children: v.jsxs("mask", {
                                    id: f,
                                    children: [
                                        v.jsx("rect", {
                                            x: s.minX - 100,
                                            y: s.minY - 100,
                                            width: s.w + 200,
                                            height: s.h + 200,
                                            fill: "white",
                                        }),
                                        l &&
                                        v.jsx("rect", {
                                            x: M(l.x),
                                            y: M(l.y),
                                            width: l.w,
                                            height: l.h,
                                            fill: "black",
                                            rx: 3.5,
                                            ry: 3.5,
                                        }),
                                        u &&
                                        v.jsx("path", {
                                            d: u,
                                            fill:
                                                i.start.arrowhead ===
                                                "arrow"
                                                    ? "none"
                                                    : "black",
                                            stroke: "none",
                                        }),
                                        h &&
                                        v.jsx("path", {
                                            d: h,
                                            fill:
                                                i.end.arrowhead ===
                                                "arrow"
                                                    ? "none"
                                                    : "black",
                                            stroke: "none",
                                        }),
                                    ],
                                }),
                            }),
                            v.jsxs("g", {
                                ...(m ? {mask: `url(#${f})`} : void 0),
                                children: [
                                    m &&
                                    v.jsx("rect", {
                                        x: s.minX - 100,
                                        y: s.minY - 100,
                                        width: s.width + 200,
                                        height: s.height + 200,
                                        opacity: 0,
                                    }),
                                    v.jsx("path", {d: p}),
                                ],
                            }),
                            u && v.jsx("path", {d: u}),
                            h && v.jsx("path", {d: h}),
                            l &&
                            v.jsx("rect", {
                                x: M(l.x),
                                y: M(l.y),
                                width: l.w,
                                height: l.h,
                                rx: 3.5,
                                ry: 3.5,
                            }),
                        ],
                    });
            }
            toSvg(n, r) {
                const o = Kn({isDarkMode: this.editor.user.getIsDarkMode()});
                r.addExportDef(Aw(n.props.fill, o));
                const i = o[n.props.color].solid,
                    a = this.editor.getArrowInfo(n),
                    s = fn[n.props.size],
                    l = document.createElementNS("http://www.w3.org/2000/svg", "g");
                if (!a) return l;
                const c = a.start.arrowhead && ac(a, "start", s),
                    d = a.end.arrowhead && ac(a, "end", s),
                    u = this.editor.getShapeGeometry(n),
                    h = u.bounds,
                    p = n.props.text.trim() ? u.children[1] : null,
                    m = (n.id + "_clip").replace(":", "_");
                if (c || d || p) {
                    const _ = document.createElementNS(
                            "http://www.w3.org/2000/svg",
                            "defs"
                        ),
                        k = document.createElementNS(
                            "http://www.w3.org/2000/svg",
                            "mask"
                        );
                    k.id = m;
                    const C = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "rect"
                    );
                    if (
                        (C.setAttribute("x", h.minX - 100 + ""),
                            C.setAttribute("y", h.minY - 100 + ""),
                            C.setAttribute("width", h.width + 200 + ""),
                            C.setAttribute("height", h.height + 200 + ""),
                            C.setAttribute("fill", "white"),
                            k.appendChild(C),
                        c && k.appendChild(U6(c, a.start.arrowhead)),
                        d && k.appendChild(U6(d, a.end.arrowhead)),
                            p)
                    ) {
                        const P = document.createElementNS(
                            "http://www.w3.org/2000/svg",
                            "rect"
                        );
                        P.setAttribute("x", p.x + ""),
                            P.setAttribute("y", p.y + ""),
                            P.setAttribute("width", p.w + ""),
                            P.setAttribute("height", p.h + ""),
                            P.setAttribute("fill", "black"),
                            k.appendChild(P);
                    }
                    _.appendChild(k), l.appendChild(_);
                }
                const f = document.createElementNS(
                    "http://www.w3.org/2000/svg",
                    "g"
                );
                f.setAttribute("mask", `url(#${m})`), l.appendChild(f);
                const g = document.createElementNS(
                    "http://www.w3.org/2000/svg",
                    "rect"
                );
                g.setAttribute("x", "-100"),
                    g.setAttribute("y", "-100"),
                    g.setAttribute("width", h.width + 200 + ""),
                    g.setAttribute("height", h.height + 200 + ""),
                    g.setAttribute("fill", "transparent"),
                    g.setAttribute("stroke", "none"),
                    f.appendChild(g);
                const b = SQ(a.isStraight ? Rw(a) : zw(a), i, s),
                    {strokeDasharray: x, strokeDashoffset: S} = mn(
                        a.isStraight ? a.length : Math.abs(a.bodyArc.length),
                        s,
                        {style: n.props.dash}
                    );
                if (
                    (b.setAttribute("stroke-dasharray", x),
                        b.setAttribute("stroke-dashoffset", S),
                        f.appendChild(b),
                    c &&
                    l.appendChild(
                        H6(
                            c,
                            n.props.color,
                            s,
                            n.props.arrowheadStart === "arrow"
                                ? "none"
                                : n.props.fill,
                            o
                        )
                    ),
                    d &&
                    l.appendChild(
                        H6(
                            d,
                            n.props.color,
                            s,
                            n.props.arrowheadEnd === "arrow"
                                ? "none"
                                : n.props.fill,
                            o
                        )
                    ),
                        p)
                ) {
                    r.addExportDef(jm(n.props.font));
                    const _ = {
                            fontSize: pa[n.props.size],
                            lineHeight: qt.lineHeight,
                            fontFamily: qd[n.props.font],
                            padding: 0,
                            textAlign: "middle",
                            width: p.w - 8,
                            verticalTextAlign: "middle",
                            height: p.h,
                            fontStyle: "normal",
                            fontWeight: "normal",
                            overflow: "wrap",
                        },
                        k = Lm(
                            this.editor,
                            this.editor.textMeasure.measureTextSpans(
                                n.props.text,
                                _
                            ),
                            _
                        );
                    k.setAttribute("fill", o[n.props.labelColor].solid),
                        Array.from(k.children).forEach((I) => {
                            const $ = parseFloat(I.getAttribute("x") || "0"),
                                T = parseFloat(I.getAttribute("y") || "0");
                            I.setAttribute("x", $ + 4 + p.x + "px"),
                                I.setAttribute("y", T + p.y + "px");
                        });
                    const P = k.cloneNode(!0);
                    P.setAttribute("stroke-width", "2"),
                        P.setAttribute("fill", o.background),
                        P.setAttribute("stroke", o.background),
                        l.appendChild(P),
                        l.appendChild(k);
                }
                return l;
            }
            getCanvasSvgDefs() {
                return [Mw()];
            }
        }
        w(Nm, "type", "arrow"), w(Nm, "props", mL), w(Nm, "migrations", gL);
        function U6(e, t) {
            const n = document.createElementNS(
                "http://www.w3.org/2000/svg",
                "path"
            );
            return (
                n.setAttribute("d", e),
                    n.setAttribute("fill", t === "arrow" ? "none" : "black"),
                    n.setAttribute("stroke", "none"),
                    n
            );
        }
        function SQ(e, t, n) {
            const r = document.createElementNS(
                "http://www.w3.org/2000/svg",
                "path"
            );
            return (
                r.setAttribute("d", e),
                    r.setAttribute("fill", "none"),
                    r.setAttribute("stroke", t),
                    r.setAttribute("stroke-width", n + ""),
                    r
            );
        }
        function H6(e, t, n, r, o) {
            const i = document.createElementNS(
                "http://www.w3.org/2000/svg",
                "path"
            );
            i.setAttribute("d", e),
                i.setAttribute("fill", "none"),
                i.setAttribute("stroke", o[t].solid),
                i.setAttribute("stroke-width", n + "");
            const a = dr({d: e, fill: r, color: t, theme: o});
            if (a) {
                const s = document.createElementNS(
                    "http://www.w3.org/2000/svg",
                    "g"
                );
                return s.appendChild(a), s.appendChild(i), s;
            } else return i;
        }
        const V6 =
            "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='30' height='30' fill='none'%3E%3Cpath stroke='%23000' stroke-linecap='round' stroke-linejoin='round' stroke-width='2' d='M13 5H7a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6M19 5h6m0 0v6m0-6L13 17'/%3E%3C/svg%3E";
        function ju({url: e, zoomLevel: t}) {
            return v.jsx("a", {
                className: me("tl-hyperlink-button", {
                    "tl-hyperlink-button__hidden": t < 0.32,
                }),
                href: e,
                target: "_blank",
                rel: "noopener noreferrer",
                onPointerDown: zt,
                onPointerUp: zt,
                title: e,
                draggable: !1,
                children: v.jsx("div", {
                    className: "tl-hyperlink-button__icon",
                    style: {
                        mask: `url("${V6}") center 100% / 100% no-repeat`,
                        WebkitMask: `url("${V6}") center 100% / 100% no-repeat`,
                    },
                }),
            });
        }
        const _Q = [
            {offsetX: 0, offsetY: 2, blur: 4, spread: 0, color: "#00000029"},
            {offsetX: 0, offsetY: 3, blur: 6, spread: 0, color: "#0000001f"},
        ];
        function Dw(e) {
            return _Q
                .map((n) => {
                    const {
                            offsetX: r,
                            offsetY: o,
                            blur: i,
                            spread: a,
                            color: s,
                        } = n,
                        l = new E(r, o),
                        {x: c, y: d} = l.rot(-e);
                    return `${c}px ${d}px ${i}px ${a}px ${s}`;
                })
                .join(", ");
        }
        class Fm extends Wl {
            constructor() {
                super(...arguments);
                w(this, "canResize", () => !1);
                w(this, "hideSelectionBoundsFg", () => !0);
                w(this, "onBeforeCreate", (n) => {
                    K6(this.editor, n);
                });
                w(this, "onBeforeUpdate", (n, r) => {
                    if (n.props.url !== r.props.url)
                        if (rr.isValid(r.props.url)) K6(this.editor, r);
                        else return {...r, props: {...r.props, url: n.props.url}};
                });
            }
            getDefaultProps() {
                return {url: "", w: 300, h: 320, assetId: null};
            }
            component(n) {
                const r = n.props.assetId
                        ? this.editor.getAsset(n.props.assetId)
                        : null,
                    o = this.editor.getShapePageTransform(n).rotation(),
                    i = kQ(n);
                return v.jsx(us, {
                    children: v.jsxs("div", {
                        className: "tl-bookmark__container",
                        style: {boxShadow: Dw(o)},
                        children: [
                            v.jsxs("div", {
                                className: "tl-bookmark__image_container",
                                children: [
                                    r != null && r.props.image
                                        ? v.jsx("img", {
                                            className: "tl-bookmark__image",
                                            draggable: !1,
                                            src:
                                                r == null
                                                    ? void 0
                                                    : r.props.image,
                                            alt:
                                                (r == null
                                                    ? void 0
                                                    : r.props.title) || "",
                                        })
                                        : v.jsx("div", {
                                            className: "tl-bookmark__placeholder",
                                        }),
                                    v.jsx(ju, {
                                        url: n.props.url,
                                        zoomLevel: this.editor.getZoomLevel(),
                                    }),
                                ],
                            }),
                            v.jsxs("div", {
                                className: "tl-bookmark__copy_container",
                                children: [
                                    (r == null ? void 0 : r.props.title) &&
                                    v.jsx("h2", {
                                        className: "tl-bookmark__heading",
                                        children: Ou(
                                            (r == null
                                                ? void 0
                                                : r.props.title) || "",
                                            54
                                        ),
                                    }),
                                    (r == null ? void 0 : r.props.description) &&
                                    v.jsx("p", {
                                        className: "tl-bookmark__description",
                                        children: Ou(
                                            (r == null
                                                ? void 0
                                                : r.props.description) || "",
                                            128
                                        ),
                                    }),
                                    v.jsx("a", {
                                        className: "tl-bookmark__link",
                                        href: n.props.url || "",
                                        target: "_blank",
                                        rel: "noopener noreferrer",
                                        onPointerDown: zt,
                                        onPointerUp: zt,
                                        onClick: zt,
                                        children: Ou(i, 45),
                                    }),
                                ],
                            }),
                        ],
                    }),
                });
            }
            indicator(n) {
                return v.jsx("rect", {
                    width: M(n.props.w),
                    height: M(n.props.h),
                    rx: "6",
                    ry: "6",
                });
            }
        }
        w(Fm, "type", "bookmark"), w(Fm, "props", vL), w(Fm, "migrations", bL);
        const kQ = (e) => {
            try {
                const t = new URL(e.props.url),
                    n = t.pathname.replace(/\/*$/, "");
                return `${t.hostname}${n}`;
            } catch {
                return e.props.url;
            }
        };
        function K6(e, t) {
            const {url: n} = t.props,
                r = ns.createId(sf(n));
            e.getAsset(r)
                ? t.props.assetId !== r &&
                e.updateShapes([{id: t.id, type: t.type, props: {assetId: r}}])
                : (e.updateShapes([
                    {id: t.id, type: t.type, props: {assetId: null}},
                ]),
                    CQ(e, t));
        }
        const CQ = eC(async (e, t) => {
            const {url: n} = t.props,
                r = await e.getAssetForExternalContent({type: "url", url: n});
            r &&
            e.batch(() => {
                e.createAssets([r]),
                    e.updateShapes([
                        {id: t.id, type: t.type, props: {assetId: r.id}},
                    ]);
            });
        }, 500);
        function ma(e, t = !1) {
            const n = e.length;
            if (n < 2) return "";
            let r = e[0].point,
                o = e[1].point;
            if (n === 2) return `M${Wt(r)}L${Wt(o)}`;
            let i = "";
            for (let a = 2, s = n - 1; a < s; a++)
                (r = e[a].point), (o = e[a + 1].point), (i += Yn(r, o));
            return t
                ? `M${Yn(e[0].point, e[1].point)}Q${Wt(e[1].point)}${Yn(
                    e[1].point,
                    e[2].point
                )}T${i}${Yn(e[n - 1].point, e[0].point)}${Yn(
                    e[0].point,
                    e[1].point
                )}Z`
                : `M${Wt(e[0].point)}Q${Wt(e[1].point)}${Yn(
                    e[1].point,
                    e[2].point
                )}${e.length > 3 ? "T" : ""}${i}L${Wt(e[n - 1].point)}`;
        }
        function EQ(e, t = {}) {
            const {start: n = {}, end: r = {}} = t,
                {cap: o = !0} = n,
                {cap: i = !0} = r;
            es(!n.taper && !r.taper, "cap taper not supported here"),
                es(!n.easing && !r.easing, "cap easing not supported here"),
                es(o && i, "cap must be true");
            const a = Jr(e, t);
            nc(a, t);
            const s = PQ(a);
            let l = "";
            for (const c of s) l += TQ(c, t);
            return l;
        }
        function PQ(e) {
            if (e.length <= 2) return [e];
            const t = [];
            let n = [e[0]];
            for (let r = 1; r < e.length - 1; r++) {
                const o = e[r - 1],
                    i = e[r],
                    a = e[r + 1],
                    s = E.Angle(o.point, i.point),
                    l = E.Angle(i.point, a.point),
                    c = Math.abs(su(s, l)) / Math.PI;
                if (c > 0.8) {
                    const m = {...i, point: i.input};
                    n.push(m), t.push(Lw(n)), (n = [m]);
                    continue;
                }
                if ((n.push(i), c < 0.25)) continue;
                const d = (o.radius + i.radius + a.radius) / 3,
                    u = E.Dist(o.point, i.point) / d,
                    h = E.Dist(i.point, a.point) / d;
                if (u + h < 1.5) {
                    n.push(i), t.push(Lw(n)), (n = [i]);
                    continue;
                }
            }
            return n.push(e[e.length - 1]), t.push(Lw(n)), t;
        }
        function Lw(e) {
            const t = e[0];
            for (; e.length > 2; ) {
                const r = e[1],
                    o = E.Dist(t.point, r.point),
                    i = (t.radius + r.radius) / 2;
                if (o < i * 0.5) e.splice(1, 1);
                else break;
            }
            const n = e[e.length - 1];
            for (; e.length > 2; ) {
                const r = e[e.length - 2],
                    o = E.Dist(n.point, r.point),
                    i = (n.radius + r.radius) / 2;
                if (o < i * 0.5) e.splice(e.length - 2, 1);
                else break;
            }
            return (
                e.length > 1 &&
                ((e[0] = {
                    ...e[0],
                    vector: E.FromAngle(E.Angle(e[1].point, e[0].point)),
                }),
                    (e[e.length - 1] = {
                        ...e[e.length - 1],
                        vector: E.FromAngle(
                            E.Angle(e[e.length - 1].point, e[e.length - 2].point)
                        ),
                    })),
                    e
            );
        }
        function IQ(e, t, n) {
            return (
                "M " +
                e +
                " " +
                t +
                " m -" +
                n +
                ", 0 a " +
                n +
                "," +
                n +
                " 0 1,1 " +
                n * 2 +
                ",0 a " +
                n +
                "," +
                n +
                " 0 1,1 -" +
                n * 2 +
                ",0"
            );
        }
        function TQ(e, t = {}) {
            if (e.length === 0) return "";
            if (e.length === 1) return IQ(e[0].point.x, e[0].point.y, e[0].radius);
            const {left: n, right: r} = k6(e, t);
            r.reverse();
            let o = `M${Wt(n[0])}T`;
            for (let i = 1; i < n.length; i++) o += Yn(n[i - 1], n[i]);
            {
                const i = e[e.length - 1],
                    a = i.radius,
                    s = i.vector.clone().per().neg(),
                    l = E.Add(i.point, E.Mul(s, a)),
                    c = E.Add(i.point, E.Mul(s, -a));
                o += `${Wt(l)}A${M(a)},${M(a)} 0 0 1 ${Wt(c)}T`;
            }
            for (let i = 1; i < r.length; i++) o += Yn(r[i - 1], r[i]);
            {
                const i = e[0],
                    a = i.radius,
                    s = i.vector.clone().per(),
                    l = E.Add(i.point, E.Mul(s, a)),
                    c = E.Add(i.point, E.Mul(s, -a));
                o += `${Wt(l)}A${M(a)},${M(a)} 0 0 1 ${Wt(c)}Z`;
            }
            return o;
        }
        function Bm() {
            const e = W();
            return X("zoom", () => e.getZoomLevel() < 0.35, [e]);
        }
        const $Q = (e) => e * 0.65 + uj((e * Oe) / 2) * 0.35,
            AQ = (e) => ({
                size: 1 + e,
                thinning: 0.5,
                streamline: 0.62 + ((1 + e) / 8) * 0.06,
                smoothing: 0.62,
                easing: un.easeOutSine,
                simulatePressure: !0,
            }),
            MQ = (e) => ({
                size: 1 + e * 1.2,
                thinning: 0.62,
                streamline: 0.62,
                smoothing: 0.62,
                simulatePressure: !1,
                easing: $Q,
            }),
            W6 = (e) => ({
                size: 1 + e,
                thinning: 0,
                streamline: 0.62 + ((1 + e) / 8) * 0.06,
                smoothing: 0.62,
                simulatePressure: !1,
                easing: un.linear,
            });
        function jw({strokeWidth: e, showAsComplete: t}) {
            return {
                size: 1 + e,
                thinning: 0,
                streamline: 0.5,
                smoothing: 0.5,
                simulatePressure: !1,
                easing: un.easeOutSine,
                last: t,
            };
        }
        function Um(e, t, n, r) {
            return {
                ...(r
                    ? W6(t)
                    : e.dash === "draw"
                        ? e.isPen
                            ? MQ(t)
                            : AQ(t)
                        : W6(t)),
                last: e.isComplete || n,
            };
        }
        function sc(e) {
            const t = [];
            for (const n of e)
                if (n.type === "free" || n.points.length < 2)
                    t.push(...n.points.map(E.Cast));
                else {
                    const r = Math.max(
                        4,
                        Math.floor(E.Dist(n.points[0], n.points[1]) / 16)
                    );
                    t.push(...E.PointsBetween(n.points[0], n.points[1], r));
                }
            return t;
        }
        function Y6(e, t) {
            return {
                draw: "none",
                solid: "none",
                dotted: `0.1 ${t * 2}`,
                dashed: `${t * 2} ${t * 2}`,
            }[e.props.dash];
        }
        class Hm extends qr {
            constructor() {
                super(...arguments);
                w(this, "hideResizeHandles", (n) => Fw(n));
                w(this, "hideRotateHandle", (n) => Fw(n));
                w(this, "hideSelectionBoundsFg", (n) => Fw(n));
                w(this, "onResize", (n, r) => {
                    const {scaleX: o, scaleY: i} = r,
                        a = [];
                    for (const s of n.props.segments)
                        a.push({
                            ...s,
                            points: s.points.map(({x: l, y: c, z: d}) => ({
                                x: Af(o * l),
                                y: Af(i * c),
                                z: d,
                            })),
                        });
                    return {props: {segments: a}};
                });
            }
            getDefaultProps() {
                return {
                    segments: [],
                    color: "black",
                    fill: "none",
                    dash: "draw",
                    size: "m",
                    isComplete: !1,
                    isClosed: !1,
                    isPen: !1,
                };
            }
            getGeometry(n) {
                const r = sc(n.props.segments),
                    o = fn[n.props.size];
                if (n.props.segments.length === 1) {
                    const a = ce.FromPoints(r);
                    if (a.width < o * 2 && a.height < o * 2)
                        return new zE({x: -o, y: -o, radius: o, isFilled: !0});
                }
                const i = Jr(r, Um(n.props, o, !0, !0)).map((a) => a.point);
                return n.props.isClosed
                    ? new Ot({points: i, isFilled: n.props.fill !== "none"})
                    : new ss({points: i});
            }
            component(n) {
                var p;
                const r = Lt(),
                    o = Bm(),
                    i = fn[n.props.size],
                    a = sc(n.props.segments),
                    s =
                        n.props.isComplete ||
                        ((p = Bn(n.props.segments)) == null ? void 0 : p.type) ===
                        "straight";
                let l = i;
                !o &&
                !n.props.isPen &&
                n.props.dash === "draw" &&
                a.length === 1 &&
                (l += ta(n.id)() * (i / 6));
                const c = Um(n.props, l, s, o);
                if (!o && n.props.dash === "draw")
                    return v.jsxs(ar, {
                        id: n.id,
                        children: [
                            n.props.isClosed && n.props.fill && a.length > 1
                                ? v.jsx(_t, {
                                    theme: r,
                                    fill: n.props.isClosed
                                        ? n.props.fill
                                        : "none",
                                    color: n.props.color,
                                    d: ma(Jr(a, c), n.props.isClosed),
                                })
                                : null,
                            v.jsx("path", {
                                d: EQ(a, c),
                                strokeLinecap: "round",
                                fill: r[n.props.color].solid,
                            }),
                        ],
                    });
                const d = Jr(a, c),
                    u = d.length < 2,
                    h = u ? Nw(a[0], 0) : ma(d, n.props.isClosed);
                return v.jsxs(ar, {
                    id: n.id,
                    children: [
                        v.jsx(_t, {
                            theme: r,
                            color: n.props.color,
                            fill: u || n.props.isClosed ? n.props.fill : "none",
                            d: h,
                        }),
                        v.jsx("path", {
                            d: h,
                            strokeLinecap: "round",
                            fill: u ? r[n.props.color].solid : "none",
                            stroke: r[n.props.color].solid,
                            strokeWidth: i,
                            strokeDasharray: u ? "none" : Y6(n, i),
                            strokeDashoffset: "0",
                        }),
                    ],
                });
            }
            indicator(n) {
                var u;
                const r = Bm(),
                    o = fn[n.props.size],
                    i = sc(n.props.segments);
                let a = o;
                !r &&
                !n.props.isPen &&
                n.props.dash === "draw" &&
                i.length === 1 &&
                (a += ta(n.id)() * (o / 6));
                const s =
                        n.props.isComplete ||
                        ((u = Bn(n.props.segments)) == null ? void 0 : u.type) ===
                        "straight",
                    l = Um(n.props, a, s, !0),
                    c = Jr(i, l),
                    d = c.length > 1 ? ma(c, n.props.isClosed) : Nw(i[0], a);
                return v.jsx("path", {d});
            }
            toSvg(n, r) {
                var f;
                const o = Kn({isDarkMode: this.editor.user.getIsDarkMode()});
                r.addExportDef(Aw(n.props.fill, o));
                const {color: i} = n.props,
                    a = fn[n.props.size],
                    s = sc(n.props.segments),
                    l =
                        n.props.isComplete ||
                        ((f = Bn(n.props.segments)) == null ? void 0 : f.type) ===
                        "straight";
                let c = a;
                !n.props.isPen &&
                n.props.dash === "draw" &&
                s.length === 1 &&
                (c += ta(n.id)() * (a / 6));
                const d = Um(n.props, c, l, !1),
                    u = Jr(s, d),
                    h = u.length > 1 ? ma(u, n.props.isClosed) : Nw(s[0], c);
                let p;
                if (n.props.dash === "draw" || u.length < 2) {
                    nc(u, d);
                    const g = Mu(u, d),
                        b = document.createElementNS(
                            "http://www.w3.org/2000/svg",
                            "path"
                        );
                    b.setAttribute("d", uu(g, !0)),
                        b.setAttribute("fill", o[i].solid),
                        b.setAttribute("stroke-linecap", "round"),
                        (p = b);
                } else {
                    const g = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "path"
                    );
                    g.setAttribute("d", h),
                        g.setAttribute("stroke", o[i].solid),
                        g.setAttribute("fill", "none"),
                        g.setAttribute("stroke-linecap", "round"),
                        g.setAttribute("stroke-width", a.toString()),
                        g.setAttribute("stroke-dasharray", Y6(n, a)),
                        g.setAttribute("stroke-dashoffset", "0"),
                        (p = g);
                }
                const m = dr({
                    fill: n.props.isClosed ? n.props.fill : "none",
                    d: h,
                    color: n.props.color,
                    theme: o,
                });
                if (m) {
                    const g = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "g"
                    );
                    return g.appendChild(m), g.appendChild(p), g;
                }
                return p;
            }
            getCanvasSvgDefs() {
                return [Mw()];
            }
            expandSelectionOutlinePx(n) {
                const r = n.props.dash === "draw" ? 1.6 : 1;
                return (fn[n.props.size] * r) / 2;
            }
        }
        w(Hm, "type", "draw"), w(Hm, "props", yL), w(Hm, "migrations", wL);
        function Nw(e, t) {
            const n = (t + 1) * 0.5;
            return `M ${e.x} ${e.y} m -${n}, 0 a ${n},${n} 0 1,0 ${
                n * 2
            },0 a ${n},${n} 0 1,0 -${n * 2},0`;
        }
        function Fw(e) {
            return (
                e.props.segments.length === 1 &&
                e.props.segments[0].points.length < 2
            );
        }
        function zQ(e, t, n = {}) {
            const {newPoint: r, handle: o, scaleX: i, scaleY: a} = t,
                {
                    minWidth: s = 1,
                    maxWidth: l = 1 / 0,
                    minHeight: c = 1,
                    maxHeight: d = 1 / 0,
                } = n;
            let u = e.props.w * i,
                h = e.props.h * a;
            const p = new E(0, 0);
            if (u > 0) {
                if (u < s) {
                    switch (o) {
                        case "top_left":
                        case "left":
                        case "bottom_left": {
                            p.x = u - s;
                            break;
                        }
                        case "top":
                        case "bottom": {
                            p.x = (u - s) / 2;
                            break;
                        }
                        default:
                            p.x = 0;
                    }
                    u = s;
                }
            } else if (((p.x = u), (u = -u), u < s)) {
                switch (o) {
                    case "top_left":
                    case "left":
                    case "bottom_left": {
                        p.x = -u;
                        break;
                    }
                    default:
                        p.x = -s;
                }
                u = s;
            }
            if (h > 0) {
                if (h < c) {
                    switch (o) {
                        case "top_left":
                        case "top":
                        case "top_right": {
                            p.y = h - c;
                            break;
                        }
                        case "right":
                        case "left": {
                            p.y = (h - c) / 2;
                            break;
                        }
                        default:
                            p.y = 0;
                    }
                    h = c;
                }
            } else if (((p.y = h), (h = -h), h < c)) {
                switch (o) {
                    case "top_left":
                    case "top":
                    case "top_right": {
                        p.y = -h;
                        break;
                    }
                    default:
                        p.y = -c;
                }
                h = c;
            }
            const {x: m, y: f} = p.rot(e.rotation).add(r);
            return {x: m, y: f, props: {w: Math.min(l, u), h: Math.min(d, h)}};
        }
        const RQ = (e) =>
            Object.entries(e)
                .filter(([t, n]) => n)
                .map(([t]) => t)
                .join(" ");
        class Vm extends Wl {
            constructor() {
                super(...arguments);
                w(this, "hideSelectionBoundsFg", (n) => !this.canResize(n));
                w(this, "canEdit", () => !0);
                w(this, "canUnmount", (n) => {
                    var r, o;
                    return !!(
                        (o =
                            (r = vi(n.props.url)) == null
                                ? void 0
                                : r.definition) != null && o.canUnmount
                    );
                });
                w(this, "canResize", (n) => {
                    var r, o;
                    return !!(
                        (o =
                            (r = vi(n.props.url)) == null
                                ? void 0
                                : r.definition) != null && o.doesResize
                    );
                });
                w(this, "canEditInReadOnly", () => !0);
                w(this, "isAspectRatioLocked", (n) => {
                    const r = vi(n.props.url);
                    return (
                        (r == null ? void 0 : r.definition.isAspectRatioLocked) ??
                        !1
                    );
                });
                w(this, "onResize", (n, r) => {
                    const o = this.isAspectRatioLocked(n),
                        i = vi(n.props.url);
                    let a = (i == null ? void 0 : i.definition.minWidth) ?? 200,
                        s = (i == null ? void 0 : i.definition.minHeight) ?? 200;
                    if (o) {
                        const l = n.props.w / n.props.h;
                        l > 1 ? (a *= l) : (s /= l);
                    }
                    return zQ(n, r, {minWidth: a, minHeight: s});
                });
            }
            getDefaultProps() {
                return {w: 300, h: 300, url: ""};
            }
            component(n) {
                const {w: r, h: o, url: i} = n.props,
                    a = am(n.id),
                    s = y.useMemo(() => z6(i), [i]),
                    l = X(
                        "is hovering",
                        () => {
                            const {editingShapeId: h, hoveredShapeId: p} =
                                this.editor.getCurrentPageState();
                            if (h && p !== h) {
                                const m = this.editor.getShape(h);
                                if (m && this.editor.isShapeOfType(m, "embed"))
                                    return !0;
                            }
                            return !1;
                        },
                        []
                    ),
                    c = this.editor.getShapePageTransform(n).rotation(),
                    d = a || l;
                if ((s == null ? void 0 : s.definition.type) === "github_gist") {
                    const h = s.url.split("/").pop();
                    if (!h) throw Error("No gist id!");
                    return v.jsx(us, {
                        className: "tl-embed-container",
                        id: n.id,
                        children: v.jsx(OQ, {
                            id: h,
                            width: M(r),
                            height: M(o),
                            isInteractive: d,
                            pageRotation: c,
                        }),
                    });
                }
                const u = RQ({
                    ...SL,
                    ...((s == null ? void 0 : s.definition.overridePermissions) ??
                        {}),
                });
                return v.jsx(us, {
                    className: "tl-embed-container",
                    id: n.id,
                    children:
                        s != null && s.definition
                            ? v.jsx("iframe", {
                                className: "tl-embed",
                                sandbox: u,
                                src: s.embedUrl,
                                width: M(r),
                                height: M(o),
                                draggable: !1,
                                frameBorder: "0",
                                referrerPolicy: "no-referrer-when-downgrade",
                                style: {
                                    border: 0,
                                    pointerEvents: d ? "auto" : "none",
                                    zIndex: d ? "" : "-1",
                                    boxShadow: Dw(c),
                                    borderRadius:
                                        (s == null
                                            ? void 0
                                            : s.definition
                                                .overrideOutlineRadius) ?? 8,
                                    background:
                                        s == null
                                            ? void 0
                                            : s.definition.backgroundColor,
                                },
                            })
                            : null,
                });
            }
            indicator(n) {
                const r = y.useMemo(() => vi(n.props.url), [n.props.url]);
                return v.jsx("rect", {
                    width: M(n.props.w),
                    height: M(n.props.h),
                    rx:
                        (r == null ? void 0 : r.definition.overrideOutlineRadius) ??
                        8,
                    ry:
                        (r == null ? void 0 : r.definition.overrideOutlineRadius) ??
                        8,
                });
            }
        }
        w(Vm, "type", "embed"), w(Vm, "props", _L), w(Vm, "migrations", kL);
        function OQ({
                        id: e,
                        file: t,
                        isInteractive: n,
                        width: r,
                        height: o,
                        style: i,
                        pageRotation: a,
                    }) {
            return v.jsx("iframe", {
                className: "tl-embed",
                draggable: !1,
                width: M(r),
                height: M(o),
                frameBorder: "0",
                scrolling: "no",
                seamless: !0,
                referrerPolicy: "no-referrer-when-downgrade",
                style: {
                    ...i,
                    pointerEvents: n ? "all" : "none",
                    zIndex: n ? "" : "-1",
                    boxShadow: Dw(a),
                },
                srcDoc: `
			<html>
				<head>
					<base target="_blank">
				</head>
				<body>
					<script src=${`https://gist.github.com/${e}.js${
                    t ? `?file=${t}` : ""
                }`}><\/script>
					<style type="text/css">
						* { margin: 0px; }
						table { height: 100%; background-color: red; }
						.gist { background-color: none; height: 100%;  }
						.gist .gist-file { height: calc(100vh - 2px); padding: 0px; display: grid; grid-template-rows: 1fr auto; }
					</style>
				</body>
			</html>`,
            });
        }
        const DQ = y.forwardRef(({id: e, name: t, isEditing: n}, r) => {
                const o = W(),
                    i = y.useCallback(
                        (l) => {
                            l.key === "Enter" &&
                            !l.nativeEvent.isComposing &&
                            (zt(l),
                                l.currentTarget.blur(),
                                o.setEditingShape(null));
                        },
                        [o]
                    ),
                    a = y.useCallback(
                        (l) => {
                            const c = o.getShape(e);
                            if (!c) return;
                            const d = c.props.name,
                                u = l.currentTarget.value.trim();
                            d !== u &&
                            o.updateShapes(
                                [{id: e, type: "frame", props: {name: u}}],
                                {squashing: !0}
                            );
                        },
                        [e, o]
                    ),
                    s = y.useCallback(
                        (l) => {
                            const c = o.getShape(e);
                            if (!c) return;
                            const d = c.props.name,
                                u = l.currentTarget.value;
                            d !== u &&
                            o.updateShapes(
                                [{id: e, type: "frame", props: {name: u}}],
                                {squashing: !0}
                            );
                        },
                        [e, o]
                    );
                return v.jsxs("div", {
                    className: `tl-frame-label ${
                        n ? "tl-frame-label__editing" : ""
                    }`,
                    children: [
                        v.jsx("input", {
                            className: "tl-frame-name-input",
                            ref: r,
                            style: {display: n ? void 0 : "none"},
                            value: t,
                            autoFocus: !0,
                            onKeyDown: i,
                            onBlur: a,
                            onChange: s,
                        }),
                        G6(t, "Frame") + "​",
                    ],
                });
            }),
            LQ = function ({id: t, name: n, width: r, height: o}) {
                const i = W(),
                    a = X(
                        "shape rotation",
                        () => Yr(i.getShapePageTransform(t).rotation()),
                        [i, t]
                    ),
                    s = am(t),
                    l = y.useRef(null),
                    c = y.useCallback(
                        (m) => {
                            const f = Wn(m);
                            i.getEditingShapeId() !== t &&
                            (i.dispatch({
                                type: "pointer",
                                name: "pointer_down",
                                target: "shape",
                                shape: i.getShape(t),
                                ...f,
                            }),
                                m.preventDefault());
                        },
                        [i, t]
                    );
                y.useEffect(() => {
                    const m = l.current;
                    m &&
                    s &&
                    (m.focus(),
                        m.select(),
                        requestAnimationFrame(() => {
                            document.activeElement !== m && (m.focus(), m.select());
                        }));
                }, [l, s]);
                const u = ((a + Math.PI / 4) * (2 / Math.PI) + 4) % 4,
                    h = ["top", "left", "bottom", "right"][Math.floor(u)];
                let p;
                switch (h) {
                    case "top":
                        p = "";
                        break;
                    case "right":
                        p = `translate(${M(r)}px, 0px) rotate(90deg)`;
                        break;
                    case "bottom":
                        p = `translate(${M(r)}px, ${M(o)}px) rotate(180deg)`;
                        break;
                    case "left":
                        p = `translate(0px, ${M(o)}px) rotate(270deg)`;
                        break;
                }
                return v.jsx("div", {
                    className: "tl-frame-heading",
                    style: {
                        overflow: s ? "visible" : "hidden",
                        maxWidth: `calc(var(--tl-zoom) * ${Math.ceil(
                            h === "top" || h === "bottom" ? r : o
                        )}px + var(--space-5))`,
                        bottom: "100%",
                        transform: `${p} scale(var(--tl-scale)) translateX(calc(-1 * var(--space-3))`,
                    },
                    onPointerDown: c,
                    children: v.jsx("div", {
                        className: "tl-frame-heading-hit-area",
                        children: v.jsx(DQ, {ref: l, id: t, name: n, isEditing: s}),
                    }),
                });
            };
        function G6(e, t) {
            return e.match(/^\s*$/) ? t : e;
        }
        class Km extends Wl {
            constructor() {
                super(...arguments);
                w(this, "canBind", () => !0);
                w(this, "canEdit", () => !0);
                w(this, "canReceiveNewChildrenOfType", (n, r) => !n.isLocked);
                w(this, "canDropShapes", (n, r) => !n.isLocked);
                w(this, "onDragShapesOver", (n, r) =>
                    r.every((o) => o.parentId === n.id)
                        ? {shouldHint: !1}
                        : (this.editor.reparentShapes(
                            r.map((o) => o.id),
                            n.id
                        ),
                            {shouldHint: !0})
                );
                w(this, "onDragShapesOut", (n, r) => {
                    const o = this.editor.getShape(n.parentId);
                    o && this.editor.isShapeOfType(o, "group")
                        ? this.editor.reparentShapes(r, o.id)
                        : this.editor.reparentShapes(
                            r,
                            this.editor.getCurrentPageId()
                        );
                });
                w(this, "onResizeEnd", (n) => {
                    const r = this.editor.getShapePageBounds(n),
                        o = this.editor.getSortedChildIdsForParent(n.id),
                        i = [];
                    for (const a of o) {
                        const s = this.editor.getShapePageBounds(a);
                        r.includes(s) || i.push(a);
                    }
                    i.length > 0 &&
                    this.editor.reparentShapes(
                        i,
                        this.editor.getCurrentPageId()
                    );
                });
                w(this, "onResize", (n, r) => IE(n, r));
            }
            getDefaultProps() {
                return {w: 160 * 2, h: 90 * 2, name: ""};
            }
            getGeometry(n) {
                return new ia({width: n.props.w, height: n.props.h, isFilled: !1});
            }
            component(n) {
                const r = this.editor.getShapeGeometry(n).bounds,
                    o = Lt(),
                    i = X(
                        "is creating this shape",
                        () => {
                            var l;
                            const a =
                                this.editor.getStateDescendant("select.resizing");
                            if (!a || !a.getIsActive()) return !1;
                            const s = a == null ? void 0 : a.info;
                            return s
                                ? s.isCreating &&
                                ((l = this.editor.getOnlySelectedShape()) ==
                                null
                                    ? void 0
                                    : l.id) === n.id
                                : !1;
                        },
                        [n.id]
                    );
                return v.jsxs(v.Fragment, {
                    children: [
                        v.jsx(ar, {
                            children: v.jsx("rect", {
                                className: me("tl-frame__body", {
                                    "tl-frame__creating": i,
                                }),
                                width: r.width,
                                height: r.height,
                                fill: o.solid,
                                stroke: o.text,
                            }),
                        }),
                        i
                            ? null
                            : v.jsx(LQ, {
                                id: n.id,
                                name: n.props.name,
                                width: r.width,
                                height: r.height,
                            }),
                    ],
                });
            }
            toSvg(n) {
                const r = Kn({isDarkMode: this.editor.user.getIsDarkMode()}),
                    o = document.createElementNS("http://www.w3.org/2000/svg", "g"),
                    i = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "rect"
                    );
                i.setAttribute("width", n.props.w.toString()),
                    i.setAttribute("height", n.props.h.toString()),
                    i.setAttribute("fill", r.solid),
                    i.setAttribute("stroke", r.black.solid),
                    i.setAttribute("stroke-width", "1"),
                    i.setAttribute("rx", "1"),
                    i.setAttribute("ry", "1"),
                    o.appendChild(i);
                const l =
                        ((Yr(this.editor.getShapePageTransform(n.id).rotation()) +
                                Math.PI / 4) *
                            (2 / Math.PI) +
                            4) %
                        4,
                    c = ["top", "left", "bottom", "right"][Math.floor(l)];
                let d;
                switch (c) {
                    case "top":
                        d = "";
                        break;
                    case "right":
                        d = `translate(${M(n.props.w)}px, 0px) rotate(90deg)`;
                        break;
                    case "bottom":
                        d = `translate(${M(n.props.w)}px, ${M(
                            n.props.h
                        )}px) rotate(180deg)`;
                        break;
                    case "left":
                        d = `translate(0px, ${M(n.props.h)}px) rotate(270deg)`;
                        break;
                    default:
                        d = "";
                }
                const u = {
                        fontSize: 12,
                        fontFamily: "Inter, sans-serif",
                        textAlign: "start",
                        width: n.props.w,
                        height: 32,
                        padding: 0,
                        lineHeight: 1,
                        fontStyle: "normal",
                        fontWeight: "normal",
                        overflow: "truncate-ellipsis",
                        verticalTextAlign: "middle",
                    },
                    h = this.editor.textMeasure.measureTextSpans(
                        G6(n.props.name, "Frame") + "​",
                        u
                    ),
                    p = h[0],
                    m = Bn(h),
                    f = m.box.w + m.box.x - p.box.x,
                    g = Lm(this.editor, h, {offsetY: -u.height - 2, ...u});
                g.style.setProperty("transform", d);
                const b = document.createElementNS(
                    "http://www.w3.org/2000/svg",
                    "rect"
                );
                return (
                    b.setAttribute("x", "-8px"),
                        b.setAttribute("y", -u.height - 4 + "px"),
                        b.setAttribute("width", f + 16 + "px"),
                        b.setAttribute("height", `${u.height}px`),
                        b.setAttribute("rx", "4px"),
                        b.setAttribute("ry", "4px"),
                        b.setAttribute("fill", r.background),
                        o.appendChild(b),
                        o.appendChild(g),
                        o
                );
            }
            indicator(n) {
                const r = this.editor.getShapeGeometry(n).bounds;
                return v.jsx("rect", {
                    width: M(r.width),
                    height: M(r.height),
                    className: "tl-frame-indicator",
                });
            }
            providesBackgroundForChildren() {
                return !0;
            }
        }
        w(Km, "type", "frame"), w(Km, "props", CL), w(Km, "migrations", EL);
        function jQ(e, t, n, r) {
            if ((e === "start-legacy" || e === "end-legacy") && n.length !== 0) {
                const o = ce.From(n[0].box);
                for (const {box: i} of n) o.union(i);
                if (e === "start-legacy") return (r - 2 * t - o.width) / 2;
                if (e === "end-legacy") return -(r - 2 * t - o.width) / 2;
            }
        }
        function NQ(e) {
            return (
                e === "start-legacy" || e === "middle-legacy" || e === "end-legacy"
            );
        }
        const X6 = N.memo(function ({
                                        id: t,
                                        type: n,
                                        text: r,
                                        size: o,
                                        labelColor: i,
                                        font: a,
                                        align: s,
                                        verticalAlign: l,
                                        wrap: c,
                                        bounds: d,
                                    }) {
            const {
                    rInput: u,
                    isEmpty: h,
                    isEditing: p,
                    handleFocus: m,
                    handleChange: f,
                    handleKeyDown: g,
                    handleBlur: b,
                    handleInputPointerDown: x,
                    handleDoubleClick: S,
                } = Ow(t, n, r),
                _ = fa.normalizeTextForDom(r),
                k = _.length > 0,
                C = NQ(s),
                P = Lt();
            return !p && !k
                ? null
                : v.jsx("div", {
                    className: "tl-text-label",
                    "data-font": a,
                    "data-align": s,
                    "data-hastext": !h,
                    "data-isediting": p,
                    "data-textwrap": !!c,
                    style: {
                        justifyContent: s === "middle" || C ? "center" : s,
                        alignItems: l === "middle" ? "center" : l,
                        ...(d
                            ? {
                                top: d.minY,
                                left: d.minX,
                                width: d.width,
                                height: d.height,
                                position: "absolute",
                            }
                            : {}),
                    },
                    children: v.jsxs("div", {
                        className: "tl-text-label__inner",
                        style: {
                            fontSize: rc[o],
                            lineHeight: rc[o] * qt.lineHeight + "px",
                            minHeight: qt.lineHeight + 32,
                            minWidth: 0,
                            color: P[i].solid,
                        },
                        children: [
                            v.jsx("div", {
                                className: "tl-text tl-text-content",
                                dir: "ltr",
                                children: _,
                            }),
                            p &&
                            v.jsx("textarea", {
                                ref: u,
                                className: "tl-text tl-text-input",
                                name: "text",
                                tabIndex: -1,
                                autoComplete: "false",
                                autoCapitalize: "false",
                                autoCorrect: "false",
                                autoSave: "false",
                                autoFocus: !0,
                                placeholder: "",
                                spellCheck: "true",
                                wrap: "off",
                                dir: "auto",
                                datatype: "wysiwyg",
                                defaultValue: r,
                                onFocus: m,
                                onChange: f,
                                onKeyDown: g,
                                onBlur: b,
                                onContextMenu: zt,
                                onPointerDown: x,
                                onDoubleClick: S,
                            }),
                        ],
                    }),
                });
        });
        function q6({bounds: e, editor: t, font: n, shape: r}) {
            const i = {
                    fontSize: rc[r.props.size],
                    fontFamily: n,
                    textAlign: r.props.align,
                    verticalTextAlign: r.props.verticalAlign,
                    width: Math.ceil(e.width),
                    height: Math.ceil(e.height),
                    padding: 16,
                    lineHeight: qt.lineHeight,
                    fontStyle: "normal",
                    fontWeight: "normal",
                    overflow: "wrap",
                    offsetX: 0,
                },
                a = t.textMeasure.measureTextSpans(r.props.text, i),
                s = jQ(r.props.align, 16, a, e.width);
            return s && (i.offsetX = s), Lm(t, a, i);
        }
        function gn(e) {
            return `${M(e.x)},${M(e.y)} `;
        }
        function Z6(e = "") {
            let t = 0,
                n = 0,
                r = 0,
                o = 0;
            function i() {
                const a = t ^ (t << 11);
                return (
                    (t = n),
                        (n = r),
                        (r = o),
                        (o ^= ((o >>> 19) ^ a ^ (a >>> 8)) >>> 0),
                    (o / 4294967296) * 2
                );
            }
            for (let a = 0; a < e.length + 64; a++) (t ^= e.charCodeAt(a) | 0), i();
            return i;
        }
        function Nu(e) {
            let t = "M";
            const n = e.length;
            let r, o, i;
            for (let a = 0, s = n; a < s; a += 3)
                (r = e[a]),
                    (o = e[a + 1]),
                    (i = e[a + 2]),
                    (t += `${gn(r)}L${gn(o)}Q${gn(i)}`);
            return (t += `${gn(e[0])}`), t;
        }
        function Fu(e, t, n, r, o) {
            const i = [],
                a = Z6(e);
            let s = t[0],
                l;
            const c = t.length;
            for (let d = 0, u = c * o; d < u; d++) {
                l = E.AddXY(t[(d + 1) % c], a() * n, a() * n);
                const h = E.Sub(l, s),
                    p = E.Len(h),
                    m = E.Div(h, p).mul(Math.min(p / 4, r));
                i.push(E.Add(s, m), E.Add(l, m.neg()), l), (s = l);
            }
            return i;
        }
        function Bw(e, t, n) {
            let r = `M ${gn(t[0])}L`,
                o = `M ${gn(t[0])}L`;
            const i = n / 3,
                a = n * 2,
                s = Z6(e);
            let l = t[0],
                c,
                d = t[0],
                u;
            const h = t.length;
            for (let p = 0, m = h - 1; p < m; p++) {
                (c = t[p + 1]), (u = E.AddXY(t[p + 1], s() * i, s() * i));
                const f = E.Sub(c, l),
                    g = E.Len(f),
                    b = E.Div(f, g).mul(Math.min(g / 4, a)),
                    x = E.Add(l, b),
                    S = E.Add(c, b.neg()),
                    _ = E.Sub(u, d),
                    k = E.Len(_),
                    C = E.Div(_, k).mul(Math.min(k / 4, a)),
                    P = E.Add(d, C),
                    I = E.Add(u, C.neg());
                p === m - 1
                    ? ((r += `${gn(x)}L ${gn(c)}`), (o += `${gn(P)}L ${gn(u)}`))
                    : ((r += `${gn(x)}L ${gn(S)}Q ${gn(c)}`),
                        (o += `${gn(P)}L ${gn(I)}Q ${gn(u)}`),
                        (l = c),
                        (d = u));
            }
            return [r, r + o];
        }
        function Q6(e, t) {
            const n = Math.min(e, t) / 2,
                r = Math.max(e, t) - n * 2;
            return Math.PI * (n * 2) + 2 * r;
        }
        function FQ(e, t, n) {
            const r = Math.min(e, t) / 2,
                o = Math.max(e, t) - r * 2,
                a = (Math.PI * (r * 2) + 2 * o) / n,
                s =
                    e > t
                        ? [
                            {
                                type: "straight",
                                start: new E(r, 0),
                                delta: new E(1, 0),
                            },
                            {
                                type: "arc",
                                center: new E(e - r, r),
                                startAngle: -Oe / 2,
                            },
                            {
                                type: "straight",
                                start: new E(e - r, t),
                                delta: new E(-1, 0),
                            },
                            {
                                type: "arc",
                                center: new E(r, r),
                                startAngle: Oe / 2,
                            },
                        ]
                        : [
                            {
                                type: "straight",
                                start: new E(e, r),
                                delta: new E(0, 1),
                            },
                            {type: "arc", center: new E(r, t - r), startAngle: 0},
                            {
                                type: "straight",
                                start: new E(0, t - r),
                                delta: new E(0, -1),
                            },
                            {type: "arc", center: new E(r, r), startAngle: Oe},
                        ];
            let l = 0;
            const c = [];
            for (let d = 0; d < n; d++) {
                const u = s[0];
                u.type === "straight"
                    ? c.push(E.Add(u.start, E.Mul(u.delta, l)))
                    : c.push(BC(u.center.x, u.center.y, r, u.startAngle + l / r)),
                    (l += a);
                let h = u.type === "straight" ? o : Oe * r;
                for (; l > h; )
                    (l -= h),
                        s.push(s.shift()),
                        (h = s[0].type === "straight" ? o : Oe * r);
            }
            return c;
        }
        const BQ = (e, t, n, r, o) => {
            switch (e) {
                case "s":
                    return t;
                case "m":
                    return n;
                case "l":
                    return r;
                case "xl":
                    return o;
            }
        };
        function Bu(e, t, n, r) {
            const o = ta(n),
                i = Q6(e, t),
                a = Math.max(
                    Math.ceil(i / BQ(r, 50, 70, 100, 130)),
                    6,
                    Math.ceil(i / Math.min(e, t))
                ),
                s = (i / a) * 0.2,
                l = Math.max(e - s * 2, 1),
                c = Math.max(t - s * 2, 1),
                d = (e - l) / 2,
                u = (t - c) / 2,
                h = Q6(l, c) / a,
                p = FQ(l, c, a).map((x) => x.addXY(d, u)),
                m = e < 20 ? 0 : s * 0.3,
                f = t < 20 ? 0 : s * 0.3,
                g = p.slice(0);
            for (let x = 0; x < Math.floor(a / 2); x++)
                (g[x] = E.AddXY(g[x], o() * m, o() * f)),
                    (g[a - x - 1] = E.AddXY(g[a - x - 1], o() * m, o() * f));
            const b = [];
            for (let x = 0; x < g.length; x++) {
                const S = x === g.length - 1 ? 0 : x + 1,
                    _ = g[x],
                    k = g[S],
                    C = p[x],
                    P = p[S],
                    I = E.Average([C, P]),
                    $ = E.Angle(C, P) - Math.PI / 2,
                    T = E.Dist(C, P),
                    R = h - T,
                    j = E.Dist(_, k) / T,
                    z = (Math.max(d, u) + R) * j,
                    O = E.Add(I, E.FromAngle($, z));
                O.x < 0 ? (O.x = 0) : O.x > e && (O.x = e),
                    O.y < 0 ? (O.y = 0) : O.y > t && (O.y = t);
                const F = J6(_, k, O),
                    K = E.Dist(F || E.Average([_, k]), _);
                b.push({
                    leftPoint: _,
                    rightPoint: k,
                    arcPoint: O,
                    center: F,
                    radius: K,
                });
            }
            return b;
        }
        function J6(e, t, n) {
            const r = e.x * (t.y - n.y) - e.y * (t.x - n.x) + t.x * n.y - n.x * t.y,
                o =
                    (e.x * e.x + e.y * e.y) * (n.y - t.y) +
                    (t.x * t.x + t.y * t.y) * (e.y - n.y) +
                    (n.x * n.x + n.y * n.y) * (t.y - e.y),
                i =
                    (e.x * e.x + e.y * e.y) * (t.x - n.x) +
                    (t.x * t.x + t.y * t.y) * (n.x - e.x) +
                    (n.x * n.x + n.y * n.y) * (e.x - t.x),
                a = -o / (2 * r),
                s = -i / (2 * r);
            return !Number.isFinite(a) || !Number.isFinite(s) ? null : new E(a, s);
        }
        function UQ(e, t, n, r) {
            const o = [],
                i = Bu(e, t, n, r);
            for (const {center: a, radius: s, leftPoint: l, rightPoint: c} of i)
                o.push(...HQ(l, c, a, s, 10));
            return o;
        }
        function Uu(e, t, n, r) {
            const o = Bu(e, t, n, r);
            let i = `M${M(o[0].leftPoint.x)},${M(o[0].leftPoint.y)}`;
            for (const {leftPoint: a, rightPoint: s, radius: l, center: c} of o) {
                if (c === null) {
                    i += ` L${M(s.x)},${M(s.y)}`;
                    continue;
                }
                const d = tI(a, s, c) ? "0" : "1";
                i += ` A${M(l)},${M(l)} 0 ${d},1 ${M(s.x)},${M(s.y)}`;
            }
            return (i += " Z"), i;
        }
        function eI(e, t, n, r) {
            const o = ta(n),
                i = r === "s" ? 0.5 : r === "m" ? 0.7 : r === "l" ? 0.9 : 1.6,
                a = (m) => m + o() * i * 2,
                s = Bu(e, t, n, r),
                d =
                    s.reduce((m, f) => m + E.Dist(f.leftPoint, f.rightPoint), 0) /
                    s.length >
                    i * 15
                        ? (m) => new E(a(m.x), a(m.y))
                        : (m) => m;
            let u = `M${M(s[0].leftPoint.x)},${M(s[0].leftPoint.y)}`,
                h = d(s[0].leftPoint),
                p = `M${M(h.x)},${M(h.y)}`;
            for (const {
                leftPoint: m,
                center: f,
                rightPoint: g,
                radius: b,
                arcPoint: x,
            } of s) {
                if (f === null) {
                    u += ` L${M(g.x)},${M(g.y)}`;
                    const I = d(g);
                    (p += ` L${M(I.x)},${M(I.y)}`), (h = I);
                    continue;
                }
                const S = tI(m, g, f) ? "0" : "1";
                u += ` A${M(b)},${M(b)} 0 ${S},1 ${M(g.x)},${M(g.y)}`;
                const _ = d(g),
                    k = d(x),
                    C = J6(h, _, k);
                if (!C) {
                    (p += ` L${M(_.x)},${M(_.y)}`), (h = _);
                    continue;
                }
                const P = Math.abs(E.Dist(C, h));
                (p += ` A${M(P)},${M(P)} 0 ${S},1 ${M(_.x)},${M(_.y)}`), (h = _);
            }
            return u + p + " Z";
        }
        function HQ(e, t, n, r, o) {
            if (n === null) return [E.From(e), E.From(t)];
            const i = [],
                a = E.Angle(n, e),
                s = E.Angle(n, t),
                l = Tf(a, s);
            for (let c = 0; c < o; c++) {
                const d = c / (o - 1),
                    u = a + l * d,
                    h = BC(n.x, n.y, r, u);
                i.push(h);
            }
            return i;
        }
        function tI(e, t, n) {
            return (t.x - e.x) * (n.y - e.y) - (t.y - e.y) * (n.x - e.x) > 0;
        }
        const VQ = y.memo(function ({
                                        dash: t,
                                        fill: n,
                                        color: r,
                                        strokeWidth: o,
                                        w: i,
                                        h: a,
                                        id: s,
                                        size: l,
                                    }) {
            const c = Lt(),
                d = Uu(i, a, s, l),
                u = Bu(i, a, s, l);
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsx(_t, {theme: c, d, fill: n, color: r}),
                    v.jsx("g", {
                        strokeWidth: o,
                        stroke: c[r].solid,
                        fill: "none",
                        pointerEvents: "all",
                        children: u.map(
                            (
                                {leftPoint: h, rightPoint: p, center: m, radius: f},
                                g
                            ) => {
                                const b = m
                                        ? f *
                                        Yr(Yr(E.Angle(m, p)) - Yr(E.Angle(m, h)))
                                        : E.Dist(h, p),
                                    {strokeDasharray: x, strokeDashoffset: S} = mn(
                                        b,
                                        o,
                                        {style: t, start: "outset", end: "outset"}
                                    );
                                return v.jsx(
                                    "path",
                                    {
                                        d: m
                                            ? `M${h.x},${h.y}A${f},${f},0,0,1,${p.x},${p.y}`
                                            : `M${h.x},${h.y}L${p.x},${p.y}`,
                                        strokeDasharray: x,
                                        strokeDashoffset: S,
                                    },
                                    g
                                );
                            }
                        ),
                    }),
                ],
            });
        });
        function KQ({
                        dash: e,
                        fill: t,
                        color: n,
                        theme: r,
                        strokeWidth: o,
                        w: i,
                        h: a,
                        id: s,
                        size: l,
                    }) {
            const c = Uu(i, a, s, l),
                d = Bu(i, a, s, l),
                u = document.createElementNS("http://www.w3.org/2000/svg", "g");
            u.setAttribute("stroke-width", o.toString()),
                u.setAttribute("stroke", r[n].solid),
                u.setAttribute("fill", "none");
            for (const {leftPoint: p, rightPoint: m, center: f, radius: g} of d) {
                const b = f
                        ? g * Yr(Yr(E.Angle(f, m)) - Yr(E.Angle(f, p)))
                        : E.Dist(p, m),
                    {strokeDasharray: x, strokeDashoffset: S} = mn(b, o, {
                        style: e,
                        start: "outset",
                        end: "outset",
                    }),
                    _ = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "path"
                    );
                _.setAttribute(
                    "d",
                    f
                        ? `M${p.x},${p.y}A${g},${g},0,0,1,${m.x},${m.y}`
                        : `M${p.x},${p.y}L${m.x},${m.y}`
                ),
                    _.setAttribute("stroke-dasharray", x.toString()),
                    _.setAttribute("stroke-dashoffset", S.toString()),
                    u.appendChild(_);
            }
            const h = dr({d: c, fill: t, color: n, theme: r});
            return eo(u, h);
        }
        const WQ = y.memo(function ({
                                        w: t,
                                        h: n,
                                        strokeWidth: r,
                                        dash: o,
                                        color: i,
                                        fill: a,
                                    }) {
            const s = Lt(),
                l = t / 2,
                c = n / 2,
                d = Math.max(0, l),
                u = Math.max(0, c),
                h = au(d, u),
                {strokeDasharray: p, strokeDashoffset: m} = mn(
                    h < 64 ? h * 2 : h,
                    r,
                    {style: o, snap: 4, closed: !0}
                ),
                f = `M${l - d},${c}a${d},${u},0,1,1,${d * 2},0a${d},${u},0,1,1,-${
                    d * 2
                },0`;
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsx(_t, {theme: s, d: f, color: i, fill: a}),
                    v.jsx("path", {
                        d: f,
                        strokeWidth: r,
                        width: M(t),
                        height: M(n),
                        fill: "none",
                        stroke: s[i].solid,
                        strokeDasharray: p,
                        strokeDashoffset: m,
                        pointerEvents: "all",
                    }),
                ],
            });
        });
        function YQ({
                        w: e,
                        h: t,
                        strokeWidth: n,
                        dash: r,
                        color: o,
                        theme: i,
                        fill: a,
                    }) {
            const s = e / 2,
                l = t / 2,
                c = Math.max(0, s - n / 2),
                d = Math.max(0, l - n / 2),
                u = au(c, d),
                {strokeDasharray: h, strokeDashoffset: p} = mn(
                    u < 64 ? u * 2 : u,
                    n,
                    {style: r, snap: 4, closed: !0}
                ),
                m = `M${s - c},${l}a${c},${d},0,1,1,${c * 2},0a${c},${d},0,1,1,-${
                    c * 2
                },0`,
                f = document.createElementNS("http://www.w3.org/2000/svg", "path");
            f.setAttribute("d", m),
                f.setAttribute("stroke-width", n.toString()),
                f.setAttribute("width", e.toString()),
                f.setAttribute("height", t.toString()),
                f.setAttribute("fill", "none"),
                f.setAttribute("stroke", i[o].solid),
                f.setAttribute("stroke-dasharray", h),
                f.setAttribute("stroke-dashoffset", p);
            const g = dr({d: m, fill: a, color: o, theme: i});
            return eo(f, g);
        }
        function nI(e, t) {
            if (t > e) {
                const r = e / 2;
                return `
    M0,${r}
    a${r},${r},0,1,1,${r * 2},0
    L${e},${t - r}
    a${r},${r},0,1,1,-${r * 2},0
    Z`;
            }
            const n = t / 2;
            return `
    M${n},0
    L${e - n},0
    a${n},${n},0,1,1,0,${n * 2}
    L${n},${t}
    a${n},${n},0,1,1,0,${-n * 2}
    Z`;
        }
        function rI(e, t) {
            if (e > t) {
                const r = t / 2;
                return au(r, r) + (e - r * 2) * 2;
            }
            const n = e / 2;
            return au(n, n) + (t - n * 2) * 2;
        }
        const GQ = y.memo(function ({
                                        w: t,
                                        h: n,
                                        strokeWidth: r,
                                        dash: o,
                                        color: i,
                                        fill: a,
                                    }) {
            const s = Lt(),
                l = nI(t, n),
                c = rI(t, n),
                {strokeDasharray: d, strokeDashoffset: u} = mn(
                    c < 64 ? c * 2 : c,
                    r,
                    {style: o, snap: 4, start: "outset", end: "outset", closed: !0}
                );
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsx(_t, {theme: s, d: l, color: i, fill: a}),
                    v.jsx("path", {
                        d: l,
                        strokeWidth: r,
                        width: M(t),
                        height: M(n),
                        fill: "none",
                        stroke: s[i].solid,
                        strokeDasharray: d,
                        strokeDashoffset: u,
                        pointerEvents: "all",
                    }),
                ],
            });
        });
        function oI({
                        w: e,
                        h: t,
                        strokeWidth: n,
                        dash: r,
                        color: o,
                        theme: i,
                        fill: a,
                    }) {
            const s = nI(e, t),
                l = rI(e, t),
                {strokeDasharray: c, strokeDashoffset: d} = mn(
                    l < 64 ? l * 2 : l,
                    n,
                    {style: r, snap: 4, closed: !0}
                ),
                u = document.createElementNS("http://www.w3.org/2000/svg", "path");
            u.setAttribute("d", s),
                u.setAttribute("stroke-width", n.toString()),
                u.setAttribute("width", e.toString()),
                u.setAttribute("height", t.toString()),
                u.setAttribute("fill", "none"),
                u.setAttribute("stroke", i[o].solid),
                u.setAttribute("stroke-dasharray", c),
                u.setAttribute("stroke-dashoffset", d);
            const h = dr({d: s, fill: a, color: o, theme: i});
            return eo(u, h);
        }
        const XQ = y.memo(function ({
                                        dash: t,
                                        fill: n,
                                        color: r,
                                        strokeWidth: o,
                                        outline: i,
                                        lines: a,
                                    }) {
            const s = Lt(),
                l = "M" + i[0] + "L" + i.slice(1) + "Z";
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsx(_t, {theme: s, d: l, fill: n, color: r}),
                    v.jsxs("g", {
                        strokeWidth: o,
                        stroke: s[r].solid,
                        fill: "none",
                        pointerEvents: "all",
                        children: [
                            Array.from(Array(i.length)).map((c, d) => {
                                const u = i[d],
                                    h = i[(d + 1) % i.length],
                                    p = E.Dist(u, h),
                                    {strokeDasharray: m, strokeDashoffset: f} = mn(
                                        p,
                                        o,
                                        {style: t, start: "outset", end: "outset"}
                                    );
                                return v.jsx(
                                    "line",
                                    {
                                        x1: u.x,
                                        y1: u.y,
                                        x2: h.x,
                                        y2: h.y,
                                        strokeDasharray: m,
                                        strokeDashoffset: f,
                                    },
                                    d
                                );
                            }),
                            a &&
                            a.map(([c, d], u) => {
                                const h = E.Dist(c, d),
                                    {strokeDasharray: p, strokeDashoffset: m} =
                                        mn(h, o, {
                                            style: t,
                                            start: "skip",
                                            end: "outset",
                                            snap: t === "dotted" ? 4 : void 0,
                                        });
                                return v.jsx(
                                    "path",
                                    {
                                        d: `M${c.x},${c.y}L${d.x},${d.y}`,
                                        stroke: s[r].solid,
                                        strokeWidth: o,
                                        fill: "none",
                                        strokeDasharray: p,
                                        strokeDashoffset: m,
                                    },
                                    `line_fg_${u}`
                                );
                            }),
                        ],
                    }),
                ],
            });
        });
        function qQ({
                        dash: e,
                        fill: t,
                        color: n,
                        theme: r,
                        strokeWidth: o,
                        outline: i,
                        lines: a,
                    }) {
            const s = document.createElementNS("http://www.w3.org/2000/svg", "g");
            if (
                (s.setAttribute("stroke-width", o.toString()),
                    s.setAttribute("stroke", r[n].solid),
                    s.setAttribute("fill", "none"),
                    Array.from(Array(i.length)).forEach((c, d) => {
                        const u = i[d],
                            h = i[(d + 1) % i.length],
                            p = E.Dist(u, h),
                            {strokeDasharray: m, strokeDashoffset: f} = mn(p, o, {
                                style: e,
                            }),
                            g = document.createElementNS(
                                "http://www.w3.org/2000/svg",
                                "line"
                            );
                        g.setAttribute("x1", u.x.toString()),
                            g.setAttribute("y1", u.y.toString()),
                            g.setAttribute("x2", h.x.toString()),
                            g.setAttribute("y2", h.y.toString()),
                            g.setAttribute("stroke-dasharray", m.toString()),
                            g.setAttribute("stroke-dashoffset", f.toString()),
                            s.appendChild(g);
                    }),
                    a)
            )
                for (const [c, d] of a) {
                    const u = E.Dist(c, d),
                        {strokeDasharray: h, strokeDashoffset: p} = mn(u, o, {
                            style: e,
                            start: "skip",
                            end: "skip",
                            snap: e === "dotted" ? 4 : 2,
                        }),
                        m = document.createElementNS(
                            "http://www.w3.org/2000/svg",
                            "line"
                        );
                    m.setAttribute("x1", c.x.toString()),
                        m.setAttribute("y1", c.y.toString()),
                        m.setAttribute("x2", d.x.toString()),
                        m.setAttribute("y2", d.y.toString()),
                        m.setAttribute("stroke-dasharray", h.toString()),
                        m.setAttribute("stroke-dashoffset", p.toString()),
                        s.appendChild(m);
                }
            const l = dr({
                d: "M" + i[0] + "L" + i.slice(1) + "Z",
                fill: t,
                color: n,
                theme: r,
            });
            return eo(s, l);
        }
        const ZQ = y.memo(function ({
                                        fill: t,
                                        color: n,
                                        strokeWidth: r,
                                        w: o,
                                        h: i,
                                        id: a,
                                        size: s,
                                    }) {
            const l = Lt(),
                c = eI(o, i, a, s);
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsx(_t, {theme: l, d: c, fill: t, color: n}),
                    v.jsx("path", {
                        d: c,
                        stroke: l[n].solid,
                        strokeWidth: r,
                        fill: "none",
                    }),
                ],
            });
        });
        function QQ({
                        fill: e,
                        color: t,
                        strokeWidth: n,
                        theme: r,
                        w: o,
                        h: i,
                        id: a,
                        size: s,
                    }) {
            const l = eI(o, i, a, s),
                c = document.createElementNS("http://www.w3.org/2000/svg", "path");
            c.setAttribute("d", l),
                c.setAttribute("stroke-width", n.toString()),
                c.setAttribute("stroke", r[t].solid),
                c.setAttribute("fill", "none");
            const d = dr({d: l, fill: e, color: t, theme: r});
            return eo(c, d);
        }
        y.memo(function ({id: t, w: n, h: r, strokeWidth: o, fill: i, color: a}) {
            const s = Lt(),
                l = Uw(t, n, r, o),
                c = sI(t, n, r, o);
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsx(_t, {theme: s, d: l, color: a, fill: i}),
                    v.jsx("path", {
                        d: c,
                        fill: s[a].solid,
                        strokeWidth: 0,
                        pointerEvents: "all",
                    }),
                ],
            });
        });
        function JQ({
                        id: e,
                        w: t,
                        h: n,
                        strokeWidth: r,
                        fill: o,
                        color: i,
                        theme: a,
                    }) {
            const s = document.createElementNS(
                "http://www.w3.org/2000/svg",
                "path"
            );
            s.setAttribute("d", sI(e, t, n, r)), s.setAttribute("fill", a[i].solid);
            const l = dr({d: Uw(e, t, n, r), fill: o, color: i, theme: a});
            return eo(s, l);
        }
        function iI(e) {
            return {
                size: 1 + e,
                thinning: 0.25,
                end: {taper: e},
                start: {taper: e},
                streamline: 0,
                smoothing: 1,
                simulatePressure: !1,
            };
        }
        function aI(e, t, n, r) {
            const o = ta(e),
                i = t / 2,
                a = n / 2,
                s = au(i, a),
                l = [],
                c = Fe * o(),
                d = Fe + qe / 2 + Math.abs(o()) * qe,
                u = Math.max(16, s / 10);
            for (let h = 0; h < u; h++) {
                const p = h / (u - 1),
                    m = c + p * d,
                    f = Math.cos(m),
                    g = Math.sin(m);
                l.push(
                    new E(
                        i * f + t * 0.5 + 0.05 * o(),
                        a * g + n / 2 + 0.05 * o(),
                        Math.min(
                            1,
                            0.5 +
                            Math.abs(
                                0.5 -
                                (o() > 0
                                    ? un.easeInOutSine(p)
                                    : un.easeInExpo(p))
                            ) /
                            2
                        )
                    )
                );
            }
            return Jr(l, iI(r));
        }
        function sI(e, t, n, r) {
            const o = iI(r);
            return uu(Mu(nc(aI(e, t, n, r), o), o));
        }
        function Uw(e, t, n, r) {
            return ma(aI(e, t, n, r));
        }
        const eJ = y.memo(function ({
                                        id: t,
                                        outline: n,
                                        lines: r,
                                        fill: o,
                                        color: i,
                                        strokeWidth: a,
                                    }) {
            const s = Lt(),
                l = Fu(t, n, a / 3, a * 2, 2);
            let c = Nu(l);
            if (r) for (const [h, p] of r) c += `M${h.x},${h.y}L${p.x},${p.y}`;
            const d = Fu(t, n, 0, a * 2, 1),
                u = Nu(d);
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsx(_t, {d: u, fill: o, color: i, theme: s}),
                    v.jsx("path", {
                        d: c,
                        stroke: s[i].solid,
                        strokeWidth: a,
                        fill: "none",
                    }),
                ],
            });
        });
        function tJ({
                        id: e,
                        outline: t,
                        lines: n,
                        fill: r,
                        color: o,
                        theme: i,
                        strokeWidth: a,
                    }) {
            const s = Fu(e, t, a / 3, a * 2, 2);
            let l = Nu(s);
            if (n) for (const [p, m] of n) l += `M${p.x},${p.y}L${m.x},${m.y}`;
            const c = Fu(e, t, 0, a * 2, 1),
                d = Nu(c),
                u = document.createElementNS("http://www.w3.org/2000/svg", "path");
            u.setAttribute("d", l),
                u.setAttribute("fill", "none"),
                u.setAttribute("stroke", i[o].solid),
                u.setAttribute("stroke-width", a.toString());
            const h = dr({d, fill: r, color: o, theme: i});
            return eo(u, h);
        }
        const nJ = y.memo(function ({
                                        fill: t,
                                        color: n,
                                        strokeWidth: r,
                                        w: o,
                                        h: i,
                                        id: a,
                                        size: s,
                                    }) {
            const l = Lt(),
                c = Uu(o, i, a, s);
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsx(_t, {theme: l, d: c, fill: t, color: n}),
                    v.jsx("path", {
                        d: c,
                        stroke: l[n].solid,
                        strokeWidth: r,
                        fill: "none",
                    }),
                ],
            });
        });
        function rJ({
                        fill: e,
                        color: t,
                        strokeWidth: n,
                        theme: r,
                        w: o,
                        h: i,
                        id: a,
                        size: s,
                    }) {
            const l = Uu(o, i, a, s),
                c = document.createElementNS("http://www.w3.org/2000/svg", "path");
            c.setAttribute("d", l),
                c.setAttribute("stroke-width", n.toString()),
                c.setAttribute("stroke", r[t].solid),
                c.setAttribute("fill", "none");
            const d = dr({d: l, fill: e, color: t, theme: r});
            return eo(c, d);
        }
        const lI = y.memo(function ({
                                        w: t,
                                        h: n,
                                        strokeWidth: r,
                                        fill: o,
                                        color: i,
                                    }) {
            const a = Lt(),
                s = t / 2,
                l = n / 2,
                c = Math.max(0, s),
                d = Math.max(0, l),
                u = `M${s - c},${l}a${c},${d},0,1,1,${c * 2},0a${c},${d},0,1,1,-${
                    c * 2
                },0`;
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsx(_t, {d: u, color: i, fill: o, theme: a}),
                    v.jsx("path", {
                        d: u,
                        stroke: a[i].solid,
                        strokeWidth: r,
                        fill: "none",
                    }),
                ],
            });
        });
        function oJ({w: e, h: t, strokeWidth: n, fill: r, color: o, theme: i}) {
            const a = e / 2,
                s = t / 2,
                l = Math.max(0, a),
                c = Math.max(0, s),
                d = `M${a - l},${s}a${l},${c},0,1,1,${l * 2},0a${l},${c},0,1,1,-${
                    l * 2
                },0`,
                u = document.createElementNS("http://www.w3.org/2000/svg", "path");
            u.setAttribute("d", d),
                u.setAttribute("stroke-width", n.toString()),
                u.setAttribute("width", e.toString()),
                u.setAttribute("height", t.toString()),
                u.setAttribute("fill", "none"),
                u.setAttribute("stroke", i[o].solid);
            const h = dr({d, fill: r, color: o, theme: i});
            return eo(u, h);
        }
        const cI = y.memo(function ({
                                        w: t,
                                        h: n,
                                        strokeWidth: r,
                                        fill: o,
                                        color: i,
                                    }) {
            const a = Lt(),
                s = Hw(t, n);
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsx(_t, {d: s, color: i, fill: o, theme: a}),
                    v.jsx("path", {
                        d: s,
                        stroke: a[i].solid,
                        strokeWidth: r,
                        fill: "none",
                    }),
                ],
            });
        });
        function iJ({w: e, h: t, strokeWidth: n, fill: r, color: o, theme: i}) {
            const a = Hw(e, t),
                s = document.createElementNS("http://www.w3.org/2000/svg", "path");
            s.setAttribute("d", a),
                s.setAttribute("stroke-width", n.toString()),
                s.setAttribute("width", e.toString()),
                s.setAttribute("height", t.toString()),
                s.setAttribute("fill", "none"),
                s.setAttribute("stroke", i[o].solid);
            const l = dr({d: a, fill: r, color: o, theme: i});
            return eo(s, l);
        }
        function Hw(e, t) {
            let n;
            if (t > e) {
                const r = e / 2;
                n = `
    M0,${r}
    a${r},${r},0,1,1,${r * 2},0
    L${e},${t - r}
    a${r},${r},0,1,1,-${r * 2},0
    Z`;
            } else {
                const r = t / 2;
                n = `
    M${r},0
    L${e - r},0
    a${r},${r},0,1,1,0,${r * 2}
    L${r},${t}
    a${r},${r},0,1,1,0,${-r * 2}
    Z`;
            }
            return n;
        }
        const aJ = y.memo(function ({
                                        outline: t,
                                        lines: n,
                                        fill: r,
                                        color: o,
                                        strokeWidth: i,
                                    }) {
            const a = Lt();
            let s = "M" + t[0] + "L" + t.slice(1) + "Z";
            if (n) for (const [l, c] of n) s += `M${l.x},${l.y}L${c.x},${c.y}`;
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsx(_t, {d: s, fill: r, color: o, theme: a}),
                    v.jsx("path", {
                        d: s,
                        stroke: a[o].solid,
                        strokeWidth: i,
                        fill: "none",
                    }),
                ],
            });
        });
        function sJ({
                        outline: e,
                        lines: t,
                        fill: n,
                        color: r,
                        strokeWidth: o,
                        theme: i,
                    }) {
            const a = "M" + e[0] + "L" + e.slice(1) + "Z",
                s = a;
            let l = a;
            if (t) for (const [u, h] of t) l += `M${u.x},${u.y}L${h.x},${h.y}`;
            const c = document.createElementNS(
                "http://www.w3.org/2000/svg",
                "path"
            );
            c.setAttribute("d", l),
                c.setAttribute("stroke-width", o.toString()),
                c.setAttribute("stroke", i[r].solid),
                c.setAttribute("fill", "none");
            const d = dr({d: s, fill: n, color: r, theme: i});
            return eo(c, d);
        }
        const Vw = 16,
            Ir = 17 * 3;
        class Wm extends Wl {
            constructor() {
                super(...arguments);
                w(this, "canEdit", () => !0);
                w(this, "onEditEnd", (n) => {
                    const {
                        id: r,
                        type: o,
                        props: {text: i},
                    } = n;
                    i.trimEnd() !== n.props.text &&
                    this.editor.updateShapes([
                        {id: r, type: o, props: {text: i.trimEnd()}},
                    ]);
                });
                w(
                    this,
                    "onResize",
                    (
                        n,
                        {
                            handle: r,
                            newPoint: o,
                            scaleX: i,
                            scaleY: a,
                            initialShape: s,
                        }
                    ) => {
                        let l = s.props.w * i,
                            c = (s.props.h + s.props.growY) * a,
                            d = 0,
                            u = 0;
                        if (n.props.text.trim()) {
                            let f = Math.max(Math.abs(l), Ir),
                                g = Math.max(Math.abs(c), Ir);
                            f < Ir && g === Ir && (f = Ir),
                            f === Ir && g < Ir && (g = Ir);
                            const b = Ym(this.editor, {
                                    ...n,
                                    props: {...n.props, w: f, h: g},
                                }),
                                x = Math.max(Math.abs(l), b.w) * Math.sign(l),
                                S = Math.max(Math.abs(c), b.h) * Math.sign(c);
                            (d = Math.abs(x) - Math.abs(l)),
                                (u = Math.abs(S) - Math.abs(c)),
                                (l = x),
                                (c = S);
                        }
                        const h = new E(0, 0);
                        i < 0 && (h.x += l),
                        (r === "left" ||
                            r === "top_left" ||
                            r === "bottom_left") &&
                        (h.x += i < 0 ? d : -d),
                        a < 0 && (h.y += c),
                        (r === "top" ||
                            r === "top_left" ||
                            r === "top_right") &&
                        (h.y += a < 0 ? u : -u);
                        const {x: p, y: m} = h.rot(n.rotation).add(o);
                        return {
                            x: p,
                            y: m,
                            props: {
                                w: Math.max(Math.abs(l), 1),
                                h: Math.max(Math.abs(c), 1),
                                growY: 0,
                            },
                        };
                    }
                );
                w(this, "onBeforeCreate", (n) => {
                    if (!n.props.text)
                        return n.props.growY
                            ? {...n, props: {...n.props, growY: 0}}
                            : void 0;
                    const r = n.props.h,
                        o = Ym(this.editor, n).h;
                    let i = null;
                    if (
                        (o > r ? (i = o - r) : n.props.growY && (i = 0), i !== null)
                    )
                        return {...n, props: {...n.props, growY: i}};
                });
                w(this, "onBeforeUpdate", (n, r) => {
                    const o = n.props.text,
                        i = r.props.text;
                    if (
                        o === i &&
                        n.props.font === r.props.font &&
                        n.props.size === r.props.size
                    )
                        return;
                    if (o && !i) return {...r, props: {...r.props, growY: 0}};
                    const a = n.props.w,
                        s = n.props.h,
                        l = Ym(this.editor, r),
                        c = l.w,
                        d = l.h;
                    if (!o && i && i.length === 1) {
                        let h = Math.max(a, c),
                            p = Math.max(s, d);
                        return (
                            n.props.w < Ir &&
                            n.props.h < Ir &&
                            ((h = Math.max(h, Ir)),
                                (p = Math.max(p, Ir)),
                                (h = Math.max(h, p)),
                                (p = Math.max(h, p))),
                                {...r, props: {...r.props, w: h, h: p, growY: 0}}
                        );
                    }
                    let u = null;
                    if (
                        (d > s ? (u = d - s) : n.props.growY && (u = 0), u !== null)
                    )
                        return {
                            ...r,
                            props: {
                                ...r.props,
                                growY: u,
                                w: Math.max(r.props.w, c),
                            },
                        };
                    if (c > n.props.w) return {...r, props: {...r.props, w: c}};
                });
                w(this, "onDoubleClick", (n) => {
                    if (this.editor.inputs.altKey)
                        switch (n.props.geo) {
                            case "rectangle":
                                return {...n, props: {geo: "check-box"}};
                            case "check-box":
                                return {...n, props: {geo: "rectangle"}};
                        }
                });
            }
            getDefaultProps() {
                return {
                    w: 100,
                    h: 100,
                    geo: "rectangle",
                    color: "black",
                    labelColor: "black",
                    fill: "none",
                    dash: "draw",
                    size: "m",
                    font: "draw",
                    text: "",
                    align: "middle",
                    verticalAlign: "middle",
                    growY: 0,
                    url: "",
                };
            }
            getGeometry(n) {
                const r = Math.max(1, n.props.w),
                    o = Math.max(1, n.props.h + n.props.growY),
                    i = r / 2,
                    a = o / 2,
                    s = fn[n.props.size],
                    l = n.props.fill !== "none";
                let c;
                switch (n.props.geo) {
                    case "cloud": {
                        c = new Ot({
                            points: UQ(r, o, n.id, n.props.size),
                            isFilled: l,
                        });
                        break;
                    }
                    case "triangle": {
                        c = new Ot({
                            points: [new E(i, 0), new E(r, o), new E(0, o)],
                            isFilled: l,
                        });
                        break;
                    }
                    case "diamond": {
                        c = new Ot({
                            points: [
                                new E(i, 0),
                                new E(r, a),
                                new E(i, o),
                                new E(0, a),
                            ],
                            isFilled: l,
                        });
                        break;
                    }
                    case "pentagon": {
                        c = new Ot({points: By(r, o, 5), isFilled: l});
                        break;
                    }
                    case "hexagon": {
                        c = new Ot({points: By(r, o, 6), isFilled: l});
                        break;
                    }
                    case "octagon": {
                        c = new Ot({points: By(r, o, 8), isFilled: l});
                        break;
                    }
                    case "ellipse": {
                        c = new RE({width: r, height: o, isFilled: l});
                        break;
                    }
                    case "oval": {
                        c = new cV({width: r, height: o, isFilled: l});
                        break;
                    }
                    case "star": {
                        const g = Fe / 5 / 2,
                            b = Math.floor(5 / 4) * 2,
                            x = 5 * 2 - b,
                            S = 0,
                            _ = Math.floor(5 / 2) * 2,
                            k = (Math.cos(-qe + b * g) * r) / 2,
                            C = (Math.cos(-qe + x * g) * r) / 2,
                            P = (Math.sin(-qe + S * g) * o) / 2,
                            I = (Math.sin(-qe + _ * g) * o) / 2,
                            $ = r - Math.abs(k - C),
                            T = o - Math.abs(I - P),
                            R = r / 2 + C - (r / 2 - k),
                            D = o / 2 + P - (o / 2 - I),
                            j = 1,
                            z = (r - R) / 2,
                            O = (o - D) / 2,
                            F = (r + $) / 2,
                            K = (o + T) / 2,
                            V = (F * j) / 2,
                            B = (K * j) / 2;
                        c = new Ot({
                            points: Array.from(Array(5 * 2)).map((H, G) => {
                                const ee = -qe + G * g;
                                return new E(
                                    z + (G % 2 ? V : F) * Math.cos(ee),
                                    O + (G % 2 ? B : K) * Math.sin(ee)
                                );
                            }),
                            isFilled: l,
                        });
                        break;
                    }
                    case "rhombus": {
                        const f = Math.min(r * 0.38, o * 0.38);
                        c = new Ot({
                            points: [
                                new E(f, 0),
                                new E(r, 0),
                                new E(r - f, o),
                                new E(0, o),
                            ],
                            isFilled: l,
                        });
                        break;
                    }
                    case "rhombus-2": {
                        const f = Math.min(r * 0.38, o * 0.38);
                        c = new Ot({
                            points: [
                                new E(0, 0),
                                new E(r - f, 0),
                                new E(r, o),
                                new E(f, o),
                            ],
                            isFilled: l,
                        });
                        break;
                    }
                    case "trapezoid": {
                        const f = Math.min(r * 0.38, o * 0.38);
                        c = new Ot({
                            points: [
                                new E(f, 0),
                                new E(r - f, 0),
                                new E(r, o),
                                new E(0, o),
                            ],
                            isFilled: l,
                        });
                        break;
                    }
                    case "arrow-right": {
                        const f = Math.min(r, o) * 0.38,
                            g = o * 0.16;
                        c = new Ot({
                            points: [
                                new E(0, g),
                                new E(r - f, g),
                                new E(r - f, 0),
                                new E(r, o / 2),
                                new E(r - f, o),
                                new E(r - f, o - g),
                                new E(0, o - g),
                            ],
                            isFilled: l,
                        });
                        break;
                    }
                    case "arrow-left": {
                        const f = Math.min(r, o) * 0.38,
                            g = o * 0.16;
                        c = new Ot({
                            points: [
                                new E(f, 0),
                                new E(f, g),
                                new E(r, g),
                                new E(r, o - g),
                                new E(f, o - g),
                                new E(f, o),
                                new E(0, o / 2),
                            ],
                            isFilled: l,
                        });
                        break;
                    }
                    case "arrow-up": {
                        const f = r * 0.16,
                            g = Math.min(r, o) * 0.38;
                        c = new Ot({
                            points: [
                                new E(r / 2, 0),
                                new E(r, g),
                                new E(r - f, g),
                                new E(r - f, o),
                                new E(f, o),
                                new E(f, g),
                                new E(0, g),
                            ],
                            isFilled: l,
                        });
                        break;
                    }
                    case "arrow-down": {
                        const f = r * 0.16,
                            g = Math.min(r, o) * 0.38;
                        c = new Ot({
                            points: [
                                new E(f, 0),
                                new E(r - f, 0),
                                new E(r - f, o - g),
                                new E(r, o - g),
                                new E(r / 2, o),
                                new E(0, o - g),
                                new E(f, o - g),
                            ],
                            isFilled: l,
                        });
                        break;
                    }
                    case "check-box":
                    case "x-box":
                    case "rectangle": {
                        c = new ia({
                            width: r,
                            height: o,
                            isFilled: l,
                            isSnappable: !0,
                        });
                        break;
                    }
                }
                const d = Ym(this.editor, n),
                    u = Math.min(
                        r,
                        Math.max(d.w, Math.min(32, Math.max(1, r - 8)))
                    ),
                    h = Math.min(
                        o,
                        Math.max(d.h, Math.min(32, Math.max(1, r - 8)))
                    ),
                    p = Gm(n.props, s),
                    m = p ? p.map((f) => new ss({points: f})) : [];
                return new oa({
                    children: [
                        c,
                        new ia({
                            x:
                                n.props.align === "start"
                                    ? 0
                                    : n.props.align === "end"
                                        ? r - u
                                        : (r - u) / 2,
                            y:
                                n.props.verticalAlign === "start"
                                    ? 0
                                    : n.props.verticalAlign === "end"
                                        ? o - h
                                        : (o - h) / 2,
                            width: u,
                            height: h,
                            isFilled: !0,
                            isSnappable: !1,
                            isLabel: !0,
                        }),
                        ...m,
                    ],
                    isSnappable: !1,
                });
            }
            component(n) {
                const {id: r, type: o, props: i} = n,
                    a = fn[i.size],
                    {
                        w: s,
                        color: l,
                        labelColor: c,
                        fill: d,
                        dash: u,
                        growY: h,
                        font: p,
                        align: m,
                        verticalAlign: f,
                        size: g,
                        text: b,
                    } = i,
                    x = () => {
                        const S = i.h + h;
                        switch (i.geo) {
                            case "cloud": {
                                if (u === "solid")
                                    return v.jsx(nJ, {
                                        color: l,
                                        fill: d,
                                        strokeWidth: a,
                                        w: s,
                                        h: S,
                                        id: r,
                                        size: g,
                                    });
                                if (u === "dashed" || u === "dotted")
                                    return v.jsx(VQ, {
                                        color: l,
                                        fill: d,
                                        strokeWidth: a,
                                        w: s,
                                        h: S,
                                        id: r,
                                        size: g,
                                        dash: u,
                                    });
                                if (u === "draw")
                                    return v.jsx(ZQ, {
                                        color: l,
                                        fill: d,
                                        strokeWidth: a,
                                        w: s,
                                        h: S,
                                        id: r,
                                        size: g,
                                    });
                                break;
                            }
                            case "ellipse": {
                                if (u === "solid")
                                    return v.jsx(lI, {
                                        strokeWidth: a,
                                        w: s,
                                        h: S,
                                        color: l,
                                        fill: d,
                                    });
                                if (u === "dashed" || u === "dotted")
                                    return v.jsx(WQ, {
                                        id: r,
                                        strokeWidth: a,
                                        w: s,
                                        h: S,
                                        dash: u,
                                        color: l,
                                        fill: d,
                                    });
                                if (u === "draw")
                                    return v.jsx(lI, {
                                        strokeWidth: a,
                                        w: s,
                                        h: S,
                                        color: l,
                                        fill: d,
                                    });
                                break;
                            }
                            case "oval": {
                                if (u === "solid")
                                    return v.jsx(cI, {
                                        strokeWidth: a,
                                        w: s,
                                        h: S,
                                        color: l,
                                        fill: d,
                                    });
                                if (u === "dashed" || u === "dotted")
                                    return v.jsx(GQ, {
                                        id: r,
                                        strokeWidth: a,
                                        w: s,
                                        h: S,
                                        dash: u,
                                        color: l,
                                        fill: d,
                                    });
                                if (u === "draw")
                                    return v.jsx(cI, {
                                        strokeWidth: a,
                                        w: s,
                                        h: S,
                                        color: l,
                                        fill: d,
                                    });
                                break;
                            }
                            default: {
                                const _ = this.editor.getShapeGeometry(n),
                                    k =
                                        _ instanceof oa
                                            ? _.children[0].vertices
                                            : _.vertices,
                                    C = Gm(n.props, a);
                                if (u === "solid")
                                    return v.jsx(aJ, {
                                        fill: d,
                                        color: l,
                                        strokeWidth: a,
                                        outline: k,
                                        lines: C,
                                    });
                                if (u === "dashed" || u === "dotted")
                                    return v.jsx(XQ, {
                                        dash: u,
                                        fill: d,
                                        color: l,
                                        strokeWidth: a,
                                        outline: k,
                                        lines: C,
                                    });
                                if (u === "draw")
                                    return v.jsx(eJ, {
                                        id: r,
                                        fill: d,
                                        color: l,
                                        strokeWidth: a,
                                        outline: k,
                                        lines: C,
                                    });
                            }
                        }
                    };
                return v.jsxs(v.Fragment, {
                    children: [
                        v.jsx(ar, {id: r, children: x()}),
                        v.jsxs(us, {
                            id: n.id,
                            style: {
                                overflow: "hidden",
                                width: n.props.w,
                                height: n.props.h + i.growY,
                            },
                            children: [
                                v.jsx(X6, {
                                    id: r,
                                    type: o,
                                    font: p,
                                    fill: d,
                                    size: g,
                                    align: m,
                                    verticalAlign: f,
                                    text: b,
                                    labelColor: c,
                                    wrap: !0,
                                    bounds:
                                        i.geo === "cloud"
                                            ? this.getGeometry(n).bounds
                                            : void 0,
                                }),
                                n.props.url &&
                                v.jsx(ju, {
                                    url: n.props.url,
                                    zoomLevel: this.editor.getZoomLevel(),
                                }),
                            ],
                        }),
                    ],
                });
            }
            indicator(n) {
                const {id: r, props: o} = n,
                    {w: i, size: a} = o,
                    s = o.h + o.growY,
                    l = fn[a];
                switch (o.geo) {
                    case "ellipse":
                        return o.dash === "draw"
                            ? v.jsx("path", {d: Uw(r, i, s, l)})
                            : v.jsx("ellipse", {
                                cx: i / 2,
                                cy: s / 2,
                                rx: i / 2,
                                ry: s / 2,
                            });
                    case "oval":
                        return v.jsx("path", {d: Hw(i, s)});
                    case "cloud":
                        return v.jsx("path", {d: Uu(i, s, r, a)});
                    default: {
                        const c = this.editor.getShapeGeometry(n),
                            d =
                                c instanceof oa
                                    ? c.children[0].vertices
                                    : c.vertices;
                        let u;
                        if (o.dash === "draw") {
                            const p = Fu(r, d, 0, l * 2, 1);
                            u = Nu(p);
                        } else u = "M" + d[0] + "L" + d.slice(1) + "Z";
                        const h = Gm(n.props, l);
                        if (h)
                            for (const [p, m] of h)
                                u += `M${p.x},${p.y}L${m.x},${m.y}`;
                        return v.jsx("path", {d: u});
                    }
                }
            }
            toSvg(n, r) {
                const {id: o, props: i} = n,
                    a = fn[i.size],
                    s = Kn({isDarkMode: this.editor.user.getIsDarkMode()});
                r.addExportDef(Aw(n.props.fill, s));
                let l;
                switch (i.geo) {
                    case "ellipse": {
                        switch (i.dash) {
                            case "draw":
                                l = JQ({
                                    id: o,
                                    w: i.w,
                                    h: i.h,
                                    color: i.color,
                                    fill: i.fill,
                                    strokeWidth: a,
                                    theme: s,
                                });
                                break;
                            case "solid":
                                l = oJ({
                                    strokeWidth: a,
                                    w: i.w,
                                    h: i.h,
                                    color: i.color,
                                    fill: i.fill,
                                    theme: s,
                                });
                                break;
                            default:
                                l = YQ({
                                    id: o,
                                    strokeWidth: a,
                                    w: i.w,
                                    h: i.h,
                                    dash: i.dash,
                                    color: i.color,
                                    fill: i.fill,
                                    theme: s,
                                });
                                break;
                        }
                        break;
                    }
                    case "oval": {
                        switch (i.dash) {
                            case "draw":
                                l = oI({
                                    id: o,
                                    strokeWidth: a,
                                    w: i.w,
                                    h: i.h,
                                    dash: i.dash,
                                    color: i.color,
                                    fill: i.fill,
                                    theme: s,
                                });
                                break;
                            case "solid":
                                l = iJ({
                                    strokeWidth: a,
                                    w: i.w,
                                    h: i.h,
                                    color: i.color,
                                    fill: i.fill,
                                    theme: s,
                                });
                                break;
                            default:
                                l = oI({
                                    id: o,
                                    strokeWidth: a,
                                    w: i.w,
                                    h: i.h,
                                    dash: i.dash,
                                    color: i.color,
                                    fill: i.fill,
                                    theme: s,
                                });
                        }
                        break;
                    }
                    case "cloud": {
                        switch (i.dash) {
                            case "draw":
                                l = QQ({
                                    id: o,
                                    strokeWidth: a,
                                    w: i.w,
                                    h: i.h,
                                    color: i.color,
                                    fill: i.fill,
                                    size: i.size,
                                    theme: s,
                                });
                                break;
                            case "solid":
                                l = rJ({
                                    strokeWidth: a,
                                    w: i.w,
                                    h: i.h,
                                    color: i.color,
                                    fill: i.fill,
                                    size: i.size,
                                    id: o,
                                    theme: s,
                                });
                                break;
                            default:
                                l = KQ({
                                    id: o,
                                    strokeWidth: a,
                                    w: i.w,
                                    h: i.h,
                                    dash: i.dash,
                                    color: i.color,
                                    fill: i.fill,
                                    theme: s,
                                    size: i.size,
                                });
                        }
                        break;
                    }
                    default: {
                        const c = this.editor.getShapeGeometry(n),
                            d =
                                c instanceof oa
                                    ? c.children[0].vertices
                                    : c.vertices,
                            u = Gm(n.props, a);
                        switch (i.dash) {
                            case "draw":
                                l = tJ({
                                    id: o,
                                    fill: i.fill,
                                    color: i.color,
                                    strokeWidth: a,
                                    outline: d,
                                    lines: u,
                                    theme: s,
                                });
                                break;
                            case "solid":
                                l = sJ({
                                    fill: i.fill,
                                    color: i.color,
                                    strokeWidth: a,
                                    outline: d,
                                    lines: u,
                                    theme: s,
                                });
                                break;
                            default:
                                l = qQ({
                                    dash: i.dash,
                                    fill: i.fill,
                                    color: i.color,
                                    strokeWidth: a,
                                    outline: d,
                                    lines: u,
                                    theme: s,
                                });
                                break;
                        }
                        break;
                    }
                }
                if (i.text) {
                    const c = this.editor.getShapeGeometry(n).bounds;
                    r.addExportDef(jm(n.props.font));
                    const d = q6({
                            editor: this.editor,
                            shape: n,
                            font: qd[n.props.font],
                            bounds: c,
                        }),
                        u = d.cloneNode(!0);
                    u.setAttribute("fill", s[n.props.labelColor].solid),
                        u.setAttribute("stroke", "none");
                    const h = d.cloneNode(!0);
                    h.setAttribute("stroke-width", "2"),
                        h.setAttribute("fill", s.background),
                        h.setAttribute("stroke", s.background);
                    const p = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "g"
                    );
                    if ((p.append(h), p.append(u), l.nodeName === "g"))
                        return l.appendChild(p), l;
                    {
                        const m = document.createElementNS(
                            "http://www.w3.org/2000/svg",
                            "g"
                        );
                        return m.appendChild(l), m.appendChild(p), m;
                    }
                }
                return l;
            }
            getCanvasSvgDefs() {
                return [Mw()];
            }
        }
        w(Wm, "type", "geo"), w(Wm, "props", PL), w(Wm, "migrations", IL);
        function Ym(e, t) {
            const n = t.props.text;
            if (!n) return {w: 0, h: 0};
            const r = e.textMeasure.measureText("w", {
                    ...qt,
                    fontFamily: gi[t.props.font],
                    fontSize: rc[t.props.size],
                    maxWidth: 100,
                }),
                o = {s: 2, m: 3.5, l: 5, xl: 10},
                i = e.textMeasure.measureText(n, {
                    ...qt,
                    fontFamily: gi[t.props.font],
                    fontSize: rc[t.props.size],
                    minWidth: r.w + "px",
                    maxWidth: Math.max(
                        0,
                        Math.ceil(r.w + o[t.props.size]),
                        Math.ceil(t.props.w - Vw * 2)
                    ),
                });
            return {w: i.w + Vw * 2, h: i.h + Vw * 2};
        }
        function Gm(e, t) {
            switch (e.geo) {
                case "x-box":
                    return lJ(e.w, e.h, t, e.dash);
                case "check-box":
                    return cJ(e.w, e.h);
                default:
                    return;
            }
        }
        function lJ(e, t, n, r) {
            const o = r === "draw" ? 0.62 : 0;
            if (r === "dashed")
                return [
                    [new E(0, 0), new E(e / 2, t / 2)],
                    [new E(e, t), new E(e / 2, t / 2)],
                    [new E(0, t), new E(e / 2, t / 2)],
                    [new E(e, 0), new E(e / 2, t / 2)],
                ];
            const i = (s) => Math.max(0, Math.min(e, s)),
                a = (s) => Math.max(0, Math.min(t, s));
            return [
                [new E(i(n * o), a(n * o)), new E(i(e - n * o), a(t - n * o))],
                [new E(i(n * o), a(t - n * o)), new E(i(e - n * o), a(n * o))],
            ];
        }
        function cJ(e, t) {
            const n = Math.min(e, t) * 0.82,
                r = (e - n) / 2,
                o = (t - n) / 2,
                i = (s) => Math.max(0, Math.min(e, s)),
                a = (s) => Math.max(0, Math.min(t, s));
            return [
                [
                    new E(i(r + n * 0.25), a(o + n * 0.52)),
                    new E(i(r + n * 0.45), a(o + n * 0.82)),
                ],
                [
                    new E(i(r + n * 0.45), a(o + n * 0.82)),
                    new E(i(r + n * 0.82), a(o + n * 0.22)),
                ],
            ];
        }
        function dJ() {
            const [e, t] = y.useState(!1);
            return (
                y.useEffect(() => {
                    const r = CSS.supports("color", "color(display-p3 1 1 1)"),
                        o = matchMedia("(color-gamut: p3)");
                    t(r && o.matches);
                    const i = () => t(r && o.matches);
                    return (
                        o.addEventListener("change", i),
                            () => o.removeEventListener("change", i)
                    );
                }, []),
                    X(Xe.forceSrgb) || !e ? "srgb" : "p3"
            );
        }
        const dI = 0.35,
            uI = 0.82;
        class Xm extends qr {
            constructor() {
                super(...arguments);
                w(this, "hideResizeHandles", (n) => qm(n));
                w(this, "hideRotateHandle", (n) => qm(n));
                w(this, "hideSelectionBoundsFg", (n) => qm(n));
                w(this, "onResize", (n, r) => {
                    const {scaleX: o, scaleY: i} = r,
                        a = [];
                    for (const s of n.props.segments)
                        a.push({
                            ...s,
                            points: s.points.map(({x: l, y: c, z: d}) => ({
                                x: o * l,
                                y: i * c,
                                z: d,
                            })),
                        });
                    return {props: {segments: a}};
                });
            }
            getDefaultProps() {
                return {
                    segments: [],
                    color: "black",
                    size: "m",
                    isComplete: !1,
                    isPen: !1,
                };
            }
            getGeometry(n) {
                const r = lc(n);
                if (qm(n))
                    return new zE({
                        x: -r / 2,
                        y: -r / 2,
                        radius: r / 2,
                        isFilled: !0,
                    });
                const {strokePoints: o, sw: i} = hI(n, r, !0),
                    a = jw({strokeWidth: i, showAsComplete: !0});
                return nc(o, a), new Ot({points: Mu(o, a), isFilled: !0});
            }
            component(n) {
                return v.jsx(fI, {strokeWidth: lc(n), shape: n, opacity: dI});
            }
            backgroundComponent(n) {
                return v.jsx(fI, {strokeWidth: lc(n), shape: n, opacity: uI});
            }
            indicator(n) {
                var u;
                const r = Bm(),
                    o = lc(n),
                    i = sc(n.props.segments);
                let a = o;
                !r &&
                !n.props.isPen &&
                i.length === 1 &&
                (a += ta(n.id)() * (o / 6));
                const s =
                        n.props.isComplete ||
                        ((u = Bn(n.props.segments)) == null ? void 0 : u.type) ===
                        "straight",
                    l = jw({strokeWidth: o, showAsComplete: s}),
                    c = Jr(i, l);
                let d;
                return (
                    c.length < 2 ? (d = hJ(i[0], a)) : (d = ma(c, !1)),
                        v.jsx("path", {d})
                );
            }
            toSvg(n) {
                const r = Kn({isDarkMode: this.editor.user.getIsDarkMode()});
                return mI(lc(n), n, dI, r);
            }
            toBackgroundSvg(n) {
                const r = Kn({isDarkMode: this.editor.user.getIsDarkMode()});
                return mI(lc(n), n, uI, r);
            }
        }
        w(Xm, "type", "highlight"), w(Xm, "props", AL), w(Xm, "migrations", ML);
        function uJ(e) {
            return `M ${e.x} ${e.y} m -${0.1}, 0 a ${0.1},${0.1} 0 1,0 ${
                0.1 * 2
            },0 a ${0.1},${0.1} 0 1,0 -${0.1 * 2},0`;
        }
        function hJ(e, t) {
            const n = t / 2;
            return `M ${e.x} ${e.y} m -${n}, 0 a ${n},${n} 0 1,0 ${
                n * 2
            },0 a ${n},${n} 0 1,0 -${n * 2},0`;
        }
        function hI(e, t, n) {
            var l;
            const r = sc(e.props.segments),
                o =
                    e.props.isComplete ||
                    ((l = Bn(e.props.segments)) == null ? void 0 : l.type) ===
                    "straight";
            let i = t;
            !n && !e.props.isPen && r.length === 1 && (i += ta(e.id)() * (t / 6));
            const a = jw({strokeWidth: i, showAsComplete: o});
            return {strokePoints: Jr(r, a), sw: i};
        }
        function pI(e, t, n) {
            const {strokePoints: r, sw: o} = hI(e, t, n);
            return {
                solidStrokePath:
                    r.length > 1 ? ma(r, !1) : uJ(e.props.segments[0].points[0]),
                sw: o,
            };
        }
        function fI({strokeWidth: e, shape: t, opacity: n}) {
            const r = Lt(),
                o = Bm(),
                {solidStrokePath: i, sw: a} = pI(t, e, o),
                s = dJ(),
                l = r[t.props.color].highlight[s];
            return v.jsx(ar, {
                id: t.id,
                style: {opacity: n},
                children: v.jsx("path", {
                    d: i,
                    strokeLinecap: "round",
                    fill: "none",
                    pointerEvents: "all",
                    stroke: l,
                    strokeWidth: a,
                }),
            });
        }
        function mI(e, t, n, r) {
            const {solidStrokePath: o, sw: i} = pI(t, e, !1),
                a = document.createElementNS("http://www.w3.org/2000/svg", "path");
            return (
                a.setAttribute("d", o),
                    a.setAttribute("fill", "none"),
                    a.setAttribute("stroke", r[t.props.color].highlight.srgb),
                    a.setAttribute("stroke-width", `${i}`),
                    a.setAttribute("opacity", `${n}`),
                    a
            );
        }
        function lc(e) {
            return ha[e.props.size] * 1.12;
        }
        function qm(e) {
            return (
                e.props.segments.length === 1 &&
                e.props.segments[0].points.length < 2
            );
        }
        function gI() {
            const [e, t] = y.useState(!1);
            return (
                y.useEffect(() => {
                    const n = window.matchMedia("(prefers-reduced-motion: reduce)"),
                        r = () => {
                            t(n.matches);
                        };
                    return (
                        r(),
                            n.addEventListener("change", r),
                            () => n.removeEventListener("change", r)
                    );
                }, []),
                    e
            );
        }
        const pJ = async (e) =>
                new Promise((t, n) => {
                    const r = new Image();
                    (r.onload = () => t(r)),
                        (r.onerror = () => n(new Error("Failed to load image"))),
                        (r.crossOrigin = "anonymous"),
                        (r.src = e);
                }),
            fJ = async (e) => {
                const t = await pJ(e),
                    n = document.createElement("canvas");
                (n.width = t.width), (n.height = t.height);
                const r = n.getContext("2d");
                if (r) return r.drawImage(t, 0, 0), n.toDataURL();
            };
        async function mJ(e) {
            const n = await (await fetch(e)).blob();
            return new Promise((r, o) => {
                const i = new FileReader();
                (i.onloadend = () => r(i.result)),
                    (i.onerror = o),
                    i.readAsDataURL(n);
            });
        }
        class Zm extends Wl {
            constructor() {
                super(...arguments);
                w(this, "isAspectRatioLocked", () => !0);
                w(this, "canCrop", () => !0);
                w(this, "onDoubleClick", (n) => {
                    const r = n.props.assetId
                        ? this.editor.getAsset(n.props.assetId)
                        : void 0;
                    !r ||
                    !(
                        r.props.src &&
                        "mimeType" in r.props &&
                        r.props.mimeType === "image/gif"
                    ) ||
                    this.editor.updateShapes([
                        {
                            type: "image",
                            id: n.id,
                            props: {playing: !n.props.playing},
                        },
                    ]);
                });
                w(this, "onDoubleClickEdge", (n) => {
                    const r = n.props;
                    if (!r || this.editor.getCroppingShapeId() !== n.id) return;
                    const o = sn(r.crop) || {
                            topLeft: {x: 0, y: 0},
                            bottomRight: {x: 1, y: 1},
                        },
                        i = (1 / (o.bottomRight.x - o.topLeft.x)) * n.props.w,
                        a = (1 / (o.bottomRight.y - o.topLeft.y)) * n.props.h,
                        s = new E(o.topLeft.x * i, o.topLeft.y * a).rot(n.rotation),
                        l = {
                            id: n.id,
                            type: n.type,
                            x: n.x - s.x,
                            y: n.y - s.y,
                            props: {
                                crop: {
                                    topLeft: {x: 0, y: 0},
                                    bottomRight: {x: 1, y: 1},
                                },
                                w: i,
                                h: a,
                            },
                        };
                    this.editor.updateShapes([l]);
                });
            }
            getDefaultProps() {
                return {
                    w: 100,
                    h: 100,
                    assetId: null,
                    playing: !0,
                    url: "",
                    crop: null,
                };
            }
            component(n) {
                var h, p;
                const r = vI(n),
                    o = AE(n.id),
                    i = gI(),
                    [a, s] = y.useState(""),
                    l = n.props.assetId
                        ? this.editor.getAsset(n.props.assetId)
                        : void 0;
                if ((l == null ? void 0 : l.type) === "bookmark")
                    throw Error("Bookmark assets can't be rendered as images");
                const d =
                        X(
                            "onlySelectedShape",
                            () => {
                                var m;
                                return (
                                    n.id ===
                                    ((m = this.editor.getOnlySelectedShape()) ==
                                    null
                                        ? void 0
                                        : m.id)
                                );
                            },
                            [this.editor]
                        ) &&
                        o &&
                        this.editor.isInAny(
                            "select.crop",
                            "select.cropping",
                            "select.pointing_crop_handle"
                        ),
                    u =
                        i &&
                        (((h = l == null ? void 0 : l.props.mimeType) == null
                                ? void 0
                                : h.includes("video")) ||
                            ((p = l == null ? void 0 : l.props.mimeType) == null
                                ? void 0
                                : p.includes("gif")));
                return (
                    y.useEffect(() => {
                        if (
                            l != null &&
                            l.props.src &&
                            "mimeType" in l.props &&
                            (l == null ? void 0 : l.props.mimeType) === "image/gif"
                        ) {
                            let m = !1;
                            return (
                                (async () => {
                                    const g = await fJ(l.props.src);
                                    m || (g && s(g));
                                })(),
                                    () => {
                                        m = !0;
                                    }
                            );
                        }
                    }, [i, l == null ? void 0 : l.props]),
                        v.jsxs(v.Fragment, {
                            children: [
                                (l == null ? void 0 : l.props.src) &&
                                d &&
                                v.jsx("div", {
                                    style: r,
                                    children: v.jsx("div", {
                                        className: "tl-image",
                                        style: {
                                            opacity: 0.1,
                                            backgroundImage: `url(${
                                                !n.props.playing || u
                                                    ? a
                                                    : l.props.src
                                            })`,
                                        },
                                        draggable: !1,
                                    }),
                                }),
                                v.jsxs(us, {
                                    id: n.id,
                                    style: {
                                        overflow: "hidden",
                                        width: n.props.w,
                                        height: n.props.h,
                                    },
                                    children: [
                                        v.jsxs("div", {
                                            className: "tl-image-container",
                                            style: r,
                                            children: [
                                                l != null && l.props.src
                                                    ? v.jsx("div", {
                                                        className: "tl-image",
                                                        style: {
                                                            backgroundImage: `url(${
                                                                !n.props.playing || u
                                                                    ? a
                                                                    : l.props.src
                                                            })`,
                                                        },
                                                        draggable: !1,
                                                    })
                                                    : null,
                                                (l == null
                                                    ? void 0
                                                    : l.props.isAnimated) &&
                                                !n.props.playing &&
                                                v.jsx("div", {
                                                    className: "tl-image__tg",
                                                    children: "GIF",
                                                }),
                                            ],
                                        }),
                                        "url" in n.props &&
                                        n.props.url &&
                                        v.jsx(ju, {
                                            url: n.props.url,
                                            zoomLevel: this.editor.getZoomLevel(),
                                        }),
                                    ],
                                }),
                            ],
                        })
                );
            }
            indicator(n) {
                return AE(n.id)
                    ? null
                    : v.jsx("rect", {width: M(n.props.w), height: M(n.props.h)});
            }
            async toSvg(n) {
                const r = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "g"
                    ),
                    o = n.props.assetId
                        ? this.editor.getAsset(n.props.assetId)
                        : null;
                let i = (o == null ? void 0 : o.props.src) || "";
                i && i.startsWith("http") && (i = (await mJ(i)) || "");
                const a = document.createElementNS(
                    "http://www.w3.org/2000/svg",
                    "image"
                );
                a.setAttributeNS("http://www.w3.org/1999/xlink", "href", i);
                const s = vI(n),
                    l = n.props.crop;
                if (s.transform && l) {
                    const {transform: c, width: d, height: u} = s,
                        h = (l.bottomRight.x - l.topLeft.x) * d,
                        p = (l.bottomRight.y - l.topLeft.y) * u,
                        m = [new E(0, 0), new E(h, 0), new E(h, p), new E(0, p)],
                        f = document.createElementNS(
                            "http://www.w3.org/2000/svg",
                            "polygon"
                        );
                    f.setAttribute(
                        "points",
                        m.map((S) => `${S.x},${S.y}`).join(" ")
                    );
                    const g = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "clipPath"
                    );
                    g.setAttribute("id", "cropClipPath"), g.appendChild(f);
                    const b = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "defs"
                    );
                    b.appendChild(g), r.appendChild(b);
                    const x = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "g"
                    );
                    x.setAttribute("clip-path", "url(#cropClipPath)"),
                        a.setAttribute("width", d.toString()),
                        a.setAttribute("height", u.toString()),
                        (a.style.transform = c),
                        x.appendChild(a),
                        r.appendChild(x);
                } else
                    a.setAttribute("width", n.props.w.toString()),
                        a.setAttribute("height", n.props.h.toString()),
                        r.appendChild(a);
                return r;
            }
        }
        w(Zm, "type", "image"), w(Zm, "props", RL), w(Zm, "migrations", OL);
        function vI(e) {
            const t = e.props.crop,
                n = t == null ? void 0 : t.topLeft;
            if (!n) return {width: e.props.w, height: e.props.h};
            const r = (1 / (t.bottomRight.x - t.topLeft.x)) * e.props.w,
                o = (1 / (t.bottomRight.y - t.topLeft.y)) * e.props.h,
                i = -n.x * r,
                a = -n.y * o;
            return {transform: `translate(${i}px, ${a}px)`, width: r, height: o};
        }
        function Kw(e, t) {
            const {start: n, end: r} = e;
            return t
                ? `M${M(n.x)},${M(n.y)} L${M(r.x)},${M(r.y)} `
                : `${M(r.x)},${M(r.y)} `;
        }
        function Ww(e, t) {
            const {a: n, b: r, c: o, d: i} = e;
            return E.Equals(n, i)
                ? ""
                : `${t ? `M${M(n.x)},${M(n.y)}` : ""}C${M(r.x)},${M(r.y)} ${M(
                    o.x
                )},${M(o.y)} ${M(i.x)},${M(i.y)}`;
        }
        function bI(e, t) {
            let n = e.segments.reduce((r, o, i) => r + Ww(o, i === 0), "");
            return t && (n += "Z"), n;
        }
        function gJ(e, t) {
            let n = e.segments.reduce((r, o, i) => r + Kw(o, i === 0), "");
            return t && (n += "Z"), n;
        }
        function yI(e, t = !1) {
            return e instanceof ss ? gJ(e, t) : bI(e, t);
        }
        function wI(e) {
            return {
                size: e,
                thinning: 0.4,
                streamline: 0,
                smoothing: 0.5,
                simulatePressure: !0,
                last: !0,
            };
        }
        function xI(e, t, n) {
            const r = t.vertices,
                o = wI(n);
            return Jr(r, o);
        }
        function vJ(e, t, n) {
            const r = wI(n);
            return Mu(nc(xI(e, t, n), r), r);
        }
        function SI(e, t, n) {
            const r = vJ(e, t, n);
            return uu(r);
        }
        function bJ(e, t, n) {
            if (e.props.dash === "draw") {
                const r = xI(e, t, n);
                return ma(r);
            }
            return yI(t);
        }
        const yJ = new a1();
        class Qm extends qr {
            constructor() {
                super(...arguments);
                w(this, "hideResizeHandles", () => !0);
                w(this, "hideRotateHandle", () => !0);
                w(this, "hideSelectionBoundsFg", () => !0);
                w(this, "hideSelectionBoundsBg", () => !0);
                w(this, "onResize", (n, r) => {
                    const {scaleX: o, scaleY: i} = r,
                        a = sn(n.props.handles);
                    return (
                        Object.values(n.props.handles).forEach(
                            ({id: s, x: l, y: c}) => {
                                (a[s].x = l * o), (a[s].y = c * i);
                            }
                        ),
                            {props: {handles: a}}
                    );
                });
                w(this, "onHandleChange", (n, {handle: r}) => {
                    const o = sn(n);
                    switch (r.id) {
                        case "start":
                        case "end": {
                            o.props.handles[r.id] = {
                                ...o.props.handles[r.id],
                                x: r.x,
                                y: r.y,
                            };
                            break;
                        }
                        default: {
                            const i = "handle:" + r.index,
                                a = n.props.handles[i];
                            a
                                ? (o.props.handles[i] = {...a, x: r.x, y: r.y})
                                : (o.props.handles[i] = {
                                    id: i,
                                    type: "vertex",
                                    canBind: !1,
                                    index: r.index,
                                    x: r.x,
                                    y: r.y,
                                });
                            break;
                        }
                    }
                    return o;
                });
            }
            getDefaultProps() {
                return {
                    dash: "draw",
                    size: "m",
                    color: "black",
                    spline: "line",
                    handles: {
                        start: {
                            id: "start",
                            type: "vertex",
                            canBind: !1,
                            canSnap: !0,
                            index: "a1",
                            x: 0,
                            y: 0,
                        },
                        end: {
                            id: "end",
                            type: "vertex",
                            canBind: !1,
                            canSnap: !0,
                            index: "a2",
                            x: 0.1,
                            y: 0.1,
                        },
                    },
                };
            }
            getGeometry(n) {
                return Hu(n);
            }
            getHandles(n) {
                return yJ.get(n.props, () => {
                    const r = n.props.handles,
                        o = Hu(n),
                        i = Object.values(r).sort(pn),
                        a = i.slice();
                    for (let s = 0; s < o.segments.length; s++) {
                        const c = o.segments[s].midPoint(),
                            d = yu(i[s].index, i[s + 1].index);
                        a.push({
                            id: `mid-${s}`,
                            type: "create",
                            index: d,
                            x: c.x,
                            y: c.y,
                        });
                    }
                    return a.sort(pn);
                });
            }
            getOutlineSegments(n) {
                return this.editor
                    .getShapeGeometry(n)
                    .segments.map((o) => o.vertices);
            }
            component(n) {
                const r = Lt(),
                    o = Hu(n),
                    i = fn[n.props.size],
                    {dash: a, color: s} = n.props;
                if (n.props.spline === "line") {
                    if (a === "solid") {
                        const l = o.points,
                            c = "M" + l[0] + "L" + l.slice(1);
                        return v.jsxs(ar, {
                            id: n.id,
                            children: [
                                v.jsx(_t, {d: c, fill: "none", color: s, theme: r}),
                                v.jsx("path", {
                                    d: c,
                                    stroke: r[s].solid,
                                    strokeWidth: i,
                                    fill: "none",
                                }),
                            ],
                        });
                    }
                    if (a === "dashed" || a === "dotted") {
                        const l = o.points,
                            c = "M" + l[0] + "L" + l.slice(1);
                        return v.jsxs(ar, {
                            id: n.id,
                            children: [
                                v.jsx(_t, {d: c, fill: "none", color: s, theme: r}),
                                v.jsx("g", {
                                    stroke: r[s].solid,
                                    strokeWidth: i,
                                    children: o.segments.map((d, u) => {
                                        const {
                                            strokeDasharray: h,
                                            strokeDashoffset: p,
                                        } = mn(d.length, i, {
                                            style: a,
                                            start: u > 0 ? "outset" : "none",
                                            end:
                                                u < o.segments.length - 1
                                                    ? "outset"
                                                    : "none",
                                        });
                                        return v.jsx(
                                            "path",
                                            {
                                                strokeDasharray: h,
                                                strokeDashoffset: p,
                                                d: Kw(d, !0),
                                                fill: "none",
                                            },
                                            u
                                        );
                                    }),
                                }),
                            ],
                        });
                    }
                    if (a === "draw") {
                        const l = o.points,
                            [c, d] = Bw(n.id, l, i);
                        return v.jsxs(ar, {
                            id: n.id,
                            children: [
                                v.jsx(_t, {d: c, fill: "none", color: s, theme: r}),
                                v.jsx("path", {
                                    d,
                                    stroke: r[s].solid,
                                    strokeWidth: i,
                                    fill: "none",
                                }),
                            ],
                        });
                    }
                }
                if (n.props.spline === "cubic") {
                    const l = yI(o);
                    if (a === "solid")
                        return v.jsxs(ar, {
                            id: n.id,
                            children: [
                                v.jsx(_t, {d: l, fill: "none", color: s, theme: r}),
                                v.jsx("path", {
                                    strokeWidth: i,
                                    stroke: r[s].solid,
                                    fill: "none",
                                    d: l,
                                }),
                            ],
                        });
                    if (a === "dashed" || a === "dotted")
                        return v.jsxs(ar, {
                            id: n.id,
                            children: [
                                v.jsx(_t, {d: l, fill: "none", color: s, theme: r}),
                                v.jsx("g", {
                                    stroke: r[s].solid,
                                    strokeWidth: i,
                                    children: o.segments.map((c, d) => {
                                        const {
                                            strokeDasharray: u,
                                            strokeDashoffset: h,
                                        } = mn(c.length, i, {
                                            style: a,
                                            start: d > 0 ? "outset" : "none",
                                            end:
                                                d < o.segments.length - 1
                                                    ? "outset"
                                                    : "none",
                                        });
                                        return v.jsx(
                                            "path",
                                            {
                                                strokeDasharray: u,
                                                strokeDashoffset: h,
                                                d: Ww(c, !0),
                                                fill: "none",
                                            },
                                            d
                                        );
                                    }),
                                }),
                            ],
                        });
                    if (a === "draw")
                        return v.jsxs(ar, {
                            id: n.id,
                            children: [
                                v.jsx(_t, {d: l, fill: "none", color: s, theme: r}),
                                v.jsx("path", {
                                    d: SI(n, o, i),
                                    strokeWidth: 1,
                                    stroke: r[s].solid,
                                    fill: r[s].solid,
                                }),
                            ],
                        });
                }
            }
            indicator(n) {
                const r = fn[n.props.size],
                    o = Hu(n),
                    {dash: i} = n.props;
                let a;
                if (n.props.spline === "line") {
                    const s = o.points;
                    if (i === "solid" || i === "dotted" || i === "dashed")
                        a = "M" + s[0] + "L" + s.slice(1);
                    else {
                        const [l] = Bw(n.id, s, r);
                        a = l;
                    }
                } else a = bJ(n, o, r);
                return v.jsx("path", {d: a});
            }
            toSvg(n) {
                const o = Kn({isDarkMode: this.editor.user.getIsDarkMode()})[
                        n.props.color
                        ].solid,
                    i = Hu(n),
                    a = fn[n.props.size];
                switch (n.props.dash) {
                    case "draw": {
                        let s;
                        if (i instanceof sm) s = SI(n, i, a);
                        else {
                            const [c, d] = Bw(n.id, i.points, a);
                            s = d;
                        }
                        const l = document.createElementNS(
                            "http://www.w3.org/2000/svg",
                            "path"
                        );
                        return (
                            l.setAttribute("stroke-width", a + "px"),
                                l.setAttribute("stroke", o),
                                l.setAttribute("fill", "none"),
                                l.setAttribute("d", s),
                                l
                        );
                    }
                    case "solid": {
                        let s;
                        if (i instanceof sm) s = bI(i, !1);
                        else {
                            const c = i.points;
                            s = "M" + c[0] + "L" + c.slice(1);
                        }
                        const l = document.createElementNS(
                            "http://www.w3.org/2000/svg",
                            "path"
                        );
                        return (
                            l.setAttribute("stroke-width", a + "px"),
                                l.setAttribute("stroke", o),
                                l.setAttribute("fill", "none"),
                                l.setAttribute("d", s),
                                l
                        );
                    }
                    default: {
                        const {segments: s} = i,
                            l = document.createElementNS(
                                "http://www.w3.org/2000/svg",
                                "g"
                            );
                        l.setAttribute("stroke", o),
                            l.setAttribute("stroke-width", a.toString());
                        const c = i instanceof sm ? Ww : Kw;
                        return (
                            s.forEach((d, u) => {
                                const h = document.createElementNS(
                                        "http://www.w3.org/2000/svg",
                                        "path"
                                    ),
                                    {strokeDasharray: p, strokeDashoffset: m} = mn(
                                        d.length,
                                        a,
                                        {
                                            style: n.props.dash,
                                            start: u > 0 ? "outset" : "none",
                                            end:
                                                u < s.length - 1
                                                    ? "outset"
                                                    : "none",
                                        }
                                    );
                                h.setAttribute("stroke-dasharray", p.toString()),
                                    h.setAttribute(
                                        "stroke-dashoffset",
                                        m.toString()
                                    ),
                                    h.setAttribute("d", c(d, !0)),
                                    h.setAttribute("fill", "none"),
                                    l.appendChild(h);
                            }),
                                l
                        );
                    }
                }
            }
        }
        w(Qm, "type", "line"), w(Qm, "props", LL), w(Qm, "migrations", jL);
        function Hu(e) {
            const {spline: t, handles: n} = e.props,
                r = Object.values(n).sort(pn).map(E.From);
            switch (t) {
                case "cubic":
                    return new sm({points: r});
                case "line":
                    return new ss({points: r});
            }
        }
        const bi = 200;
        class Jm extends qr {
            constructor() {
                super(...arguments);
                w(this, "canEdit", () => !0);
                w(this, "hideResizeHandles", () => !0);
                w(this, "hideSelectionBoundsFg", () => !0);
                w(this, "onBeforeCreate", (n) => _I(this.editor, n, n.props.growY));
                w(this, "onBeforeUpdate", (n, r) => {
                    if (
                        !(
                            n.props.text === r.props.text &&
                            n.props.font === r.props.font &&
                            n.props.size === r.props.size
                        )
                    )
                        return _I(this.editor, r, n.props.growY);
                });
                w(this, "onEditEnd", (n) => {
                    const {
                        id: r,
                        type: o,
                        props: {text: i},
                    } = n;
                    i.trimEnd() !== n.props.text &&
                    this.editor.updateShapes([
                        {id: r, type: o, props: {text: i.trimEnd()}},
                    ]);
                });
            }
            getDefaultProps() {
                return {
                    color: "black",
                    size: "m",
                    text: "",
                    font: "draw",
                    align: "middle",
                    verticalAlign: "middle",
                    growY: 0,
                    url: "",
                };
            }
            getHeight(n) {
                return bi + n.props.growY;
            }
            getGeometry(n) {
                const r = this.getHeight(n);
                return new ia({width: bi, height: r, isFilled: !0});
            }
            component(n) {
                const {
                        id: r,
                        type: o,
                        props: {
                            color: i,
                            font: a,
                            size: s,
                            align: l,
                            text: c,
                            verticalAlign: d,
                        },
                    } = n,
                    u = Lt(),
                    h = i === "black" ? "yellow" : i;
                return v.jsxs(v.Fragment, {
                    children: [
                        v.jsx("div", {
                            style: {
                                position: "absolute",
                                width: bi,
                                height: this.getHeight(n),
                            },
                            children: v.jsxs("div", {
                                className: "tl-note__container",
                                style: {
                                    color: u[h].solid,
                                    backgroundColor: u[h].solid,
                                },
                                children: [
                                    v.jsx("div", {className: "tl-note__scrim"}),
                                    v.jsx(X6, {
                                        id: r,
                                        type: o,
                                        font: a,
                                        size: s,
                                        align: l,
                                        verticalAlign: d,
                                        text: c,
                                        labelColor: "black",
                                        wrap: !0,
                                    }),
                                ],
                            }),
                        }),
                        "url" in n.props &&
                        n.props.url &&
                        v.jsx(ju, {
                            url: n.props.url,
                            zoomLevel: this.editor.getZoomLevel(),
                        }),
                    ],
                });
            }
            indicator(n) {
                return v.jsx("rect", {
                    rx: "7",
                    width: M(bi),
                    height: M(this.getHeight(n)),
                });
            }
            toSvg(n, r) {
                r.addExportDef(jm(n.props.font));
                const o = Kn({isDarkMode: this.editor.user.getIsDarkMode()}),
                    i = this.editor.getShapeGeometry(n).bounds,
                    a = document.createElementNS("http://www.w3.org/2000/svg", "g"),
                    s = n.props.color === "black" ? "yellow" : n.props.color,
                    l = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "rect"
                    );
                l.setAttribute("rx", "10"),
                    l.setAttribute("width", bi.toString()),
                    l.setAttribute("height", i.height.toString()),
                    l.setAttribute("fill", o[s].solid),
                    l.setAttribute("stroke", o[s].solid),
                    l.setAttribute("stroke-width", "1"),
                    a.appendChild(l);
                const c = document.createElementNS(
                    "http://www.w3.org/2000/svg",
                    "rect"
                );
                c.setAttribute("rx", "10"),
                    c.setAttribute("width", bi.toString()),
                    c.setAttribute("height", i.height.toString()),
                    c.setAttribute("fill", o.background),
                    c.setAttribute("opacity", ".28"),
                    a.appendChild(c);
                const d = q6({
                    editor: this.editor,
                    shape: n,
                    font: qd[n.props.font],
                    bounds: i,
                });
                return (
                    d.setAttribute("fill", o.text),
                        d.setAttribute("stroke", "none"),
                        a.appendChild(d),
                        a
                );
            }
        }
        w(Jm, "type", "note"), w(Jm, "props", NL), w(Jm, "migrations", FL);
        function _I(e, t, n = 0) {
            const i =
                e.textMeasure.measureText(t.props.text, {
                    ...qt,
                    fontFamily: gi[t.props.font],
                    fontSize: rc[t.props.size],
                    maxWidth: bi - 34,
                }).h +
                17 * 2;
            let a = null;
            if ((i > bi ? (a = i - bi) : n && (a = 0), a !== null))
                return {...t, props: {...t.props, growY: a}};
        }
        function wJ(e, {initialBounds: t, scaleX: n, scaleY: r, newPoint: o}) {
            const i = Math.max(0.01, Math.min(Math.abs(n), Math.abs(r))),
                a = new E(0, 0);
            n < 0 && (a.x = -(t.width * i)), r < 0 && (a.y = -(t.height * i));
            const {x: s, y: l} = E.Add(o, a.rot(e.rotation));
            return {x: s, y: l, props: {scale: i * e.props.scale}};
        }
        const xJ = new a1();
        class eg extends qr {
            constructor() {
                super(...arguments);
                w(this, "canEdit", () => !0);
                w(this, "isAspectRatioLocked", () => !0);
                w(this, "onResize", (n, r) => {
                    const {
                        initialBounds: o,
                        initialShape: i,
                        scaleX: a,
                        handle: s,
                    } = r;
                    if (r.mode === "scale_shape" || (s !== "right" && s !== "left"))
                        return {id: n.id, type: n.type, ...wJ(n, r)};
                    {
                        const l = o.width;
                        let c = l * a;
                        const d = new E(0, 0);
                        (c = Math.max(1, Math.abs(c))),
                            s === "left"
                                ? ((d.x = l - c), a < 0 && (d.x += c))
                                : a < 0 && (d.x -= c);
                        const {x: u, y: h} = d.rot(n.rotation).add(i);
                        return {
                            id: n.id,
                            type: n.type,
                            x: u,
                            y: h,
                            props: {w: c / i.props.scale, autoSize: !1},
                        };
                    }
                });
                w(this, "onBeforeCreate", (n) => {
                    if (!n.props.autoSize || n.props.text.trim()) return;
                    const r = this.getMinDimensions(n);
                    return {...n, x: n.x - r.width / 2, y: n.y - r.height / 2};
                });
                w(this, "onEditEnd", (n) => {
                    const {
                            id: r,
                            type: o,
                            props: {text: i},
                        } = n,
                        a = n.props.text.trimEnd();
                    a.length === 0
                        ? this.editor.deleteShapes([n.id])
                        : a !== n.props.text &&
                        this.editor.updateShapes([
                            {id: r, type: o, props: {text: i.trimEnd()}},
                        ]);
                });
                w(this, "onBeforeUpdate", (n, r) => {
                    if (!r.props.autoSize) return;
                    const o =
                            n.props.size !== r.props.size ||
                            n.props.align !== r.props.align ||
                            n.props.font !== r.props.font ||
                            (n.props.scale !== 1 && r.props.scale === 1),
                        i = n.props.text !== r.props.text;
                    if (!o && !i) return;
                    const a = this.getMinDimensions(n),
                        s = kI(this.editor, r.props),
                        l = a.width * n.props.scale,
                        c = a.height * n.props.scale,
                        d = s.width * r.props.scale,
                        u = s.height * r.props.scale;
                    let h;
                    switch (r.props.align) {
                        case "middle": {
                            h = new E((d - l) / 2, i ? 0 : (u - c) / 2);
                            break;
                        }
                        case "end": {
                            h = new E(d - l, i ? 0 : (u - c) / 2);
                            break;
                        }
                        default: {
                            if (i) break;
                            h = new E(0, (u - c) / 2);
                            break;
                        }
                    }
                    if (h) {
                        h.rot(r.rotation);
                        const {x: p, y: m} = r;
                        return {
                            ...r,
                            x: p - h.x,
                            y: m - h.y,
                            props: {...r.props, w: d},
                        };
                    } else return {...r, props: {...r.props, w: d}};
                });
                w(this, "onDoubleClickEdge", (n) => {
                    if (!n.props.autoSize)
                        return {id: n.id, type: n.type, props: {autoSize: !0}};
                    if (n.props.scale !== 1)
                        return {id: n.id, type: n.type, props: {scale: 1}};
                });
            }
            getDefaultProps() {
                return {
                    color: "black",
                    size: "m",
                    w: 8,
                    text: "",
                    font: "draw",
                    align: "middle",
                    autoSize: !0,
                    scale: 1,
                };
            }
            getMinDimensions(n) {
                return xJ.get(n.props, (r) => kI(this.editor, r));
            }
            getGeometry(n) {
                const {scale: r} = n.props,
                    {width: o, height: i} = this.getMinDimensions(n);
                return new ia({width: o * r, height: i * r, isFilled: !0});
            }
            component(n) {
                const {
                        id: r,
                        type: o,
                        props: {text: i, color: a},
                    } = n,
                    s = Kn({isDarkMode: this.editor.user.getIsDarkMode()}),
                    {width: l, height: c} = this.getMinDimensions(n),
                    {
                        rInput: d,
                        isEmpty: u,
                        isEditing: h,
                        handleFocus: p,
                        handleChange: m,
                        handleKeyDown: f,
                        handleBlur: g,
                        handleInputPointerDown: b,
                        handleDoubleClick: x,
                    } = Ow(r, o, i);
                return v.jsx(us, {
                    id: n.id,
                    children: v.jsxs("div", {
                        className: "tl-text-shape__wrapper tl-text-shadow",
                        "data-font": n.props.font,
                        "data-align": n.props.align,
                        "data-hastext": !u,
                        "data-isediting": h,
                        "data-textwrap": !0,
                        style: {
                            fontSize: ha[n.props.size],
                            lineHeight: ha[n.props.size] * qt.lineHeight + "px",
                            transform: `scale(${n.props.scale})`,
                            transformOrigin: "top left",
                            width: Math.max(1, l),
                            height: Math.max(ha[n.props.size] * qt.lineHeight, c),
                            color: s[a].solid,
                        },
                        children: [
                            v.jsx("div", {
                                className: "tl-text tl-text-content",
                                dir: "ltr",
                                children: i,
                            }),
                            h
                                ? v.jsx("textarea", {
                                    ref: d,
                                    className: "tl-text tl-text-input",
                                    name: "text",
                                    tabIndex: -1,
                                    autoComplete: "false",
                                    autoCapitalize: "false",
                                    autoCorrect: "false",
                                    autoSave: "false",
                                    autoFocus: h,
                                    placeholder: "",
                                    spellCheck: "true",
                                    wrap: "off",
                                    dir: "ltr",
                                    datatype: "wysiwyg",
                                    defaultValue: i,
                                    onFocus: p,
                                    onChange: m,
                                    onKeyDown: f,
                                    onBlur: g,
                                    onTouchEnd: zt,
                                    onContextMenu: zt,
                                    onPointerDown: b,
                                    onDoubleClick: x,
                                })
                                : null,
                        ],
                    }),
                });
            }
            indicator(n) {
                const r = this.editor.getShapeGeometry(n).bounds,
                    o = W();
                return n.props.autoSize && o.getEditingShapeId() === n.id
                    ? null
                    : v.jsx("rect", {width: M(r.width), height: M(r.height)});
            }
            toSvg(n, r) {
                r.addExportDef(jm(n.props.font));
                const o = Kn({isDarkMode: this.editor.user.getIsDarkMode()}),
                    i = this.editor.getShapeGeometry(n).bounds,
                    a = n.props.text,
                    s = i.width / (n.props.scale ?? 1),
                    l = i.height / (n.props.scale ?? 1),
                    c = {
                        fontSize: ha[n.props.size],
                        fontFamily: qd[n.props.font],
                        textAlign: n.props.align,
                        verticalTextAlign: "middle",
                        width: s,
                        height: l,
                        padding: 0,
                        lineHeight: qt.lineHeight,
                        fontStyle: "normal",
                        fontWeight: "normal",
                        overflow: "wrap",
                    },
                    d = o[n.props.color].solid,
                    u = document.createElementNS("http://www.w3.org/2000/svg", "g"),
                    h = Lm(
                        this.editor,
                        this.editor.textMeasure.measureTextSpans(a, c),
                        {
                            ...c,
                            stroke: o.background,
                            strokeWidth: 2,
                            fill: o.background,
                            padding: 0,
                        }
                    ),
                    p = h.cloneNode(!0);
                return (
                    p.setAttribute("fill", d),
                        p.setAttribute("stroke", "none"),
                        u.append(h),
                        u.append(p),
                        u
                );
            }
        }
        w(eg, "type", "text"), w(eg, "props", BL), w(eg, "migrations", UL);
        function kI(e, t) {
            const {font: n, text: r, autoSize: o, size: i, w: a} = t,
                s = o ? 16 : Math.max(16, a),
                l = ha[i],
                c = o ? null : Math.floor(Math.max(s, a)),
                d = e.textMeasure.measureText(r, {
                    ...qt,
                    fontFamily: gi[n],
                    fontSize: l,
                    maxWidth: c,
                });
            return (
                o && (d.w += 1), {width: Math.max(s, d.w), height: Math.max(l, d.h)}
            );
        }
        class tg extends Wl {
            constructor() {
                super(...arguments);
                w(this, "canEdit", () => !0);
                w(this, "isAspectRatioLocked", () => !0);
            }
            getDefaultProps() {
                return {
                    w: 100,
                    h: 100,
                    assetId: null,
                    time: 0,
                    playing: !0,
                    url: "",
                };
            }
            component(n) {
                return v.jsx(_J, {shape: n, videoUtil: this});
            }
            indicator(n) {
                return v.jsx("rect", {width: M(n.props.w), height: M(n.props.h)});
            }
            toSvg(n) {
                const r = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "g"
                    ),
                    o = document.createElementNS(
                        "http://www.w3.org/2000/svg",
                        "image"
                    );
                return (
                    o.setAttributeNS(
                        "http://www.w3.org/1999/xlink",
                        "href",
                        SJ(n.id)
                    ),
                        o.setAttribute("width", n.props.w.toString()),
                        o.setAttribute("height", n.props.h.toString()),
                        r.appendChild(o),
                        r
                );
            }
        }
        w(tg, "type", "video"), w(tg, "props", HL), w(tg, "migrations", VL);
        function SJ(e) {
            const t = e.split(":")[1],
                n = document.querySelector(`.tl-video-shape-${t}`);
            if (n) {
                const r = document.createElement("canvas");
                return (
                    (r.width = n.videoWidth),
                        (r.height = n.videoHeight),
                        r.getContext("2d").drawImage(n, 0, 0),
                        r.toDataURL("image/png")
                );
            } else throw new Error("Video with id " + t + " not found");
        }
        const _J = ze(function (t) {
                const {shape: n, videoUtil: r} = t,
                    o =
                        r.editor.getShapeGeometry(n).bounds.w *
                        r.editor.getZoomLevel() >=
                        110,
                    i = n.props.assetId ? r.editor.getAsset(n.props.assetId) : null,
                    {time: a, playing: s} = n.props,
                    l = am(n.id),
                    c = gI(),
                    d = N.useRef(null),
                    u = N.useCallback(
                        (b) => {
                            const x = b.currentTarget;
                            r.editor.updateShapes([
                                {
                                    type: "video",
                                    id: n.id,
                                    props: {playing: !0, time: x.currentTime},
                                },
                            ]);
                        },
                        [n.id, r.editor]
                    ),
                    h = N.useCallback(
                        (b) => {
                            const x = b.currentTarget;
                            r.editor.updateShapes([
                                {
                                    type: "video",
                                    id: n.id,
                                    props: {playing: !1, time: x.currentTime},
                                },
                            ]);
                        },
                        [n.id, r.editor]
                    ),
                    p = N.useCallback(
                        (b) => {
                            const x = b.currentTarget;
                            l &&
                            r.editor.updateShapes([
                                {
                                    type: "video",
                                    id: n.id,
                                    props: {time: x.currentTime},
                                },
                            ]);
                        },
                        [l, n.id, r.editor]
                    ),
                    [m, f] = N.useState(!1),
                    g = N.useCallback(
                        (b) => {
                            const x = b.currentTarget;
                            a !== x.currentTime && (x.currentTime = a),
                            s || x.pause(),
                                f(!0);
                        },
                        [s, a]
                    );
                return (
                    N.useEffect(() => {
                        const b = d.current;
                        b &&
                        (m && !l && a !== b.currentTime && (b.currentTime = a),
                        l && document.activeElement !== b && b.focus());
                    }, [l, m, a]),
                        N.useEffect(() => {
                            if (c) {
                                const b = d.current;
                                b.pause(), (b.currentTime = 0);
                            }
                        }, [d, c]),
                        v.jsxs(v.Fragment, {
                            children: [
                                v.jsx(us, {
                                    id: n.id,
                                    children: v.jsx("div", {
                                        className: "tl-counter-scaled",
                                        children:
                                            i != null && i.props.src
                                                ? v.jsx("video", {
                                                    ref: d,
                                                    style: l
                                                        ? {pointerEvents: "all"}
                                                        : void 0,
                                                    className: `tl-video tl-video-shape-${
                                                        n.id.split(":")[1]
                                                    }`,
                                                    width: "100%",
                                                    height: "100%",
                                                    draggable: !1,
                                                    playsInline: !0,
                                                    autoPlay: !0,
                                                    muted: !0,
                                                    loop: !0,
                                                    disableRemotePlayback: !0,
                                                    disablePictureInPicture: !0,
                                                    controls: l && o,
                                                    onPlay: u,
                                                    onPause: h,
                                                    onTimeUpdate: p,
                                                    onLoadedData: g,
                                                    hidden: !m,
                                                    children: v.jsx("source", {
                                                        src: i.props.src,
                                                    }),
                                                })
                                                : null,
                                    }),
                                }),
                                "url" in n.props &&
                                n.props.url &&
                                v.jsx(ju, {
                                    url: n.props.url,
                                    zoomLevel: r.editor.getZoomLevel(),
                                }),
                            ],
                        })
                );
            }),
            CI = [eg, Fm, Hm, Wm, Jm, Qm, Km, Nm, Xm, Vm, Zm, tg];
        function kJ(e) {
            return [
                e.sideEffects.registerAfterChangeHandler("instance", (t, n) => {
                    t.isFocused !== n.isFocused &&
                    (n.isFocused
                        ? (e.getContainer().focus(),
                            e.updateViewportScreenBounds())
                        : (e.complete(),
                            e.getContainer().blur(),
                            e.updateViewportScreenBounds()));
                }),
                e.sideEffects.registerAfterChangeHandler(
                    "instance_page_state",
                    (t, n) => {
                        if (t.croppingShapeId !== n.croppingShapeId) {
                            const r = e.isInAny(
                                "select.crop",
                                "select.pointing_crop_handle",
                                "select.cropping"
                            );
                            !t.croppingShapeId && n.croppingShapeId
                                ? r || e.setCurrentTool("select.crop.idle")
                                : t.croppingShapeId &&
                                !n.croppingShapeId &&
                                r &&
                                e.setCurrentTool("select.idle");
                        }
                        t.editingShapeId !== n.editingShapeId &&
                        (!t.editingShapeId && n.editingShapeId
                            ? e.isIn("select.editing_shape") ||
                            e.setCurrentTool("select.editing_shape")
                            : t.editingShapeId &&
                            !n.editingShapeId &&
                            e.isIn("select.editing_shape") &&
                            e.setCurrentTool("select.idle"));
                    }
                ),
            ];
        }
        class EI extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "scribbleId", "id");
                w(this, "markId", "");
                w(this, "excludedShapeIds", new Set());
                w(this, "onEnter", (n) => {
                    (this.markId = "erase scribble begin"),
                        this.editor.mark(this.markId),
                        (this.info = n);
                    const {originPagePoint: r} = this.editor.inputs;
                    this.excludedShapeIds = new Set(
                        this.editor
                            .getCurrentPageShapes()
                            .filter((i) => {
                                if (this.editor.isShapeOrAncestorLocked(i))
                                    return !0;
                                if (
                                    this.editor.isShapeOfType(i, "group") ||
                                    this.editor.isShapeOfType(i, "frame")
                                ) {
                                    const a = this.editor.getPointInShapeSpace(
                                        i,
                                        r
                                    );
                                    return this.editor
                                        .getShapeGeometry(i)
                                        .bounds.containsPoint(a);
                                }
                                return !1;
                            })
                            .map((i) => i.id)
                    );
                    const o = this.editor.scribbles.addScribble({
                        color: "muted-1",
                        size: 12,
                    });
                    (this.scribbleId = o.id), this.update();
                });
                w(this, "pushPointToScribble", () => {
                    const {x: n, y: r} = this.editor.inputs.currentPagePoint;
                    this.editor.scribbles.addPoint(this.scribbleId, n, r);
                });
                w(this, "onExit", () => {
                    this.editor.scribbles.stop(this.scribbleId);
                });
                w(this, "onPointerMove", () => {
                    this.update();
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
            }
            update() {
                const n = this.editor.getErasingShapeIds(),
                    r = this.editor.getZoomLevel(),
                    o = this.editor.getCurrentPageShapes(),
                    {
                        inputs: {currentPagePoint: i, previousPagePoint: a},
                    } = this.editor,
                    {excludedShapeIds: s} = this;
                this.pushPointToScribble();
                const l = new Set(n);
                for (const c of o) {
                    if (this.editor.isShapeOfType(c, "group")) continue;
                    const d = this.editor.getShapeMask(c.id);
                    if (d && !_o(i, d)) continue;
                    const u = this.editor.getShapeGeometry(c),
                        h = this.editor.getPointInShapeSpace(c, a),
                        p = this.editor.getPointInShapeSpace(c, i);
                    u.hitTestLineSegment(h, p, Xr / r) &&
                    l.add(this.editor.getOutermostSelectableShape(c).id);
                }
                this.editor.setErasingShapes([...l].filter((c) => !s.has(c)));
            }
            complete() {
                this.editor.deleteShapes(
                    this.editor.getCurrentPageState().erasingShapeIds
                ),
                    this.editor.setErasingShapes([]),
                    this.parent.transition("idle");
            }
            cancel() {
                this.editor.setErasingShapes([]),
                    this.editor.bailToMark(this.markId),
                    this.parent.transition("idle", this.info);
            }
        }
        w(EI, "id", "erasing");
        let CJ =
                ((r_ = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "onPointerDown", (n) => {
                            this.parent.transition("pointing", n);
                        });
                        w(this, "onCancel", () => {
                            this.editor.setCurrentTool("select");
                        });
                    }
                }),
                    w(r_, "id", "idle"),
                    r_),
            EJ =
                ((o_ = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "onEnter", () => {
                            const n = this.editor.getZoomLevel(),
                                r = this.editor.getCurrentPageShapesSorted(),
                                {
                                    inputs: {currentPagePoint: o},
                                } = this.editor,
                                i = new Set(),
                                a = i.size;
                            for (let s = r.length, l = s - 1; l >= 0; l--) {
                                const c = r[l];
                                if (
                                    !(
                                        this.editor.isShapeOrAncestorLocked(c) ||
                                        this.editor.isShapeOfType(c, "group")
                                    ) &&
                                    this.editor.isPointInShape(c, o, {
                                        hitInside: !1,
                                        margin: Xr / n,
                                    })
                                ) {
                                    const d =
                                        this.editor.getOutermostSelectableShape(c);
                                    if (
                                        this.editor.isShapeOfType(d, "frame") &&
                                        i.size > a
                                    )
                                        break;
                                    i.add(d.id);
                                }
                            }
                            this.editor.setErasingShapes([...i]);
                        });
                        w(this, "onPointerMove", (n) => {
                            this.editor.inputs.isDragging &&
                            this.parent.transition("erasing", n);
                        });
                        w(this, "onPointerUp", () => {
                            this.complete();
                        });
                        w(this, "onCancel", () => {
                            this.cancel();
                        });
                        w(this, "onComplete", () => {
                            this.complete();
                        });
                        w(this, "onInterrupt", () => {
                            this.cancel();
                        });
                    }
                    complete() {
                        const n = this.editor.getErasingShapeIds();
                        n.length &&
                        (this.editor.mark("erase end"),
                            this.editor.deleteShapes(n)),
                            this.editor.setErasingShapes([]),
                            this.parent.transition("idle");
                    }
                    cancel() {
                        this.editor.setErasingShapes([]),
                            this.parent.transition("idle");
                    }
                }),
                    w(o_, "id", "pointing"),
                    o_);
        class ng extends ie {
            constructor() {
                super(...arguments);
                w(this, "onEnter", () => {
                    this.editor.setCursor({type: "cross", rotation: 0});
                });
            }
        }
        w(ng, "id", "eraser"),
            w(ng, "initial", "idle"),
            w(ng, "children", () => [CJ, EJ, EI]);
        class PI extends ie {
            constructor() {
                super(...arguments);
                w(this, "onEnter", () => {
                    this.update();
                });
                w(this, "onPointerMove", () => {
                    this.update();
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onCancel", () => {
                    this.complete();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
            }
            update() {
                const {currentScreenPoint: n, previousScreenPoint: r} =
                        this.editor.inputs,
                    o = E.Sub(n, r);
                (Math.abs(o.x) > 0 || Math.abs(o.y) > 0) && this.editor.pan(o);
            }
            complete() {
                this.editor.slideCamera({
                    speed: Math.min(2, this.editor.inputs.pointerVelocity.len()),
                    direction: this.editor.inputs.pointerVelocity,
                    friction: Of,
                }),
                    this.parent.transition("idle");
            }
        }
        w(PI, "id", "dragging");
        let PJ =
                ((i_ = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "onEnter", () => {
                            this.editor.setCursor({type: "grab", rotation: 0});
                        });
                        w(this, "onPointerDown", (n) => {
                            this.parent.transition("pointing", n);
                        });
                        w(this, "onCancel", () => {
                            this.editor.setCurrentTool("select");
                        });
                    }
                }),
                    w(i_, "id", "idle"),
                    i_),
            IJ =
                ((a_ = class extends ie {
                    constructor() {
                        super(...arguments);
                        w(this, "onEnter", () => {
                            this.editor.stopCameraAnimation(),
                                this.editor.updateInstanceState(
                                    {cursor: {type: "grabbing", rotation: 0}},
                                    {ephemeral: !0}
                                );
                        });
                        w(this, "onPointerMove", (n) => {
                            this.editor.inputs.isDragging &&
                            this.parent.transition("dragging", n);
                        });
                        w(this, "onPointerUp", () => {
                            this.complete();
                        });
                        w(this, "onCancel", () => {
                            this.complete();
                        });
                        w(this, "onComplete", () => {
                            this.complete();
                        });
                        w(this, "onInterrupt", () => {
                            this.complete();
                        });
                    }
                    complete() {
                        this.parent.transition("idle");
                    }
                }),
                    w(a_, "id", "pointing"),
                    a_);
        class rg extends ie {
            constructor() {
                super(...arguments);
                w(this, "onDoubleClick", (n) => {
                    if (n.phase === "settle") {
                        const {currentScreenPoint: r} = this.editor.inputs;
                        this.editor.zoomIn(r, {
                            duration: 220,
                            easing: un.easeOutQuint,
                        });
                    }
                });
                w(this, "onTripleClick", (n) => {
                    if (n.phase === "settle") {
                        const {currentScreenPoint: r} = this.editor.inputs;
                        this.editor.zoomOut(r, {
                            duration: 320,
                            easing: un.easeOutQuint,
                        });
                    }
                });
                w(this, "onQuadrupleClick", (n) => {
                    if (n.phase === "settle") {
                        const r = this.editor.getZoomLevel(),
                            {
                                inputs: {currentScreenPoint: o},
                            } = this.editor;
                        r === 1
                            ? this.editor.zoomToFit({
                                duration: 400,
                                easing: un.easeOutQuint,
                            })
                            : this.editor.resetZoom(o, {
                                duration: 320,
                                easing: un.easeOutQuint,
                            });
                    }
                });
            }
        }
        w(rg, "id", "hand"),
            w(rg, "initial", "idle"),
            w(rg, "children", () => [PJ, IJ, PI]);
        let TJ =
            ((s_ = class extends ie {
                constructor() {
                    super(...arguments);
                    w(this, "onPointerDown", (n) => {
                        this.parent.transition("lasering", n);
                    });
                }
            }),
                w(s_, "id", "idle"),
                s_);
        class II extends ie {
            constructor() {
                super(...arguments);
                w(this, "scribbleId", "id");
                w(this, "onEnter", () => {
                    const n = this.editor.scribbles.addScribble({
                        color: "laser",
                        opacity: 0.7,
                        size: 4,
                        delay: 1200,
                        shrink: 0.05,
                        taper: !0,
                    });
                    (this.scribbleId = n.id), this.pushPointToScribble();
                });
                w(this, "onExit", () => {
                    this.editor.scribbles.stop(this.scribbleId);
                });
                w(this, "onPointerMove", () => {
                    this.pushPointToScribble();
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "pushPointToScribble", () => {
                    const {x: n, y: r} = this.editor.inputs.currentPagePoint;
                    this.editor.scribbles.addPoint(this.scribbleId, n, r);
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
            }
            complete() {
                this.parent.transition("idle");
            }
            cancel() {
                this.parent.transition("idle");
            }
        }
        w(II, "id", "lasering");
        class og extends ie {
            constructor() {
                super(...arguments);
                w(this, "onEnter", () => {
                    this.editor.setCursor({type: "cross", rotation: 0});
                });
            }
        }
        w(og, "id", "laser"),
            w(og, "initial", "idle"),
            w(og, "children", () => [TJ, II]);
        class TI extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "brush", new ce());
                w(this, "initialSelectedShapeIds", []);
                w(this, "excludedShapeIds", new Set());
                w(this, "initialStartShape", null);
                w(this, "onEnter", (n) => {
                    const {altKey: r, currentPagePoint: o} = this.editor.inputs;
                    if (r) {
                        this.parent.transition("scribble_brushing", n);
                        return;
                    }
                    (this.excludedShapeIds = new Set(
                        this.editor
                            .getCurrentPageShapes()
                            .filter(
                                (i) =>
                                    this.editor.isShapeOfType(i, "group") ||
                                    this.editor.isShapeOrAncestorLocked(i)
                            )
                            .map((i) => i.id)
                    )),
                        (this.info = n),
                        (this.initialSelectedShapeIds = this.editor
                            .getSelectedShapeIds()
                            .slice()),
                        (this.initialStartShape =
                            this.editor.getShapesAtPoint(o)[0]),
                        this.onPointerMove();
                });
                w(this, "onExit", () => {
                    (this.initialSelectedShapeIds = []),
                        this.editor.updateInstanceState({brush: null});
                });
                w(this, "onTick", () => {
                    w1(this.editor);
                });
                w(this, "onPointerMove", () => {
                    this.hitTestShapes();
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
                w(this, "onCancel", (n) => {
                    this.editor.setSelectedShapes(this.initialSelectedShapeIds, {
                        squashing: !0,
                    }),
                        this.parent.transition("idle", n);
                });
                w(this, "onKeyDown", (n) => {
                    this.editor.inputs.altKey
                        ? this.parent.transition("scribble_brushing", n)
                        : this.hitTestShapes();
                });
                w(this, "onKeyUp", () => {
                    this.hitTestShapes();
                });
                w(this, "onInterrupt", () => {
                    this.editor.updateInstanceState({brush: null});
                });
            }
            complete() {
                this.parent.transition("idle");
            }
            hitTestShapes() {
                const n = this.editor.getZoomLevel(),
                    r = this.editor.getCurrentPageShapes(),
                    o = this.editor.getCurrentPageId(),
                    {
                        inputs: {
                            originPagePoint: i,
                            currentPagePoint: a,
                            shiftKey: s,
                            ctrlKey: l,
                        },
                    } = this.editor;
                this.brush.setTo(ce.FromPoints([i, a]));
                const c = new Set(s ? this.initialSelectedShapeIds : []);
                let d, u, h, p, m, f;
                const {corners: g} = this.brush,
                    {excludedShapeIds: b} = this;
                e: for (let x = 0, S = r.length; x < S; x++) {
                    if (
                        ((h = r[x]),
                        b.has(h.id) ||
                        c.has(h.id) ||
                        ((p = this.editor.getShapePageBounds(h)), !p))
                    )
                        continue e;
                    if (this.brush.contains(p)) {
                        this.handleHit(h, a, o, c, g);
                        continue e;
                    }
                    if (l || this.editor.isShapeOfType(h, "frame")) continue e;
                    if (this.brush.collides(p)) {
                        const _ = this.editor.getShapeGeometry(h);
                        if (((m = this.editor.getShapePageTransform(h)), !m))
                            continue e;
                        f = m.clone().invert().applyToPoints(g);
                        t: for (let k = 0; k < f.length; k++)
                            if (
                                ((d = f[k]),
                                    (u = f[(k + 1) % f.length]),
                                    _.hitTestLineSegment(d, u, Xr / n))
                            ) {
                                this.handleHit(h, a, o, c, g);
                                break t;
                            }
                    }
                }
                this.editor.updateInstanceState({brush: {...this.brush.toJson()}}),
                    this.editor.setSelectedShapes(Array.from(c), {squashing: !0});
            }
            handleHit(n, r, o, i, a) {
                if (n.parentId === o) {
                    i.add(n.id);
                    return;
                }
                const s = this.editor.getOutermostSelectableShape(n),
                    l = this.editor.getShapeMask(s.id);
                (l && !dU(l, a) && !_o(r, l)) || i.add(s.id);
            }
        }
        w(TI, "id", "brushing");
        function Yw(e) {
            const t = e.getZoomLevel(),
                {
                    inputs: {currentPagePoint: n},
                } = e;
            return (
                e.getShapeAtPoint(n, {
                    hitInside: !1,
                    hitLabels: !1,
                    margin: Xr / t,
                    renderingOnly: !0,
                }) ?? e.getSelectedShapeAtPoint(n)
            );
        }
        function $I(e, t, n) {
            if (!t) throw Error("Needs to translate a cropped shape!");
            const {crop: r} = t.props;
            if (!r) return;
            const o = e.inputs.shiftKey
                ? Math.abs(n.x) < Math.abs(n.y)
                    ? "x"
                    : "y"
                : null;
            o === "x" ? (n.x = 0) : o === "y" && (n.y = 0), n.rot(-t.rotation);
            const i = (1 / (r.bottomRight.x - r.topLeft.x)) * t.props.w,
                a = (1 / (r.bottomRight.y - r.topLeft.y)) * t.props.h,
                s = r.bottomRight.y - r.topLeft.y,
                l = r.bottomRight.x - r.topLeft.x,
                c = sn(r);
            return (
                (c.topLeft.x = Math.min(1 - l, Math.max(0, c.topLeft.x - n.x / i))),
                    (c.topLeft.y = Math.min(1 - s, Math.max(0, c.topLeft.y - n.y / a))),
                    (c.bottomRight.x = c.topLeft.x + l),
                    (c.bottomRight.y = c.topLeft.y + s),
                    {id: t.id, type: t.type, props: {crop: c}}
            );
        }
        let $J =
            ((l_ = class extends ie {
                constructor() {
                    super(...arguments);
                    w(this, "onEnter", () => {
                        this.editor.updateInstanceState(
                            {cursor: {type: "default", rotation: 0}},
                            {ephemeral: !0}
                        );
                        const n = this.editor.getOnlySelectedShape();
                        this.editor.on("change-history", this.cleanupCroppingState),
                        n &&
                        (this.editor.mark("crop"),
                            this.editor.setCroppingShape(n.id));
                    });
                    w(this, "onExit", () => {
                        this.editor.updateInstanceState(
                            {cursor: {type: "default", rotation: 0}},
                            {ephemeral: !0}
                        ),
                            this.editor.off(
                                "change-history",
                                this.cleanupCroppingState
                            );
                    });
                    w(this, "onCancel", () => {
                        this.editor.setCroppingShape(null),
                            this.editor.setCurrentTool("select.idle", {});
                    });
                    w(this, "onPointerDown", (n) => {
                        var r;
                        if (!this.editor.getIsMenuOpen()) {
                            if (n.ctrlKey) {
                                this.cancel(), this.editor.root.handleEvent(n);
                                return;
                            }
                            switch (n.target) {
                                case "canvas": {
                                    const o = Yw(this.editor);
                                    if (
                                        o &&
                                        !this.editor.isShapeOfType(o, "group")
                                    ) {
                                        this.onPointerDown({
                                            ...n,
                                            shape: o,
                                            target: "shape",
                                        });
                                        return;
                                    }
                                    this.cancel(), this.editor.root.handleEvent(n);
                                    break;
                                }
                                case "shape": {
                                    if (
                                        n.shape.id ===
                                        this.editor.getCroppingShapeId()
                                    ) {
                                        this.editor.setCurrentTool(
                                            "select.crop.pointing_crop",
                                            n
                                        );
                                        return;
                                    } else
                                        (r = this.editor.getShapeUtil(n.shape)) !=
                                        null && r.canCrop(n.shape)
                                            ? (this.editor.setCroppingShape(
                                                n.shape.id
                                            ),
                                                this.editor.setSelectedShapes([
                                                    n.shape.id,
                                                ]),
                                                this.editor.setCurrentTool(
                                                    "select.crop.pointing_crop",
                                                    n
                                                ))
                                            : (this.cancel(),
                                                this.editor.root.handleEvent(n));
                                    break;
                                }
                                case "selection": {
                                    switch (n.handle) {
                                        case "mobile_rotate":
                                        case "top_left_rotate":
                                        case "top_right_rotate":
                                        case "bottom_left_rotate":
                                        case "bottom_right_rotate": {
                                            this.editor.setCurrentTool(
                                                "select.pointing_rotate_handle",
                                                {
                                                    ...n,
                                                    onInteractionEnd: "select.crop",
                                                }
                                            );
                                            break;
                                        }
                                        case "top":
                                        case "right":
                                        case "bottom":
                                        case "left": {
                                            this.editor.setCurrentTool(
                                                "select.pointing_crop_handle",
                                                {
                                                    ...n,
                                                    onInteractionEnd: "select.crop",
                                                }
                                            );
                                            break;
                                        }
                                        case "top_left":
                                        case "top_right":
                                        case "bottom_left":
                                        case "bottom_right": {
                                            this.editor.setCurrentTool(
                                                "select.pointing_crop_handle",
                                                {
                                                    ...n,
                                                    onInteractionEnd: "select.crop",
                                                }
                                            );
                                            break;
                                        }
                                        default:
                                            this.cancel();
                                    }
                                    break;
                                }
                            }
                        }
                    });
                    w(this, "onDoubleClick", (n) => {
                        var a;
                        if (this.editor.inputs.shiftKey || n.phase !== "up") return;
                        const r = this.editor.getCroppingShapeId();
                        if (!r) return;
                        const o = this.editor.getShape(r);
                        if (!o) return;
                        const i = this.editor.getShapeUtil(o);
                        i &&
                        n.target === "selection" &&
                        ((a = i.onDoubleClickEdge) == null || a.call(i, o));
                    });
                    w(this, "onKeyDown", () => {
                        this.nudgeCroppingImage(!1);
                    });
                    w(this, "onKeyRepeat", () => {
                        this.nudgeCroppingImage(!0);
                    });
                    w(this, "onKeyUp", (n) => {
                        switch (n.code) {
                            case "Enter": {
                                this.editor.setCroppingShape(null),
                                    this.editor.setCurrentTool("select.idle", {});
                                break;
                            }
                        }
                    });
                    w(this, "cleanupCroppingState", () => {
                        this.editor.getCroppingShapeId() ||
                        this.editor.setCurrentTool("select.idle", {});
                    });
                }
                cancel() {
                    this.editor.setCroppingShape(null),
                        this.editor.setCurrentTool("select.idle", {});
                }
                nudgeCroppingImage(n = !1) {
                    const {
                            editor: {
                                inputs: {keys: r},
                            },
                        } = this,
                        o = r.has("ShiftLeft"),
                        i = new E(0, 0);
                    if (
                        (r.has("ArrowLeft") && (i.x += 1),
                        r.has("ArrowRight") && (i.x -= 1),
                        r.has("ArrowUp") && (i.y += 1),
                        r.has("ArrowDown") && (i.y -= 1),
                            i.equals(new E(0, 0)))
                    )
                        return;
                    o && i.mul(10);
                    const a = this.editor.getShape(
                        this.editor.getCroppingShapeId()
                    );
                    if (!a) return;
                    const s = $I(this.editor, a, i);
                    s &&
                    (n || this.editor.mark("translate crop"),
                        this.editor.updateShapes([s]));
                }
            }),
                w(l_, "id", "idle"),
                l_);
        class AI extends ie {
            constructor() {
                super(...arguments);
                w(this, "onCancel", () => {
                    this.editor.setCurrentTool("select.crop.idle", {});
                });
                w(this, "onPointerMove", (n) => {
                    this.editor.inputs.isDragging &&
                    this.editor.setCurrentTool(
                        "select.crop.translating_crop",
                        n
                    );
                });
                w(this, "onPointerUp", (n) => {
                    this.editor.setCurrentTool("select.crop.idle", n);
                });
            }
        }
        w(AI, "id", "pointing_crop");
        class MI extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "markId", "translating crop");
                w(this, "snapshot", {});
                w(this, "onEnter", (n) => {
                    (this.info = n),
                        (this.snapshot = this.createSnapshot()),
                        this.editor.mark(this.markId),
                        this.editor.setCursor({type: "move", rotation: 0}),
                        this.updateShapes();
                });
                w(this, "onExit", () => {
                    this.editor.updateInstanceState(
                        {cursor: {type: "default", rotation: 0}},
                        {ephemeral: !0}
                    );
                });
                w(this, "onPointerMove", () => {
                    this.updateShapes();
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onKeyDown", (n) => {
                    switch (n.key) {
                        case "Alt":
                        case "Shift": {
                            this.updateShapes();
                            return;
                        }
                    }
                });
                w(this, "onKeyUp", (n) => {
                    switch (n.key) {
                        case "Enter": {
                            this.complete();
                            return;
                        }
                        case "Alt":
                        case "Shift":
                            this.updateShapes();
                    }
                });
            }
            complete() {
                this.updateShapes(),
                    this.editor.setCurrentTool("select.crop.idle", this.info);
            }
            cancel() {
                this.editor.bailToMark(this.markId),
                    this.editor.setCurrentTool("select.crop.idle", this.info);
            }
            createSnapshot() {
                return {shape: this.editor.getOnlySelectedShape()};
            }
            updateShapes() {
                const n = this.snapshot.shape;
                if (!n) return;
                const {originPagePoint: r, currentPagePoint: o} =
                        this.editor.inputs,
                    i = o.clone().sub(r),
                    a = $I(this.editor, n, i);
                a && this.editor.updateShapes([a], {squashing: !0});
            }
        }
        w(MI, "id", "translating_crop");
        class ig extends ie {}
        w(ig, "id", "crop"),
            w(ig, "initial", "idle"),
            w(ig, "children", () => [$J, MI, AI]);
        const Tr = 8,
            cc = {
                bottom: "ns-resize",
                top: "ns-resize",
                left: "ew-resize",
                right: "ew-resize",
                bottom_left: "nesw-resize",
                bottom_right: "nwse-resize",
                top_left: "nwse-resize",
                top_right: "nesw-resize",
                bottom_left_rotate: "swne-rotate",
                bottom_right_rotate: "senw-rotate",
                top_left_rotate: "nwse-rotate",
                top_right_rotate: "nesw-rotate",
                mobile_rotate: "grabbing",
            };
        class zI extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "onEnter", (n) => {
                    (this.info = n), this.updateCursor();
                });
                w(this, "onPointerMove", () => {
                    this.editor.inputs.isDragging &&
                    this.parent.transition("resizing", this.info);
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onComplete", () => {
                    this.cancel();
                });
                w(this, "onInterrupt", () => {
                    this.cancel();
                });
            }
            updateCursor() {
                const n = this.editor.getSelectedShapes(),
                    r = cc[this.info.handle];
                this.editor.updateInstanceState({
                    cursor: {type: r, rotation: n.length === 1 ? n[0].rotation : 0},
                });
            }
            complete() {
                this.info.onInteractionEnd
                    ? this.editor.setCurrentTool(this.info.onInteractionEnd, {})
                    : this.parent.transition("idle");
            }
            cancel() {
                this.info.onInteractionEnd
                    ? this.editor.setCurrentTool(this.info.onInteractionEnd, {})
                    : this.parent.transition("idle");
            }
        }
        w(zI, "id", "pointing_resize_handle");
        class RI extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "markId", "");
                w(this, "snapshot", {});
                w(this, "onEnter", (n) => {
                    (this.info = n),
                        (this.markId = "cropping"),
                        this.editor.mark(this.markId),
                        (this.snapshot = this.createSnapshot()),
                        this.updateShapes();
                });
                w(this, "onPointerMove", () => {
                    this.updateShapes();
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "getDefaultCrop", () => ({
                    topLeft: {x: 0, y: 0},
                    bottomRight: {x: 1, y: 1},
                }));
            }
            updateCursor() {
                const n = this.editor.getSelectedShapes()[0];
                if (!n) return;
                const r = cc[this.info.handle];
                this.editor.updateInstanceState({
                    cursor: {type: r, rotation: n.rotation},
                });
            }
            updateShapes() {
                const {shape: n, cursorHandleOffset: r} = this.snapshot;
                if (!n || !this.editor.getShapeUtil("image")) return;
                const i = n.props,
                    a = this.editor.inputs.currentPagePoint.clone().sub(r),
                    s = this.editor.inputs.originPagePoint.clone().sub(r),
                    l = a.clone().sub(s).rot(-n.rotation),
                    c = i.crop ?? this.getDefaultCrop(),
                    d = sn(c),
                    u = new E(n.x, n.y),
                    h = new E(0, 0),
                    p = (1 / (c.bottomRight.x - c.topLeft.x)) * i.w,
                    m = (1 / (c.bottomRight.y - c.topLeft.y)) * i.h;
                let f = !1;
                switch (this.info.handle) {
                    case "top":
                    case "top_left":
                    case "top_right": {
                        if (m < Tr) break;
                        (f = !0),
                            (d.topLeft.y = d.topLeft.y + l.y / m),
                            m * (d.bottomRight.y - d.topLeft.y) < Tr
                                ? ((d.topLeft.y = d.bottomRight.y - Tr / m),
                                    (h.y = (d.topLeft.y - c.topLeft.y) * m))
                                : d.topLeft.y <= 0
                                    ? ((d.topLeft.y = 0),
                                        (h.y = (d.topLeft.y - c.topLeft.y) * m))
                                    : (h.y = l.y);
                        break;
                    }
                    case "bottom":
                    case "bottom_left":
                    case "bottom_right": {
                        if (m < Tr) break;
                        (f = !0),
                            (d.bottomRight.y = Math.min(
                                1,
                                d.bottomRight.y + l.y / m
                            )),
                        m * (d.bottomRight.y - d.topLeft.y) < Tr &&
                        (d.bottomRight.y = d.topLeft.y + Tr / m);
                        break;
                    }
                }
                switch (this.info.handle) {
                    case "left":
                    case "top_left":
                    case "bottom_left": {
                        if (p < Tr) break;
                        (f = !0),
                            (d.topLeft.x = d.topLeft.x + l.x / p),
                            p * (d.bottomRight.x - d.topLeft.x) < Tr
                                ? ((d.topLeft.x = d.bottomRight.x - Tr / p),
                                    (h.x = (d.topLeft.x - c.topLeft.x) * p))
                                : d.topLeft.x <= 0
                                    ? ((d.topLeft.x = 0),
                                        (h.x = (d.topLeft.x - c.topLeft.x) * p))
                                    : (h.x = l.x);
                        break;
                    }
                    case "right":
                    case "top_right":
                    case "bottom_right": {
                        if (p < Tr) break;
                        (f = !0),
                            (d.bottomRight.x = Math.min(
                                1,
                                d.bottomRight.x + l.x / p
                            )),
                        p * (d.bottomRight.x - d.topLeft.x) < Tr &&
                        (d.bottomRight.x = d.topLeft.x + Tr / p);
                        break;
                    }
                }
                if (!f) return;
                u.add(h.rot(n.rotation));
                const g = {
                    id: n.id,
                    type: n.type,
                    x: u.x,
                    y: u.y,
                    props: {
                        crop: d,
                        w: (d.bottomRight.x - d.topLeft.x) * p,
                        h: (d.bottomRight.y - d.topLeft.y) * m,
                    },
                };
                this.editor.updateShapes([g], {squashing: !0}), this.updateCursor();
            }
            complete() {
                this.info.onInteractionEnd
                    ? this.editor.setCurrentTool(
                        this.info.onInteractionEnd,
                        this.info
                    )
                    : (this.editor.setCroppingShape(null),
                        this.parent.transition("idle"));
            }
            cancel() {
                this.editor.bailToMark(this.markId),
                    this.info.onInteractionEnd
                        ? this.editor.setCurrentTool(
                            this.info.onInteractionEnd,
                            this.info
                        )
                        : (this.editor.setCroppingShape(null),
                            this.parent.transition("idle"));
            }
            createSnapshot() {
                const n = this.editor.getSelectionRotation(),
                    {
                        inputs: {originPagePoint: r},
                    } = this.editor,
                    o = this.editor.getOnlySelectedShape(),
                    i = this.editor.getSelectionRotatedPageBounds(),
                    a = E.RotWith(i.getHandlePoint(this.info.handle), i.point, n),
                    s = E.Sub(r, a);
                return {shape: o, cursorHandleOffset: s};
            }
        }
        w(RI, "id", "cropping");
        class OI extends ie {
            constructor() {
                super(...arguments);
                w(this, "shapeId", "");
                w(this, "initialHandle", {});
                w(this, "initialAdjacentHandle", null);
                w(this, "initialPagePoint", {});
                w(this, "markId", "");
                w(this, "initialPageTransform");
                w(this, "initialPageRotation");
                w(this, "info", {});
                w(this, "isPrecise", !1);
                w(this, "isPreciseId", null);
                w(this, "pointingId", null);
                w(this, "onEnter", (n) => {
                    const {shape: r, isCreating: o, handle: i} = n;
                    (this.info = n),
                        this.parent.setCurrentToolIdMask(n.onInteractionEnd),
                        (this.shapeId = r.id),
                        (this.markId = o ? `creating:${r.id}` : "dragging handle"),
                    o || this.editor.mark(this.markId),
                        (this.initialHandle = sn(i)),
                        (this.initialPageTransform =
                            this.editor.getShapePageTransform(r)),
                        (this.initialPageRotation =
                            this.initialPageTransform.rotation()),
                        (this.initialPagePoint =
                            this.editor.inputs.originPagePoint.clone()),
                        this.editor.updateInstanceState(
                            {cursor: {type: o ? "cross" : "grabbing", rotation: 0}},
                            {ephemeral: !0}
                        );
                    const a = this.editor.getShapeHandles(r).sort(pn),
                        s = a.findIndex((c) => c.id === n.handle.id);
                    this.initialAdjacentHandle = null;
                    for (let c = s + 1; c < a.length; c++) {
                        const d = a[c];
                        if (
                            d.type === "vertex" &&
                            d.id !== "middle" &&
                            d.id !== n.handle.id
                        ) {
                            this.initialAdjacentHandle = d;
                            break;
                        }
                    }
                    if (!this.initialAdjacentHandle)
                        for (let c = a.length - 1; c >= 0; c--) {
                            const d = a[c];
                            if (
                                d.type === "vertex" &&
                                d.id !== "middle" &&
                                d.id !== n.handle.id
                            ) {
                                this.initialAdjacentHandle = d;
                                break;
                            }
                        }
                    const l = r.props[n.handle.id];
                    (this.isPrecise = !1),
                        (l == null ? void 0 : l.type) === "binding"
                            ? (this.editor.setHintingShapes([l.boundShapeId]),
                                (this.isPrecise = l.isPrecise),
                                this.isPrecise
                                    ? (this.isPreciseId = l.boundShapeId)
                                    : this.resetExactTimeout())
                            : this.editor.setHintingShapes([]),
                        this.update(),
                        this.editor.select(this.shapeId);
                });
                w(this, "exactTimeout", -1);
                w(this, "onPointerMove", () => {
                    this.update();
                });
                w(this, "onKeyDown", () => {
                    this.update();
                });
                w(this, "onKeyUp", () => {
                    this.update();
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onExit", () => {
                    this.parent.setCurrentToolIdMask(void 0),
                        this.editor.setHintingShapes([]),
                        this.editor.snaps.clear(),
                        this.editor.updateInstanceState(
                            {cursor: {type: "default", rotation: 0}},
                            {ephemeral: !0}
                        );
                });
            }
            resetExactTimeout() {
                this.exactTimeout !== -1 && this.clearExactTimeout(),
                    (this.exactTimeout = setTimeout(() => {
                        this.getIsActive() &&
                        !this.isPrecise &&
                        ((this.isPrecise = !0),
                            (this.isPreciseId = this.pointingId),
                            this.update()),
                            (this.exactTimeout = -1);
                    }, 750));
            }
            clearExactTimeout() {
                this.exactTimeout !== -1 &&
                (clearTimeout(this.exactTimeout), (this.exactTimeout = -1));
            }
            complete() {
                this.editor.snaps.clear();
                const {onInteractionEnd: n} = this.info;
                if (this.editor.getInstanceState().isToolLocked && n) {
                    this.editor.setCurrentTool(n, {shapeId: this.shapeId});
                    return;
                }
                this.parent.transition("idle");
            }
            cancel() {
                this.editor.bailToMark(this.markId), this.editor.snaps.clear();
                const {onInteractionEnd: n} = this.info;
                if (n) {
                    this.editor.setCurrentTool(n, {shapeId: this.shapeId});
                    return;
                }
                this.parent.transition("idle");
            }
            update() {
                var C;
                const {editor: n, shapeId: r, initialPagePoint: o} = this,
                    {
                        initialHandle: i,
                        initialPageRotation: a,
                        initialAdjacentHandle: s,
                    } = this,
                    l = this.editor.getHintingShapeIds(),
                    c = this.editor.user.getIsSnapMode(),
                    {
                        snaps: d,
                        inputs: {
                            currentPagePoint: u,
                            shiftKey: h,
                            ctrlKey: p,
                            altKey: m,
                            pointerVelocity: f,
                        },
                    } = n,
                    g = this.info.shape,
                    b = n.getShape(r);
                if (!b) return;
                const x = n.getShapeUtil(b);
                let S = u.clone().sub(o).rot(-a).add(i);
                if (h && s && i.id !== "middle") {
                    const P = E.Angle(s, S),
                        $ = $f(P, 24) - P;
                    S = E.RotWith(S, s, $);
                }
                if ((n.snaps.clear(), i.canSnap && (c ? !p : p))) {
                    const P = n.getShapePageTransform(b.id);
                    if (!P) throw Error("Expected a page transform");
                    const I = n
                            .getShapeHandles(b)
                            .filter(({type: R}) => R === "vertex")
                            .sort(pn)
                            .findIndex(({index: R}) => i.index === R),
                        $ = x
                            .getOutlineSegments(b)
                            .map((R) => re.applyToPoints(P, R))
                            .filter((R, D) => D !== I - 1 && D !== I),
                        T = d.getSnappingHandleDelta({
                            additionalSegments: $,
                            handlePoint: re.applyToPoint(P, S),
                        });
                    T &&
                    (T.rot(-n.getShapeParentTransform(b).rotation()), S.add(T));
                }
                const _ =
                        (C = x.onHandleChange) == null
                            ? void 0
                            : C.call(x, b, {
                                handle: {...i, x: S.x, y: S.y},
                                isPrecise: this.isPrecise || m,
                                initial: g,
                            }),
                    k = {...b, ..._};
                if (i.canBind) {
                    const P = k.props[i.id];
                    (P == null ? void 0 : P.type) === "binding"
                        ? l[0] !== P.boundShapeId &&
                        (n.setHintingShapes([P.boundShapeId]),
                            (this.pointingId = P.boundShapeId),
                            (this.isPrecise = f.len() < 0.5 || m),
                            (this.isPreciseId = this.isPrecise
                                ? P.boundShapeId
                                : null),
                            this.resetExactTimeout())
                        : l.length > 0 &&
                        (n.setHintingShapes([]),
                            (this.pointingId = null),
                            (this.isPrecise = !1),
                            (this.isPreciseId = null),
                            this.resetExactTimeout());
                }
                _ && n.updateShapes([k], {squashing: !0});
            }
        }
        w(OI, "id", "dragging_handle");
        class DI extends ie {
            constructor() {
                super(...arguments);
                w(this, "onEnter", () => {
                    const n = this.editor.getEditingShape();
                    if (!n)
                        throw Error(
                            "Entered editing state without an editing shape"
                        );
                    Du(this.editor), this.editor.select(n);
                });
                w(this, "onExit", () => {
                    var i;
                    const {editingShapeId: n} = this.editor.getCurrentPageState();
                    if (!n) return;
                    this.editor.setEditingShape(null);
                    const r = this.editor.getShape(n),
                        o = this.editor.getShapeUtil(r);
                    (i = o.onEditEnd) == null || i.call(o, r),
                        setTimeout(() => {
                            this.editor.updateViewportScreenBounds();
                        }, 500);
                });
                w(this, "onPointerMove", (n) => {
                    switch (n.target) {
                        case "shape":
                        case "canvas": {
                            Du(this.editor);
                            return;
                        }
                    }
                });
                w(this, "onPointerDown", (n) => {
                    switch (n.target) {
                        case "canvas": {
                            const r = Yw(this.editor);
                            if (r) {
                                this.onPointerDown({
                                    ...n,
                                    shape: r,
                                    target: "shape",
                                });
                                return;
                            }
                            break;
                        }
                        case "shape": {
                            const {shape: r} = n,
                                o = this.editor.getEditingShape();
                            if (!o) throw Error("Expected an editing shape!");
                            if (r.type === o.type)
                                if (
                                    this.editor.isShapeOfType(r, "geo") ||
                                    this.editor.isShapeOfType(r, "arrow")
                                ) {
                                    const a = this.editor
                                        .getShapeUtil(r)
                                        .getGeometry(r).children[1];
                                    if (a) {
                                        const s = this.editor.getPointInShapeSpace(
                                            r,
                                            this.editor.inputs.currentPagePoint
                                        );
                                        if (a.bounds.containsPoint(s)) {
                                            if (r.id === o.id) return;
                                            this.parent.transition(
                                                "pointing_shape",
                                                n
                                            );
                                            return;
                                        }
                                    }
                                } else {
                                    if (r.id === o.id)
                                        this.editor.isShapeOfType(r, "frame") &&
                                        this.editor.setEditingShape(null);
                                    else {
                                        this.parent.transition("pointing_shape", n);
                                        return;
                                    }
                                    return;
                                }
                            break;
                        }
                    }
                    this.parent.transition("idle", n),
                        this.editor.root.handleEvent(n);
                });
                w(this, "onComplete", (n) => {
                    this.parent.transition("idle", n);
                });
                w(this, "onCancel", (n) => {
                    this.parent.transition("idle", n);
                });
            }
        }
        w(DI, "id", "editing_shape");
        function LI(e) {
            const t = e.getOnlySelectedShape();
            return !!(
                t &&
                !e.isShapeOrAncestorLocked(t) &&
                e.getShapeUtil(t).canCrop(t)
            );
        }
        function ag(e) {
            const t = e.getSelectedShapeIds(),
                {shiftKey: n, altKey: r, currentPagePoint: o} = e.inputs,
                i = e.getShapeAtPoint(o, {
                    hitInside: !1,
                    margin: Xr / e.getZoomLevel(),
                    hitLabels: !0,
                    renderingOnly: !0,
                    filter: (a) => !a.isLocked,
                });
            if (i) {
                const a = e.getOutermostSelectableShape(i);
                if (n && !r)
                    e.cancelDoubleClick(),
                        t.includes(a.id)
                            ? (e.mark("deselecting shape"), e.deselect(a))
                            : (e.mark("shift selecting shape"),
                                e.setSelectedShapes([...t, a.id]));
                else {
                    let s;
                    a === i || a.id === e.getFocusedGroupId() || t.includes(a.id)
                        ? (s = i)
                        : (s = a),
                    s &&
                    !t.includes(s.id) &&
                    (e.mark("selecting shape"), e.select(s.id));
                }
            } else {
                if (n) return;
                {
                    t.length > 0 && (e.mark("selecting none"), e.selectNone());
                    const a = e.getFocusedGroupId();
                    if (kr(a)) {
                        const s = e.getShape(a);
                        e.isPointInShape(s, o, {margin: 0, hitInside: !0}) ||
                        e.setFocusedGroup(null);
                    }
                }
            }
        }
        let AJ =
            ((c_ = class extends ie {
                constructor() {
                    super(...arguments);
                    w(this, "onEnter", () => {
                        this.parent.setCurrentToolIdMask(void 0),
                            Du(this.editor),
                            this.editor.updateInstanceState(
                                {cursor: {type: "default", rotation: 0}},
                                {ephemeral: !0}
                            );
                    });
                    w(this, "onPointerMove", () => {
                        Du(this.editor);
                    });
                    w(this, "onPointerDown", (n) => {
                        if (this.editor.getIsMenuOpen()) return;
                        const r = n.ctrlKey && LI(this.editor);
                        if (n.ctrlKey && !r) {
                            if (
                                n.target === "shape" &&
                                this.isDarwin &&
                                this.editor.inputs.keys.has("ControlLeft") &&
                                !this.editor.isShapeOrAncestorLocked(n.shape)
                            ) {
                                this.parent.transition("pointing_shape", n);
                                return;
                            }
                            this.parent.transition("brushing", n);
                            return;
                        }
                        switch (n.target) {
                            case "canvas": {
                                const o = Yw(this.editor);
                                if (o && !o.isLocked) {
                                    this.onPointerDown({
                                        ...n,
                                        shape: o,
                                        target: "shape",
                                    });
                                    return;
                                }
                                const i = this.editor.getSelectedShapeIds(),
                                    a = this.editor.getOnlySelectedShape(),
                                    {
                                        inputs: {currentPagePoint: s},
                                    } = this.editor;
                                if (
                                    (i.length > 1 ||
                                        (a &&
                                            !this.editor
                                                .getShapeUtil(a)
                                                .hideSelectionBoundsBg(a))) &&
                                    jI(this.editor, s)
                                ) {
                                    this.onPointerDown({...n, target: "selection"});
                                    return;
                                }
                                this.parent.transition("pointing_canvas", n);
                                break;
                            }
                            case "shape": {
                                if (this.editor.isShapeOrAncestorLocked(n.shape)) {
                                    this.parent.transition("pointing_canvas", n);
                                    break;
                                }
                                this.parent.transition("pointing_shape", n);
                                break;
                            }
                            case "handle": {
                                if (this.editor.getInstanceState().isReadonly)
                                    break;
                                this.editor.inputs.altKey
                                    ? this.parent.transition("pointing_shape", n)
                                    : this.parent.transition("pointing_handle", n);
                                break;
                            }
                            case "selection": {
                                switch (n.handle) {
                                    case "mobile_rotate":
                                    case "top_left_rotate":
                                    case "top_right_rotate":
                                    case "bottom_left_rotate":
                                    case "bottom_right_rotate": {
                                        this.parent.transition(
                                            "pointing_rotate_handle",
                                            n
                                        );
                                        break;
                                    }
                                    case "top":
                                    case "right":
                                    case "bottom":
                                    case "left": {
                                        r
                                            ? this.parent.transition(
                                                "pointing_crop_handle",
                                                n
                                            )
                                            : this.parent.transition(
                                                "pointing_resize_handle",
                                                n
                                            );
                                        break;
                                    }
                                    case "top_left":
                                    case "top_right":
                                    case "bottom_left":
                                    case "bottom_right": {
                                        r
                                            ? this.parent.transition(
                                                "pointing_crop_handle",
                                                n
                                            )
                                            : this.parent.transition(
                                                "pointing_resize_handle",
                                                n
                                            );
                                        break;
                                    }
                                    default: {
                                        const o = this.editor.getHoveredShape();
                                        if (
                                            o &&
                                            !this.editor
                                                .getSelectedShapeIds()
                                                .includes(o.id) &&
                                            !o.isLocked
                                        ) {
                                            this.onPointerDown({
                                                ...n,
                                                shape: o,
                                                target: "shape",
                                            });
                                            return;
                                        }
                                        this.parent.transition(
                                            "pointing_selection",
                                            n
                                        );
                                    }
                                }
                                break;
                            }
                        }
                    });
                    w(this, "onDoubleClick", (n) => {
                        var r, o, i, a;
                        if (!(this.editor.inputs.shiftKey || n.phase !== "up"))
                            switch (n.target) {
                                case "canvas": {
                                    const s = this.editor.getHoveredShape(),
                                        l =
                                            s &&
                                            !this.editor.isShapeOfType(s, "group")
                                                ? s
                                                : this.editor.getSelectedShapeAtPoint(
                                                    this.editor.inputs
                                                        .currentPagePoint
                                                ) ??
                                                this.editor.getShapeAtPoint(
                                                    this.editor.inputs
                                                        .currentPagePoint,
                                                    {
                                                        margin:
                                                            Xr /
                                                            this.editor.getZoomLevel(),
                                                        hitInside: !1,
                                                    }
                                                ),
                                        c = this.editor.getFocusedGroupId();
                                    if (l) {
                                        if (this.editor.isShapeOfType(l, "group")) {
                                            ag(this.editor);
                                            return;
                                        } else {
                                            const d = this.editor.getShape(
                                                l.parentId
                                            );
                                            if (
                                                d &&
                                                this.editor.isShapeOfType(
                                                    d,
                                                    "group"
                                                ) &&
                                                !(c && d.id === c)
                                            ) {
                                                ag(this.editor);
                                                return;
                                            }
                                        }
                                        this.onDoubleClick({
                                            ...n,
                                            shape: l,
                                            target: "shape",
                                        });
                                        return;
                                    }
                                    this.editor.inputs.shiftKey ||
                                    this.handleDoubleClickOnCanvas(n);
                                    break;
                                }
                                case "selection": {
                                    if (this.editor.getInstanceState().isReadonly)
                                        break;
                                    const s = this.editor.getOnlySelectedShape();
                                    if (s) {
                                        const l = this.editor.getShapeUtil(s);
                                        if (!this.canInteractWithShapeInReadOnly(s))
                                            return;
                                        if (
                                            n.handle === "right" ||
                                            n.handle === "left" ||
                                            n.handle === "top" ||
                                            n.handle === "bottom"
                                        ) {
                                            const c =
                                                (r = l.onDoubleClickEdge) == null
                                                    ? void 0
                                                    : r.call(l, s);
                                            if (c) {
                                                this.editor.mark(
                                                    "double click edge"
                                                ),
                                                    this.editor.updateShapes([c]);
                                                return;
                                            }
                                        }
                                        if (
                                            l.canCrop(s) &&
                                            !this.editor.isShapeOrAncestorLocked(s)
                                        ) {
                                            this.parent.transition("crop", n);
                                            return;
                                        }
                                        this.shouldStartEditingShape(s) &&
                                        this.startEditingShape(s, n);
                                    }
                                    break;
                                }
                                case "shape": {
                                    const {shape: s} = n,
                                        l = this.editor.getShapeUtil(s);
                                    if (
                                        s.type !== "video" &&
                                        s.type !== "embed" &&
                                        this.editor.getInstanceState().isReadonly
                                    )
                                        break;
                                    if (l.onDoubleClick) {
                                        const c =
                                            (o = l.onDoubleClick) == null
                                                ? void 0
                                                : o.call(l, s);
                                        if (c) {
                                            this.editor.updateShapes([c]);
                                            return;
                                        } else if (
                                            l.canCrop(s) &&
                                            !this.editor.isShapeOrAncestorLocked(s)
                                        ) {
                                            this.editor.mark("select and crop"),
                                                this.editor.select(
                                                    (i = n.shape) == null
                                                        ? void 0
                                                        : i.id
                                                ),
                                                this.parent.transition("crop", n);
                                            return;
                                        }
                                    }
                                    this.shouldStartEditingShape(s)
                                        ? this.startEditingShape(s, n)
                                        : this.handleDoubleClickOnCanvas(n);
                                    break;
                                }
                                case "handle": {
                                    if (this.editor.getInstanceState().isReadonly)
                                        break;
                                    const {shape: s, handle: l} = n,
                                        c = this.editor.getShapeUtil(s),
                                        d =
                                            (a = c.onDoubleClickHandle) == null
                                                ? void 0
                                                : a.call(c, s, l);
                                    d
                                        ? this.editor.updateShapes([d])
                                        : this.shouldStartEditingShape(s) &&
                                        this.startEditingShape(s, n);
                                }
                            }
                    });
                    w(this, "onRightClick", (n) => {
                        switch (n.target) {
                            case "canvas": {
                                const r = this.editor.getHoveredShape(),
                                    o =
                                        r && !this.editor.isShapeOfType(r, "group")
                                            ? r
                                            : this.editor.getShapeAtPoint(
                                                this.editor.inputs
                                                    .currentPagePoint,
                                                {
                                                    margin:
                                                        Xr /
                                                        this.editor.getZoomLevel(),
                                                    hitInside: !1,
                                                    hitLabels: !0,
                                                    hitFrameInside: !1,
                                                    renderingOnly: !0,
                                                }
                                            );
                                if (o) {
                                    this.onRightClick({
                                        ...n,
                                        shape: o,
                                        target: "shape",
                                    });
                                    return;
                                }
                                const i = this.editor.getSelectedShapeIds(),
                                    a = this.editor.getOnlySelectedShape(),
                                    {
                                        inputs: {currentPagePoint: s},
                                    } = this.editor;
                                if (
                                    (i.length > 1 ||
                                        (a &&
                                            !this.editor
                                                .getShapeUtil(a)
                                                .hideSelectionBoundsBg(a))) &&
                                    jI(this.editor, s)
                                ) {
                                    this.onRightClick({...n, target: "selection"});
                                    return;
                                }
                                this.editor.selectNone();
                                break;
                            }
                            case "shape": {
                                const {selectedShapeIds: r} =
                                        this.editor.getCurrentPageState(),
                                    {shape: o} = n,
                                    i = this.editor.getOutermostSelectableShape(
                                        o,
                                        (a) => !r.includes(a.id)
                                    );
                                r.includes(i.id) ||
                                (this.editor.mark("selecting shape"),
                                    this.editor.setSelectedShapes([i.id]));
                                break;
                            }
                        }
                    });
                    w(this, "onCancel", () => {
                        this.editor.getFocusedGroupId() !==
                        this.editor.getCurrentPageId() &&
                        this.editor.getSelectedShapeIds().length > 0
                            ? this.editor.popFocusedGroupId()
                            : (this.editor.mark("clearing selection"),
                                this.editor.selectNone());
                    });
                    w(this, "onKeyDown", (n) => {
                        switch (n.code) {
                            case "ArrowLeft":
                            case "ArrowRight":
                            case "ArrowUp":
                            case "ArrowDown": {
                                this.nudgeSelectedShapes(!1);
                                break;
                            }
                        }
                    });
                    w(this, "onKeyRepeat", (n) => {
                        switch (n.code) {
                            case "ArrowLeft":
                            case "ArrowRight":
                            case "ArrowUp":
                            case "ArrowDown": {
                                this.nudgeSelectedShapes(!0);
                                break;
                            }
                        }
                    });
                    w(this, "onKeyUp", (n) => {
                        switch (n.code) {
                            case "Enter": {
                                const r = this.editor.getSelectedShapes();
                                if (
                                    r.every((i) =>
                                        this.editor.isShapeOfType(i, "group")
                                    )
                                ) {
                                    this.editor.setSelectedShapes(
                                        r.flatMap((i) =>
                                            this.editor.getSortedChildIdsForParent(
                                                i.id
                                            )
                                        )
                                    );
                                    return;
                                }
                                const o = this.editor.getOnlySelectedShape();
                                if (o && this.shouldStartEditingShape(o)) {
                                    this.startEditingShape(o, {
                                        ...n,
                                        target: "shape",
                                        shape: o,
                                    });
                                    return;
                                }
                                LI(this.editor) &&
                                this.parent.transition("crop", n);
                                break;
                            }
                        }
                    });
                    w(
                        this,
                        "isDarwin",
                        window.navigator.userAgent.toLowerCase().indexOf("mac") > -1
                    );
                }
                shouldStartEditingShape(n = this.editor.getOnlySelectedShape()) {
                    return !n ||
                    (this.editor.isShapeOrAncestorLocked(n) &&
                        n.type !== "embed") ||
                    !this.canInteractWithShapeInReadOnly(n)
                        ? !1
                        : this.editor.getShapeUtil(n).canEdit(n);
                }
                startEditingShape(n, r) {
                    (this.editor.isShapeOrAncestorLocked(n) &&
                        n.type !== "embed") ||
                    (this.editor.mark("editing shape"),
                        this.editor.setEditingShape(n.id),
                        this.parent.transition("editing_shape", r));
                }
                handleDoubleClickOnCanvas(n) {
                    if (this.editor.getInstanceState().isReadonly) return;
                    this.editor.mark("creating text shape");
                    const r = Ge(),
                        {x: o, y: i} = this.editor.inputs.currentPagePoint;
                    this.editor.createShapes([
                        {
                            id: r,
                            type: "text",
                            x: o,
                            y: i,
                            props: {text: "", autoSize: !0},
                        },
                    ]);
                    const a = this.editor.getShape(r);
                    if (!a) return;
                    const s = this.editor.getShapeUtil(a);
                    (this.editor.getInstanceState().isReadonly &&
                        !s.canEditInReadOnly(a)) ||
                    (this.editor.setEditingShape(r),
                        this.editor.select(r),
                        this.parent.transition("editing_shape", n));
                }
                nudgeSelectedShapes(n = !1) {
                    const {
                            editor: {
                                inputs: {keys: r},
                            },
                        } = this,
                        o = r.has("ShiftLeft"),
                        i = new E(0, 0);
                    if (
                        (r.has("ArrowLeft") && (i.x -= 1),
                        r.has("ArrowRight") && (i.x += 1),
                        r.has("ArrowUp") && (i.y -= 1),
                        r.has("ArrowDown") && (i.y += 1),
                            i.equals(new E(0, 0)))
                    )
                        return;
                    n || this.editor.mark("nudge shapes");
                    const {gridSize: a} = this.editor.getDocumentSettings(),
                        s = this.editor.getInstanceState().isGridMode
                            ? o
                                ? a * RJ
                                : a
                            : o
                                ? MJ
                                : zJ;
                    this.editor.nudgeShapes(
                        this.editor.getSelectedShapeIds(),
                        i.mul(s)
                    );
                }
                canInteractWithShapeInReadOnly(n) {
                    return !!(
                        !this.editor.getInstanceState().isReadonly ||
                        this.editor.getShapeUtil(n).canEditInReadOnly(n)
                    );
                }
            }),
                w(c_, "id", "idle"),
                c_);
        const MJ = 10,
            zJ = 1,
            RJ = 5;
        function jI(e, t) {
            const n = e.getSelectionRotatedPageBounds();
            if (!n) return !1;
            const r = e.getSelectionRotation();
            return r
                ? _o(
                    t,
                    n.corners.map((o) => E.RotWith(o, n.point, r))
                )
                : n.containsPoint(t);
        }
        class NI extends ie {
            constructor() {
                super(...arguments);
                w(this, "onEnter", () => {
                    const {inputs: n} = this.editor;
                    n.shiftKey ||
                    (this.editor.getSelectedShapeIds().length > 0 &&
                        (this.editor.mark("selecting none"),
                            this.editor.selectNone()));
                });
                w(this, "onPointerMove", (n) => {
                    this.editor.inputs.isDragging &&
                    this.parent.transition("brushing", n);
                });
                w(this, "onPointerUp", () => {
                    ag(this.editor), this.complete();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
                w(this, "onInterrupt", () => {
                    this.parent.transition("idle");
                });
            }
            complete() {
                this.parent.transition("idle");
            }
        }
        w(NI, "id", "pointing_canvas");
        class FI extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "onEnter", (n) => {
                    (this.info = n),
                        this.parent.setCurrentToolIdMask(n.onInteractionEnd);
                    const r = this.editor.getSelectedShapes()[0];
                    r && (this.updateCursor(r), this.editor.setCroppingShape(r.id));
                });
                w(this, "onExit", () => {
                    this.editor.updateInstanceState(
                        {cursor: {type: "default", rotation: 0}},
                        {ephemeral: !0}
                    ),
                        this.parent.setCurrentToolIdMask(void 0);
                });
                w(this, "onPointerMove", () => {
                    this.editor.inputs.isDragging &&
                    this.parent.transition("cropping", {
                        ...this.info,
                        onInteractionEnd: this.info.onInteractionEnd,
                    });
                });
                w(this, "onPointerUp", () => {
                    this.info.onInteractionEnd
                        ? this.editor.setCurrentTool(
                            this.info.onInteractionEnd,
                            this.info
                        )
                        : (this.editor.setCroppingShape(null),
                            this.parent.transition("idle"));
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onComplete", () => {
                    this.cancel();
                });
                w(this, "onInterrupt", () => {
                    this.cancel();
                });
            }
            updateCursor(n) {
                const r = cc[this.info.handle];
                this.editor.updateInstanceState({
                    cursor: {type: r, rotation: n.rotation},
                });
            }
            cancel() {
                this.info.onInteractionEnd
                    ? this.editor.setCurrentTool(
                        this.info.onInteractionEnd,
                        this.info
                    )
                    : (this.editor.setCroppingShape(null),
                        this.parent.transition("idle"));
            }
        }
        w(FI, "id", "pointing_crop_handle");
        class BI extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "onEnter", (n) => {
                    this.info = n;
                    const r = n.shape.props[n.handle.id];
                    (r == null ? void 0 : r.type) === "binding" &&
                    this.editor.setHintingShapes([r.boundShapeId]),
                        this.editor.updateInstanceState(
                            {cursor: {type: "grabbing", rotation: 0}},
                            {ephemeral: !0}
                        );
                });
                w(this, "onExit", () => {
                    this.editor.setHintingShapes([]),
                        this.editor.updateInstanceState(
                            {cursor: {type: "default", rotation: 0}},
                            {ephemeral: !0}
                        );
                });
                w(this, "onPointerUp", () => {
                    this.parent.transition("idle", this.info);
                });
                w(this, "onPointerMove", () => {
                    this.editor.inputs.isDragging &&
                    this.parent.transition("dragging_handle", this.info);
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onComplete", () => {
                    this.cancel();
                });
                w(this, "onInterrupt", () => {
                    this.cancel();
                });
            }
            cancel() {
                this.parent.transition("idle");
            }
        }
        w(BI, "id", "pointing_handle");
        class UI extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "onEnter", (n) => {
                    this.parent.setCurrentToolIdMask(n.onInteractionEnd),
                        (this.info = n),
                        this.updateCursor();
                });
                w(this, "onExit", () => {
                    this.parent.setCurrentToolIdMask(void 0),
                        this.editor.updateInstanceState(
                            {cursor: {type: "default", rotation: 0}},
                            {ephemeral: !0}
                        );
                });
                w(this, "onPointerMove", () => {
                    const {isDragging: n} = this.editor.inputs;
                    n && this.parent.transition("rotating", this.info);
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onComplete", () => {
                    this.cancel();
                });
                w(this, "onInterrupt", () => {
                    this.cancel();
                });
            }
            updateCursor() {
                const n = this.editor.getSelectionRotation();
                this.editor.updateInstanceState({
                    cursor: {type: cc[this.info.handle], rotation: n},
                });
            }
            complete() {
                this.info.onInteractionEnd
                    ? this.editor.setCurrentTool(this.info.onInteractionEnd, {})
                    : this.parent.transition("idle");
            }
            cancel() {
                this.info.onInteractionEnd
                    ? this.editor.setCurrentTool(this.info.onInteractionEnd, {})
                    : this.parent.transition("idle");
            }
        }
        w(UI, "id", "pointing_rotate_handle");
        class HI extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "onEnter", (n) => {
                    this.info = n;
                });
                w(this, "onPointerUp", (n) => {
                    ag(this.editor), this.parent.transition("idle", n);
                });
                w(this, "onPointerMove", (n) => {
                    if (this.editor.inputs.isDragging) {
                        if (this.editor.getInstanceState().isReadonly) return;
                        this.parent.transition("translating", n);
                    }
                });
                w(this, "onDoubleClick", (n) => {
                    var i, a;
                    const r = this.editor.getHoveredShape(),
                        o =
                            r && !this.editor.isShapeOfType(r, "group")
                                ? r
                                : this.editor.getShapeAtPoint(
                                    this.editor.inputs.currentPagePoint,
                                    {hitInside: !0, margin: 0, renderingOnly: !0}
                                );
                    if (o) {
                        this.parent.transition("idle"),
                        (a = (i = this.parent).onDoubleClick) == null ||
                        a.call(i, {
                            ...n,
                            target: "shape",
                            shape: this.editor.getShape(o),
                        });
                        return;
                    }
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onComplete", () => {
                    this.cancel();
                });
                w(this, "onInterrupt", () => {
                    this.cancel();
                });
            }
            cancel() {
                this.parent.transition("idle");
            }
        }
        w(HI, "id", "pointing_selection");
        class VI extends ie {
            constructor() {
                super(...arguments);
                w(this, "hitShape", {});
                w(this, "hitShapeForPointerUp", {});
                w(this, "didSelectOnEnter", !1);
                w(this, "onEnter", (n) => {
                    const r = this.editor.getSelectedShapeIds(),
                        o = this.editor.getSelectionRotatedPageBounds(),
                        i = this.editor.getFocusedGroupId(),
                        {
                            inputs: {currentPagePoint: a, shiftKey: s, altKey: l},
                        } = this.editor;
                    this.hitShape = n.shape;
                    const c = this.editor.getOutermostSelectableShape(n.shape);
                    if (
                        this.editor.getShapeUtil(n.shape).onClick ||
                        c.id === i ||
                        r.includes(c.id) ||
                        this.editor.isAncestorSelected(c.id) ||
                        (r.length > 1 && o != null && o.containsPoint(a))
                    ) {
                        (this.didSelectOnEnter = !1),
                            (this.hitShapeForPointerUp = c);
                        return;
                    }
                    (this.didSelectOnEnter = !0),
                        s && !l
                            ? (this.editor.cancelDoubleClick(),
                            r.includes(c.id) ||
                            (this.editor.mark("shift selecting shape"),
                                this.editor.setSelectedShapes([...r, c.id])))
                            : (this.editor.mark("selecting shape"),
                                this.editor.setSelectedShapes([c.id]));
                });
                w(this, "onPointerUp", (n) => {
                    var d;
                    const r = this.editor.getSelectedShapeIds(),
                        o = this.editor.getFocusedGroupId(),
                        i = this.editor.getZoomLevel(),
                        {
                            inputs: {currentPagePoint: a, shiftKey: s},
                        } = this.editor,
                        l =
                            this.editor.getShapeAtPoint(a, {
                                margin: Xr / i,
                                hitInside: !0,
                                renderingOnly: !0,
                            }) ?? this.hitShape,
                        c = l
                            ? this.editor.getOutermostSelectableShape(l)
                            : this.hitShapeForPointerUp;
                    if (c) {
                        const u = this.editor.getShapeUtil(c);
                        if (u.onClick) {
                            const h =
                                (d = u.onClick) == null ? void 0 : d.call(u, c);
                            if (h) {
                                this.editor.mark("shape on click"),
                                    this.editor.updateShapes([h]),
                                    this.parent.transition("idle", n);
                                return;
                            }
                        }
                        if (c.id === o) {
                            r.length > 0
                                ? (this.editor.mark("clearing shape ids"),
                                    this.editor.setSelectedShapes([]))
                                : this.editor.popFocusedGroupId(),
                                this.parent.transition("idle", n);
                            return;
                        }
                    }
                    if (!this.didSelectOnEnter) {
                        const u = this.editor.getOutermostSelectableShape(
                            l,
                            (h) => !r.includes(h.id)
                        );
                        if (r.includes(u.id))
                            if (s)
                                this.editor.mark("deselecting on pointer up"),
                                    this.editor.deselect(c);
                            else if (r.includes(c.id)) {
                                if (
                                    r.length === 1 &&
                                    (this.editor.isShapeOfType(c, "geo") ||
                                        this.editor.isShapeOfType(c, "arrow"))
                                ) {
                                    const p =
                                        this.editor.getShapeGeometry(c).children[1];
                                    if (p) {
                                        const m = this.editor.getPointInShapeSpace(
                                            c,
                                            a
                                        );
                                        if (
                                            p.bounds.containsPoint(m, 0) &&
                                            p.hitTestPoint(m)
                                        ) {
                                            this.editor.batch(() => {
                                                this.editor.mark(
                                                    "editing on pointer up"
                                                ),
                                                    this.editor.select(c.id);
                                                const f =
                                                    this.editor.getShapeUtil(c);
                                                (this.editor.getInstanceState()
                                                        .isReadonly &&
                                                    !f.canEditInReadOnly(c)) ||
                                                (this.editor.setEditingShape(
                                                    c.id
                                                ),
                                                    this.editor.setCurrentTool(
                                                        "select.editing_shape"
                                                    ));
                                            });
                                            return;
                                        }
                                    }
                                }
                                this.editor.mark("selecting on pointer up"),
                                    this.editor.select(c.id);
                            } else
                                this.editor.mark("selecting on pointer up"),
                                    this.editor.select(c);
                        else if (s) {
                            const h = this.editor.getShapeAncestors(u);
                            this.editor.mark("shift deselecting on pointer up"),
                                this.editor.setSelectedShapes([
                                    ...this.editor
                                        .getSelectedShapeIds()
                                        .filter((p) => !h.find((m) => m.id === p)),
                                    u.id,
                                ]);
                        } else
                            this.editor.mark("selecting on pointer up"),
                                this.editor.setSelectedShapes([u.id]);
                    }
                    this.parent.transition("idle", n);
                });
                w(this, "onPointerMove", (n) => {
                    if (this.editor.inputs.isDragging) {
                        if (this.editor.getInstanceState().isReadonly) return;
                        this.parent.transition("translating", n);
                    }
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onComplete", () => {
                    this.cancel();
                });
                w(this, "onInterrupt", () => {
                    this.cancel();
                });
            }
            cancel() {
                this.parent.transition("idle");
            }
        }
        w(VI, "id", "pointing_shape");
        class KI extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "markId", "");
                w(this, "didHoldCommand", !1);
                w(this, "creationCursorOffset", {x: 0, y: 0});
                w(this, "snapshot", {});
                w(this, "onEnter", (n) => {
                    const {
                        isCreating: r = !1,
                        creationCursorOffset: o = {x: 0, y: 0},
                    } = n;
                    (this.info = n),
                        (this.didHoldCommand = !1),
                        this.parent.setCurrentToolIdMask(n.onInteractionEnd),
                        (this.creationCursorOffset = o),
                        (this.snapshot = this._createSnapshot()),
                        r
                            ? ((this.markId = `creating:${
                                this.editor.getOnlySelectedShape().id
                            }`),
                                this.editor.updateInstanceState(
                                    {cursor: {type: "cross", rotation: 0}},
                                    {ephemeral: !0}
                                ))
                            : ((this.markId = "starting resizing"),
                                this.editor.mark(this.markId)),
                        this.handleResizeStart(),
                        this.updateShapes();
                });
                w(this, "onTick", () => {
                    w1(this.editor);
                });
                w(this, "onPointerMove", () => {
                    this.updateShapes();
                });
                w(this, "onKeyDown", () => {
                    this.updateShapes();
                });
                w(this, "onKeyUp", () => {
                    this.updateShapes();
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onExit", () => {
                    this.parent.setCurrentToolIdMask(void 0),
                        this.editor.updateInstanceState(
                            {cursor: {type: "default", rotation: 0}},
                            {ephemeral: !0}
                        ),
                        this.editor.snaps.clear();
                });
                w(this, "_createSnapshot", () => {
                    const n = this.editor.getSelectedShapeIds(),
                        r = this.editor.getSelectionRotation(),
                        {
                            inputs: {originPagePoint: o},
                        } = this.editor,
                        i = this.editor.getSelectionRotatedPageBounds(),
                        a = E.RotWith(
                            i.getHandlePoint(this.info.handle),
                            i.point,
                            r
                        ),
                        s = E.Sub(o, a),
                        l = new Map(),
                        c = [];
                    n.forEach((u) => {
                        const h = this.editor.getShape(u);
                        if (h) {
                            if (
                                (h.type === "frame" &&
                                c.push({
                                    id: u,
                                    children: pe(
                                        this.editor
                                            .getSortedChildIdsForParent(h)
                                            .map((p) => this.editor.getShape(p))
                                    ),
                                }),
                                    l.set(h.id, this._createShapeSnapshot(h)),
                                this.editor.isShapeOfType(h, "frame") &&
                                n.length === 1)
                            )
                                return;
                            this.editor.visitDescendants(h.id, (p) => {
                                const m = this.editor.getShape(p);
                                if (
                                    m &&
                                    (l.set(m.id, this._createShapeSnapshot(m)),
                                        this.editor.isShapeOfType(m, "frame"))
                                )
                                    return !1;
                            });
                        }
                    });
                    const d = ![...l.values()].some(
                        (u) => !FC(u.pageRotation, r) || u.isAspectRatioLocked
                    );
                    return {
                        shapeSnapshots: l,
                        selectionBounds: i,
                        cursorHandleOffset: s,
                        selectionRotation: r,
                        selectedShapeIds: n,
                        canShapesDeform: d,
                        initialSelectionPageBounds:
                            this.editor.getSelectionPageBounds(),
                        frames: c,
                    };
                });
                w(this, "_createShapeSnapshot", (n) => {
                    const r = this.editor.getShapePageTransform(n),
                        o = this.editor.getShapeUtil(n);
                    return {
                        shape: n,
                        bounds: this.editor.getShapeGeometry(n).bounds,
                        pageTransform: r,
                        pageRotation: re.Decompose(r).rotation,
                        isAspectRatioLocked: o.isAspectRatioLocked(n),
                    };
                });
            }
            cancel() {
                this.editor.bailToMark(this.markId),
                    this.info.onInteractionEnd
                        ? this.editor.setCurrentTool(this.info.onInteractionEnd, {})
                        : this.parent.transition("idle");
            }
            complete() {
                var n, r;
                if (
                    (this.handleResizeEnd(),
                    this.info.isCreating && this.info.onCreate)
                ) {
                    (r = (n = this.info).onCreate) == null ||
                    r.call(n, this.editor.getOnlySelectedShape());
                    return;
                }
                if (
                    this.editor.getInstanceState().isToolLocked &&
                    this.info.onInteractionEnd
                ) {
                    this.editor.setCurrentTool(this.info.onInteractionEnd, {});
                    return;
                }
                this.parent.transition("idle");
            }
            handleResizeStart() {
                const {shapeSnapshots: n} = this.snapshot,
                    r = [];
                n.forEach(({shape: o}) => {
                    var s;
                    const i = this.editor.getShapeUtil(o),
                        a = (s = i.onResizeStart) == null ? void 0 : s.call(i, o);
                    a && r.push(a);
                }),
                r.length > 0 && this.editor.updateShapes(r);
            }
            handleResizeEnd() {
                const {shapeSnapshots: n} = this.snapshot,
                    r = [];
                n.forEach(({shape: o}) => {
                    var l;
                    const i = this.editor.getShape(o.id),
                        a = this.editor.getShapeUtil(o),
                        s = (l = a.onResizeEnd) == null ? void 0 : l.call(a, o, i);
                    s && r.push(s);
                }),
                r.length > 0 && this.editor.updateShapes(r);
            }
            updateShapes() {
                const {altKey: n, shiftKey: r} = this.editor.inputs,
                    {
                        frames: o,
                        shapeSnapshots: i,
                        selectionBounds: a,
                        cursorHandleOffset: s,
                        selectedShapeIds: l,
                        selectionRotation: c,
                        canShapesDeform: d,
                    } = this.snapshot,
                    u = r || !d,
                    {ctrlKey: h} = this.editor.inputs,
                    p = this.editor.inputs.currentPagePoint
                        .clone()
                        .sub(s)
                        .sub(this.creationCursorOffset),
                    m = this.editor.inputs.originPagePoint.clone().sub(s);
                if (this.editor.getInstanceState().isGridMode && !h) {
                    const {gridSize: I} = this.editor.getDocumentSettings();
                    p.snapToGrid(I);
                }
                const f = this.info.handle,
                    g = WI(f, Math.PI);
                if (
                    (this.editor.snaps.clear(),
                    (this.editor.user.getIsSnapMode() ? !h : h) && c % qe === 0)
                ) {
                    const {nudge: I} = this.editor.snaps.snapResize({
                        dragDelta: E.Sub(p, m),
                        initialSelectionPageBounds:
                        this.snapshot.initialSelectionPageBounds,
                        handle: WI(f, c),
                        isAspectRatioLocked: u,
                        isResizingFromCenter: n,
                    });
                    p.add(I);
                }
                const x = E.RotWith(n ? a.center : a.getHandlePoint(g), a.point, c),
                    S = E.Sub(p, x).rot(-c),
                    _ = E.Sub(m, x).rot(-c),
                    k = E.DivV(S, _);
                Number.isFinite(k.x) || (k.x = 1),
                Number.isFinite(k.y) || (k.y = 1);
                const C = f === "top" || f === "bottom",
                    P = f === "left" || f === "right";
                u
                    ? P
                        ? (k.y = Math.abs(k.x))
                        : C
                            ? (k.x = Math.abs(k.y))
                            : Math.abs(k.x) > Math.abs(k.y)
                                ? (k.y = Math.abs(k.x) * (k.y < 0 ? -1 : 1))
                                : (k.x = Math.abs(k.y) * (k.x < 0 ? -1 : 1))
                    : (C && (k.x = 1), P && (k.y = 1)),
                this.info.isCreating ||
                this.updateCursor({
                    dragHandle: f,
                    isFlippedX: k.x < 0,
                    isFlippedY: k.y < 0,
                    rotation: c,
                });
                for (const I of i.keys()) {
                    const $ = i.get(I);
                    this.editor.resizeShape(I, k, {
                        initialShape: $.shape,
                        initialBounds: $.bounds,
                        initialPageTransform: $.pageTransform,
                        dragHandle: f,
                        mode:
                            l.length === 1 && I === l[0]
                                ? "resize_bounds"
                                : "scale_shape",
                        scaleOrigin: x,
                        scaleAxisRotation: c,
                    });
                }
                if (this.editor.inputs.ctrlKey) {
                    this.didHoldCommand = !0;
                    for (const {id: I, children: $} of o) {
                        if (!$.length) continue;
                        const T = i.get(I).shape,
                            R = this.editor.getShape(I);
                        if (!(T && R)) continue;
                        const D = R.x - T.x,
                            j = R.y - T.y,
                            z = new E(D, j).rot(-T.rotation);
                        if (z.x !== 0 || z.y !== 0)
                            for (const O of $)
                                this.editor.updateShape({
                                    id: O.id,
                                    type: O.type,
                                    x: O.x - z.x,
                                    y: O.y - z.y,
                                });
                    }
                } else if (this.didHoldCommand) {
                    this.didHoldCommand = !1;
                    for (const {children: I} of o)
                        if (I.length)
                            for (const $ of I)
                                this.editor.updateShape({
                                    id: $.id,
                                    type: $.type,
                                    x: $.x,
                                    y: $.y,
                                });
                }
            }
            updateCursor({
                             dragHandle: n,
                             isFlippedX: r,
                             isFlippedY: o,
                             rotation: i,
                         }) {
                const a = {...this.editor.getInstanceState().cursor};
                switch (n) {
                    case "top_left":
                    case "bottom_right": {
                        (a.type = "nwse-resize"),
                        r !== o && (a.type = "nesw-resize");
                        break;
                    }
                    case "top_right":
                    case "bottom_left": {
                        (a.type = "nesw-resize"),
                        r !== o && (a.type = "nwse-resize");
                        break;
                    }
                }
                (a.rotation = i), this.editor.setCursor(a);
            }
        }
        w(KI, "id", "resizing");
        const Gw = [
            "top",
            "top_right",
            "right",
            "bottom_right",
            "bottom",
            "bottom_left",
            "left",
            "top_left",
        ];
        function WI(e, t) {
            t = t % Fe;
            const n = Math.round(t / (Oe / 4)),
                r = Gw.indexOf(e);
            return Gw[(r + n) % Gw.length];
        }
        const YI = Math.PI / 180;
        class GI extends ie {
            constructor() {
                super(...arguments);
                w(this, "snapshot", {});
                w(this, "info", {});
                w(this, "markId", "");
                w(this, "onEnter", (n) => {
                    (this.info = n),
                        this.parent.setCurrentToolIdMask(n.onInteractionEnd),
                        (this.markId = "rotate start"),
                        this.editor.mark(this.markId);
                    const r = iE({editor: this.editor});
                    if (!r) return this.parent.transition("idle", this.info);
                    (this.snapshot = r), this.handleStart();
                });
                w(this, "onExit", () => {
                    this.editor.setCursor({type: "default", rotation: 0}),
                        this.parent.setCurrentToolIdMask(void 0),
                        (this.snapshot = {});
                });
                w(this, "onPointerMove", () => {
                    this.update();
                });
                w(this, "onKeyDown", () => {
                    this.update();
                });
                w(this, "onKeyUp", () => {
                    this.update();
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "update", () => {
                    const n = this._getRotationFromPointerPosition({
                        snapToNearestDegree: !1,
                    });
                    Xf({
                        editor: this.editor,
                        delta: n,
                        snapshot: this.snapshot,
                        stage: "update",
                    }),
                        this.editor.updateInstanceState({
                            cursor: {
                                type: cc[this.info.handle],
                                rotation:
                                    n + this.snapshot.initialSelectionRotation,
                            },
                        });
                });
                w(this, "cancel", () => {
                    this.editor.bailToMark(this.markId),
                        this.info.onInteractionEnd
                            ? this.editor.setCurrentTool(
                                this.info.onInteractionEnd,
                                this.info
                            )
                            : this.parent.transition("idle", this.info);
                });
                w(this, "complete", () => {
                    Xf({
                        editor: this.editor,
                        delta: this._getRotationFromPointerPosition({
                            snapToNearestDegree: !0,
                        }),
                        snapshot: this.snapshot,
                        stage: "end",
                    }),
                        this.info.onInteractionEnd
                            ? this.editor.setCurrentTool(
                                this.info.onInteractionEnd,
                                this.info
                            )
                            : this.parent.transition("idle", this.info);
                });
            }
            handleStart() {
                const n = this._getRotationFromPointerPosition({
                    snapToNearestDegree: !1,
                });
                Xf({
                    editor: this.editor,
                    delta: this._getRotationFromPointerPosition({
                        snapToNearestDegree: !1,
                    }),
                    snapshot: this.snapshot,
                    stage: "start",
                }),
                    this.editor.updateInstanceState({
                        cursor: {
                            type: cc[this.info.handle],
                            rotation: n + this.snapshot.initialSelectionRotation,
                        },
                    });
            }
            _getRotationFromPointerPosition({snapToNearestDegree: n}) {
                const r = this.editor.getSelectionRotation(),
                    o = this.editor.getSelectionRotatedPageBounds(),
                    {
                        inputs: {shiftKey: i, currentPagePoint: a},
                    } = this.editor,
                    {initialCursorAngle: s, initialSelectionRotation: l} =
                        this.snapshot;
                if (!o) return l;
                const d = o.center.clone().rotWith(o.point, r).angle(a) - s;
                let u = l + d;
                if (i) u = $f(u, 24);
                else if (
                    n &&
                    ((u = Math.round(u / YI) * YI),
                        this.editor.getInstanceState().isCoarsePointer)
                ) {
                    const h = $f(u, 4),
                        p = su(u, h);
                    Math.abs(p) < pj(5) && (u = h);
                }
                return u - l;
            }
        }
        w(GI, "id", "rotating");
        class XI extends ie {
            constructor() {
                super(...arguments);
                w(this, "hits", new Set());
                w(this, "size", 0);
                w(this, "scribbleId", "id");
                w(this, "initialSelectedShapeIds", new Set());
                w(this, "newlySelectedShapeIds", new Set());
                w(this, "onEnter", () => {
                    (this.initialSelectedShapeIds = new Set(
                        this.editor.inputs.shiftKey
                            ? this.editor.getSelectedShapeIds()
                            : []
                    )),
                        (this.newlySelectedShapeIds = new Set()),
                        (this.size = 0),
                        this.hits.clear();
                    const n = this.editor.scribbles.addScribble({
                        color: "selection-stroke",
                        opacity: 0.32,
                        size: 12,
                    });
                    (this.scribbleId = n.id),
                        this.updateScribbleSelection(!0),
                        requestAnimationFrame(() => {
                            this.editor.updateInstanceState({brush: null});
                        });
                });
                w(this, "onExit", () => {
                    this.editor.scribbles.stop(this.scribbleId);
                });
                w(this, "onPointerMove", () => {
                    this.updateScribbleSelection(!0);
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onKeyDown", () => {
                    this.updateScribbleSelection(!1);
                });
                w(this, "onKeyUp", () => {
                    this.editor.inputs.altKey
                        ? this.updateScribbleSelection(!1)
                        : this.parent.transition("brushing");
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
                w(this, "pushPointToScribble", () => {
                    const {x: n, y: r} = this.editor.inputs.currentPagePoint;
                    this.editor.scribbles.addPoint(this.scribbleId, n, r);
                });
            }
            updateScribbleSelection(n) {
                const r = this.editor.getZoomLevel(),
                    o = this.editor.getCurrentPageShapes(),
                    {
                        inputs: {
                            shiftKey: i,
                            originPagePoint: a,
                            previousPagePoint: s,
                            currentPagePoint: l,
                        },
                    } = this.editor,
                    {newlySelectedShapeIds: c, initialSelectedShapeIds: d} = this;
                n && this.pushPointToScribble();
                const u = o;
                let h, p, m, f;
                for (let g = 0, b = u.length; g < b; g++)
                    if (
                        ((h = u[g]),
                            (p = this.editor.getShapeGeometry(h)),
                            !(
                                this.editor.isShapeOfType(h, "group") ||
                                c.has(h.id) ||
                                this.editor.isShapeOrAncestorLocked(h)
                            ))
                    ) {
                        if (this.editor.isShapeOfType(h, "frame")) {
                            const x = this.editor.getPointInShapeSpace(h, a);
                            if (p.bounds.containsPoint(x)) continue;
                        }
                        if (
                            ((m = this.editor.getPointInShapeSpace(h, s)),
                                (f = this.editor.getPointInShapeSpace(h, l)),
                                p.hitTestLineSegment(m, f, Xr / r))
                        ) {
                            const x = this.editor.getOutermostSelectableShape(h),
                                S = this.editor.getShapeMask(x.id);
                            if (S && V4(s, l, S) !== null && !_o(l, S)) continue;
                            c.add(x.id);
                        }
                    }
                this.editor.setSelectedShapes(
                    [...new Set(i ? [...c, ...d] : [...c])],
                    {squashing: !0}
                );
            }
            complete() {
                this.parent.transition("idle");
            }
            cancel() {
                this.editor.setSelectedShapes([...this.initialSelectedShapeIds], {
                    squashing: !0,
                }),
                    this.parent.transition("idle");
            }
        }
        w(XI, "id", "scribble_brushing");
        const qI = 100;
        class OJ {
            constructor(t) {
                w(this, "prevDroppingShapeId", null);
                w(this, "droppingNodeTimer", null);
                w(this, "first", !0);
                w(this, "dispose", () => {
                    this.clear();
                });
                (this.editor = t), t.disposables.add(this.dispose);
            }
            updateDroppingNode(t, n) {
                var r;
                this.first &&
                ((this.prevDroppingShapeId =
                    ((r = this.editor.getDroppingOverShape(
                        this.editor.inputs.originPagePoint,
                        t
                    )) == null
                        ? void 0
                        : r.id) ?? null),
                    (this.first = !1)),
                    this.droppingNodeTimer === null
                        ? this.setDragTimer(t, qI * 10, n)
                        : this.editor.inputs.pointerVelocity.len() > 0.5 &&
                        (clearInterval(this.droppingNodeTimer),
                            this.setDragTimer(t, qI, n));
            }
            setDragTimer(t, n, r) {
                this.droppingNodeTimer = setTimeout(() => {
                    this.editor.batch(() => {
                        this.handleDrag(this.editor.inputs.currentPagePoint, t, r);
                    }),
                        (this.droppingNodeTimer = null);
                }, n);
            }
            handleDrag(t, n, r) {
                var l, c, d, u, h;
                n = pe(n.map((p) => this.editor.getShape(p.id)));
                const o =
                    ((l = this.editor.getDroppingOverShape(t, n)) == null
                        ? void 0
                        : l.id) ?? null;
                if (o === this.prevDroppingShapeId) return;
                const {prevDroppingShapeId: i} = this,
                    a = i && this.editor.getShape(i),
                    s = o && this.editor.getShape(o);
                if (
                    (a &&
                    ((d = (c = this.editor.getShapeUtil(a)).onDragShapesOut) ==
                        null ||
                        d.call(c, a, n)),
                        s)
                ) {
                    const p =
                        (h = (u = this.editor.getShapeUtil(s)).onDragShapesOver) ==
                        null
                            ? void 0
                            : h.call(u, s, n);
                    p && p.shouldHint && this.editor.setHintingShapes([s.id]);
                } else this.editor.setHintingShapes([]);
                r == null || r(), (this.prevDroppingShapeId = o);
            }
            dropShapes(t) {
                var r, o;
                const {prevDroppingShapeId: n} = this;
                if ((this.handleDrag(this.editor.inputs.currentPagePoint, t), n)) {
                    const i = this.editor.getShape(n);
                    if (!i) return;
                    (o = (r = this.editor.getShapeUtil(i)).onDropShapesOver) ==
                    null || o.call(r, i, t);
                }
            }
            clear() {
                (this.prevDroppingShapeId = null),
                this.droppingNodeTimer !== null &&
                clearInterval(this.droppingNodeTimer),
                    (this.droppingNodeTimer = null),
                    this.editor.setHintingShapes([]),
                    (this.first = !0);
            }
        }
        class ZI extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "selectionSnapshot", {});
                w(this, "snapshot", {});
                w(this, "markId", "");
                w(this, "isCloning", !1);
                w(this, "isCreating", !1);
                w(this, "onCreate", () => {});
                w(this, "dragAndDropManager", new OJ(this.editor));
                w(this, "onEnter", (n) => {
                    const {isCreating: r = !1, onCreate: o = () => {}} = n;
                    if (
                        ((this.info = n),
                            this.parent.setCurrentToolIdMask(n.onInteractionEnd),
                            (this.isCreating = r),
                            (this.onCreate = o),
                            r
                                ? (this.markId = `creating:${
                                    this.editor.getOnlySelectedShape().id
                                }`)
                                : ((this.markId = "translating"),
                                    this.editor.mark(this.markId)),
                            (this.isCloning = !1),
                            (this.info = n),
                            this.editor.setCursor({type: "move", rotation: 0}),
                            (this.selectionSnapshot = QI(this.editor)),
                        !this.isCreating && this.editor.inputs.altKey)
                    ) {
                        this.startCloning();
                        return;
                    }
                    (this.snapshot = this.selectionSnapshot),
                        this.handleStart(),
                        this.updateShapes();
                });
                w(this, "onExit", () => {
                    this.parent.setCurrentToolIdMask(void 0),
                        (this.selectionSnapshot = {}),
                        (this.snapshot = {}),
                        this.editor.snaps.clear(),
                        this.editor.updateInstanceState(
                            {cursor: {type: "default", rotation: 0}},
                            {ephemeral: !0}
                        ),
                        this.dragAndDropManager.clear();
                });
                w(this, "onTick", () => {
                    this.dragAndDropManager.updateDroppingNode(
                        this.snapshot.movingShapes,
                        this.updateParentTransforms
                    ),
                        w1(this.editor);
                });
                w(this, "onPointerMove", () => {
                    this.updateShapes();
                });
                w(this, "onKeyDown", () => {
                    if (this.editor.inputs.altKey && !this.isCloning) {
                        this.startCloning();
                        return;
                    }
                    this.updateShapes();
                });
                w(this, "onKeyUp", () => {
                    if (!this.editor.inputs.altKey && this.isCloning) {
                        this.stopCloning();
                        return;
                    }
                    this.updateShapes();
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onComplete", () => {
                    this.complete();
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
                w(this, "updateParentTransforms", () => {
                    const {
                        editor: n,
                        snapshot: {shapeSnapshots: r},
                    } = this;
                    r.forEach((o) => {
                        const i = n.getShape(o.shape.id);
                        if (!i) return null;
                        const a = Vn(i.parentId)
                            ? null
                            : re.Inverse(n.getShapePageTransform(i.parentId));
                        o.parentTransform = a;
                    });
                });
            }
            startCloning() {
                this.isCreating ||
                ((this.isCloning = !0),
                    this.reset(),
                    (this.markId = "translating"),
                    this.editor.mark(this.markId),
                    this.editor.duplicateShapes(
                        Array.from(this.editor.getSelectedShapeIds())
                    ),
                    (this.snapshot = QI(this.editor)),
                    this.handleStart(),
                    this.updateShapes());
            }
            stopCloning() {
                (this.isCloning = !1),
                    (this.snapshot = this.selectionSnapshot),
                    this.reset(),
                    (this.markId = "translating"),
                    this.editor.mark(this.markId),
                    this.updateShapes();
            }
            reset() {
                this.editor.bailToMark(this.markId);
            }
            complete() {
                var n;
                this.updateShapes(),
                    this.dragAndDropManager.dropShapes(this.snapshot.movingShapes),
                    this.handleEnd(),
                    this.editor.getInstanceState().isToolLocked &&
                    this.info.onInteractionEnd
                        ? this.editor.setCurrentTool(this.info.onInteractionEnd)
                        : this.isCreating
                            ? (n = this.onCreate) == null ||
                            n.call(this, this.editor.getOnlySelectedShape())
                            : this.parent.transition("idle");
            }
            cancel() {
                this.reset(),
                    this.info.onInteractionEnd
                        ? this.editor.setCurrentTool(this.info.onInteractionEnd)
                        : this.parent.transition("idle", this.info);
            }
            handleStart() {
                const {movingShapes: n} = this.snapshot,
                    r = [];
                n.forEach((o) => {
                    var s;
                    const i = this.editor.getShapeUtil(o),
                        a =
                            (s = i.onTranslateStart) == null
                                ? void 0
                                : s.call(i, o);
                    a && r.push(a);
                }),
                r.length > 0 && this.editor.updateShapes(r),
                    this.editor.setHoveredShape(null);
            }
            handleEnd() {
                const {movingShapes: n} = this.snapshot,
                    r = [];
                n.forEach((o) => {
                    var l;
                    const i = this.editor.getShape(o.id),
                        a = this.editor.getShapeUtil(o),
                        s =
                            (l = a.onTranslateEnd) == null
                                ? void 0
                                : l.call(a, o, i);
                    s && r.push(s);
                }),
                r.length > 0 && this.editor.updateShapes(r);
            }
            handleChange() {
                const {movingShapes: n} = this.snapshot,
                    r = [];
                n.forEach((o) => {
                    var l;
                    const i = this.editor.getShape(o.id),
                        a = this.editor.getShapeUtil(o),
                        s = (l = a.onTranslate) == null ? void 0 : l.call(a, o, i);
                    s && r.push(s);
                }),
                r.length > 0 && this.editor.updateShapes(r);
            }
            updateShapes() {
                const {snapshot: n} = this;
                this.dragAndDropManager.updateDroppingNode(
                    n.movingShapes,
                    this.updateParentTransforms
                ),
                    DJ({
                        editor: this.editor,
                        shapeSnapshots: n.shapeSnapshots,
                        averagePagePoint: n.averagePagePoint,
                        initialSelectionPageBounds: n.initialPageBounds,
                        initialSelectionSnapPoints: n.initialSnapPoints,
                    }),
                    this.handleChange();
            }
        }
        w(ZI, "id", "translating");
        function QI(e) {
            const t = [],
                n = [],
                r = pe(
                    e.getSelectedShapeIds().map((i) => {
                        const a = e.getShape(i);
                        if (!a) return null;
                        t.push(a);
                        const s = e.getShapePageTransform(i).point();
                        if (!s) return null;
                        n.push(s);
                        const l = ai.isId(a.parentId)
                            ? null
                            : re.Inverse(e.getShapePageTransform(a.parentId));
                        return {shape: a, pagePoint: s, parentTransform: l};
                    })
                );
            let o = [];
            if (e.getSelectedShapeIds().length === 1)
                o = e.snaps.getSnapPointsCache().get(e.getSelectedShapeIds()[0]);
            else {
                const i = e.getSelectionPageBounds();
                i &&
                (o = i.snapPoints.map((a, s) => ({
                    id: "selection:" + s,
                    x: a.x,
                    y: a.y,
                })));
            }
            return {
                averagePagePoint: E.Average(n),
                movingShapes: t,
                shapeSnapshots: r,
                initialPageBounds: e.getSelectionPageBounds(),
                initialSnapPoints: o,
            };
        }
        function DJ({
                        editor: e,
                        shapeSnapshots: t,
                        averagePagePoint: n,
                        initialSelectionPageBounds: r,
                        initialSelectionSnapPoints: o,
                    }) {
            const {inputs: i} = e,
                a = e.getInstanceState().isGridMode,
                s = e.getDocumentSettings().gridSize,
                l = E.Sub(i.currentPagePoint, i.originPagePoint),
                c = e.inputs.shiftKey
                    ? Math.abs(l.x) < Math.abs(l.y)
                        ? "x"
                        : "y"
                    : null;
            if (
                (c === "x" ? (l.x = 0) : c === "y" && (l.y = 0),
                    e.snaps.clear(),
                (e.user.getIsSnapMode() ? !i.ctrlKey : i.ctrlKey) &&
                e.inputs.pointerVelocity.len() < 0.5)
            ) {
                const {nudge: p} = e.snaps.snapTranslate({
                    dragDelta: l,
                    initialSelectionPageBounds: r,
                    lockedAxis: c,
                    initialSelectionSnapPoints: o,
                });
                l.add(p);
            }
            const u = E.Add(n, l);
            a && !i.ctrlKey && u.snapToGrid(s);
            const h = E.Sub(u, n);
            e.updateShapes(
                pe(
                    t.map(({shape: p, pagePoint: m, parentTransform: f}) => {
                        const g = E.Add(m, h),
                            b = f ? re.applyToPoint(f, g) : g;
                        return {id: p.id, type: p.type, x: b.x, y: b.y};
                    })
                ),
                {squashing: !0}
            );
        }
        class sg extends ie {
            constructor() {
                super(...arguments);
                w(this, "onExit", () => {
                    this.editor.getCurrentPageState().editingShapeId &&
                    this.editor.setEditingShape(null);
                });
            }
        }
        w(sg, "id", "select"),
            w(sg, "initial", "idle"),
            w(sg, "children", () => [
                ig,
                RI,
                AJ,
                NI,
                VI,
                ZI,
                TI,
                XI,
                FI,
                HI,
                zI,
                DI,
                KI,
                GI,
                UI,
                BI,
                OI,
            ]);
        class JI extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "onEnter", (n) => {
                    this.info = n;
                });
                w(this, "onPointerDown", () => {
                    this.parent.transition("pointing", this.info);
                });
            }
        }
        w(JI, "id", "idle");
        class e8 extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "onEnter", (n) => {
                    this.info = n;
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onPointerMove", () => {
                    this.editor.inputs.isDragging &&
                    this.parent.transition("zoom_brushing", this.info);
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
            }
            complete() {
                const {currentScreenPoint: n} = this.editor.inputs;
                this.editor.inputs.altKey
                    ? this.editor.zoomOut(n, {duration: 220})
                    : this.editor.zoomIn(n, {duration: 220}),
                    this.parent.transition("idle", this.info);
            }
            cancel() {
                this.parent.transition("idle", this.info);
            }
        }
        w(e8, "id", "pointing");
        class t8 extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "zoomBrush", new ce());
                w(this, "onEnter", (n) => {
                    (this.info = n), this.update();
                });
                w(this, "onExit", () => {
                    this.editor.updateInstanceState({zoomBrush: null});
                });
                w(this, "onPointerMove", () => {
                    this.update();
                });
                w(this, "onPointerUp", () => {
                    this.complete();
                });
                w(this, "onCancel", () => {
                    this.cancel();
                });
            }
            update() {
                const {
                    inputs: {originPagePoint: n, currentPagePoint: r},
                } = this.editor;
                this.zoomBrush.setTo(ce.FromPoints([n, r])),
                    this.editor.updateInstanceState({
                        zoomBrush: this.zoomBrush.toJson(),
                    });
            }
            cancel() {
                this.parent.transition("idle", this.info);
            }
            complete() {
                const {zoomBrush: n} = this,
                    r = 8 / this.editor.getZoomLevel();
                if (n.width < r && n.height < r) {
                    const o = this.editor.inputs.currentScreenPoint;
                    this.editor.inputs.altKey
                        ? this.editor.zoomOut(o, {duration: 220})
                        : this.editor.zoomIn(o, {duration: 220});
                } else {
                    const o = this.editor.inputs.altKey
                        ? this.editor.getZoomLevel() / 2
                        : void 0;
                    this.editor.zoomToBounds(n, o, {duration: 220});
                }
                this.parent.transition("idle", this.info);
            }
        }
        w(t8, "id", "zoom_brushing");
        class lg extends ie {
            constructor() {
                super(...arguments);
                w(this, "info", {});
                w(this, "onEnter", (n) => {
                    (this.info = n),
                        this.parent.setCurrentToolIdMask(n.onInteractionEnd),
                        this.updateCursor();
                });
                w(this, "onExit", () => {
                    this.parent.setCurrentToolIdMask(void 0),
                        this.editor.updateInstanceState(
                            {
                                zoomBrush: null,
                                cursor: {type: "default", rotation: 0},
                            },
                            {ephemeral: !0}
                        ),
                        this.parent.setCurrentToolIdMask(void 0);
                });
                w(this, "onKeyDown", () => {
                    this.updateCursor();
                });
                w(this, "onKeyUp", (n) => {
                    this.updateCursor(), n.code === "KeyZ" && this.complete();
                });
                w(this, "onInterrupt", () => {
                    this.complete();
                });
            }
            complete() {
                this.info.onInteractionEnd &&
                this.info.onInteractionEnd !== "select"
                    ? this.editor.setCurrentTool(
                        this.info.onInteractionEnd,
                        this.info
                    )
                    : this.parent.transition("select");
            }
            updateCursor() {
                this.editor.inputs.altKey
                    ? this.editor.updateInstanceState(
                        {cursor: {type: "zoom-out", rotation: 0}},
                        {ephemeral: !0}
                    )
                    : this.editor.updateInstanceState(
                        {cursor: {type: "zoom-in", rotation: 0}},
                        {ephemeral: !0}
                    );
            }
        }
        w(lg, "id", "zoom"),
            w(lg, "initial", "idle"),
            w(lg, "children", () => [JI, t8, e8]);
        const LJ = [ng, rg, og, lg, sg];
        function J() {
            return (
                (J = Object.assign
                    ? Object.assign.bind()
                    : function (e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = arguments[t];
                            for (var r in n)
                                Object.prototype.hasOwnProperty.call(n, r) &&
                                (e[r] = n[r]);
                        }
                        return e;
                    }),
                    J.apply(this, arguments)
            );
        }
        function ae(e, t, {checkForDefaultPrevented: n = !0} = {}) {
            return function (o) {
                if ((e == null || e(o), n === !1 || !o.defaultPrevented))
                    return t == null ? void 0 : t(o);
            };
        }
        function jJ(e, t) {
            typeof e == "function" ? e(t) : e != null && (e.current = t);
        }
        function cg(...e) {
            return (t) => e.forEach((n) => jJ(n, t));
        }
        function Ze(...e) {
            return y.useCallback(cg(...e), e);
        }
        function Po(e, t = []) {
            let n = [];
            function r(i, a) {
                const s = y.createContext(a),
                    l = n.length;
                n = [...n, a];
                function c(u) {
                    const {scope: h, children: p, ...m} = u,
                        f = (h == null ? void 0 : h[e][l]) || s,
                        g = y.useMemo(() => m, Object.values(m));
                    return y.createElement(f.Provider, {value: g}, p);
                }
                function d(u, h) {
                    const p = (h == null ? void 0 : h[e][l]) || s,
                        m = y.useContext(p);
                    if (m) return m;
                    if (a !== void 0) return a;
                    throw new Error(`\`${u}\` must be used within \`${i}\``);
                }
                return (c.displayName = i + "Provider"), [c, d];
            }
            const o = () => {
                const i = n.map((a) => y.createContext(a));
                return function (s) {
                    const l = (s == null ? void 0 : s[e]) || i;
                    return y.useMemo(
                        () => ({[`__scope${e}`]: {...s, [e]: l}}),
                        [s, l]
                    );
                };
            };
            return (o.scopeName = e), [r, NJ(o, ...t)];
        }
        function NJ(...e) {
            const t = e[0];
            if (e.length === 1) return t;
            const n = () => {
                const r = e.map((o) => ({useScope: o(), scopeName: o.scopeName}));
                return function (i) {
                    const a = r.reduce((s, {useScope: l, scopeName: c}) => {
                        const u = l(i)[`__scope${c}`];
                        return {...s, ...u};
                    }, {});
                    return y.useMemo(() => ({[`__scope${t.scopeName}`]: a}), [a]);
                };
            };
            return (n.scopeName = t.scopeName), n;
        }
        const ms = y.forwardRef((e, t) => {
            const {children: n, ...r} = e,
                o = y.Children.toArray(n),
                i = o.find(BJ);
            if (i) {
                const a = i.props.children,
                    s = o.map((l) =>
                        l === i
                            ? y.Children.count(a) > 1
                                ? y.Children.only(null)
                                : y.isValidElement(a)
                                    ? a.props.children
                                    : null
                            : l
                    );
                return y.createElement(
                    Xw,
                    J({}, r, {ref: t}),
                    y.isValidElement(a) ? y.cloneElement(a, void 0, s) : null
                );
            }
            return y.createElement(Xw, J({}, r, {ref: t}), n);
        });
        ms.displayName = "Slot";
        const Xw = y.forwardRef((e, t) => {
            const {children: n, ...r} = e;
            return y.isValidElement(n)
                ? y.cloneElement(n, {
                    ...UJ(r, n.props),
                    ref: t ? cg(t, n.ref) : n.ref,
                })
                : y.Children.count(n) > 1
                    ? y.Children.only(null)
                    : null;
        });
        Xw.displayName = "SlotClone";
        const FJ = ({children: e}) => y.createElement(y.Fragment, null, e);
        function BJ(e) {
            return y.isValidElement(e) && e.type === FJ;
        }
        function UJ(e, t) {
            const n = {...t};
            for (const r in t) {
                const o = e[r],
                    i = t[r];
                /^on[A-Z]/.test(r)
                    ? o && i
                        ? (n[r] = (...s) => {
                            i(...s), o(...s);
                        })
                        : o && (n[r] = o)
                    : r === "style"
                        ? (n[r] = {...o, ...i})
                        : r === "className" &&
                        (n[r] = [o, i].filter(Boolean).join(" "));
            }
            return {...e, ...n};
        }
        function dg(e) {
            const t = e + "CollectionProvider",
                [n, r] = Po(t),
                [o, i] = n(t, {collectionRef: {current: null}, itemMap: new Map()}),
                a = (p) => {
                    const {scope: m, children: f} = p,
                        g = N.useRef(null),
                        b = N.useRef(new Map()).current;
                    return N.createElement(
                        o,
                        {scope: m, itemMap: b, collectionRef: g},
                        f
                    );
                },
                s = e + "CollectionSlot",
                l = N.forwardRef((p, m) => {
                    const {scope: f, children: g} = p,
                        b = i(s, f),
                        x = Ze(m, b.collectionRef);
                    return N.createElement(ms, {ref: x}, g);
                }),
                c = e + "CollectionItemSlot",
                d = "data-radix-collection-item",
                u = N.forwardRef((p, m) => {
                    const {scope: f, children: g, ...b} = p,
                        x = N.useRef(null),
                        S = Ze(m, x),
                        _ = i(c, f);
                    return (
                        N.useEffect(
                            () => (
                                _.itemMap.set(x, {ref: x, ...b}),
                                    () => void _.itemMap.delete(x)
                            )
                        ),
                            N.createElement(ms, {[d]: "", ref: S}, g)
                    );
                });
            function h(p) {
                const m = i(e + "CollectionConsumer", p);
                return N.useCallback(() => {
                    const g = m.collectionRef.current;
                    if (!g) return [];
                    const b = Array.from(g.querySelectorAll(`[${d}]`));
                    return Array.from(m.itemMap.values()).sort(
                        (_, k) =>
                            b.indexOf(_.ref.current) - b.indexOf(k.ref.current)
                    );
                }, [m.collectionRef, m.itemMap]);
            }
            return [{Provider: a, Slot: l, ItemSlot: u}, h, r];
        }
        const De = [
            "a",
            "button",
            "div",
            "form",
            "h2",
            "h3",
            "img",
            "input",
            "label",
            "li",
            "nav",
            "ol",
            "p",
            "span",
            "svg",
            "ul",
        ].reduce((e, t) => {
            const n = y.forwardRef((r, o) => {
                const {asChild: i, ...a} = r,
                    s = i ? ms : t;
                return (
                    y.useEffect(() => {
                        window[Symbol.for("radix-ui")] = !0;
                    }, []),
                        y.createElement(s, J({}, a, {ref: o}))
                );
            });
            return (n.displayName = `Primitive.${t}`), {...e, [t]: n};
        }, {});
        function qw(e, t) {
            e && Za.flushSync(() => e.dispatchEvent(t));
        }
        function vn(e) {
            const t = y.useRef(e);
            return (
                y.useEffect(() => {
                    t.current = e;
                }),
                    y.useMemo(
                        () =>
                            (...n) => {
                                var r;
                                return (r = t.current) === null || r === void 0
                                    ? void 0
                                    : r.call(t, ...n);
                            },
                        []
                    )
            );
        }
        function HJ(e, t = globalThis == null ? void 0 : globalThis.document) {
            const n = vn(e);
            y.useEffect(() => {
                const r = (o) => {
                    o.key === "Escape" && n(o);
                };
                return (
                    t.addEventListener("keydown", r),
                        () => t.removeEventListener("keydown", r)
                );
            }, [n, t]);
        }
        const Zw = "dismissableLayer.update",
            VJ = "dismissableLayer.pointerDownOutside",
            KJ = "dismissableLayer.focusOutside";
        let n8;
        const r8 = y.createContext({
                layers: new Set(),
                layersWithOutsidePointerEventsDisabled: new Set(),
                branches: new Set(),
            }),
            ug = y.forwardRef((e, t) => {
                var n;
                const {
                        disableOutsidePointerEvents: r = !1,
                        onEscapeKeyDown: o,
                        onPointerDownOutside: i,
                        onFocusOutside: a,
                        onInteractOutside: s,
                        onDismiss: l,
                        ...c
                    } = e,
                    d = y.useContext(r8),
                    [u, h] = y.useState(null),
                    p =
                        (n = u == null ? void 0 : u.ownerDocument) !== null &&
                        n !== void 0
                            ? n
                            : globalThis == null
                                ? void 0
                                : globalThis.document,
                    [, m] = y.useState({}),
                    f = Ze(t, (I) => h(I)),
                    g = Array.from(d.layers),
                    [b] = [...d.layersWithOutsidePointerEventsDisabled].slice(-1),
                    x = g.indexOf(b),
                    S = u ? g.indexOf(u) : -1,
                    _ = d.layersWithOutsidePointerEventsDisabled.size > 0,
                    k = S >= x,
                    C = YJ((I) => {
                        const $ = I.target,
                            T = [...d.branches].some((R) => R.contains($));
                        !k ||
                        T ||
                        (i == null || i(I),
                        s == null || s(I),
                        I.defaultPrevented || l == null || l());
                    }, p),
                    P = GJ((I) => {
                        const $ = I.target;
                        [...d.branches].some((R) => R.contains($)) ||
                        (a == null || a(I),
                        s == null || s(I),
                        I.defaultPrevented || l == null || l());
                    }, p);
                return (
                    HJ((I) => {
                        S === d.layers.size - 1 &&
                        (o == null || o(I),
                        !I.defaultPrevented && l && (I.preventDefault(), l()));
                    }, p),
                        y.useEffect(() => {
                            if (u)
                                return (
                                    r &&
                                    (d.layersWithOutsidePointerEventsDisabled
                                        .size === 0 &&
                                    ((n8 = p.body.style.pointerEvents),
                                        (p.body.style.pointerEvents = "none")),
                                        d.layersWithOutsidePointerEventsDisabled.add(
                                            u
                                        )),
                                        d.layers.add(u),
                                        o8(),
                                        () => {
                                            r &&
                                            d.layersWithOutsidePointerEventsDisabled
                                                .size === 1 &&
                                            (p.body.style.pointerEvents = n8);
                                        }
                                );
                        }, [u, p, r, d]),
                        y.useEffect(
                            () => () => {
                                u &&
                                (d.layers.delete(u),
                                    d.layersWithOutsidePointerEventsDisabled.delete(u),
                                    o8());
                            },
                            [u, d]
                        ),
                        y.useEffect(() => {
                            const I = () => m({});
                            return (
                                document.addEventListener(Zw, I),
                                    () => document.removeEventListener(Zw, I)
                            );
                        }, []),
                        y.createElement(
                            De.div,
                            J({}, c, {
                                ref: f,
                                style: {
                                    pointerEvents: _ ? (k ? "auto" : "none") : void 0,
                                    ...e.style,
                                },
                                onFocusCapture: ae(e.onFocusCapture, P.onFocusCapture),
                                onBlurCapture: ae(e.onBlurCapture, P.onBlurCapture),
                                onPointerDownCapture: ae(
                                    e.onPointerDownCapture,
                                    C.onPointerDownCapture
                                ),
                            })
                        )
                );
            }),
            WJ = y.forwardRef((e, t) => {
                const n = y.useContext(r8),
                    r = y.useRef(null),
                    o = Ze(t, r);
                return (
                    y.useEffect(() => {
                        const i = r.current;
                        if (i)
                            return (
                                n.branches.add(i),
                                    () => {
                                        n.branches.delete(i);
                                    }
                            );
                    }, [n.branches]),
                        y.createElement(De.div, J({}, e, {ref: o}))
                );
            });
        function YJ(e, t = globalThis == null ? void 0 : globalThis.document) {
            const n = vn(e),
                r = y.useRef(!1),
                o = y.useRef(() => {});
            return (
                y.useEffect(() => {
                    const i = (s) => {
                            if (s.target && !r.current) {
                                let c = function () {
                                    i8(VJ, n, l, {discrete: !0});
                                };
                                const l = {originalEvent: s};
                                s.pointerType === "touch"
                                    ? (t.removeEventListener("click", o.current),
                                        (o.current = c),
                                        t.addEventListener("click", o.current, {
                                            once: !0,
                                        }))
                                    : c();
                            } else t.removeEventListener("click", o.current);
                            r.current = !1;
                        },
                        a = window.setTimeout(() => {
                            t.addEventListener("pointerdown", i);
                        }, 0);
                    return () => {
                        window.clearTimeout(a),
                            t.removeEventListener("pointerdown", i),
                            t.removeEventListener("click", o.current);
                    };
                }, [t, n]),
                    {onPointerDownCapture: () => (r.current = !0)}
            );
        }
        function GJ(e, t = globalThis == null ? void 0 : globalThis.document) {
            const n = vn(e),
                r = y.useRef(!1);
            return (
                y.useEffect(() => {
                    const o = (i) => {
                        i.target &&
                        !r.current &&
                        i8(KJ, n, {originalEvent: i}, {discrete: !1});
                    };
                    return (
                        t.addEventListener("focusin", o),
                            () => t.removeEventListener("focusin", o)
                    );
                }, [t, n]),
                    {
                        onFocusCapture: () => (r.current = !0),
                        onBlurCapture: () => (r.current = !1),
                    }
            );
        }
        function o8() {
            const e = new CustomEvent(Zw);
            document.dispatchEvent(e);
        }
        function i8(e, t, n, {discrete: r}) {
            const o = n.originalEvent.target,
                i = new CustomEvent(e, {bubbles: !1, cancelable: !0, detail: n});
            t && o.addEventListener(e, t, {once: !0}),
                r ? qw(o, i) : o.dispatchEvent(i);
        }
        const XJ = ug,
            qJ = WJ,
            hg = y.forwardRef((e, t) => {
                var n;
                const {
                    container: r = globalThis == null ||
                    (n = globalThis.document) === null ||
                    n === void 0
                        ? void 0
                        : n.body,
                    ...o
                } = e;
                return r
                    ? BO.createPortal(
                        y.createElement(De.div, J({}, o, {ref: t})),
                        r
                    )
                    : null;
            }),
            gs =
                globalThis != null && globalThis.document
                    ? y.useLayoutEffect
                    : () => {};
        function ZJ(e, t) {
            return y.useReducer((n, r) => {
                const o = t[n][r];
                return o ?? n;
            }, e);
        }
        const to = (e) => {
            const {present: t, children: n} = e,
                r = QJ(t),
                o =
                    typeof n == "function"
                        ? n({present: r.isPresent})
                        : y.Children.only(n),
                i = Ze(r.ref, o.ref);
            return typeof n == "function" || r.isPresent
                ? y.cloneElement(o, {ref: i})
                : null;
        };
        to.displayName = "Presence";
        function QJ(e) {
            const [t, n] = y.useState(),
                r = y.useRef({}),
                o = y.useRef(e),
                i = y.useRef("none"),
                a = e ? "mounted" : "unmounted",
                [s, l] = ZJ(a, {
                    mounted: {
                        UNMOUNT: "unmounted",
                        ANIMATION_OUT: "unmountSuspended",
                    },
                    unmountSuspended: {
                        MOUNT: "mounted",
                        ANIMATION_END: "unmounted",
                    },
                    unmounted: {MOUNT: "mounted"},
                });
            return (
                y.useEffect(() => {
                    const c = pg(r.current);
                    i.current = s === "mounted" ? c : "none";
                }, [s]),
                    gs(() => {
                        const c = r.current,
                            d = o.current;
                        if (d !== e) {
                            const h = i.current,
                                p = pg(c);
                            e
                                ? l("MOUNT")
                                : p === "none" ||
                                (c == null ? void 0 : c.display) === "none"
                                    ? l("UNMOUNT")
                                    : l(d && h !== p ? "ANIMATION_OUT" : "UNMOUNT"),
                                (o.current = e);
                        }
                    }, [e, l]),
                    gs(() => {
                        if (t) {
                            const c = (u) => {
                                    const p = pg(r.current).includes(u.animationName);
                                    u.target === t &&
                                    p &&
                                    Za.flushSync(() => l("ANIMATION_END"));
                                },
                                d = (u) => {
                                    u.target === t && (i.current = pg(r.current));
                                };
                            return (
                                t.addEventListener("animationstart", d),
                                    t.addEventListener("animationcancel", c),
                                    t.addEventListener("animationend", c),
                                    () => {
                                        t.removeEventListener("animationstart", d),
                                            t.removeEventListener("animationcancel", c),
                                            t.removeEventListener("animationend", c);
                                    }
                            );
                        } else l("ANIMATION_END");
                    }, [t, l]),
                    {
                        isPresent: ["mounted", "unmountSuspended"].includes(s),
                        ref: y.useCallback((c) => {
                            c && (r.current = getComputedStyle(c)), n(c);
                        }, []),
                    }
            );
        }
        function pg(e) {
            return (e == null ? void 0 : e.animationName) || "none";
        }
        function ga({prop: e, defaultProp: t, onChange: n = () => {}}) {
            const [r, o] = JJ({defaultProp: t, onChange: n}),
                i = e !== void 0,
                a = i ? e : r,
                s = vn(n),
                l = y.useCallback(
                    (c) => {
                        if (i) {
                            const u = typeof c == "function" ? c(e) : c;
                            u !== e && s(u);
                        } else o(c);
                    },
                    [i, e, o, s]
                );
            return [a, l];
        }
        function JJ({defaultProp: e, onChange: t}) {
            const n = y.useState(e),
                [r] = n,
                o = y.useRef(r),
                i = vn(t);
            return (
                y.useEffect(() => {
                    o.current !== r && (i(r), (o.current = r));
                }, [r, o, i]),
                    n
            );
        }
        const a8 = y.forwardRef((e, t) =>
                y.createElement(
                    De.span,
                    J({}, e, {
                        ref: t,
                        style: {
                            position: "absolute",
                            border: 0,
                            width: 1,
                            height: 1,
                            padding: 0,
                            margin: -1,
                            overflow: "hidden",
                            clip: "rect(0, 0, 0, 0)",
                            whiteSpace: "nowrap",
                            wordWrap: "normal",
                            ...e.style,
                        },
                    })
                )
            ),
            s8 = "ToastProvider",
            [Qw, eee, tee] = dg("Toast"),
            [l8, eme] = Po("Toast", [tee]),
            [nee, fg] = l8(s8),
            c8 = (e) => {
                const {
                        __scopeToast: t,
                        label: n = "Notification",
                        duration: r = 5e3,
                        swipeDirection: o = "right",
                        swipeThreshold: i = 50,
                        children: a,
                    } = e,
                    [s, l] = y.useState(null),
                    [c, d] = y.useState(0),
                    u = y.useRef(!1),
                    h = y.useRef(!1);
                return y.createElement(
                    Qw.Provider,
                    {scope: t},
                    y.createElement(
                        nee,
                        {
                            scope: t,
                            label: n,
                            duration: r,
                            swipeDirection: o,
                            swipeThreshold: i,
                            toastCount: c,
                            viewport: s,
                            onViewportChange: l,
                            onToastAdd: y.useCallback(() => d((p) => p + 1), []),
                            onToastRemove: y.useCallback(() => d((p) => p - 1), []),
                            isFocusedToastEscapeKeyDownRef: u,
                            isClosePausedRef: h,
                        },
                        a
                    )
                );
            };
        c8.propTypes = {
            label(e) {
                if (e.label && typeof e.label == "string" && !e.label.trim()) {
                    const t = `Invalid prop \`label\` supplied to \`${s8}\`. Expected non-empty \`string\`.`;
                    return new Error(t);
                }
                return null;
            },
        };
        const ree = "ToastViewport",
            oee = ["F8"],
            Jw = "toast.viewportPause",
            ex = "toast.viewportResume",
            iee = y.forwardRef((e, t) => {
                const {
                        __scopeToast: n,
                        hotkey: r = oee,
                        label: o = "Notifications ({hotkey})",
                        ...i
                    } = e,
                    a = fg(ree, n),
                    s = eee(n),
                    l = y.useRef(null),
                    c = y.useRef(null),
                    d = y.useRef(null),
                    u = y.useRef(null),
                    h = Ze(t, u, a.onViewportChange),
                    p = r.join("+").replace(/Key/g, "").replace(/Digit/g, ""),
                    m = a.toastCount > 0;
                y.useEffect(() => {
                    const g = (b) => {
                        var x;
                        r.every((_) => b[_] || b.code === _) &&
                        ((x = u.current) === null || x === void 0 || x.focus());
                    };
                    return (
                        document.addEventListener("keydown", g),
                            () => document.removeEventListener("keydown", g)
                    );
                }, [r]),
                    y.useEffect(() => {
                        const g = l.current,
                            b = u.current;
                        if (m && g && b) {
                            const x = () => {
                                    if (!a.isClosePausedRef.current) {
                                        const C = new CustomEvent(Jw);
                                        b.dispatchEvent(C),
                                            (a.isClosePausedRef.current = !0);
                                    }
                                },
                                S = () => {
                                    if (a.isClosePausedRef.current) {
                                        const C = new CustomEvent(ex);
                                        b.dispatchEvent(C),
                                            (a.isClosePausedRef.current = !1);
                                    }
                                },
                                _ = (C) => {
                                    !g.contains(C.relatedTarget) && S();
                                },
                                k = () => {
                                    g.contains(document.activeElement) || S();
                                };
                            return (
                                g.addEventListener("focusin", x),
                                    g.addEventListener("focusout", _),
                                    g.addEventListener("pointermove", x),
                                    g.addEventListener("pointerleave", k),
                                    window.addEventListener("blur", x),
                                    window.addEventListener("focus", S),
                                    () => {
                                        g.removeEventListener("focusin", x),
                                            g.removeEventListener("focusout", _),
                                            g.removeEventListener("pointermove", x),
                                            g.removeEventListener("pointerleave", k),
                                            window.removeEventListener("blur", x),
                                            window.removeEventListener("focus", S);
                                    }
                            );
                        }
                    }, [m, a.isClosePausedRef]);
                const f = y.useCallback(
                    ({tabbingDirection: g}) => {
                        const x = s().map((S) => {
                            const _ = S.ref.current,
                                k = [_, ...xee(_)];
                            return g === "forwards" ? k : k.reverse();
                        });
                        return (g === "forwards" ? x.reverse() : x).flat();
                    },
                    [s]
                );
                return (
                    y.useEffect(() => {
                        const g = u.current;
                        if (g) {
                            const b = (x) => {
                                const S = x.altKey || x.ctrlKey || x.metaKey;
                                if (x.key === "Tab" && !S) {
                                    const I = document.activeElement,
                                        $ = x.shiftKey;
                                    if (x.target === g && $) {
                                        var k;
                                        (k = c.current) === null ||
                                        k === void 0 ||
                                        k.focus();
                                        return;
                                    }
                                    const D = f({
                                            tabbingDirection: $
                                                ? "backwards"
                                                : "forwards",
                                        }),
                                        j = D.findIndex((z) => z === I);
                                    if (tx(D.slice(j + 1))) x.preventDefault();
                                    else {
                                        var C, P;
                                        $
                                            ? (C = c.current) === null ||
                                            C === void 0 ||
                                            C.focus()
                                            : (P = d.current) === null ||
                                            P === void 0 ||
                                            P.focus();
                                    }
                                }
                            };
                            return (
                                g.addEventListener("keydown", b),
                                    () => g.removeEventListener("keydown", b)
                            );
                        }
                    }, [s, f]),
                        y.createElement(
                            qJ,
                            {
                                ref: l,
                                role: "region",
                                "aria-label": o.replace("{hotkey}", p),
                                tabIndex: -1,
                                style: {pointerEvents: m ? void 0 : "none"},
                            },
                            m &&
                            y.createElement(d8, {
                                ref: c,
                                onFocusFromOutsideViewport: () => {
                                    const g = f({tabbingDirection: "forwards"});
                                    tx(g);
                                },
                            }),
                            y.createElement(
                                Qw.Slot,
                                {scope: n},
                                y.createElement(De.ol, J({tabIndex: -1}, i, {ref: h}))
                            ),
                            m &&
                            y.createElement(d8, {
                                ref: d,
                                onFocusFromOutsideViewport: () => {
                                    const g = f({tabbingDirection: "backwards"});
                                    tx(g);
                                },
                            })
                        )
                );
            }),
            aee = "ToastFocusProxy",
            d8 = y.forwardRef((e, t) => {
                const {__scopeToast: n, onFocusFromOutsideViewport: r, ...o} = e,
                    i = fg(aee, n);
                return y.createElement(
                    a8,
                    J({"aria-hidden": !0, tabIndex: 0}, o, {
                        ref: t,
                        style: {position: "fixed"},
                        onFocus: (a) => {
                            var s;
                            const l = a.relatedTarget;
                            !(
                                (s = i.viewport) !== null &&
                                s !== void 0 &&
                                s.contains(l)
                            ) && r();
                        },
                    })
                );
            }),
            mg = "Toast",
            see = "toast.swipeStart",
            lee = "toast.swipeMove",
            cee = "toast.swipeCancel",
            dee = "toast.swipeEnd",
            uee = y.forwardRef((e, t) => {
                const {
                        forceMount: n,
                        open: r,
                        defaultOpen: o,
                        onOpenChange: i,
                        ...a
                    } = e,
                    [s = !0, l] = ga({prop: r, defaultProp: o, onChange: i});
                return y.createElement(
                    to,
                    {present: n || s},
                    y.createElement(
                        u8,
                        J({open: s}, a, {
                            ref: t,
                            onClose: () => l(!1),
                            onPause: vn(e.onPause),
                            onResume: vn(e.onResume),
                            onSwipeStart: ae(e.onSwipeStart, (c) => {
                                c.currentTarget.setAttribute("data-swipe", "start");
                            }),
                            onSwipeMove: ae(e.onSwipeMove, (c) => {
                                const {x: d, y: u} = c.detail.delta;
                                c.currentTarget.setAttribute("data-swipe", "move"),
                                    c.currentTarget.style.setProperty(
                                        "--radix-toast-swipe-move-x",
                                        `${d}px`
                                    ),
                                    c.currentTarget.style.setProperty(
                                        "--radix-toast-swipe-move-y",
                                        `${u}px`
                                    );
                            }),
                            onSwipeCancel: ae(e.onSwipeCancel, (c) => {
                                c.currentTarget.setAttribute(
                                    "data-swipe",
                                    "cancel"
                                ),
                                    c.currentTarget.style.removeProperty(
                                        "--radix-toast-swipe-move-x"
                                    ),
                                    c.currentTarget.style.removeProperty(
                                        "--radix-toast-swipe-move-y"
                                    ),
                                    c.currentTarget.style.removeProperty(
                                        "--radix-toast-swipe-end-x"
                                    ),
                                    c.currentTarget.style.removeProperty(
                                        "--radix-toast-swipe-end-y"
                                    );
                            }),
                            onSwipeEnd: ae(e.onSwipeEnd, (c) => {
                                const {x: d, y: u} = c.detail.delta;
                                c.currentTarget.setAttribute("data-swipe", "end"),
                                    c.currentTarget.style.removeProperty(
                                        "--radix-toast-swipe-move-x"
                                    ),
                                    c.currentTarget.style.removeProperty(
                                        "--radix-toast-swipe-move-y"
                                    ),
                                    c.currentTarget.style.setProperty(
                                        "--radix-toast-swipe-end-x",
                                        `${d}px`
                                    ),
                                    c.currentTarget.style.setProperty(
                                        "--radix-toast-swipe-end-y",
                                        `${u}px`
                                    ),
                                    l(!1);
                            }),
                        })
                    )
                );
            }),
            [hee, pee] = l8(mg, {onClose() {}}),
            u8 = y.forwardRef((e, t) => {
                const {
                        __scopeToast: n,
                        type: r = "foreground",
                        duration: o,
                        open: i,
                        onClose: a,
                        onEscapeKeyDown: s,
                        onPause: l,
                        onResume: c,
                        onSwipeStart: d,
                        onSwipeMove: u,
                        onSwipeCancel: h,
                        onSwipeEnd: p,
                        ...m
                    } = e,
                    f = fg(mg, n),
                    [g, b] = y.useState(null),
                    x = Ze(t, (z) => b(z)),
                    S = y.useRef(null),
                    _ = y.useRef(null),
                    k = o || f.duration,
                    C = y.useRef(0),
                    P = y.useRef(k),
                    I = y.useRef(0),
                    {onToastAdd: $, onToastRemove: T} = f,
                    R = vn(() => {
                        var z;
                        (g == null ? void 0 : g.contains(document.activeElement)) &&
                        ((z = f.viewport) === null ||
                            z === void 0 ||
                            z.focus()),
                            a();
                    }),
                    D = y.useCallback(
                        (z) => {
                            !z ||
                            z === 1 / 0 ||
                            (window.clearTimeout(I.current),
                                (C.current = new Date().getTime()),
                                (I.current = window.setTimeout(R, z)));
                        },
                        [R]
                    );
                y.useEffect(() => {
                    const z = f.viewport;
                    if (z) {
                        const O = () => {
                                D(P.current), c == null || c();
                            },
                            F = () => {
                                const K = new Date().getTime() - C.current;
                                (P.current = P.current - K),
                                    window.clearTimeout(I.current),
                                l == null || l();
                            };
                        return (
                            z.addEventListener(Jw, F),
                                z.addEventListener(ex, O),
                                () => {
                                    z.removeEventListener(Jw, F),
                                        z.removeEventListener(ex, O);
                                }
                        );
                    }
                }, [f.viewport, k, l, c, D]),
                    y.useEffect(() => {
                        i && !f.isClosePausedRef.current && D(k);
                    }, [i, k, f.isClosePausedRef, D]),
                    y.useEffect(() => ($(), () => T()), [$, T]);
                const j = y.useMemo(() => (g ? m8(g) : null), [g]);
                return f.viewport
                    ? y.createElement(
                        y.Fragment,
                        null,
                        j &&
                        y.createElement(
                            fee,
                            {
                                __scopeToast: n,
                                role: "status",
                                "aria-live":
                                    r === "foreground"
                                        ? "assertive"
                                        : "polite",
                                "aria-atomic": !0,
                            },
                            j
                        ),
                        y.createElement(
                            hee,
                            {scope: n, onClose: R},
                            Za.createPortal(
                                y.createElement(
                                    Qw.ItemSlot,
                                    {scope: n},
                                    y.createElement(
                                        XJ,
                                        {
                                            asChild: !0,
                                            onEscapeKeyDown: ae(s, () => {
                                                f.isFocusedToastEscapeKeyDownRef
                                                    .current || R(),
                                                    (f.isFocusedToastEscapeKeyDownRef.current =
                                                        !1);
                                            }),
                                        },
                                        y.createElement(
                                            De.li,
                                            J(
                                                {
                                                    role: "status",
                                                    "aria-live": "off",
                                                    "aria-atomic": !0,
                                                    tabIndex: 0,
                                                    "data-state": i
                                                        ? "open"
                                                        : "closed",
                                                    "data-swipe-direction":
                                                    f.swipeDirection,
                                                },
                                                m,
                                                {
                                                    ref: x,
                                                    style: {
                                                        userSelect: "none",
                                                        touchAction: "none",
                                                        ...e.style,
                                                    },
                                                    onKeyDown: ae(
                                                        e.onKeyDown,
                                                        (z) => {
                                                            z.key === "Escape" &&
                                                            (s == null ||
                                                            s(
                                                                z.nativeEvent
                                                            ),
                                                            z.nativeEvent
                                                                .defaultPrevented ||
                                                            ((f.isFocusedToastEscapeKeyDownRef.current =
                                                                !0),
                                                                R()));
                                                        }
                                                    ),
                                                    onPointerDown: ae(
                                                        e.onPointerDown,
                                                        (z) => {
                                                            z.button === 0 &&
                                                            (S.current = {
                                                                x: z.clientX,
                                                                y: z.clientY,
                                                            });
                                                        }
                                                    ),
                                                    onPointerMove: ae(
                                                        e.onPointerMove,
                                                        (z) => {
                                                            if (!S.current)
                                                                return;
                                                            const O =
                                                                    z.clientX -
                                                                    S.current.x,
                                                                F =
                                                                    z.clientY -
                                                                    S.current.y,
                                                                K = !!_.current,
                                                                V = [
                                                                    "left",
                                                                    "right",
                                                                ].includes(
                                                                    f.swipeDirection
                                                                ),
                                                                B = [
                                                                    "left",
                                                                    "up",
                                                                ].includes(
                                                                    f.swipeDirection
                                                                )
                                                                    ? Math.min
                                                                    : Math.max,
                                                                H = V
                                                                    ? B(0, O)
                                                                    : 0,
                                                                G = V
                                                                    ? 0
                                                                    : B(0, F),
                                                                ee =
                                                                    z.pointerType ===
                                                                    "touch"
                                                                        ? 10
                                                                        : 2,
                                                                fe = {x: H, y: G},
                                                                Se = {
                                                                    originalEvent:
                                                                    z,
                                                                    delta: fe,
                                                                };
                                                            K
                                                                ? ((_.current =
                                                                    fe),
                                                                    gg(lee, u, Se, {
                                                                        discrete:
                                                                            !1,
                                                                    }))
                                                                : g8(
                                                                    fe,
                                                                    f.swipeDirection,
                                                                    ee
                                                                )
                                                                    ? ((_.current =
                                                                        fe),
                                                                        gg(see, d, Se, {
                                                                            discrete:
                                                                                !1,
                                                                        }),
                                                                        z.target.setPointerCapture(
                                                                            z.pointerId
                                                                        ))
                                                                    : (Math.abs(O) >
                                                                        ee ||
                                                                        Math.abs(
                                                                            F
                                                                        ) > ee) &&
                                                                    (S.current =
                                                                        null);
                                                        }
                                                    ),
                                                    onPointerUp: ae(
                                                        e.onPointerUp,
                                                        (z) => {
                                                            const O = _.current,
                                                                F = z.target;
                                                            if (
                                                                (F.hasPointerCapture(
                                                                    z.pointerId
                                                                ) &&
                                                                F.releasePointerCapture(
                                                                    z.pointerId
                                                                ),
                                                                    (_.current =
                                                                        null),
                                                                    (S.current =
                                                                        null),
                                                                    O)
                                                            ) {
                                                                const K =
                                                                        z.currentTarget,
                                                                    V = {
                                                                        originalEvent:
                                                                        z,
                                                                        delta: O,
                                                                    };
                                                                g8(
                                                                    O,
                                                                    f.swipeDirection,
                                                                    f.swipeThreshold
                                                                )
                                                                    ? gg(
                                                                        dee,
                                                                        p,
                                                                        V,
                                                                        {
                                                                            discrete:
                                                                                !0,
                                                                        }
                                                                    )
                                                                    : gg(
                                                                        cee,
                                                                        h,
                                                                        V,
                                                                        {
                                                                            discrete:
                                                                                !0,
                                                                        }
                                                                    ),
                                                                    K.addEventListener(
                                                                        "click",
                                                                        (B) =>
                                                                            B.preventDefault(),
                                                                        {once: !0}
                                                                    );
                                                            }
                                                        }
                                                    ),
                                                }
                                            )
                                        )
                                    )
                                ),
                                f.viewport
                            )
                        )
                    )
                    : null;
            });
        u8.propTypes = {
            type(e) {
                if (e.type && !["foreground", "background"].includes(e.type)) {
                    const t = `Invalid prop \`type\` supplied to \`${mg}\`. Expected \`foreground | background\`.`;
                    return new Error(t);
                }
                return null;
            },
        };
        const fee = (e) => {
                const {__scopeToast: t, children: n, ...r} = e,
                    o = fg(mg, t),
                    [i, a] = y.useState(!1),
                    [s, l] = y.useState(!1);
                return (
                    yee(() => a(!0)),
                        y.useEffect(() => {
                            const c = window.setTimeout(() => l(!0), 1e3);
                            return () => window.clearTimeout(c);
                        }, []),
                        s
                            ? null
                            : y.createElement(
                                hg,
                                {asChild: !0},
                                y.createElement(
                                    a8,
                                    r,
                                    i &&
                                    y.createElement(
                                        y.Fragment,
                                        null,
                                        o.label,
                                        " ",
                                        n
                                    )
                                )
                            )
                );
            },
            mee = y.forwardRef((e, t) => {
                const {__scopeToast: n, ...r} = e;
                return y.createElement(De.div, J({}, r, {ref: t}));
            }),
            gee = y.forwardRef((e, t) => {
                const {__scopeToast: n, ...r} = e;
                return y.createElement(De.div, J({}, r, {ref: t}));
            }),
            vee = "ToastAction",
            h8 = y.forwardRef((e, t) => {
                const {altText: n, ...r} = e;
                return n
                    ? y.createElement(
                        f8,
                        {altText: n, asChild: !0},
                        y.createElement(p8, J({}, r, {ref: t}))
                    )
                    : null;
            });
        h8.propTypes = {
            altText(e) {
                return e.altText
                    ? null
                    : new Error(`Missing prop \`altText\` expected on \`${vee}\``);
            },
        };
        const bee = "ToastClose",
            p8 = y.forwardRef((e, t) => {
                const {__scopeToast: n, ...r} = e,
                    o = pee(bee, n);
                return y.createElement(
                    f8,
                    {asChild: !0},
                    y.createElement(
                        De.button,
                        J({type: "button"}, r, {
                            ref: t,
                            onClick: ae(e.onClick, o.onClose),
                        })
                    )
                );
            }),
            f8 = y.forwardRef((e, t) => {
                const {__scopeToast: n, altText: r, ...o} = e;
                return y.createElement(
                    De.div,
                    J(
                        {
                            "data-radix-toast-announce-exclude": "",
                            "data-radix-toast-announce-alt": r || void 0,
                        },
                        o,
                        {ref: t}
                    )
                );
            });
        function m8(e) {
            const t = [];
            return (
                Array.from(e.childNodes).forEach((r) => {
                    if (
                        (r.nodeType === r.TEXT_NODE &&
                        r.textContent &&
                        t.push(r.textContent),
                            wee(r))
                    ) {
                        const o =
                                r.ariaHidden ||
                                r.hidden ||
                                r.style.display === "none",
                            i = r.dataset.radixToastAnnounceExclude === "";
                        if (!o)
                            if (i) {
                                const a = r.dataset.radixToastAnnounceAlt;
                                a && t.push(a);
                            } else t.push(...m8(r));
                    }
                }),
                    t
            );
        }
        function gg(e, t, n, {discrete: r}) {
            const o = n.originalEvent.currentTarget,
                i = new CustomEvent(e, {bubbles: !0, cancelable: !0, detail: n});
            t && o.addEventListener(e, t, {once: !0}),
                r ? qw(o, i) : o.dispatchEvent(i);
        }
        const g8 = (e, t, n = 0) => {
            const r = Math.abs(e.x),
                o = Math.abs(e.y),
                i = r > o;
            return t === "left" || t === "right" ? i && r > n : !i && o > n;
        };
        function yee(e = () => {}) {
            const t = vn(e);
            gs(() => {
                let n = 0,
                    r = 0;
                return (
                    (n = window.requestAnimationFrame(
                        () => (r = window.requestAnimationFrame(t))
                    )),
                        () => {
                            window.cancelAnimationFrame(n),
                                window.cancelAnimationFrame(r);
                        }
                );
            }, [t]);
        }
        function wee(e) {
            return e.nodeType === e.ELEMENT_NODE;
        }
        function xee(e) {
            const t = [],
                n = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, {
                    acceptNode: (r) => {
                        const o = r.tagName === "INPUT" && r.type === "hidden";
                        return r.disabled || r.hidden || o
                            ? NodeFilter.FILTER_SKIP
                            : r.tabIndex >= 0
                                ? NodeFilter.FILTER_ACCEPT
                                : NodeFilter.FILTER_SKIP;
                    },
                });
            for (; n.nextNode(); ) t.push(n.currentNode);
            return t;
        }
        function tx(e) {
            const t = document.activeElement;
            return e.some((n) =>
                n === t ? !0 : (n.focus(), document.activeElement !== t)
            );
        }
        const See = uee,
            _ee = mee,
            kee = gee,
            Cee = h8,
            v8 = p8,
            vs = "2.0.0-beta.2";
        let nx = {
            fonts: {
                draw: `https://unpkg.com/@tldraw/assets@${vs}/fonts/Shantell_Sans-Tldrawish.woff2`,
                serif: `https://unpkg.com/@tldraw/assets@${vs}/fonts/IBMPlexSerif-Medium.woff2`,
                sansSerif: `https://unpkg.com/@tldraw/assets@${vs}/fonts/IBMPlexSans-Medium.woff2`,
                monospace: `https://unpkg.com/@tldraw/assets@${vs}/fonts/IBMPlexMono-Medium.woff2`,
            },
        };
        function Eee(e) {
            return y.useMemo(
                () =>
                    e
                        ? {fonts: {...nx.fonts, ...(e == null ? void 0 : e.fonts)}}
                        : nx,
                [e]
            );
        }
        let Vu = {
            ...nx,
            icons: Object.fromEntries(
                [
                    "align-bottom-center",
                    "align-bottom-left",
                    "align-bottom-right",
                    "align-bottom",
                    "align-center-center",
                    "align-center-horizontal",
                    "align-center-left",
                    "align-center-right",
                    "align-center-vertical",
                    "align-left",
                    "align-right",
                    "align-top-center",
                    "align-top-left",
                    "align-top-right",
                    "align-top",
                    "arrow-left",
                    "arrowhead-arrow",
                    "arrowhead-bar",
                    "arrowhead-diamond",
                    "arrowhead-dot",
                    "arrowhead-none",
                    "arrowhead-square",
                    "arrowhead-triangle-inverted",
                    "arrowhead-triangle",
                    "aspect-ratio",
                    "avatar",
                    "blob",
                    "bring-forward",
                    "bring-to-front",
                    "check",
                    "checkbox-checked",
                    "checkbox-empty",
                    "chevron-down",
                    "chevron-left",
                    "chevron-right",
                    "chevron-up",
                    "chevrons-ne",
                    "chevrons-sw",
                    "clipboard-copied",
                    "clipboard-copy",
                    "code",
                    "collab",
                    "color",
                    "comment",
                    "cross-2",
                    "cross",
                    "dash-dashed",
                    "dash-dotted",
                    "dash-draw",
                    "dash-solid",
                    "discord",
                    "distribute-horizontal",
                    "distribute-vertical",
                    "dot",
                    "dots-horizontal",
                    "dots-vertical",
                    "drag-handle-dots",
                    "duplicate",
                    "edit",
                    "external-link",
                    "file",
                    "fill-none",
                    "fill-pattern",
                    "fill-semi",
                    "fill-solid",
                    "follow",
                    "following",
                    "font-draw",
                    "font-mono",
                    "font-sans",
                    "font-serif",
                    "geo-arrow-down",
                    "geo-arrow-left",
                    "geo-arrow-right",
                    "geo-arrow-up",
                    "geo-check-box",
                    "geo-cloud",
                    "geo-diamond",
                    "geo-ellipse",
                    "geo-hexagon",
                    "geo-octagon",
                    "geo-oval",
                    "geo-pentagon",
                    "geo-rectangle",
                    "geo-rhombus-2",
                    "geo-rhombus",
                    "geo-star",
                    "geo-trapezoid",
                    "geo-triangle",
                    "geo-x-box",
                    "github",
                    "group",
                    "hidden",
                    "image",
                    "info-circle",
                    "leading",
                    "link",
                    "lock-small",
                    "lock",
                    "menu",
                    "minus",
                    "mixed",
                    "pack",
                    "page",
                    "plus",
                    "question-mark-circle",
                    "question-mark",
                    "redo",
                    "reset-zoom",
                    "rotate-ccw",
                    "rotate-cw",
                    "ruler",
                    "search",
                    "send-backward",
                    "send-to-back",
                    "settings-horizontal",
                    "settings-vertical-1",
                    "settings-vertical",
                    "share-1",
                    "share-2",
                    "size-extra-large",
                    "size-large",
                    "size-medium",
                    "size-small",
                    "spline-cubic",
                    "spline-line",
                    "stack-horizontal",
                    "stack-vertical",
                    "status-offline",
                    "status-online",
                    "stretch-horizontal",
                    "stretch-vertical",
                    "text-align-center",
                    "text-align-justify",
                    "text-align-left",
                    "text-align-right",
                    "tool-arrow",
                    "tool-embed",
                    "tool-eraser",
                    "tool-frame",
                    "tool-hand",
                    "tool-highlight",
                    "tool-laser",
                    "tool-line",
                    "tool-media",
                    "tool-note",
                    "tool-pencil",
                    "tool-pointer",
                    "tool-text",
                    "trash",
                    "triangle-down",
                    "triangle-up",
                    "twitter",
                    "undo",
                    "ungroup",
                    "unlock-small",
                    "unlock",
                    "vertical-align-center",
                    "vertical-align-end",
                    "vertical-align-start",
                    "visible",
                    "warning-triangle",
                    "zoom-in",
                    "zoom-out",
                ].map((e) => [
                    e,
                    `https://unpkg.com/@tldraw/assets@${vs}/icons/icon/${e}.svg`,
                ])
            ),
            translations: Object.fromEntries(
                Jd.map((e) => [
                    e.locale,
                    `https://unpkg.com/@tldraw/assets@${vs}/translations/${e.locale}.json`,
                ])
            ),
            embedIcons: Object.fromEntries(
                $l.map((e) => [
                    e.type,
                    `https://unpkg.com/@tldraw/assets@${vs}/embed-icons/${e.type}.png`,
                ])
            ),
        };
        function Pee(e) {
            return e
                ? {
                    fonts: Object.assign(
                        {...Vu.fonts},
                        {...(e == null ? void 0 : e.fonts)}
                    ),
                    icons: Object.assign(
                        {...Vu.icons},
                        {...(e == null ? void 0 : e.icons)}
                    ),
                    embedIcons: Object.assign(
                        {...Vu.embedIcons},
                        {...(e == null ? void 0 : e.embedIcons)}
                    ),
                    translations: Object.assign(
                        {...Vu.translations},
                        {...(e == null ? void 0 : e.translations)}
                    ),
                }
                : Vu;
        }
        function Iee(e, t) {
            const n = pe(
                t
                    .map((o) => e.getShape(o))
                    .filter((o) => o && e.isShapeOfType(o, "frame"))
            );
            if (!n.length) return;
            const r = [];
            e.batch(() => {
                n.map((o) => {
                    const i = e.getSortedChildIdsForParent(o.id);
                    i.length &&
                    (e.reparentShapes(i, o.parentId, o.index), r.push(...i));
                }),
                    e.setSelectedShapes(r),
                    e.deleteShapes(t);
            });
        }
        const Tee = 50;
        function $ee(e, t, n = {}) {
            const r = e.getShape(t);
            if (!r) return;
            const o = e.getSortedChildIdsForParent(r.id),
                i = pe(o.map((p) => e.getShape(p)));
            if (!i.length) return;
            const a = ce.FromPoints(
                    i.flatMap((p) => {
                        const m = e.getShapeGeometry(p.id);
                        return e
                            .getShapeLocalTransform(p)
                            .applyToPoints(m.vertices);
                    })
                ),
                {padding: s = Tee} = n,
                l = a.w + 2 * s,
                c = a.h + 2 * s,
                d = s - a.minX,
                u = s - a.minY;
            if (d === 0 && u === 0 && r.props.w === l && r.props.h === c) return;
            const h = new E(d, u).rot(r.rotation);
            e.batch(() => {
                const p = o.map((m) => {
                    const f = e.getShape(m);
                    return {id: f.id, type: f.type, x: f.x + d, y: f.y + u};
                });
                p.push({
                    id: r.id,
                    type: r.type,
                    x: r.x - h.x,
                    y: r.y - h.y,
                    props: {w: l, h: c},
                }),
                    e.updateShapes(p);
            });
        }
        const b8 = y.createContext(null);
        function Aee({assetUrls: e, children: t}) {
            return v.jsx(b8.Provider, {value: e, children: t});
        }
        function rx() {
            const e = y.useContext(b8);
            if (!e)
                throw new Error(
                    "useAssetUrls must be used within an AssetUrlsProvider"
                );
            return e;
        }
        const ox = {
                "action.convert-to-bookmark": "Convert to Bookmark",
                "action.convert-to-embed": "Convert to Embed",
                "action.open-embed-link": "Open link",
                "action.align-bottom": "Align bottom",
                "action.align-center-horizontal": "Align horizontally",
                "action.align-center-vertical": "Align vertically",
                "action.align-center-horizontal.short": "Align H",
                "action.align-center-vertical.short": "Align V",
                "action.align-left": "Align left",
                "action.align-right": "Align right",
                "action.align-top": "Align top",
                "action.back-to-content": "Back to content",
                "action.bring-forward": "Bring forward",
                "action.bring-to-front": "Bring to front",
                "action.copy-as-json.short": "JSON",
                "action.copy-as-json": "Copy as JSON",
                "action.copy-as-png.short": "PNG",
                "action.copy-as-png": "Copy as PNG",
                "action.copy-as-svg.short": "SVG",
                "action.copy-as-svg": "Copy as SVG",
                "action.copy": "Copy",
                "action.cut": "Cut",
                "action.delete": "Delete",
                "action.unlock-all": "Unlock all",
                "action.distribute-horizontal": "Distribute horizontally",
                "action.distribute-vertical": "Distribute vertically",
                "action.distribute-horizontal.short": "Distribute H",
                "action.distribute-vertical.short": "Distribute V",
                "action.duplicate": "Duplicate",
                "action.edit-link": "Edit link",
                "action.exit-pen-mode": "Exit pen mode",
                "action.export-as-json.short": "JSON",
                "action.export-as-json": "Export as JSON",
                "action.export-as-png.short": "PNG",
                "action.export-as-png": "Export as PNG",
                "action.export-as-svg.short": "SVG",
                "action.export-as-svg": "Export as SVG",
                "action.fit-frame-to-content": "Fit to content",
                "action.flip-horizontal": "Flip horizontally",
                "action.flip-vertical": "Flip vertically",
                "action.flip-horizontal.short": "Flip H",
                "action.flip-vertical.short": "Flip V",
                "action.fork-project": "Fork this project",
                "action.group": "Group",
                "action.insert-media": "Upload media",
                "action.leave-shared-project": "Leave shared project",
                "action.new-project": "New project",
                "action.new-shared-project": "New shared project",
                "action.open-cursor-chat": "Cursor chat",
                "action.open-file": "Open file",
                "action.pack": "Pack",
                "action.paste": "Paste",
                "action.print": "Print",
                "action.redo": "Redo",
                "action.remove-frame": "Remove frame",
                "action.rotate-ccw": "Rotate counterclockwise",
                "action.rotate-cw": "Rotate clockwise",
                "action.save-copy": "Save a copy",
                "action.select-all": "Select all",
                "action.select-none": "Select none",
                "action.send-backward": "Send backward",
                "action.send-to-back": "Send to back",
                "action.share-project": "Share this project",
                "action.stack-horizontal": "Stack horizontally",
                "action.stack-vertical": "Stack vertically",
                "action.stack-horizontal.short": "Stack H",
                "action.stack-vertical.short": "Stack V",
                "action.stop-following": "Stop following",
                "action.stretch-horizontal": "Stretch horizontally",
                "action.stretch-vertical": "Stretch vertically",
                "action.stretch-horizontal.short": "Stretch H",
                "action.stretch-vertical.short": "Stretch V",
                "action.toggle-auto-size": "Toggle auto size",
                "action.toggle-dark-mode.menu": "Dark mode",
                "action.toggle-dark-mode": "Toggle dark mode",
                "action.toggle-reduce-motion.menu": "Reduce motion",
                "action.toggle-reduce-motion": "Toggle reduce motion",
                "action.toggle-edge-scrolling.menu": "Edge scrolling",
                "action.toggle-edge-scrolling": "Toggle edge scrolling",
                "action.toggle-debug-mode.menu": "Debug mode",
                "action.toggle-debug-mode": "Toggle debug mode",
                "action.toggle-focus-mode.menu": "Focus mode",
                "action.toggle-focus-mode": "Toggle focus mode",
                "action.toggle-grid.menu": "Show grid",
                "action.toggle-grid": "Toggle grid",
                "action.toggle-lock": "Toggle locked",
                "action.toggle-snap-mode.menu": "Always snap",
                "action.toggle-snap-mode": "Toggle always snap",
                "action.toggle-tool-lock.menu": "Tool lock",
                "action.toggle-tool-lock": "Toggle tool lock",
                "action.toggle-transparent.context-menu": "Transparent",
                "action.toggle-transparent.menu": "Transparent",
                "action.toggle-transparent": "Toggle transparent background",
                "action.undo": "Undo",
                "action.ungroup": "Ungroup",
                "action.zoom-in": "Zoom in",
                "action.zoom-out": "Zoom out",
                "action.zoom-to-100": "Zoom to 100%",
                "action.zoom-to-fit": "Zoom to fit",
                "action.zoom-to-selection": "Zoom to selection",
                "color-style.black": "Black",
                "color-style.blue": "Blue",
                "color-style.green": "Green",
                "color-style.grey": "Grey",
                "color-style.light-blue": "Light blue",
                "color-style.light-green": "Light green",
                "color-style.light-red": "Light red",
                "color-style.light-violet": "Light violet",
                "color-style.orange": "Orange",
                "color-style.red": "Red",
                "color-style.violet": "Violet",
                "color-style.yellow": "Yellow",
                "fill-style.none": "None",
                "fill-style.semi": "Semi",
                "fill-style.solid": "Solid",
                "fill-style.pattern": "Pattern",
                "dash-style.dashed": "Dashed",
                "dash-style.dotted": "Dotted",
                "dash-style.draw": "Draw",
                "dash-style.solid": "Solid",
                "size-style.s": "Small",
                "size-style.m": "Medium",
                "size-style.l": "Large",
                "size-style.xl": "Extra large",
                "opacity-style.0.1": "10%",
                "opacity-style.0.25": "25%",
                "opacity-style.0.5": "50%",
                "opacity-style.0.75": "75%",
                "opacity-style.1": "100%",
                "font-style.draw": "Draw",
                "font-style.sans": "Sans",
                "font-style.serif": "Serif",
                "font-style.mono": "Mono",
                "align-style.start": "Start",
                "align-style.middle": "Middle",
                "align-style.end": "End",
                "align-style.justify": "Justify",
                "geo-style.arrow-down": "Arrow down",
                "geo-style.arrow-left": "Arrow left",
                "geo-style.arrow-right": "Arrow right",
                "geo-style.arrow-up": "Arrow up",
                "geo-style.diamond": "Diamond",
                "geo-style.ellipse": "Ellipse",
                "geo-style.hexagon": "Hexagon",
                "geo-style.octagon": "Octagon",
                "geo-style.oval": "Oval",
                "geo-style.cloud": "Cloud",
                "geo-style.pentagon": "Pentagon",
                "geo-style.rectangle": "Rectangle",
                "geo-style.rhombus-2": "Rhombus 2",
                "geo-style.rhombus": "Rhombus",
                "geo-style.star": "Star",
                "geo-style.trapezoid": "Trapezoid",
                "geo-style.triangle": "Triangle",
                "geo-style.x-box": "X box",
                "geo-style.check-box": "Check box",
                "arrowheadStart-style.none": "None",
                "arrowheadStart-style.arrow": "Arrow",
                "arrowheadStart-style.bar": "Bar",
                "arrowheadStart-style.diamond": "Diamond",
                "arrowheadStart-style.dot": "Dot",
                "arrowheadStart-style.inverted": "Inverted",
                "arrowheadStart-style.pipe": "Pipe",
                "arrowheadStart-style.square": "Square",
                "arrowheadStart-style.triangle": "Triangle",
                "arrowheadEnd-style.none": "None",
                "arrowheadEnd-style.arrow": "Arrow",
                "arrowheadEnd-style.bar": "Bar",
                "arrowheadEnd-style.diamond": "Diamond",
                "arrowheadEnd-style.dot": "Dot",
                "arrowheadEnd-style.inverted": "Inverted",
                "arrowheadEnd-style.pipe": "Pipe",
                "arrowheadEnd-style.square": "Square",
                "arrowheadEnd-style.triangle": "Triangle",
                "spline-style.line": "Line",
                "spline-style.cubic": "Cubic",
                "tool.select": "Select",
                "tool.hand": "Hand",
                "tool.draw": "Draw",
                "tool.eraser": "Eraser",
                "tool.arrow-down": "Arrow down",
                "tool.arrow-left": "Arrow left",
                "tool.arrow-right": "Arrow right",
                "tool.arrow-up": "Arrow up",
                "tool.arrow": "Arrow",
                "tool.cloud": "Cloud",
                "tool.diamond": "Diamond",
                "tool.ellipse": "Ellipse",
                "tool.hexagon": "Hexagon",
                "tool.highlight": "Highlight",
                "tool.line": "Line",
                "tool.octagon": "Octagon",
                "tool.oval": "Oval",
                "tool.pentagon": "Pentagon",
                "tool.rectangle": "Rectangle",
                "tool.rhombus": "Rhombus",
                "tool.star": "Star",
                "tool.trapezoid": "Trapezoid",
                "tool.triangle": "Triangle",
                "tool.x-box": "X box",
                "tool.check-box": "Check box",
                "tool.asset": "Asset",
                "tool.frame": "Frame",
                "tool.note": "Note",
                "tool.laser": "Laser",
                "tool.embed": "Embed",
                "tool.text": "Text",
                "menu.title": "Menu",
                "menu.copy-as": "Copy as",
                "menu.edit": "Edit",
                "menu.export-as": "Export as",
                "menu.file": "File",
                "menu.language": "Language",
                "menu.preferences": "Preferences",
                "menu.view": "View",
                "context-menu.arrange": "Arrange",
                "context-menu.copy-as": "Copy as",
                "context-menu.export-as": "Export as",
                "context-menu.move-to-page": "Move to page",
                "context-menu.reorder": "Reorder",
                "page-menu.title": "Pages",
                "page-menu.create-new-page": "Create new page",
                "page-menu.max-page-count-reached": "Max pages reached",
                "page-menu.new-page-initial-name": "Page 1",
                "page-menu.edit-start": "Edit",
                "page-menu.edit-done": "Done",
                "page-menu.go-to-page": "Go to page",
                "page-menu.submenu.rename": "Rename",
                "page-menu.submenu.duplicate-page": "Duplicate",
                "page-menu.submenu.title": "Menu",
                "page-menu.submenu.move-down": "Move down",
                "page-menu.submenu.move-up": "Move up",
                "page-menu.submenu.delete": "Delete",
                "share-menu.title": "Share",
                "share-menu.save-note":
                    "Download this project to your computer as a .tldr file.",
                "share-menu.fork-note":
                    "Create a new shared project based on this snapshot.",
                "share-menu.share-project": "Share this project",
                "share-menu.default-project-name": "Shared Project",
                "share-menu.copy-link": "Copy share link",
                "share-menu.readonly-link": "Read-only",
                "share-menu.create-snapshot-link": "Copy snapshot link",
                "share-menu.snapshot-link-note":
                    "Capture and share this project as a read-only snapshot link.",
                "share-menu.copy-readonly-link": "Copy read-only link",
                "share-menu.offline-note":
                    "Create a new shared project based on your current project.",
                "share-menu.copy-link-note":
                    "Anyone with the link will be able to view and edit this project.",
                "share-menu.copy-readonly-link-note":
                    "Anyone with the link will be able to view (but not edit) this project.",
                "share-menu.project-too-large":
                    "Sorry, this project can't be shared because it's too large. We're working on it!",
                "share-menu.upload-failed":
                    "Sorry, we couldn't upload your project at the moment. Please try again or let us know if the problem persists.",
                "status.offline": "Offline",
                "status.online": "Online",
                "people-menu.title": "People",
                "people-menu.change-name": "Change name",
                "people-menu.change-color": "Change color",
                "people-menu.follow": "Following",
                "people-menu.following": "Following",
                "people-menu.leading": "Following You",
                "people-menu.user": "(You)",
                "people-menu.invite": "Invite others",
                "help-menu.title": "Help and resources",
                "help-menu.about": "About",
                "help-menu.discord": "Discord",
                "help-menu.github": "GitHub",
                "help-menu.keyboard-shortcuts": "Keyboard shortcuts",
                "help-menu.twitter": "Twitter",
                "actions-menu.title": "Actions",
                "edit-link-dialog.title": "Edit link",
                "edit-link-dialog.invalid-url": "A link must be a valid URL.",
                "edit-link-dialog.detail": "Links will open in a new tab.",
                "edit-link-dialog.url": "URL",
                "edit-link-dialog.clear": "Clear",
                "edit-link-dialog.save": "Continue",
                "edit-link-dialog.cancel": "Cancel",
                "embed-dialog.title": "Insert embed",
                "embed-dialog.back": "Back",
                "embed-dialog.create": "Create",
                "embed-dialog.cancel": "Cancel",
                "embed-dialog.url": "URL",
                "embed-dialog.instruction":
                    "Paste in the site's URL to create the embed.",
                "embed-dialog.invalid-url":
                    "We could not create an embed from that URL.",
                "edit-pages-dialog.move-down": "Move down",
                "edit-pages-dialog.move-up": "Move up",
                "shortcuts-dialog.title": "Keyboard shortcuts",
                "shortcuts-dialog.edit": "Edit",
                "shortcuts-dialog.file": "File",
                "shortcuts-dialog.preferences": "Preferences",
                "shortcuts-dialog.tools": "Tools",
                "shortcuts-dialog.transform": "Transform",
                "shortcuts-dialog.view": "View",
                "shortcuts-dialog.collaboration": "Collaboration",
                "home-project-dialog.title": "Home project",
                "home-project-dialog.description":
                    "This is your local home project. It's just for you!",
                "rename-project-dialog.title": "Rename project",
                "rename-project-dialog.cancel": "Cancel",
                "rename-project-dialog.rename": "Rename",
                "home-project-dialog.ok": "Ok",
                "style-panel.title": "Styles",
                "style-panel.align": "Align",
                "style-panel.vertical-align": "Vertical align",
                "style-panel.position": "Position",
                "style-panel.arrowheads": "Arrows",
                "style-panel.arrowhead-start": "Start",
                "style-panel.arrowhead-end": "End",
                "style-panel.color": "Color",
                "style-panel.dash": "Dash",
                "style-panel.fill": "Fill",
                "style-panel.font": "Font",
                "style-panel.geo": "Shape",
                "style-panel.mixed": "Mixed",
                "style-panel.opacity": "Opacity",
                "style-panel.size": "Size",
                "style-panel.spline": "Spline",
                "tool-panel.drawing": "Drawing",
                "tool-panel.shapes": "Shapes",
                "tool-panel.more": "More",
                "debug-panel.more": "More",
                "navigation-zone.toggle-minimap": "Toggle minimap",
                "navigation-zone.zoom": "Zoom",
                "focus-mode.toggle-focus-mode": "Toggle focus mode",
                "toast.close": "Close",
                "file-system.file-open-error.title": "Could not open file",
                "file-system.file-open-error.not-a-tldraw-file":
                    "The file you tried to open doesn't look like a tldraw file.",
                "file-system.file-open-error.file-format-version-too-new":
                    "The file you tried to open is from a newer version of tldraw. Please reload the page and try again.",
                "file-system.file-open-error.generic-corrupted-file":
                    "The file you tried to open is corrupted.",
                "file-system.confirm-open.title": "Overwrite current project?",
                "file-system.confirm-open.description":
                    "Opening a file will replace your current project and any unsaved changes will be lost. Are you sure you want to continue?",
                "file-system.confirm-open.cancel": "Cancel",
                "file-system.confirm-open.open": "Open file",
                "file-system.confirm-open.dont-show-again": "Don't ask again",
                "file-system.confirm-clear.title": "Clear current project?",
                "file-system.confirm-clear.description":
                    "Creating a new project will clear your current project and any unsaved changes will be lost. Are you sure you want to continue?",
                "file-system.confirm-clear.cancel": "Cancel",
                "file-system.confirm-clear.continue": "Continue",
                "file-system.confirm-clear.dont-show-again": "Don't ask again",
                "file-system.shared-document-file-open-error.title":
                    "Could not open file",
                "file-system.shared-document-file-open-error.description":
                    "Opening files from shared projects is not supported.",
                "sharing.confirm-leave.title": "Leave current project?",
                "sharing.confirm-leave.description":
                    "Are you sure you want to leave this shared project? You can return to it by navigating to its URL.",
                "sharing.confirm-leave.cancel": "Cancel",
                "sharing.confirm-leave.leave": "Leave",
                "sharing.confirm-leave.dont-show-again": "Don't ask again",
                "toast.error.export-fail.title": "Failed export",
                "toast.error.export-fail.desc": "Failed to export image",
                "toast.error.copy-fail.title": "Failed copy",
                "toast.error.copy-fail.desc": "Failed to copy image",
                "context.pages.new-page": "New page",
                "vscode.file-open.desc":
                    "We've updated this document to work with the current version of tldraw. If you'd like to keep the original version (which will work on old.tldraw.com), click below to create a backup.",
                "vscode.file-open.open": "Continue",
                "vscode.file-open.backup": "Backup",
                "vscode.file-open.backup-saved": "Backup saved",
                "vscode.file-open.backup-failed":
                    "Backup failed: this is not a .tldr file.",
                "vscode.file-open.dont-show-again": "Don't ask again",
                "cursor-chat.type-to-chat": "Type to chat...",
            },
            dc = {locale: "en", label: "English", messages: ox};
        async function Mee(e, t) {
            if (!(await fetch(t.translations.en)).ok)
                return console.warn("No main translations found."), dc;
            if (e === "en") return dc;
            const r = Jd.find((s) => s.locale === e);
            if (!r) return console.warn(`No translation found for locale ${e}`), dc;
            const i = await (await fetch(t.translations[r.locale])).json();
            if (!i) return console.warn(`No messages found for locale ${e}`), dc;
            const a = [];
            for (const s in dc.messages) i[s] || a.push(s);
            return (
                a.length > 0,
                    {locale: e, label: r.label, messages: {...dc.messages, ...i}}
            );
        }
        const y8 = y.createContext({}),
            zee = () => y.useContext(y8),
            Ree = ze(function ({overrides: t, children: n}) {
                const o = W().user.getLocale(),
                    i = rx(),
                    [a, s] = y.useState(() =>
                        t && t.en
                            ? {
                                locale: "en",
                                label: "English",
                                messages: {...ox, ...t.en},
                            }
                            : {locale: "en", label: "English", messages: ox}
                    );
                return (
                    y.useEffect(() => {
                        let l = !1;
                        async function c() {
                            const d = await Mee(o, i);
                            d &&
                            !l &&
                            (t && t[o]
                                ? s({...d, messages: {...d.messages, ...t[o]}})
                                : s(d));
                        }
                        return (
                            c(),
                                () => {
                                    l = !0;
                                }
                        );
                    }, [i, o, t]),
                        v.jsx(y8.Provider, {value: a, children: n})
                );
            });
        function Ee() {
            const e = zee();
            return y.useCallback(
                function (n) {
                    return e.messages[n] ?? n;
                },
                [e]
            );
        }
        function nme(e) {
            return e;
        }
        function Oee(e) {
            return v.jsx("svg", {
                width: 16,
                height: 16,
                viewBox: "0 0 16 16",
                ...e,
                children: v.jsxs("g", {
                    strokeWidth: 2,
                    fill: "none",
                    fillRule: "evenodd",
                    children: [
                        v.jsx("circle", {
                            strokeOpacity: 0.25,
                            cx: 8,
                            cy: 8,
                            r: 7,
                            stroke: "currentColor",
                        }),
                        v.jsx("path", {
                            strokeLinecap: "round",
                            d: "M15 8c0-4.5-4.5-7-7-7",
                            stroke: "currentColor",
                            children: v.jsx("animateTransform", {
                                attributeName: "transform",
                                type: "rotate",
                                from: "0 8 8",
                                to: "360 8 8",
                                dur: "1s",
                                repeatCount: "indefinite",
                            }),
                        }),
                    ],
                }),
            });
        }
        const ur = y.memo(function ({
                                        small: t,
                                        invertIcon: n,
                                        icon: r,
                                        color: o,
                                        className: i,
                                        ...a
                                    }) {
                const s = rx(),
                    l = s.icons[r] ?? s.icons["question-mark-circle"],
                    c = y.useRef(null);
                return (
                    y.useLayoutEffect(() => {
                        l ||
                        console.error(
                            `Icon not found: ${r}. Add it to the assetUrls.icons object.`
                        ),
                        c != null &&
                        c.current &&
                        (c.current.style.webkitMask = `url(${l}) center 100% / 100% no-repeat`);
                    }, [c, l, r]),
                        v.jsx("div", {
                            ...a,
                            ref: c,
                            className: me("tlui-icon", {"tlui-icon__small": t}, i),
                            style: {
                                color: o,
                                mask: `url(${l}) center 100% / 100% no-repeat`,
                                transform: n ? "scale(-1, 1)" : void 0,
                            },
                        })
                );
            }),
            w8 =
                typeof window > "u"
                    ? !1
                    : window.navigator.userAgent.toLowerCase().indexOf("mac") > -1,
            x8 = w8 ? "⌘" : "Ctrl",
            S8 = w8 ? "⌥" : "Alt";
        function Dee(e) {
            return e
                .split(",")[0]
                .split("")
                .map((t) => {
                    const n = t
                        .replace(/\$/g, x8)
                        .replace(/\?/g, S8)
                        .replace(/!/g, "⇧");
                    return n[0].toUpperCase() + n.slice(1);
                });
        }
        function Io(e) {
            return (
                "— " +
                e
                    .split(",")[0]
                    .split("")
                    .map((t) => {
                        const n = t
                            .replace(/\$/g, x8)
                            .replace(/\?/g, S8)
                            .replace(/!/g, "⇧");
                        return n[0].toUpperCase() + n.slice(1);
                    })
                    .join(" ")
            );
        }
        function vg({children: e}) {
            return v.jsx("kbd", {
                className: "tlui-kbd",
                children: Dee(e).map((t, n) => v.jsx("span", {children: t}, n)),
            });
        }
        const se = y.forwardRef(function (
                {
                    label: t,
                    icon: n,
                    invertIcon: r,
                    iconLeft: o,
                    smallIcon: i,
                    kbd: a,
                    isChecked: s = !1,
                    type: l,
                    children: c,
                    spinner: d,
                    ...u
                },
                h
            ) {
                const p = Ee(),
                    m = t ? p(t) : "";
                return v.jsxs("button", {
                    ref: h,
                    draggable: !1,
                    type: "button",
                    ...u,
                    title: u.title ?? m,
                    className: me("tlui-button", `tlui-button__${l}`, u.className),
                    children: [
                        o &&
                        v.jsx(ur, {
                            icon: o,
                            className: "tlui-button__icon-left",
                            small: !0,
                        }),
                        c,
                        t &&
                        v.jsxs("span", {
                            className: "tlui-button__label",
                            draggable: !1,
                            children: [m, s && v.jsx(ur, {icon: "check"})],
                        }),
                        a && v.jsx(vg, {children: a}),
                        n &&
                        !d &&
                        v.jsx(ur, {icon: n, small: !!t || i, invertIcon: r}),
                        d && v.jsx(Oee, {}),
                    ],
                });
            }),
            Lee = t0.useId || (() => {});
        let jee = 0;
        function yi(e) {
            const [t, n] = y.useState(Lee());
            return (
                gs(() => {
                    e || n((r) => r ?? String(jee++));
                }, [e]),
                e || (t ? `radix-${t}` : "")
            );
        }
        const ix = "focusScope.autoFocusOnMount",
            ax = "focusScope.autoFocusOnUnmount",
            _8 = {bubbles: !1, cancelable: !0},
            sx = y.forwardRef((e, t) => {
                const {
                        loop: n = !1,
                        trapped: r = !1,
                        onMountAutoFocus: o,
                        onUnmountAutoFocus: i,
                        ...a
                    } = e,
                    [s, l] = y.useState(null),
                    c = vn(o),
                    d = vn(i),
                    u = y.useRef(null),
                    h = Ze(t, (f) => l(f)),
                    p = y.useRef({
                        paused: !1,
                        pause() {
                            this.paused = !0;
                        },
                        resume() {
                            this.paused = !1;
                        },
                    }).current;
                y.useEffect(() => {
                    if (r) {
                        let f = function (S) {
                                if (p.paused || !s) return;
                                const _ = S.target;
                                s.contains(_)
                                    ? (u.current = _)
                                    : va(u.current, {select: !0});
                            },
                            g = function (S) {
                                if (p.paused || !s) return;
                                const _ = S.relatedTarget;
                                _ !== null &&
                                (s.contains(_) || va(u.current, {select: !0}));
                            },
                            b = function (S) {
                                if (document.activeElement === document.body)
                                    for (const k of S)
                                        k.removedNodes.length > 0 && va(s);
                            };
                        document.addEventListener("focusin", f),
                            document.addEventListener("focusout", g);
                        const x = new MutationObserver(b);
                        return (
                            s && x.observe(s, {childList: !0, subtree: !0}),
                                () => {
                                    document.removeEventListener("focusin", f),
                                        document.removeEventListener("focusout", g),
                                        x.disconnect();
                                }
                        );
                    }
                }, [r, s, p.paused]),
                    y.useEffect(() => {
                        if (s) {
                            E8.add(p);
                            const f = document.activeElement;
                            if (!s.contains(f)) {
                                const b = new CustomEvent(ix, _8);
                                s.addEventListener(ix, c),
                                    s.dispatchEvent(b),
                                b.defaultPrevented ||
                                (Nee(Vee(k8(s)), {select: !0}),
                                document.activeElement === f && va(s));
                            }
                            return () => {
                                s.removeEventListener(ix, c),
                                    setTimeout(() => {
                                        const b = new CustomEvent(ax, _8);
                                        s.addEventListener(ax, d),
                                            s.dispatchEvent(b),
                                        b.defaultPrevented ||
                                        va(f ?? document.body, {
                                            select: !0,
                                        }),
                                            s.removeEventListener(ax, d),
                                            E8.remove(p);
                                    }, 0);
                            };
                        }
                    }, [s, c, d, p]);
                const m = y.useCallback(
                    (f) => {
                        if ((!n && !r) || p.paused) return;
                        const g =
                                f.key === "Tab" &&
                                !f.altKey &&
                                !f.ctrlKey &&
                                !f.metaKey,
                            b = document.activeElement;
                        if (g && b) {
                            const x = f.currentTarget,
                                [S, _] = Fee(x);
                            S && _
                                ? !f.shiftKey && b === _
                                    ? (f.preventDefault(), n && va(S, {select: !0}))
                                    : f.shiftKey &&
                                    b === S &&
                                    (f.preventDefault(), n && va(_, {select: !0}))
                                : b === x && f.preventDefault();
                        }
                    },
                    [n, r, p.paused]
                );
                return y.createElement(
                    De.div,
                    J({tabIndex: -1}, a, {ref: h, onKeyDown: m})
                );
            });
        function Nee(e, {select: t = !1} = {}) {
            const n = document.activeElement;
            for (const r of e)
                if ((va(r, {select: t}), document.activeElement !== n)) return;
        }
        function Fee(e) {
            const t = k8(e),
                n = C8(t, e),
                r = C8(t.reverse(), e);
            return [n, r];
        }
        function k8(e) {
            const t = [],
                n = document.createTreeWalker(e, NodeFilter.SHOW_ELEMENT, {
                    acceptNode: (r) => {
                        const o = r.tagName === "INPUT" && r.type === "hidden";
                        return r.disabled || r.hidden || o
                            ? NodeFilter.FILTER_SKIP
                            : r.tabIndex >= 0
                                ? NodeFilter.FILTER_ACCEPT
                                : NodeFilter.FILTER_SKIP;
                    },
                });
            for (; n.nextNode(); ) t.push(n.currentNode);
            return t;
        }
        function C8(e, t) {
            for (const n of e) if (!Bee(n, {upTo: t})) return n;
        }
        function Bee(e, {upTo: t}) {
            if (getComputedStyle(e).visibility === "hidden") return !0;
            for (; e; ) {
                if (t !== void 0 && e === t) return !1;
                if (getComputedStyle(e).display === "none") return !0;
                e = e.parentElement;
            }
            return !1;
        }
        function Uee(e) {
            return e instanceof HTMLInputElement && "select" in e;
        }
        function va(e, {select: t = !1} = {}) {
            if (e && e.focus) {
                const n = document.activeElement;
                e.focus({preventScroll: !0}), e !== n && Uee(e) && t && e.select();
            }
        }
        const E8 = Hee();
        function Hee() {
            let e = [];
            return {
                add(t) {
                    const n = e[0];
                    t !== n && (n == null || n.pause()),
                        (e = P8(e, t)),
                        e.unshift(t);
                },
                remove(t) {
                    var n;
                    (e = P8(e, t)),
                    (n = e[0]) === null || n === void 0 || n.resume();
                },
            };
        }
        function P8(e, t) {
            const n = [...e],
                r = n.indexOf(t);
            return r !== -1 && n.splice(r, 1), n;
        }
        function Vee(e) {
            return e.filter((t) => t.tagName !== "A");
        }
        let lx = 0;
        function cx() {
            y.useEffect(() => {
                var e, t;
                const n = document.querySelectorAll("[data-radix-focus-guard]");
                return (
                    document.body.insertAdjacentElement(
                        "afterbegin",
                        (e = n[0]) !== null && e !== void 0 ? e : I8()
                    ),
                        document.body.insertAdjacentElement(
                            "beforeend",
                            (t = n[1]) !== null && t !== void 0 ? t : I8()
                        ),
                        lx++,
                        () => {
                            lx === 1 &&
                            document
                                .querySelectorAll("[data-radix-focus-guard]")
                                .forEach((r) => r.remove()),
                                lx--;
                        }
                );
            }, []);
        }
        function I8() {
            const e = document.createElement("span");
            return (
                e.setAttribute("data-radix-focus-guard", ""),
                    (e.tabIndex = 0),
                    (e.style.cssText =
                        "outline: none; opacity: 0; position: fixed; pointer-events: none"),
                    e
            );
        }
        var yt = function () {
            return (
                (yt =
                    Object.assign ||
                    function (t) {
                        for (var n, r = 1, o = arguments.length; r < o; r++) {
                            n = arguments[r];
                            for (var i in n)
                                Object.prototype.hasOwnProperty.call(n, i) &&
                                (t[i] = n[i]);
                        }
                        return t;
                    }),
                    yt.apply(this, arguments)
            );
        };
        function bg(e, t) {
            var n = {};
            for (var r in e)
                Object.prototype.hasOwnProperty.call(e, r) &&
                t.indexOf(r) < 0 &&
                (n[r] = e[r]);
            if (e != null && typeof Object.getOwnPropertySymbols == "function")
                for (
                    var o = 0, r = Object.getOwnPropertySymbols(e);
                    o < r.length;
                    o++
                )
                    t.indexOf(r[o]) < 0 &&
                    Object.prototype.propertyIsEnumerable.call(e, r[o]) &&
                    (n[r[o]] = e[r[o]]);
            return n;
        }
        function dx(e, t, n) {
            if (n || arguments.length === 2)
                for (var r = 0, o = t.length, i; r < o; r++)
                    (i || !(r in t)) &&
                    (i || (i = Array.prototype.slice.call(t, 0, r)),
                        (i[r] = t[r]));
            return e.concat(i || Array.prototype.slice.call(t));
        }
        typeof SuppressedError == "function" && SuppressedError;
        var uc = "right-scroll-bar-position",
            hc = "width-before-scroll-bar",
            Kee = "with-scroll-bars-hidden",
            Wee = "--removed-body-scroll-bar-size";
        function ux(e, t) {
            return typeof e == "function" ? e(t) : e && (e.current = t), e;
        }
        function Yee(e, t) {
            var n = y.useState(function () {
                return {
                    value: e,
                    callback: t,
                    facade: {
                        get current() {
                            return n.value;
                        },
                        set current(r) {
                            var o = n.value;
                            o !== r && ((n.value = r), n.callback(r, o));
                        },
                    },
                };
            })[0];
            return (n.callback = t), n.facade;
        }
        var T8 = new WeakMap();
        function hx(e, t) {
            var n = Yee(t || null, function (r) {
                return e.forEach(function (o) {
                    return ux(o, r);
                });
            });
            return (
                y.useLayoutEffect(
                    function () {
                        var r = T8.get(n);
                        if (r) {
                            var o = new Set(r),
                                i = new Set(e),
                                a = n.current;
                            o.forEach(function (s) {
                                i.has(s) || ux(s, null);
                            }),
                                i.forEach(function (s) {
                                    o.has(s) || ux(s, a);
                                });
                        }
                        T8.set(n, e);
                    },
                    [e]
                ),
                    n
            );
        }
        function Gee(e) {
            return e;
        }
        function Xee(e, t) {
            t === void 0 && (t = Gee);
            var n = [],
                r = !1,
                o = {
                    read: function () {
                        if (r)
                            throw new Error(
                                "Sidecar: could not `read` from an `assigned` medium. `read` could be used only with `useMedium`."
                            );
                        return n.length ? n[n.length - 1] : e;
                    },
                    useMedium: function (i) {
                        var a = t(i, r);
                        return (
                            n.push(a),
                                function () {
                                    n = n.filter(function (s) {
                                        return s !== a;
                                    });
                                }
                        );
                    },
                    assignSyncMedium: function (i) {
                        for (r = !0; n.length; ) {
                            var a = n;
                            (n = []), a.forEach(i);
                        }
                        n = {
                            push: function (s) {
                                return i(s);
                            },
                            filter: function () {
                                return n;
                            },
                        };
                    },
                    assignMedium: function (i) {
                        r = !0;
                        var a = [];
                        if (n.length) {
                            var s = n;
                            (n = []), s.forEach(i), (a = n);
                        }
                        var l = function () {
                                var d = a;
                                (a = []), d.forEach(i);
                            },
                            c = function () {
                                return Promise.resolve().then(l);
                            };
                        c(),
                            (n = {
                                push: function (d) {
                                    a.push(d), c();
                                },
                                filter: function (d) {
                                    return (a = a.filter(d)), n;
                                },
                            });
                    },
                };
            return o;
        }
        function px(e) {
            e === void 0 && (e = {});
            var t = Xee(null);
            return (t.options = yt({async: !0, ssr: !1}, e)), t;
        }
        var $8 = function (e) {
            var t = e.sideCar,
                n = bg(e, ["sideCar"]);
            if (!t)
                throw new Error(
                    "Sidecar: please provide `sideCar` property to import the right car"
                );
            var r = t.read();
            if (!r) throw new Error("Sidecar medium not found");
            return y.createElement(r, yt({}, n));
        };
        $8.isSideCarExport = !0;
        function fx(e, t) {
            return e.useMedium(t), $8;
        }
        var A8 = px(),
            mx = function () {},
            yg = y.forwardRef(function (e, t) {
                var n = y.useRef(null),
                    r = y.useState({
                        onScrollCapture: mx,
                        onWheelCapture: mx,
                        onTouchMoveCapture: mx,
                    }),
                    o = r[0],
                    i = r[1],
                    a = e.forwardProps,
                    s = e.children,
                    l = e.className,
                    c = e.removeScrollBar,
                    d = e.enabled,
                    u = e.shards,
                    h = e.sideCar,
                    p = e.noIsolation,
                    m = e.inert,
                    f = e.allowPinchZoom,
                    g = e.as,
                    b = g === void 0 ? "div" : g,
                    x = bg(e, [
                        "forwardProps",
                        "children",
                        "className",
                        "removeScrollBar",
                        "enabled",
                        "shards",
                        "sideCar",
                        "noIsolation",
                        "inert",
                        "allowPinchZoom",
                        "as",
                    ]),
                    S = h,
                    _ = hx([n, t]),
                    k = yt(yt({}, x), o);
                return y.createElement(
                    y.Fragment,
                    null,
                    d &&
                    y.createElement(S, {
                        sideCar: A8,
                        removeScrollBar: c,
                        shards: u,
                        noIsolation: p,
                        inert: m,
                        setCallbacks: i,
                        allowPinchZoom: !!f,
                        lockRef: n,
                    }),
                    a
                        ? y.cloneElement(
                            y.Children.only(s),
                            yt(yt({}, k), {ref: _})
                        )
                        : y.createElement(b, yt({}, k, {className: l, ref: _}), s)
                );
            });
        (yg.defaultProps = {enabled: !0, removeScrollBar: !0, inert: !1}),
            (yg.classNames = {fullWidth: hc, zeroRight: uc});
        var qee = function () {
            if (typeof __webpack_nonce__ < "u") return __webpack_nonce__;
        };
        function Zee() {
            if (!document) return null;
            var e = document.createElement("style");
            e.type = "text/css";
            var t = qee();
            return t && e.setAttribute("nonce", t), e;
        }
        function Qee(e, t) {
            e.styleSheet
                ? (e.styleSheet.cssText = t)
                : e.appendChild(document.createTextNode(t));
        }
        function Jee(e) {
            var t = document.head || document.getElementsByTagName("head")[0];
            t.appendChild(e);
        }
        var ete = function () {
                var e = 0,
                    t = null;
                return {
                    add: function (n) {
                        e == 0 && (t = Zee()) && (Qee(t, n), Jee(t)), e++;
                    },
                    remove: function () {
                        e--,
                        !e &&
                        t &&
                        (t.parentNode && t.parentNode.removeChild(t),
                            (t = null));
                    },
                };
            },
            tte = function () {
                var e = ete();
                return function (t, n) {
                    y.useEffect(
                        function () {
                            return (
                                e.add(t),
                                    function () {
                                        e.remove();
                                    }
                            );
                        },
                        [t && n]
                    );
                };
            },
            wg = function () {
                var e = tte(),
                    t = function (n) {
                        var r = n.styles,
                            o = n.dynamic;
                        return e(r, o), null;
                    };
                return t;
            },
            nte = {left: 0, top: 0, right: 0, gap: 0},
            gx = function (e) {
                return parseInt(e || "", 10) || 0;
            },
            rte = function (e) {
                var t = window.getComputedStyle(document.body),
                    n = t[e === "padding" ? "paddingLeft" : "marginLeft"],
                    r = t[e === "padding" ? "paddingTop" : "marginTop"],
                    o = t[e === "padding" ? "paddingRight" : "marginRight"];
                return [gx(n), gx(r), gx(o)];
            },
            ote = function (e) {
                if ((e === void 0 && (e = "margin"), typeof window > "u"))
                    return nte;
                var t = rte(e),
                    n = document.documentElement.clientWidth,
                    r = window.innerWidth;
                return {
                    left: t[0],
                    top: t[1],
                    right: t[2],
                    gap: Math.max(0, r - n + t[2] - t[0]),
                };
            },
            ite = wg(),
            ate = function (e, t, n, r) {
                var o = e.left,
                    i = e.top,
                    a = e.right,
                    s = e.gap;
                return (
                    n === void 0 && (n = "margin"),
                        `
  .`
                            .concat(
                                Kee,
                                ` {
   overflow: hidden `
                            )
                            .concat(
                                r,
                                `;
   padding-right: `
                            )
                            .concat(s, "px ")
                            .concat(
                                r,
                                `;
  }
  body {
    overflow: hidden `
                            )
                            .concat(
                                r,
                                `;
    overscroll-behavior: contain;
    `
                            )
                            .concat(
                                [
                                    t && "position: relative ".concat(r, ";"),
                                    n === "margin" &&
                                    `
    padding-left: `
                                        .concat(
                                            o,
                                            `px;
    padding-top: `
                                        )
                                        .concat(
                                            i,
                                            `px;
    padding-right: `
                                        )
                                        .concat(
                                            a,
                                            `px;
    margin-left:0;
    margin-top:0;
    margin-right: `
                                        )
                                        .concat(s, "px ")
                                        .concat(
                                            r,
                                            `;
    `
                                        ),
                                    n === "padding" &&
                                    "padding-right: "
                                        .concat(s, "px ")
                                        .concat(r, ";"),
                                ]
                                    .filter(Boolean)
                                    .join(""),
                                `
  }
  
  .`
                            )
                            .concat(
                                uc,
                                ` {
    right: `
                            )
                            .concat(s, "px ")
                            .concat(
                                r,
                                `;
  }
  
  .`
                            )
                            .concat(
                                hc,
                                ` {
    margin-right: `
                            )
                            .concat(s, "px ")
                            .concat(
                                r,
                                `;
  }
  
  .`
                            )
                            .concat(uc, " .")
                            .concat(
                                uc,
                                ` {
    right: 0 `
                            )
                            .concat(
                                r,
                                `;
  }
  
  .`
                            )
                            .concat(hc, " .")
                            .concat(
                                hc,
                                ` {
    margin-right: 0 `
                            )
                            .concat(
                                r,
                                `;
  }
  
  body {
    `
                            )
                            .concat(Wee, ": ")
                            .concat(
                                s,
                                `px;
  }
`
                            )
                );
            },
            vx = function (e) {
                var t = e.noRelative,
                    n = e.noImportant,
                    r = e.gapMode,
                    o = r === void 0 ? "margin" : r,
                    i = y.useMemo(
                        function () {
                            return ote(o);
                        },
                        [o]
                    );
                return y.createElement(ite, {
                    styles: ate(i, !t, o, n ? "" : "!important"),
                });
            },
            bx = !1;
        if (typeof window < "u")
            try {
                var xg = Object.defineProperty({}, "passive", {
                    get: function () {
                        return (bx = !0), !0;
                    },
                });
                window.addEventListener("test", xg, xg),
                    window.removeEventListener("test", xg, xg);
            } catch {
                bx = !1;
            }
        var pc = bx ? {passive: !1} : !1,
            ste = function (e) {
                return e.tagName === "TEXTAREA";
            },
            M8 = function (e, t) {
                var n = window.getComputedStyle(e);
                return (
                    n[t] !== "hidden" &&
                    !(n.overflowY === n.overflowX && !ste(e) && n[t] === "visible")
                );
            },
            lte = function (e) {
                return M8(e, "overflowY");
            },
            cte = function (e) {
                return M8(e, "overflowX");
            },
            z8 = function (e, t) {
                var n = t;
                do {
                    typeof ShadowRoot < "u" &&
                    n instanceof ShadowRoot &&
                    (n = n.host);
                    var r = R8(e, n);
                    if (r) {
                        var o = O8(e, n),
                            i = o[1],
                            a = o[2];
                        if (i > a) return !0;
                    }
                    n = n.parentNode;
                } while (n && n !== document.body);
                return !1;
            },
            dte = function (e) {
                var t = e.scrollTop,
                    n = e.scrollHeight,
                    r = e.clientHeight;
                return [t, n, r];
            },
            ute = function (e) {
                var t = e.scrollLeft,
                    n = e.scrollWidth,
                    r = e.clientWidth;
                return [t, n, r];
            },
            R8 = function (e, t) {
                return e === "v" ? lte(t) : cte(t);
            },
            O8 = function (e, t) {
                return e === "v" ? dte(t) : ute(t);
            },
            hte = function (e, t) {
                return e === "h" && t === "rtl" ? -1 : 1;
            },
            pte = function (e, t, n, r, o) {
                var i = hte(e, window.getComputedStyle(t).direction),
                    a = i * r,
                    s = n.target,
                    l = t.contains(s),
                    c = !1,
                    d = a > 0,
                    u = 0,
                    h = 0;
                do {
                    var p = O8(e, s),
                        m = p[0],
                        f = p[1],
                        g = p[2],
                        b = f - g - i * m;
                    (m || b) && R8(e, s) && ((u += b), (h += m)),
                        (s = s.parentNode);
                } while (
                    (!l && s !== document.body) ||
                    (l && (t.contains(s) || t === s))
                    );
                return (
                    ((d && ((o && u === 0) || (!o && a > u))) ||
                        (!d && ((o && h === 0) || (!o && -a > h)))) &&
                    (c = !0),
                        c
                );
            },
            Sg = function (e) {
                return "changedTouches" in e
                    ? [e.changedTouches[0].clientX, e.changedTouches[0].clientY]
                    : [0, 0];
            },
            D8 = function (e) {
                return [e.deltaX, e.deltaY];
            },
            L8 = function (e) {
                return e && "current" in e ? e.current : e;
            },
            fte = function (e, t) {
                return e[0] === t[0] && e[1] === t[1];
            },
            mte = function (e) {
                return `
  .block-interactivity-`
                    .concat(
                        e,
                        ` {pointer-events: none;}
  .allow-interactivity-`
                    )
                    .concat(
                        e,
                        ` {pointer-events: all;}
`
                    );
            },
            gte = 0,
            fc = [];
        function vte(e) {
            var t = y.useRef([]),
                n = y.useRef([0, 0]),
                r = y.useRef(),
                o = y.useState(gte++)[0],
                i = y.useState(function () {
                    return wg();
                })[0],
                a = y.useRef(e);
            y.useEffect(
                function () {
                    a.current = e;
                },
                [e]
            ),
                y.useEffect(
                    function () {
                        if (e.inert) {
                            document.body.classList.add(
                                "block-interactivity-".concat(o)
                            );
                            var f = dx(
                                [e.lockRef.current],
                                (e.shards || []).map(L8),
                                !0
                            ).filter(Boolean);
                            return (
                                f.forEach(function (g) {
                                    return g.classList.add(
                                        "allow-interactivity-".concat(o)
                                    );
                                }),
                                    function () {
                                        document.body.classList.remove(
                                            "block-interactivity-".concat(o)
                                        ),
                                            f.forEach(function (g) {
                                                return g.classList.remove(
                                                    "allow-interactivity-".concat(o)
                                                );
                                            });
                                    }
                            );
                        }
                    },
                    [e.inert, e.lockRef.current, e.shards]
                );
            var s = y.useCallback(function (f, g) {
                    if ("touches" in f && f.touches.length === 2)
                        return !a.current.allowPinchZoom;
                    var b = Sg(f),
                        x = n.current,
                        S = "deltaX" in f ? f.deltaX : x[0] - b[0],
                        _ = "deltaY" in f ? f.deltaY : x[1] - b[1],
                        k,
                        C = f.target,
                        P = Math.abs(S) > Math.abs(_) ? "h" : "v";
                    if ("touches" in f && P === "h" && C.type === "range")
                        return !1;
                    var I = z8(P, C);
                    if (!I) return !0;
                    if (
                        (I
                            ? (k = P)
                            : ((k = P === "v" ? "h" : "v"), (I = z8(P, C))),
                            !I)
                    )
                        return !1;
                    if (
                        (!r.current &&
                        "changedTouches" in f &&
                        (S || _) &&
                        (r.current = k),
                            !k)
                    )
                        return !0;
                    var $ = r.current || k;
                    return pte($, g, f, $ === "h" ? S : _, !0);
                }, []),
                l = y.useCallback(function (f) {
                    var g = f;
                    if (!(!fc.length || fc[fc.length - 1] !== i)) {
                        var b = "deltaY" in g ? D8(g) : Sg(g),
                            x = t.current.filter(function (k) {
                                return (
                                    k.name === g.type &&
                                    k.target === g.target &&
                                    fte(k.delta, b)
                                );
                            })[0];
                        if (x && x.should) {
                            g.cancelable && g.preventDefault();
                            return;
                        }
                        if (!x) {
                            var S = (a.current.shards || [])
                                    .map(L8)
                                    .filter(Boolean)
                                    .filter(function (k) {
                                        return k.contains(g.target);
                                    }),
                                _ =
                                    S.length > 0
                                        ? s(g, S[0])
                                        : !a.current.noIsolation;
                            _ && g.cancelable && g.preventDefault();
                        }
                    }
                }, []),
                c = y.useCallback(function (f, g, b, x) {
                    var S = {name: f, delta: g, target: b, should: x};
                    t.current.push(S),
                        setTimeout(function () {
                            t.current = t.current.filter(function (_) {
                                return _ !== S;
                            });
                        }, 1);
                }, []),
                d = y.useCallback(function (f) {
                    (n.current = Sg(f)), (r.current = void 0);
                }, []),
                u = y.useCallback(function (f) {
                    c(f.type, D8(f), f.target, s(f, e.lockRef.current));
                }, []),
                h = y.useCallback(function (f) {
                    c(f.type, Sg(f), f.target, s(f, e.lockRef.current));
                }, []);
            y.useEffect(function () {
                return (
                    fc.push(i),
                        e.setCallbacks({
                            onScrollCapture: u,
                            onWheelCapture: u,
                            onTouchMoveCapture: h,
                        }),
                        document.addEventListener("wheel", l, pc),
                        document.addEventListener("touchmove", l, pc),
                        document.addEventListener("touchstart", d, pc),
                        function () {
                            (fc = fc.filter(function (f) {
                                return f !== i;
                            })),
                                document.removeEventListener("wheel", l, pc),
                                document.removeEventListener("touchmove", l, pc),
                                document.removeEventListener("touchstart", d, pc);
                        }
                );
            }, []);
            var p = e.removeScrollBar,
                m = e.inert;
            return y.createElement(
                y.Fragment,
                null,
                m ? y.createElement(i, {styles: mte(o)}) : null,
                p ? y.createElement(vx, {gapMode: "margin"}) : null
            );
        }
        const bte = fx(A8, vte);
        var j8 = y.forwardRef(function (e, t) {
            return y.createElement(yg, yt({}, e, {ref: t, sideCar: bte}));
        });
        j8.classNames = yg.classNames;
        const yte = j8;
        var wte = function (e) {
                if (typeof document > "u") return null;
                var t = Array.isArray(e) ? e[0] : e;
                return t.ownerDocument.body;
            },
            mc = new WeakMap(),
            _g = new WeakMap(),
            kg = {},
            yx = 0,
            N8 = function (e) {
                return e && (e.host || N8(e.parentNode));
            },
            xte = function (e, t) {
                return t
                    .map(function (n) {
                        if (e.contains(n)) return n;
                        var r = N8(n);
                        return r && e.contains(r)
                            ? r
                            : (console.error(
                                "aria-hidden",
                                n,
                                "in not contained inside",
                                e,
                                ". Doing nothing"
                            ),
                                null);
                    })
                    .filter(function (n) {
                        return !!n;
                    });
            },
            Ste = function (e, t, n, r) {
                var o = xte(t, Array.isArray(e) ? e : [e]);
                kg[n] || (kg[n] = new WeakMap());
                var i = kg[n],
                    a = [],
                    s = new Set(),
                    l = new Set(o),
                    c = function (u) {
                        !u || s.has(u) || (s.add(u), c(u.parentNode));
                    };
                o.forEach(c);
                var d = function (u) {
                    !u ||
                    l.has(u) ||
                    Array.prototype.forEach.call(u.children, function (h) {
                        if (s.has(h)) d(h);
                        else {
                            var p = h.getAttribute(r),
                                m = p !== null && p !== "false",
                                f = (mc.get(h) || 0) + 1,
                                g = (i.get(h) || 0) + 1;
                            mc.set(h, f),
                                i.set(h, g),
                                a.push(h),
                            f === 1 && m && _g.set(h, !0),
                            g === 1 && h.setAttribute(n, "true"),
                            m || h.setAttribute(r, "true");
                        }
                    });
                };
                return (
                    d(t),
                        s.clear(),
                        yx++,
                        function () {
                            a.forEach(function (u) {
                                var h = mc.get(u) - 1,
                                    p = i.get(u) - 1;
                                mc.set(u, h),
                                    i.set(u, p),
                                h ||
                                (_g.has(u) || u.removeAttribute(r),
                                    _g.delete(u)),
                                p || u.removeAttribute(n);
                            }),
                                yx--,
                            yx ||
                            ((mc = new WeakMap()),
                                (mc = new WeakMap()),
                                (_g = new WeakMap()),
                                (kg = {}));
                        }
                );
            },
            wx = function (e, t, n) {
                n === void 0 && (n = "data-aria-hidden");
                var r = Array.from(Array.isArray(e) ? e : [e]),
                    o = t || wte(e);
                return o
                    ? (r.push.apply(
                        r,
                        Array.from(o.querySelectorAll("[aria-live]"))
                    ),
                        Ste(r, o, n, "aria-hidden"))
                    : function () {
                        return null;
                    };
            };
        const F8 = "Dialog",
            [B8, rme] = Po(F8),
            [_te, To] = B8(F8),
            kte = (e) => {
                const {
                        __scopeDialog: t,
                        children: n,
                        open: r,
                        defaultOpen: o,
                        onOpenChange: i,
                        modal: a = !0,
                    } = e,
                    s = y.useRef(null),
                    l = y.useRef(null),
                    [c = !1, d] = ga({prop: r, defaultProp: o, onChange: i});
                return y.createElement(
                    _te,
                    {
                        scope: t,
                        triggerRef: s,
                        contentRef: l,
                        contentId: yi(),
                        titleId: yi(),
                        descriptionId: yi(),
                        open: c,
                        onOpenChange: d,
                        onOpenToggle: y.useCallback(() => d((u) => !u), [d]),
                        modal: a,
                    },
                    n
                );
            },
            U8 = "DialogPortal",
            [Cte, H8] = B8(U8, {forceMount: void 0}),
            Ete = (e) => {
                const {
                        __scopeDialog: t,
                        forceMount: n,
                        children: r,
                        container: o,
                    } = e,
                    i = To(U8, t);
                return y.createElement(
                    Cte,
                    {scope: t, forceMount: n},
                    y.Children.map(r, (a) =>
                        y.createElement(
                            to,
                            {present: n || i.open},
                            y.createElement(hg, {asChild: !0, container: o}, a)
                        )
                    )
                );
            },
            xx = "DialogOverlay",
            Pte = y.forwardRef((e, t) => {
                const n = H8(xx, e.__scopeDialog),
                    {forceMount: r = n.forceMount, ...o} = e,
                    i = To(xx, e.__scopeDialog);
                return i.modal
                    ? y.createElement(
                        to,
                        {present: r || i.open},
                        y.createElement(Ite, J({}, o, {ref: t}))
                    )
                    : null;
            }),
            Ite = y.forwardRef((e, t) => {
                const {__scopeDialog: n, ...r} = e,
                    o = To(xx, n);
                return y.createElement(
                    yte,
                    {as: ms, allowPinchZoom: !0, shards: [o.contentRef]},
                    y.createElement(
                        De.div,
                        J({"data-state": Z8(o.open)}, r, {
                            ref: t,
                            style: {pointerEvents: "auto", ...r.style},
                        })
                    )
                );
            }),
            gc = "DialogContent",
            V8 = y.forwardRef((e, t) => {
                const n = H8(gc, e.__scopeDialog),
                    {forceMount: r = n.forceMount, ...o} = e,
                    i = To(gc, e.__scopeDialog);
                return y.createElement(
                    to,
                    {present: r || i.open},
                    i.modal
                        ? y.createElement(Tte, J({}, o, {ref: t}))
                        : y.createElement($te, J({}, o, {ref: t}))
                );
            }),
            Tte = y.forwardRef((e, t) => {
                const n = To(gc, e.__scopeDialog),
                    r = y.useRef(null),
                    o = Ze(t, n.contentRef, r);
                return (
                    y.useEffect(() => {
                        const i = r.current;
                        if (i) return wx(i);
                    }, []),
                        y.createElement(
                            K8,
                            J({}, e, {
                                ref: o,
                                trapFocus: n.open,
                                disableOutsidePointerEvents: !0,
                                onCloseAutoFocus: ae(e.onCloseAutoFocus, (i) => {
                                    var a;
                                    i.preventDefault(),
                                    (a = n.triggerRef.current) === null ||
                                    a === void 0 ||
                                    a.focus();
                                }),
                                onPointerDownOutside: ae(
                                    e.onPointerDownOutside,
                                    (i) => {
                                        const a = i.detail.originalEvent,
                                            s = a.button === 0 && a.ctrlKey === !0;
                                        (a.button === 2 || s) && i.preventDefault();
                                    }
                                ),
                                onFocusOutside: ae(e.onFocusOutside, (i) =>
                                    i.preventDefault()
                                ),
                            })
                        )
                );
            }),
            $te = y.forwardRef((e, t) => {
                const n = To(gc, e.__scopeDialog),
                    r = y.useRef(!1),
                    o = y.useRef(!1);
                return y.createElement(
                    K8,
                    J({}, e, {
                        ref: t,
                        trapFocus: !1,
                        disableOutsidePointerEvents: !1,
                        onCloseAutoFocus: (i) => {
                            var a;
                            if (
                                ((a = e.onCloseAutoFocus) === null ||
                                a === void 0 ||
                                a.call(e, i),
                                    !i.defaultPrevented)
                            ) {
                                var s;
                                r.current ||
                                (s = n.triggerRef.current) === null ||
                                s === void 0 ||
                                s.focus(),
                                    i.preventDefault();
                            }
                            (r.current = !1), (o.current = !1);
                        },
                        onInteractOutside: (i) => {
                            var a, s;
                            (a = e.onInteractOutside) === null ||
                            a === void 0 ||
                            a.call(e, i),
                            i.defaultPrevented ||
                            ((r.current = !0),
                            i.detail.originalEvent.type === "pointerdown" &&
                            (o.current = !0));
                            const l = i.target;
                            ((s = n.triggerRef.current) === null || s === void 0
                                ? void 0
                                : s.contains(l)) && i.preventDefault(),
                            i.detail.originalEvent.type === "focusin" &&
                            o.current &&
                            i.preventDefault();
                        },
                    })
                );
            }),
            K8 = y.forwardRef((e, t) => {
                const {
                        __scopeDialog: n,
                        trapFocus: r,
                        onOpenAutoFocus: o,
                        onCloseAutoFocus: i,
                        ...a
                    } = e,
                    s = To(gc, n),
                    l = y.useRef(null),
                    c = Ze(t, l);
                return (
                    cx(),
                        y.createElement(
                            y.Fragment,
                            null,
                            y.createElement(
                                sx,
                                {
                                    asChild: !0,
                                    loop: !0,
                                    trapped: r,
                                    onMountAutoFocus: o,
                                    onUnmountAutoFocus: i,
                                },
                                y.createElement(
                                    ug,
                                    J(
                                        {
                                            role: "dialog",
                                            id: s.contentId,
                                            "aria-describedby": s.descriptionId,
                                            "aria-labelledby": s.titleId,
                                            "data-state": Z8(s.open),
                                        },
                                        a,
                                        {ref: c, onDismiss: () => s.onOpenChange(!1)}
                                    )
                                )
                            ),
                            !1
                        )
                );
            }),
            W8 = "DialogTitle",
            Y8 = y.forwardRef((e, t) => {
                const {__scopeDialog: n, ...r} = e,
                    o = To(W8, n);
                return y.createElement(De.h2, J({id: o.titleId}, r, {ref: t}));
            }),
            G8 = "DialogDescription",
            Ate = y.forwardRef((e, t) => {
                const {__scopeDialog: n, ...r} = e,
                    o = To(G8, n);
                return y.createElement(De.p, J({id: o.descriptionId}, r, {ref: t}));
            }),
            X8 = "DialogClose",
            q8 = y.forwardRef((e, t) => {
                const {__scopeDialog: n, ...r} = e,
                    o = To(X8, n);
                return y.createElement(
                    De.button,
                    J({type: "button"}, r, {
                        ref: t,
                        onClick: ae(e.onClick, () => o.onOpenChange(!1)),
                    })
                );
            });
        function Z8(e) {
            return e ? "open" : "closed";
        }
        const Mte = kte,
            zte = Ete,
            Rte = Pte,
            Ote = V8;
        function Cg({className: e, children: t}) {
            return v.jsx("div", {
                className: me("tlui-dialog__header", e),
                children: t,
            });
        }
        function Eg({className: e, children: t}) {
            return v.jsx(Y8, {
                dir: "ltr",
                className: me("tlui-dialog__header__title", e),
                children: t,
            });
        }
        function Pg() {
            return v.jsx("div", {
                className: "tlui-dialog__header__close",
                children: v.jsx(q8, {
                    "data-testid": "dialog.close",
                    dir: "ltr",
                    asChild: !0,
                    children: v.jsx(se, {
                        type: "icon",
                        "aria-label": "Close",
                        onTouchEnd: (e) => e.target.click(),
                        children: v.jsx(ur, {small: !0, icon: "cross-2"}),
                    }),
                }),
            });
        }
        function Ku({className: e, children: t, style: n}) {
            return v.jsx("div", {
                className: me("tlui-dialog__body", e),
                style: n,
                children: t,
            });
        }
        function Sx({className: e, children: t}) {
            return v.jsx("div", {
                className: me("tlui-dialog__footer", e),
                children: t,
            });
        }
        const _x = y.forwardRef(function (
            {
                className: t,
                label: n,
                icon: r,
                iconLeft: o,
                autoselect: i = !1,
                autofocus: a = !1,
                defaultValue: s,
                placeholder: l,
                onComplete: c,
                onValueChange: d,
                onCancel: u,
                onBlur: h,
                shouldManuallyMaintainScrollPositionWhenFocused: p = !1,
                children: m,
                value: f,
            },
            g
        ) {
            const b = W(),
                x = y.useRef(null);
            y.useImperativeHandle(g, () => x.current);
            const S = Ee(),
                _ = y.useRef(s ?? ""),
                k = y.useRef(s ?? ""),
                [C, P] = y.useState(!1),
                I = y.useCallback(
                    (D) => {
                        P(!0);
                        const j = D.currentTarget;
                        (k.current = j.value),
                            requestAnimationFrame(() => {
                                i && j.select();
                            });
                    },
                    [i]
                ),
                $ = y.useCallback(
                    (D) => {
                        const j = D.currentTarget.value;
                        (k.current = j), d == null || d(j);
                    },
                    [d]
                ),
                T = y.useCallback(
                    (D) => {
                        switch (D.key) {
                            case "Enter": {
                                D.currentTarget.blur(),
                                    zt(D),
                                c == null || c(D.currentTarget.value);
                                break;
                            }
                            case "Escape": {
                                (D.currentTarget.value = _.current),
                                    D.currentTarget.blur(),
                                    zt(D),
                                u == null || u(D.currentTarget.value);
                                break;
                            }
                        }
                    },
                    [c, u]
                ),
                R = y.useCallback(
                    (D) => {
                        P(!1);
                        const j = D.currentTarget.value;
                        h == null || h(j);
                    },
                    [h]
                );
            return (
                y.useEffect(() => {
                    if (!b.environment.isIos) return;
                    const D = window.visualViewport;
                    if (C && p && D) {
                        const j = () => {
                            var z;
                            (z = x.current) == null ||
                            z.scrollIntoView({block: "center"});
                        };
                        return (
                            D.addEventListener("resize", j),
                                D.addEventListener("scroll", j),
                                requestAnimationFrame(() => {
                                    var z;
                                    (z = x.current) == null ||
                                    z.scrollIntoView({block: "center"});
                                }),
                                () => {
                                    D.removeEventListener("resize", j),
                                        D.removeEventListener("scroll", j);
                                }
                        );
                    }
                }, [b, C, p]),
                    v.jsxs("div", {
                        draggable: !1,
                        className: "tlui-input__wrapper",
                        children: [
                            m,
                            n && v.jsx("label", {children: S(n)}),
                            o &&
                            v.jsx(ur, {
                                icon: o,
                                className: "tlui-icon-left",
                                small: !0,
                            }),
                            v.jsx("input", {
                                ref: x,
                                className: me("tlui-input", t),
                                type: "text",
                                defaultValue: s,
                                onKeyUp: T,
                                onChange: $,
                                onFocus: I,
                                onBlur: R,
                                autoFocus: a,
                                placeholder: l,
                                value: f,
                            }),
                            r && v.jsx(ur, {icon: r, small: !!n}),
                        ],
                    })
            );
        });
        function Q8(e) {
            return rr.isValid(e)
                ? {isValid: !0, hasProtocol: !0}
                : rr.isValid("https://" + e)
                    ? {isValid: !0, hasProtocol: !1}
                    : {isValid: !1, hasProtocol: !1};
        }
        const Dte = ze(function ({onClose: t}) {
                const r = W().getOnlySelectedShape();
                return r && "url" in r.props && typeof r.props.url == "string"
                    ? v.jsx(Lte, {onClose: t, selectedShape: r})
                    : null;
            }),
            Lte = ze(function ({onClose: t, selectedShape: n}) {
                const r = W(),
                    o = Ee(),
                    i = y.useRef(null);
                y.useEffect(() => {
                    requestAnimationFrame(() => {
                        var m;
                        return (m = i.current) == null ? void 0 : m.focus();
                    });
                }, []);
                const a = y.useRef(n.props.url),
                    [s, l] = y.useState(() => {
                        const m = Q8(n.props.url),
                            f =
                                m.isValid === !0
                                    ? m.hasProtocol
                                        ? n.props.url
                                        : "https://" + n.props.url
                                    : "https://";
                        return {actual: f, safe: f, valid: !0};
                    }),
                    c = y.useCallback((m) => {
                        const f = m.replace(
                                /https?:\/\/(https?:\/\/)/,
                                (x, S) => S
                            ),
                            g = Q8(f),
                            b =
                                g.isValid === !0
                                    ? g.hasProtocol
                                        ? f
                                        : "https://" + f
                                    : "https://";
                        l({actual: f, safe: b, valid: g.isValid});
                    }, []),
                    d = y.useCallback(() => {
                        const m = r.getOnlySelectedShape();
                        m &&
                        (r.updateShapes([
                            {id: m.id, type: m.type, props: {url: ""}},
                        ]),
                            t());
                    }, [r, t]),
                    u = y.useCallback(() => {
                        const m = r.getOnlySelectedShape();
                        m &&
                        (m &&
                        "url" in m.props &&
                        m.props.url !== s.safe &&
                        r.updateShapes([
                            {id: m.id, type: m.type, props: {url: s.safe}},
                        ]),
                            t());
                    }, [r, t, s]),
                    h = y.useCallback(() => {
                        t();
                    }, [t]);
                if (!n) return t(), null;
                const p = a.current && !s.valid;
                return v.jsxs(v.Fragment, {
                    children: [
                        v.jsxs(Cg, {
                            children: [
                                v.jsx(Eg, {children: o("edit-link-dialog.title")}),
                                v.jsx(Pg, {}),
                            ],
                        }),
                        v.jsx(Ku, {
                            children: v.jsxs("div", {
                                className: "tlui-edit-link-dialog",
                                children: [
                                    v.jsx(_x, {
                                        ref: i,
                                        className: "tlui-edit-link-dialog__input",
                                        label: "edit-link-dialog.url",
                                        autofocus: !0,
                                        value: s.actual,
                                        onValueChange: c,
                                        onComplete: u,
                                        onCancel: h,
                                    }),
                                    v.jsx("div", {
                                        children: s.valid
                                            ? o("edit-link-dialog.detail")
                                            : o("edit-link-dialog.invalid-url"),
                                    }),
                                ],
                            }),
                        }),
                        v.jsxs(Sx, {
                            className: "tlui-dialog__footer__actions",
                            children: [
                                v.jsx(se, {
                                    type: "normal",
                                    onClick: h,
                                    onTouchEnd: h,
                                    children: o("edit-link-dialog.cancel"),
                                }),
                                p
                                    ? v.jsx(se, {
                                        type: "danger",
                                        onTouchEnd: d,
                                        onClick: d,
                                        children: o("edit-link-dialog.clear"),
                                    })
                                    : v.jsx(se, {
                                        type: "primary",
                                        disabled: !s.valid,
                                        onTouchEnd: u,
                                        onClick: u,
                                        children: o("edit-link-dialog.save"),
                                    }),
                            ],
                        }),
                    ],
                });
            }),
            J8 = ze(function ({onClose: t}) {
                const n = W(),
                    r = Ee(),
                    o = rx(),
                    [i, a] = y.useState(null),
                    [s, l] = y.useState(""),
                    [c, d] = y.useState(null),
                    [u, h] = y.useState(!1),
                    p = y.useRef(-1);
                return v.jsxs(v.Fragment, {
                    children: [
                        v.jsxs(Cg, {
                            children: [
                                v.jsx(Eg, {
                                    children: i
                                        ? `${r("embed-dialog.title")} — ${i.title}`
                                        : r("embed-dialog.title"),
                                }),
                                v.jsx(Pg, {}),
                            ],
                        }),
                        i
                            ? v.jsxs(v.Fragment, {
                                children: [
                                    v.jsxs(Ku, {
                                        className: "tlui-embed-dialog__enter",
                                        children: [
                                            v.jsx(_x, {
                                                className:
                                                    "tlui-embed-dialog__input",
                                                label: "embed-dialog.url",
                                                placeholder: "http://example.com",
                                                autofocus: !0,
                                                onValueChange: (m) => {
                                                    l(m);
                                                    const f = vi(m);
                                                    d(
                                                        f &&
                                                        f.definition.type ===
                                                        i.type
                                                            ? f
                                                            : null
                                                    ),
                                                        h(!1),
                                                        clearTimeout(p.current),
                                                        (p.current = setTimeout(
                                                            () => h(!f),
                                                            320
                                                        ));
                                                },
                                            }),
                                            s === ""
                                                ? v.jsxs("div", {
                                                    className:
                                                        "tlui-embed-dialog__instruction",
                                                    children: [
                                                        v.jsx("span", {
                                                            children: r(
                                                                "embed-dialog.instruction"
                                                            ),
                                                        }),
                                                        " ",
                                                        i.instructionLink &&
                                                        v.jsxs("a", {
                                                            target: "_blank",
                                                            rel: "noopener noreferrer",
                                                            href: i.instructionLink,
                                                            className:
                                                                "tlui-embed-dialog__instruction__link",
                                                            children: [
                                                                "Learn more.",
                                                                v.jsx(ur, {
                                                                    icon: "external-link",
                                                                    small: !0,
                                                                }),
                                                            ],
                                                        }),
                                                    ],
                                                })
                                                : v.jsx("div", {
                                                    className:
                                                        "tlui-embed-dialog__warning",
                                                    children: u
                                                        ? r(
                                                            "embed-dialog.invalid-url"
                                                        )
                                                        : " ",
                                                }),
                                        ],
                                    }),
                                    v.jsxs(Sx, {
                                        className: "tlui-dialog__footer__actions",
                                        children: [
                                            v.jsx(se, {
                                                type: "normal",
                                                onClick: () => {
                                                    a(null), d(null), l("");
                                                },
                                                label: "embed-dialog.back",
                                            }),
                                            v.jsx("div", {
                                                className: "tlui-embed__spacer",
                                            }),
                                            v.jsx(se, {
                                                type: "normal",
                                                label: "embed-dialog.cancel",
                                                onClick: t,
                                            }),
                                            v.jsx(se, {
                                                type: "primary",
                                                disabled: !c,
                                                label: "embed-dialog.create",
                                                onClick: () => {
                                                    c &&
                                                    (n.putExternalContent({
                                                        type: "embed",
                                                        url: s,
                                                        point: n.getViewportPageCenter(),
                                                        embed: c.definition,
                                                    }),
                                                        t());
                                                },
                                            }),
                                        ],
                                    }),
                                ],
                            })
                            : v.jsx(v.Fragment, {
                                children: v.jsx(Ku, {
                                    className: "tlui-embed-dialog__list",
                                    children: $l.map((m) =>
                                        v.jsx(
                                            se,
                                            {
                                                type: "menu",
                                                onClick: () => a(m),
                                                label: m.title,
                                                children: v.jsx("div", {
                                                    className:
                                                        "tlui-embed-dialog__item__image",
                                                    style: {
                                                        backgroundImage: `url(${
                                                            o.embedIcons[m.type]
                                                        })`,
                                                    },
                                                }),
                                            },
                                            m.type
                                        )
                                    ),
                                }),
                            }),
                    ],
                });
            });
        var kx = {exports: {}};
        kx.exports,
            (function (e) {
                var t = (function () {
                    var n = String.fromCharCode,
                        r =
                            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                        o =
                            "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+-$",
                        i = {};
                    function a(l, c) {
                        if (!i[l]) {
                            i[l] = {};
                            for (var d = 0; d < l.length; d++)
                                i[l][l.charAt(d)] = d;
                        }
                        return i[l][c];
                    }
                    var s = {
                        compressToBase64: function (l) {
                            if (l == null) return "";
                            var c = s._compress(l, 6, function (d) {
                                return r.charAt(d);
                            });
                            switch (c.length % 4) {
                                default:
                                case 0:
                                    return c;
                                case 1:
                                    return c + "===";
                                case 2:
                                    return c + "==";
                                case 3:
                                    return c + "=";
                            }
                        },
                        decompressFromBase64: function (l) {
                            return l == null
                                ? ""
                                : l == ""
                                    ? null
                                    : s._decompress(l.length, 32, function (c) {
                                        return a(r, l.charAt(c));
                                    });
                        },
                        compressToUTF16: function (l) {
                            return l == null
                                ? ""
                                : s._compress(l, 15, function (c) {
                                return n(c + 32);
                            }) + " ";
                        },
                        decompressFromUTF16: function (l) {
                            return l == null
                                ? ""
                                : l == ""
                                    ? null
                                    : s._decompress(l.length, 16384, function (c) {
                                        return l.charCodeAt(c) - 32;
                                    });
                        },
                        compressToUint8Array: function (l) {
                            for (
                                var c = s.compress(l),
                                    d = new Uint8Array(c.length * 2),
                                    u = 0,
                                    h = c.length;
                                u < h;
                                u++
                            ) {
                                var p = c.charCodeAt(u);
                                (d[u * 2] = p >>> 8), (d[u * 2 + 1] = p % 256);
                            }
                            return d;
                        },
                        decompressFromUint8Array: function (l) {
                            if (l == null) return s.decompress(l);
                            for (
                                var c = new Array(l.length / 2),
                                    d = 0,
                                    u = c.length;
                                d < u;
                                d++
                            )
                                c[d] = l[d * 2] * 256 + l[d * 2 + 1];
                            var h = [];
                            return (
                                c.forEach(function (p) {
                                    h.push(n(p));
                                }),
                                    s.decompress(h.join(""))
                            );
                        },
                        compressToEncodedURIComponent: function (l) {
                            return l == null
                                ? ""
                                : s._compress(l, 6, function (c) {
                                    return o.charAt(c);
                                });
                        },
                        decompressFromEncodedURIComponent: function (l) {
                            return l == null
                                ? ""
                                : l == ""
                                    ? null
                                    : ((l = l.replace(/ /g, "+")),
                                        s._decompress(l.length, 32, function (c) {
                                            return a(o, l.charAt(c));
                                        }));
                        },
                        compress: function (l) {
                            return s._compress(l, 16, function (c) {
                                return n(c);
                            });
                        },
                        _compress: function (l, c, d) {
                            if (l == null) return "";
                            var u,
                                h,
                                p = {},
                                m = {},
                                f = "",
                                g = "",
                                b = "",
                                x = 2,
                                S = 3,
                                _ = 2,
                                k = [],
                                C = 0,
                                P = 0,
                                I;
                            for (I = 0; I < l.length; I += 1)
                                if (
                                    ((f = l.charAt(I)),
                                    Object.prototype.hasOwnProperty.call(p, f) ||
                                    ((p[f] = S++), (m[f] = !0)),
                                        (g = b + f),
                                        Object.prototype.hasOwnProperty.call(p, g))
                                )
                                    b = g;
                                else {
                                    if (
                                        Object.prototype.hasOwnProperty.call(m, b)
                                    ) {
                                        if (b.charCodeAt(0) < 256) {
                                            for (u = 0; u < _; u++)
                                                (C = C << 1),
                                                    P == c - 1
                                                        ? ((P = 0),
                                                            k.push(d(C)),
                                                            (C = 0))
                                                        : P++;
                                            for (
                                                h = b.charCodeAt(0), u = 0;
                                                u < 8;
                                                u++
                                            )
                                                (C = (C << 1) | (h & 1)),
                                                    P == c - 1
                                                        ? ((P = 0),
                                                            k.push(d(C)),
                                                            (C = 0))
                                                        : P++,
                                                    (h = h >> 1);
                                        } else {
                                            for (h = 1, u = 0; u < _; u++)
                                                (C = (C << 1) | h),
                                                    P == c - 1
                                                        ? ((P = 0),
                                                            k.push(d(C)),
                                                            (C = 0))
                                                        : P++,
                                                    (h = 0);
                                            for (
                                                h = b.charCodeAt(0), u = 0;
                                                u < 16;
                                                u++
                                            )
                                                (C = (C << 1) | (h & 1)),
                                                    P == c - 1
                                                        ? ((P = 0),
                                                            k.push(d(C)),
                                                            (C = 0))
                                                        : P++,
                                                    (h = h >> 1);
                                        }
                                        x--,
                                        x == 0 && ((x = Math.pow(2, _)), _++),
                                            delete m[b];
                                    } else
                                        for (h = p[b], u = 0; u < _; u++)
                                            (C = (C << 1) | (h & 1)),
                                                P == c - 1
                                                    ? ((P = 0),
                                                        k.push(d(C)),
                                                        (C = 0))
                                                    : P++,
                                                (h = h >> 1);
                                    x--,
                                    x == 0 && ((x = Math.pow(2, _)), _++),
                                        (p[g] = S++),
                                        (b = String(f));
                                }
                            if (b !== "") {
                                if (Object.prototype.hasOwnProperty.call(m, b)) {
                                    if (b.charCodeAt(0) < 256) {
                                        for (u = 0; u < _; u++)
                                            (C = C << 1),
                                                P == c - 1
                                                    ? ((P = 0),
                                                        k.push(d(C)),
                                                        (C = 0))
                                                    : P++;
                                        for (h = b.charCodeAt(0), u = 0; u < 8; u++)
                                            (C = (C << 1) | (h & 1)),
                                                P == c - 1
                                                    ? ((P = 0),
                                                        k.push(d(C)),
                                                        (C = 0))
                                                    : P++,
                                                (h = h >> 1);
                                    } else {
                                        for (h = 1, u = 0; u < _; u++)
                                            (C = (C << 1) | h),
                                                P == c - 1
                                                    ? ((P = 0),
                                                        k.push(d(C)),
                                                        (C = 0))
                                                    : P++,
                                                (h = 0);
                                        for (
                                            h = b.charCodeAt(0), u = 0;
                                            u < 16;
                                            u++
                                        )
                                            (C = (C << 1) | (h & 1)),
                                                P == c - 1
                                                    ? ((P = 0),
                                                        k.push(d(C)),
                                                        (C = 0))
                                                    : P++,
                                                (h = h >> 1);
                                    }
                                    x--,
                                    x == 0 && ((x = Math.pow(2, _)), _++),
                                        delete m[b];
                                } else
                                    for (h = p[b], u = 0; u < _; u++)
                                        (C = (C << 1) | (h & 1)),
                                            P == c - 1
                                                ? ((P = 0), k.push(d(C)), (C = 0))
                                                : P++,
                                            (h = h >> 1);
                                x--, x == 0 && ((x = Math.pow(2, _)), _++);
                            }
                            for (h = 2, u = 0; u < _; u++)
                                (C = (C << 1) | (h & 1)),
                                    P == c - 1
                                        ? ((P = 0), k.push(d(C)), (C = 0))
                                        : P++,
                                    (h = h >> 1);
                            for (;;)
                                if (((C = C << 1), P == c - 1)) {
                                    k.push(d(C));
                                    break;
                                } else P++;
                            return k.join("");
                        },
                        decompress: function (l) {
                            return l == null
                                ? ""
                                : l == ""
                                    ? null
                                    : s._decompress(l.length, 32768, function (c) {
                                        return l.charCodeAt(c);
                                    });
                        },
                        _decompress: function (l, c, d) {
                            var u = [],
                                h = 4,
                                p = 4,
                                m = 3,
                                f = "",
                                g = [],
                                b,
                                x,
                                S,
                                _,
                                k,
                                C,
                                P,
                                I = {val: d(0), position: c, index: 1};
                            for (b = 0; b < 3; b += 1) u[b] = b;
                            for (S = 0, k = Math.pow(2, 2), C = 1; C != k; )
                                (_ = I.val & I.position),
                                    (I.position >>= 1),
                                I.position == 0 &&
                                ((I.position = c), (I.val = d(I.index++))),
                                    (S |= (_ > 0 ? 1 : 0) * C),
                                    (C <<= 1);
                            switch (S) {
                                case 0:
                                    for (S = 0, k = Math.pow(2, 8), C = 1; C != k; )
                                        (_ = I.val & I.position),
                                            (I.position >>= 1),
                                        I.position == 0 &&
                                        ((I.position = c),
                                            (I.val = d(I.index++))),
                                            (S |= (_ > 0 ? 1 : 0) * C),
                                            (C <<= 1);
                                    P = n(S);
                                    break;
                                case 1:
                                    for (
                                        S = 0, k = Math.pow(2, 16), C = 1;
                                        C != k;

                                    )
                                        (_ = I.val & I.position),
                                            (I.position >>= 1),
                                        I.position == 0 &&
                                        ((I.position = c),
                                            (I.val = d(I.index++))),
                                            (S |= (_ > 0 ? 1 : 0) * C),
                                            (C <<= 1);
                                    P = n(S);
                                    break;
                                case 2:
                                    return "";
                            }
                            for (u[3] = P, x = P, g.push(P); ; ) {
                                if (I.index > l) return "";
                                for (S = 0, k = Math.pow(2, m), C = 1; C != k; )
                                    (_ = I.val & I.position),
                                        (I.position >>= 1),
                                    I.position == 0 &&
                                    ((I.position = c),
                                        (I.val = d(I.index++))),
                                        (S |= (_ > 0 ? 1 : 0) * C),
                                        (C <<= 1);
                                switch ((P = S)) {
                                    case 0:
                                        for (
                                            S = 0, k = Math.pow(2, 8), C = 1;
                                            C != k;

                                        )
                                            (_ = I.val & I.position),
                                                (I.position >>= 1),
                                            I.position == 0 &&
                                            ((I.position = c),
                                                (I.val = d(I.index++))),
                                                (S |= (_ > 0 ? 1 : 0) * C),
                                                (C <<= 1);
                                        (u[p++] = n(S)), (P = p - 1), h--;
                                        break;
                                    case 1:
                                        for (
                                            S = 0, k = Math.pow(2, 16), C = 1;
                                            C != k;

                                        )
                                            (_ = I.val & I.position),
                                                (I.position >>= 1),
                                            I.position == 0 &&
                                            ((I.position = c),
                                                (I.val = d(I.index++))),
                                                (S |= (_ > 0 ? 1 : 0) * C),
                                                (C <<= 1);
                                        (u[p++] = n(S)), (P = p - 1), h--;
                                        break;
                                    case 2:
                                        return g.join("");
                                }
                                if ((h == 0 && ((h = Math.pow(2, m)), m++), u[P]))
                                    f = u[P];
                                else if (P === p) f = x + x.charAt(0);
                                else return null;
                                g.push(f),
                                    (u[p++] = x + f.charAt(0)),
                                    h--,
                                    (x = f),
                                h == 0 && ((h = Math.pow(2, m)), m++);
                            }
                        },
                    };
                    return s;
                })();
                e != null
                    ? (e.exports = t)
                    : typeof angular < "u" &&
                    angular != null &&
                    angular
                        .module("LZString", [])
                        .factory("LZString", function () {
                            return t;
                        });
            })(kx);
        var e7 = kx.exports;
        async function jte(e, t, n) {
            var b, x, S;
            const {elements: r, files: o} = t,
                i = {
                    shapes: [],
                    rootShapeIds: [],
                    assets: [],
                    schema: e.store.schema.serialize(),
                },
                a = new Map(),
                s = new Map(),
                l = e.getCurrentPageId(),
                c = new Map(),
                d = [],
                u = new Set();
            r.forEach((_) => {
                if ((c.set(_.id, Ge()), _.boundElements !== null))
                    for (const k of _.boundElements)
                        k.type === "text" && u.add(k.id);
            });
            let h = "a1";
            for (const _ of r) {
                if (u.has(_.id)) continue;
                const k = c.get(_.id),
                    C = {
                        id: k,
                        typeName: "shape",
                        parentId: l,
                        index: h,
                        x: _.x,
                        y: _.y,
                        rotation: 0,
                        isLocked: _.locked,
                        opacity: Nte(_.opacity),
                        meta: {},
                    };
                switch (
                    (_.angle !== 0 && s.set(k, _.angle),
                        _.groupIds && _.groupIds.length > 0
                            ? a.has(_.groupIds[0])
                                ? (b = a.get(_.groupIds[0])) == null || b.push(k)
                                : a.set(_.groupIds[0], [k])
                            : d.push(k),
                        _.type)
                    ) {
                    case "rectangle":
                    case "ellipse":
                    case "diamond": {
                        let P = "",
                            I = "middle";
                        if (_.boundElements !== null) {
                            for (const T of _.boundElements)
                                if (T.type === "text") {
                                    const R = r.find((D) => D.id === T.id);
                                    R && ((P = R.text), (I = t7[R.textAlign]));
                                }
                        }
                        const $ =
                            _.backgroundColor === "transparent"
                                ? _.strokeColor
                                : _.backgroundColor;
                        i.shapes.push({
                            ...C,
                            type: "geo",
                            props: {
                                geo: _.type,
                                url: _.link ?? "",
                                w: _.width,
                                h: _.height,
                                size: Ig[_.strokeWidth] ?? "draw",
                                color: Wu[$] ?? "black",
                                text: P,
                                align: I,
                                dash: Tg(_),
                                fill: Wte(_),
                            },
                        });
                        break;
                    }
                    case "freedraw": {
                        i.shapes.push({
                            ...C,
                            type: "draw",
                            props: {
                                dash: Tg(_),
                                size: Ig[_.strokeWidth],
                                color: Wu[_.strokeColor] ?? "black",
                                segments: [
                                    {
                                        type: "free",
                                        points: _.points.map(([P, I, $ = 0.5]) => ({
                                            x: P,
                                            y: I,
                                            z: $,
                                        })),
                                    },
                                ],
                            },
                        });
                        break;
                    }
                    case "line": {
                        const P = _.points[0],
                            I = _.points[_.points.length - 1],
                            $ = oE(_.points.length);
                        i.shapes.push({
                            ...C,
                            type: "line",
                            props: {
                                dash: Tg(_),
                                size: Ig[_.strokeWidth],
                                color: Wu[_.strokeColor] ?? "black",
                                spline: _.roundness ? "cubic" : "line",
                                handles: {
                                    start: {
                                        id: "start",
                                        type: "vertex",
                                        index: $[0],
                                        x: P[0],
                                        y: P[1],
                                    },
                                    end: {
                                        id: "end",
                                        type: "vertex",
                                        index: $[$.length - 1],
                                        x: I[0],
                                        y: I[1],
                                    },
                                    ...Object.fromEntries(
                                        _.points.slice(1, -1).map(([T, R], D) => {
                                            const j = He();
                                            return [
                                                j,
                                                {
                                                    id: j,
                                                    type: "vertex",
                                                    index: $[D + 1],
                                                    x: T,
                                                    y: R,
                                                },
                                            ];
                                        })
                                    ),
                                },
                            },
                        });
                        break;
                    }
                    case "arrow": {
                        let P = "";
                        if (_.boundElements !== null) {
                            for (const D of _.boundElements)
                                if (D.type === "text") {
                                    const j = r.find((z) => z.id === D.id);
                                    j && (P = j.text);
                                }
                        }
                        const I = _.points[0],
                            $ = _.points[_.points.length - 1],
                            T = c.get(
                                (x = _.startBinding) == null ? void 0 : x.elementId
                            ),
                            R = c.get(
                                (S = _.endBinding) == null ? void 0 : S.elementId
                            );
                        i.shapes.push({
                            ...C,
                            type: "arrow",
                            props: {
                                text: P,
                                bend: Kte(_, I, $),
                                dash: Tg(_),
                                size: Ig[_.strokeWidth] ?? "m",
                                color: Wu[_.strokeColor] ?? "black",
                                start: T
                                    ? {
                                        type: "binding",
                                        boundShapeId: T,
                                        normalizedAnchor: {x: 0.5, y: 0.5},
                                        isPrecise: !1,
                                        isExact: !1,
                                    }
                                    : {type: "point", x: I[0], y: I[1]},
                                end: R
                                    ? {
                                        type: "binding",
                                        boundShapeId: R,
                                        normalizedAnchor: {x: 0.5, y: 0.5},
                                        isPrecise: !1,
                                        isExact: !1,
                                    }
                                    : {type: "point", x: $[0], y: $[1]},
                                arrowheadEnd: n7[_.endArrowhead] ?? "none",
                                arrowheadStart: n7[_.startArrowhead] ?? "none",
                            },
                        });
                        break;
                    }
                    case "text": {
                        const {size: P, scale: I} = Bte(_.fontSize);
                        i.shapes.push({
                            ...C,
                            type: "text",
                            props: {
                                size: P,
                                scale: I,
                                font: Ute[_.fontFamily] ?? "draw",
                                color: Wu[_.strokeColor] ?? "black",
                                text: _.text,
                                align: t7[_.textAlign],
                            },
                        });
                        break;
                    }
                    case "image": {
                        const P = o[_.fileId];
                        if (!P) break;
                        const I = ns.createId();
                        i.assets.push({
                            id: I,
                            typeName: "asset",
                            type: "image",
                            props: {
                                w: _.width,
                                h: _.height,
                                name: _.id ?? "Untitled",
                                isAnimated: !1,
                                mimeType: P.mimeType,
                                src: P.dataURL,
                            },
                            meta: {},
                        }),
                            i.shapes.push({
                                ...C,
                                type: "image",
                                props: {w: _.width, h: _.height, assetId: I},
                            });
                    }
                }
                h = di(h);
            }
            const p = n ?? (e.inputs.shiftKey ? e.inputs.currentPagePoint : void 0);
            e.mark("paste"),
                e.putContentOntoCurrentPage(i, {
                    point: p,
                    select: !1,
                    preserveIds: !0,
                });
            for (const _ of a.values())
                if (_.length > 1) {
                    e.groupShapes(_);
                    const k = e.getShape(_[0]);
                    k != null && k.parentId && kr(k.parentId) && d.push(k.parentId);
                }
            for (const [_, k] of s) e.select(_), e.rotateShapesBy([_], k);
            const m = pe(d.map((_) => e.getShape(_))),
                f = ce.Common(m.map((_) => e.getShapePageBounds(_))),
                g = e.getViewportPageBounds().center;
            e.updateShapes(
                m.map((_) => {
                    const k = {
                        x: (_.x ?? 0) - (f.x + f.w / 2),
                        y: (_.y ?? 0) - (f.y + f.h / 2),
                    };
                    return {id: _.id, type: _.type, x: g.x + k.x, y: g.y + k.y};
                })
            ),
                e.setSelectedShapes(d);
        }
        const Nte = (e) => {
                const t = e / 100;
                return t < 0.2
                    ? 0.1
                    : t < 0.4
                        ? 0.25
                        : t < 0.6
                            ? 0.5
                            : t < 0.8
                                ? 0.75
                                : 1;
            },
            Ig = {1: "s", 2: "m", 3: "l", 4: "xl"},
            Fte = {16: "s", 20: "m", 28: "l", 36: "xl"};
        function Bte(e) {
            const t = Fte[e];
            return t
                ? {size: t, scale: 1}
                : e < 16
                    ? {size: "s", scale: e / 16}
                    : e > 36
                        ? {size: "xl", scale: e / 36}
                        : {size: "m", scale: 1};
        }
        const Ute = {1: "draw", 2: "sans", 3: "mono"},
            Wu = {
                "#ffffff": "grey",
                "#000000": "black",
                "#343a40": "black",
                "#495057": "grey",
                "#c92a2a": "red",
                "#a61e4d": "light-red",
                "#862e9c": "violet",
                "#5f3dc4": "light-violet",
                "#364fc7": "blue",
                "#1864ab": "light-blue",
                "#0b7285": "light-green",
                "#087f5b": "light-green",
                "#2b8a3e": "green",
                "#5c940d": "light-green",
                "#e67700": "yellow",
                "#d9480f": "orange",
                "#ced4da": "grey",
                "#868e96": "grey",
                "#fa5252": "light-red",
                "#e64980": "red",
                "#be4bdb": "light-violet",
                "#7950f2": "violet",
                "#4c6ef5": "blue",
                "#228be6": "light-blue",
                "#15aabf": "light-green",
                "#12b886": "green",
                "#40c057": "green",
                "#82c91e": "light-green",
                "#fab005": "yellow",
                "#fd7e14": "orange",
                "#212529": "grey",
            },
            Hte = {solid: "draw", dashed: "dashed", dotted: "dotted"},
            Vte = {"cross-hatch": "pattern", hachure: "pattern", solid: "solid"},
            t7 = {left: "start", center: "middle", right: "end"},
            n7 = {arrow: "arrow", dot: "dot", triangle: "triangle", bar: "pipe"};
        function Kte(e, t, n) {
            let r = 0;
            if (e.points.length > 2) {
                const o = new E(t[0], t[1]),
                    i = new E(n[0], n[1]),
                    a = new E(e.points[1][0], e.points[1][1]),
                    s = E.Sub(i, o),
                    l = E.Per(s),
                    c = E.Med(i, o),
                    d = E.Sub(c, l),
                    u = E.Add(c, l),
                    h = E.NearestPointOnLineSegment(d, u, a, !1);
                (r = E.Dist(h, c)), E.Clockwise(h, i, c) && (r *= -1);
            }
            return r;
        }
        const Tg = (e) => {
                let t = Hte[e.strokeStyle] ?? "draw";
                return t === "draw" && e.roughness === 0 && (t = "solid"), t;
            },
            Wte = (e) =>
                e.backgroundColor === "transparent"
                    ? "none"
                    : Vte[e.fillStyle] ?? "solid";
        async function r7(e, t, n, r) {
            const i = (
                await Promise.all(t.map(async (a) => await (await fetch(a)).blob()))
            ).map((a) => new File([a], "tldrawFile", {type: a.type}));
            e.mark("paste"),
                await e.putExternalContent({
                    type: "files",
                    files: i,
                    point: n,
                    ignoreParent: !1,
                    sources: r,
                }),
                t.forEach((a) => URL.revokeObjectURL(a));
        }
        function Yte(e, t, n) {
            const r = n ?? (e.inputs.shiftKey ? e.inputs.currentPagePoint : void 0);
            e.mark("paste"), e.putContentOntoCurrentPage(t, {point: r, select: !0});
        }
        async function Cx(e, t, n, r) {
            var o;
            try {
                if (
                    new URL(t).pathname.match(/\.(png|jpe?g|gif|svg|webp)$/i) &&
                    (o = (await fetch(t, {method: "HEAD"})).headers.get(
                        "content-type"
                    )) != null &&
                    o.match(/^image\//)
                ) {
                    e.mark("paste"), r7(e, [t]);
                    return;
                }
            } catch (i) {
                i.message !== "Failed to fetch" && console.error(i);
            }
            return (
                e.mark("paste"),
                    await e.putExternalContent({
                        type: "url",
                        point: n,
                        url: t,
                        sources: r,
                    })
            );
        }
        const o7 = () => {},
            i7 = y.createContext({});
        function Gte({onEvent: e, children: t}) {
            return v.jsx(i7.Provider, {value: e ?? o7, children: t});
        }
        function vc() {
            return y.useContext(i7) ?? o7;
        }
        function Xte(e) {
            const t = document.implementation.createHTMLDocument("");
            return (
                (t.documentElement.innerHTML = e.trim()),
                t.body.textContent || t.body.innerText || ""
            );
        }
        const qte = (e) => {
                try {
                    const t = new URL(e);
                    return t.protocol === "http:" || t.protocol === "https:";
                } catch {
                    return !1;
                }
            },
            Zte = (e) => {
                const t = e.split(/[\n\s]/);
                for (const n of t)
                    try {
                        const r = new URL(n);
                        if (!(r.protocol === "http:" || r.protocol === "https:"))
                            return;
                    } catch {
                        return;
                    }
                return I4(t);
            },
            Qte = (e) => /^<svg/.test(e),
            Jte = ["input", "select", "textarea"];
        function $g(e) {
            const {activeElement: t} = document;
            return (
                e.getIsMenuOpen() ||
                (t &&
                    (t.getAttribute("contenteditable") ||
                        Jte.indexOf(t.tagName.toLowerCase()) > -1))
            );
        }
        async function Ex(e) {
            return new Promise((t, n) => {
                const r = new FileReader();
                r.addEventListener("loadend", () => {
                    const o = r.result;
                    t(o);
                }),
                    r.addEventListener("error", () => {
                        n(r.error);
                    }),
                    r.readAsText(e);
            });
        }
        const ene = (e) => e.types.find((t) => t.match(/^image\//)),
            Px = (e, t, n, r) => {
                const o = Zte(t);
                if (o) for (const i of o) Cx(e, i, n);
                else
                    qte(t)
                        ? Cx(e, t, n)
                        : Qte(t)
                            ? (e.mark("paste"),
                                e.putExternalContent({
                                    type: "svg-text",
                                    text: t,
                                    point: n,
                                    sources: r,
                                }))
                            : (e.mark("paste"),
                                e.putExternalContent({
                                    type: "text",
                                    text: t,
                                    point: n,
                                    sources: r,
                                }));
            },
            tne = async (e, t, n) => {
                if (e.getEditingShapeId() !== null) return;
                if (!t) throw Error("No clipboard data");
                const r = [];
                for (const o of Object.values(t.items))
                    switch (o.kind) {
                        case "file": {
                            r.push({
                                type: "file",
                                source: new Promise((i) => i(o.getAsFile())),
                            });
                            break;
                        }
                        case "string": {
                            o.type === "text/html"
                                ? r.push({
                                    type: "html",
                                    source: new Promise((i) => o.getAsString(i)),
                                })
                                : o.type === "text/plain"
                                    ? r.push({
                                        type: "text",
                                        source: new Promise((i) => o.getAsString(i)),
                                    })
                                    : r.push({
                                        type: o.type,
                                        source: new Promise((i) => o.getAsString(i)),
                                    });
                            break;
                        }
                    }
                s7(e, r, n);
            },
            a7 = async (e, t, n) => {
                const r = [];
                for (const o of t) {
                    if (ene(o))
                        for (const i of o.types)
                            i.match(/^image\//) &&
                            r.push({type: "blob", source: o.getType(i)});
                    o.types.includes("text/html") &&
                    r.push({
                        type: "html",
                        source: new Promise((i) =>
                            o.getType("text/html").then((a) => Ex(a).then(i))
                        ),
                    }),
                    o.types.includes("text/uri-list") &&
                    r.push({
                        type: "url",
                        source: new Promise((i) =>
                            o
                                .getType("text/uri-list")
                                .then((a) => Ex(a).then(i))
                        ),
                    }),
                    o.types.includes("text/plain") &&
                    r.push({
                        type: "text",
                        source: new Promise((i) =>
                            o
                                .getType("text/plain")
                                .then((a) => Ex(a).then(i))
                        ),
                    });
                }
                return await s7(e, r, n);
            };
        async function s7(e, t, n) {
            const r = t.filter(
                (i) => (i.type === "file" || i.type === "blob") && i.source !== null
            );
            if (r.length) {
                const a = (await Promise.all(r.map((s) => s.source)))
                    .filter(Boolean)
                    .map((s) => URL.createObjectURL(s));
                return await r7(e, a, n);
            }
            const o = await Promise.all(
                t
                    .filter((i) => i.type !== "file")
                    .map(
                        (i) =>
                            new Promise((a) => {
                                const s = i;
                                if (s.type === "file") {
                                    a({
                                        type: "error",
                                        data: null,
                                        reason: "unexpected file",
                                    });
                                    return;
                                }
                                s.source.then((l) => {
                                    var d;
                                    const c =
                                        (d = l.match(
                                            /<tldraw[^>]*>(.*)<\/tldraw>/
                                        )) == null
                                            ? void 0
                                            : d[1];
                                    if (c)
                                        try {
                                            const u = e7.decompressFromBase64(c);
                                            if (u === null) {
                                                a({
                                                    type: "error",
                                                    data: u,
                                                    reason: "found tldraw data comment but could not parse base64",
                                                });
                                                return;
                                            } else {
                                                const h = JSON.parse(u);
                                                if (
                                                    (h.type !==
                                                    "application/tldraw" &&
                                                    a({
                                                        type: "error",
                                                        data: h,
                                                        reason: `found tldraw data comment but JSON was of a different type: ${h.type}`,
                                                    }),
                                                    typeof h.data == "string")
                                                ) {
                                                    a({
                                                        type: "error",
                                                        data: h,
                                                        reason: "found tldraw json but data was a string instead of a TLClipboardModel object",
                                                    });
                                                    return;
                                                }
                                                a({type: "tldraw", data: h.data});
                                                return;
                                            }
                                        } catch {
                                            a({
                                                type: "error",
                                                data: c,
                                                reason: "found tldraw json but data was a string instead of a TLClipboardModel object",
                                            });
                                            return;
                                        }
                                    else {
                                        if (s.type === "html") {
                                            a({
                                                type: "text",
                                                data: l,
                                                subtype: "html",
                                            });
                                            return;
                                        }
                                        if (s.type === "url") {
                                            a({
                                                type: "text",
                                                data: l,
                                                subtype: "url",
                                            });
                                            return;
                                        }
                                        try {
                                            const u = JSON.parse(l);
                                            if (u.type === "excalidraw/clipboard") {
                                                a({type: "excalidraw", data: u});
                                                return;
                                            } else {
                                                a({
                                                    type: "text",
                                                    data: l,
                                                    subtype: "json",
                                                });
                                                return;
                                            }
                                        } catch {
                                            a({
                                                type: "text",
                                                data: l,
                                                subtype: "text",
                                            });
                                            return;
                                        }
                                    }
                                    a({
                                        type: "error",
                                        data: l,
                                        reason: "unhandled case",
                                    });
                                });
                            })
                    )
            );
            for (const i of o)
                if (i.type === "tldraw") {
                    Yte(e, i.data, n);
                    return;
                }
            for (const i of o)
                if (i.type === "excalidraw") {
                    jte(e, i.data, n);
                    return;
                }
            for (const i of o)
                if (i.type === "text" && i.subtype === "html") {
                    const s = new DOMParser()
                        .parseFromString(i.data, "text/html")
                        .querySelector("body");
                    if (
                        s &&
                        Array.from(s.children).filter((c) => c.nodeType === 1)
                            .length === 1 &&
                        s.firstElementChild &&
                        s.firstElementChild.tagName === "A" &&
                        s.firstElementChild.hasAttribute("href") &&
                        s.firstElementChild.getAttribute("href") !== ""
                    ) {
                        const c = s.firstElementChild.getAttribute("href");
                        Px(e, c, n, o);
                        return;
                    }
                    if (
                        !o.some((c) => c.type === "text" && c.subtype !== "html") &&
                        i.data.trim()
                    ) {
                        Px(e, Xte(i.data), n, o);
                        return;
                    }
                }
            for (const i of o)
                if (i.type === "text" && i.subtype === "url") {
                    Cx(e, i.data, n, o);
                    return;
                }
            for (const i of o)
                if (i.type === "text" && i.subtype === "text" && i.data.trim()) {
                    Px(e, i.data, n, o);
                    return;
                }
        }
        const Ag = (e) => {
            var r;
            const t = e.getContentFromCurrentPage(e.getSelectedShapeIds());
            if (!t) {
                navigator &&
                navigator.clipboard &&
                navigator.clipboard.writeText("");
                return;
            }
            const n = e7.compressToBase64(
                JSON.stringify({
                    type: "application/tldraw",
                    kind: "content",
                    data: t,
                })
            );
            if (!(typeof navigator > "u")) {
                const o = t.shapes
                    .map((i) =>
                        e.isShapeOfType(i, "text") ||
                        e.isShapeOfType(i, "geo") ||
                        e.isShapeOfType(i, "arrow")
                            ? i.props.text
                            : e.isShapeOfType(i, "bookmark") ||
                            e.isShapeOfType(i, "embed")
                                ? i.props.url
                                : null
                    )
                    .filter(fD);
                if ((r = navigator.clipboard) != null && r.write) {
                    const i = new Blob([`<tldraw>${n}</tldraw>`], {
                        type: "text/html",
                    });
                    let a = o.join(" ");
                    a === "" && (a = " "),
                        navigator.clipboard.write([
                            new ClipboardItem({
                                "text/html": i,
                                "text/plain": new Blob([a], {type: "text/plain"}),
                            }),
                        ]);
                } else
                    navigator.clipboard.writeText &&
                    navigator.clipboard.writeText(`<tldraw>${n}</tldraw>`);
            }
        };
        function nne() {
            const e = W(),
                t = vc(),
                n = y.useCallback(
                    function (a) {
                        e.getSelectedShapeIds().length !== 0 &&
                        (Ag(e), t("copy", {source: a}));
                    },
                    [e, t]
                ),
                r = y.useCallback(
                    function (a) {
                        e.getSelectedShapeIds().length !== 0 &&
                        (Ag(e),
                            e.deleteShapes(e.getSelectedShapeIds()),
                            t("cut", {source: a}));
                    },
                    [e, t]
                ),
                o = y.useCallback(
                    async function (a, s, l) {
                        e.getEditingShapeId() !== null ||
                        $g(e) ||
                        (Array.isArray(a) && a[0] instanceof ClipboardItem
                            ? (a7(e, a, l), t("paste", {source: "menu"}))
                            : navigator.clipboard.read().then((c) => {
                                o(c, s, l);
                            }));
                    },
                    [e, t]
                );
            return {copy: n, cut: r, paste: o};
        }
        function rne() {
            const e = W(),
                t = vc(),
                n = X("editor.isFocused", () => e.getInstanceState().isFocused, [
                    e,
                ]);
            y.useEffect(() => {
                if (!n) return;
                const r = () => {
                    e.getSelectedShapeIds().length === 0 ||
                    e.getEditingShapeId() !== null ||
                    $g(e) ||
                    (Ag(e), t("copy", {source: "kbd"}));
                };
                function o() {
                    e.getSelectedShapeIds().length === 0 ||
                    e.getEditingShapeId() !== null ||
                    $g(e) ||
                    (Ag(e),
                        e.deleteShapes(e.getSelectedShapeIds()),
                        t("cut", {source: "kbd"}));
                }
                let i = !1;
                const a = (l) => {
                        l.button === 1 &&
                        ((i = !0),
                            requestAnimationFrame(() => {
                                i = !1;
                            }));
                    },
                    s = (l) => {
                        if (i) {
                            l.stopPropagation();
                            return;
                        }
                        e.getEditingShapeId() !== null ||
                        $g(e) ||
                        (l.clipboardData && !e.inputs.shiftKey
                            ? tne(e, l.clipboardData)
                            : navigator.clipboard.read().then((c) => {
                                Array.isArray(c) &&
                                c[0] instanceof ClipboardItem &&
                                a7(e, c, e.inputs.currentPagePoint);
                            }),
                            t("paste", {source: "kbd"}));
                    };
                return (
                    document.addEventListener("copy", r),
                        document.addEventListener("cut", o),
                        document.addEventListener("paste", s),
                        document.addEventListener("pointerup", a),
                        () => {
                            document.removeEventListener("copy", r),
                                document.removeEventListener("cut", o),
                                document.removeEventListener("paste", s),
                                document.removeEventListener("pointerup", a);
                        }
                );
            }, [e, t, n]);
        }
        async function one(e, t, n) {
            const {type: r, quality: o, scale: i} = n,
                a = +e.getAttribute("width"),
                s = +e.getAttribute("height");
            let l = a * i,
                c = s * i;
            const d = await l7(e),
                u = URL.createObjectURL(new Blob([d], {type: "image/svg+xml"})),
                h = await $6();
            if (
                (a > h.maxWidth && ((l = h.maxWidth), (c = (l / a) * s)),
                s > h.maxHeight && ((c = h.maxHeight), (l = (c / s) * a)),
                l * c > h.maxArea)
            ) {
                const b = Math.sqrt(h.maxArea / (l * c));
                (l *= b), (c *= b);
            }
            (l = Math.floor(l)), (c = Math.floor(c));
            const p = l / a,
                m = await new Promise((b) => {
                    const x = new Image();
                    (x.crossOrigin = "anonymous"),
                        (x.onload = async () => {
                            t && (await new Promise((k) => setTimeout(k, 250)));
                            const S = document.createElement("canvas"),
                                _ = S.getContext("2d");
                            (S.width = l),
                                (S.height = c),
                                (_.imageSmoothingEnabled = !0),
                                (_.imageSmoothingQuality = "high"),
                                _.drawImage(x, 0, 0, l, c),
                                URL.revokeObjectURL(u),
                                b(S);
                        }),
                        (x.onerror = () => {
                            b(null);
                        }),
                        (x.src = u);
                });
            if (!m) return null;
            const f = await new Promise((b) =>
                m.toBlob(
                    (x) => {
                        (!x || Xe.throwToBlob.get()) && b(null), b(x);
                    },
                    "image/" + r,
                    o
                )
            );
            if (!f) return null;
            const g = new DataView(await f.arrayBuffer());
            return vo.setPhysChunk(g, p, {type: "image/" + r});
        }
        async function l7(e) {
            const t = e.cloneNode(!0);
            e.setAttribute("width", +e.getAttribute("width") + ""),
                e.setAttribute("height", +e.getAttribute("height") + "");
            const n = new FileReader(),
                r = Array.from(t.querySelectorAll("image"));
            for (const i of r) {
                const a = i.getAttribute("xlink:href");
                if (a && !a.startsWith("data:")) {
                    const s = await (await fetch(a)).blob(),
                        l = await new Promise((c, d) => {
                            (n.onload = () => c(n.result)),
                                (n.onerror = () => d(n.error)),
                                n.readAsDataURL(s);
                        });
                    i.setAttribute("xlink:href", l);
                }
            }
            return new XMLSerializer()
                .serializeToString(t)
                .replaceAll("&#10;      ", "")
                .replaceAll(/((\s|")[0-9]*\.[0-9]{2})([0-9]*)(\b|"|\))/g, "$1");
        }
        async function c7(e, t, n) {
            const r = await e.getSvg(
                t != null && t.length ? t : [...e.getCurrentPageShapeIds()],
                {scale: 1, background: e.getInstanceState().exportBackground, ...n}
            );
            if (!r) throw new Error("Could not construct SVG.");
            return r;
        }
        async function Ix(e, t, n, r = {}) {
            switch (n) {
                case "svg":
                    return l7(await c7(e, t, r));
                case "json": {
                    const o = e.getContentFromCurrentPage(t);
                    return JSON.stringify(o);
                }
                default:
                    _l(n);
            }
        }
        async function d7(e, t, n, r = {}) {
            switch (n) {
                case "svg":
                    return new Blob([await Ix(e, t, "svg", r)], {
                        type: "text/plain",
                    });
                case "json":
                    return new Blob([await Ix(e, t, "json", r)], {
                        type: "text/plain",
                    });
                case "jpeg":
                case "png":
                case "webp": {
                    const o = await one(await c7(e, t, r), e.environment.isSafari, {
                        type: n,
                        quality: 1,
                        scale: 2,
                    });
                    if (!o) throw new Error("Could not construct image.");
                    return o;
                }
                default:
                    _l(n);
            }
        }
        const ine = {
            jpeg: "image/jpeg",
            png: "image/png",
            webp: "image/webp",
            json: "text/plain",
            svg: "text/plain",
        };
        function ane(e, t, n, r = {}) {
            return {blobPromise: d7(e, t, n, r), mimeType: ine[n]};
        }
        function sne(e, t, n = "svg", r = {}) {
            if (!window.navigator.clipboard)
                return Promise.reject(new Error("Copy not supported"));
            if (window.navigator.clipboard.write) {
                const {blobPromise: o, mimeType: i} = ane(e, t, n, r);
                return window.navigator.clipboard
                    .write([new ClipboardItem({[i]: o})])
                    .catch(
                        (a) => (
                            console.error(a),
                                o.then((s) =>
                                    window.navigator.clipboard.write([
                                        new ClipboardItem({[i]: s}),
                                    ])
                                )
                        )
                    );
            }
            switch (n) {
                case "json":
                case "svg":
                    return lne(async () => Ix(e, t, n, r));
                case "jpeg":
                case "png":
                    throw new Error("Copy not supported");
                default:
                    _l(n);
            }
        }
        async function lne(e) {
            var t, n;
            await ((n = (t = navigator.clipboard) == null ? void 0 : t.writeText) ==
            null
                ? void 0
                : n.call(t, await e()));
        }
        const u7 = y.createContext({});
        function cne({children: e}) {
            const [t, n] = y.useState([]),
                r = y.useCallback((a) => {
                    const s = a.id ?? He();
                    return (
                        n((l) => [
                            ...l.filter((c) => c.id !== a.id),
                            {...a, id: s},
                        ]),
                            s
                    );
                }, []),
                o = y.useCallback(
                    (a) => (n((s) => s.filter((l) => l.id !== a)), a),
                    []
                ),
                i = y.useCallback(() => {
                    n(() => []);
                }, []);
            return v.jsx(u7.Provider, {
                value: {toasts: t, addToast: r, removeToast: o, clearToasts: i},
                children: e,
            });
        }
        function $o() {
            const e = y.useContext(u7);
            if (!e)
                throw new Error("useToasts must be used within a ToastsProvider");
            return e;
        }
        function dne() {
            const e = W(),
                {addToast: t} = $o(),
                n = Ee();
            return y.useCallback(
                (r, o = "svg") => {
                    sne(e, r, o).catch(() => {
                        t({
                            id: "copy-fail",
                            icon: "warning-triangle",
                            title: n("toast.error.copy-fail.title"),
                            description: n("toast.error.copy-fail.desc"),
                        });
                    });
                },
                [e, t, n]
            );
        }
        const h7 = y.createContext({});
        function une({children: e}) {
            const t = W(),
                n = vc(),
                [r, o] = y.useState([]),
                i = y.useCallback(
                    (c) => {
                        const d = c.id ?? He();
                        return (
                            o((u) => [
                                ...u.filter((h) => h.id !== c.id),
                                {...c, id: d},
                            ]),
                                n("open-menu", {source: "dialog", id: d}),
                                t.addOpenMenu(d),
                                d
                        );
                    },
                    [t, n]
                ),
                a = y.useCallback(
                    (c, d) => (
                        o((u) => u.map((h) => (h.id === c ? {...h, ...d} : h))),
                            n("open-menu", {source: "dialog", id: c}),
                            t.addOpenMenu(c),
                            c
                    ),
                    [t, n]
                ),
                s = y.useCallback(
                    (c) => (
                        o((d) =>
                            d.filter((u) => {
                                var h;
                                return u.id === c
                                    ? ((h = u.onClose) == null || h.call(u), !1)
                                    : !0;
                            })
                        ),
                            n("close-menu", {source: "dialog", id: c}),
                            t.deleteOpenMenu(c),
                            c
                    ),
                    [t, n]
                ),
                l = y.useCallback(() => {
                    o(
                        (c) => (
                            c.forEach((d) => {
                                var u;
                                (u = d.onClose) == null || u.call(d),
                                    n("close-menu", {source: "dialog", id: d.id}),
                                    t.deleteOpenMenu(d.id);
                            }),
                                []
                        )
                    );
                }, [t, n]);
            return v.jsx(h7.Provider, {
                value: {
                    dialogs: r,
                    addDialog: i,
                    removeDialog: s,
                    clearDialogs: l,
                    updateDialog: a,
                },
                children: e,
            });
        }
        function bs() {
            const e = y.useContext(h7);
            if (!e)
                throw new Error("useDialogs must be used within a DialogsProvider");
            return e;
        }
        async function hne(e, t, n = "png", r = {}) {
            let o = `shapes at ${p7()}`;
            if (t.length === 1) {
                const s = e.getShape(t[0]);
                e.isShapeOfType(s, "frame")
                    ? (o = s.props.name ?? "frame")
                    : (o = `${s.id.replace(/:/, "_")} at ${p7()}`);
            }
            o += `.${n}`;
            const i = await d7(e, t, n, r),
                a = new File([i], o, {type: i.type});
            pne(a);
        }
        function p7() {
            const e = new Date(),
                t = String(e.getFullYear()).slice(2),
                n = String(e.getMonth() + 1).padStart(2, "0"),
                r = String(e.getDate()).padStart(2, "0"),
                o = String(e.getHours()).padStart(2, "0"),
                i = String(e.getMinutes()).padStart(2, "0"),
                a = String(e.getSeconds()).padStart(2, "0");
            return `${t}-${n}-${r} ${o}.${i}.${a}`;
        }
        function pne(e) {
            const t = document.createElement("a"),
                n = URL.createObjectURL(e);
            (t.href = n), (t.download = e.name), t.click(), URL.revokeObjectURL(n);
        }
        function fne() {
            const e = W(),
                {addToast: t} = $o(),
                n = Ee();
            return y.useCallback(
                (r, o = "png") => {
                    hne(e, r, o, {
                        scale: 1,
                        background: e.getInstanceState().exportBackground,
                    }).catch((i) => {
                        console.error(i.message),
                            t({
                                id: "export-fail",
                                title: n("toast.error.export-fail.title"),
                                description: n("toast.error.export-fail.desc"),
                            });
                    });
                },
                [e, t, n]
            );
        }
        function f7() {
            const e = W(),
                t = y.useRef();
            return (
                y.useEffect(() => {
                    const n = window.document.createElement("input");
                    (n.type = "file"),
                        (n.accept =
                            "image/jpeg,image/png,image/gif,image/svg+xml,video/mp4,video/quicktime"),
                        (n.multiple = !0),
                        (t.current = n);
                    async function r(o) {
                        const i = o.target.files;
                        !i ||
                        i.length === 0 ||
                        (await e.putExternalContent({
                            type: "files",
                            files: Array.from(i),
                            point: e.getViewportPageBounds().center,
                            ignoreParent: !1,
                        }),
                            (n.value = ""));
                    }
                    return (
                        n.addEventListener("change", r),
                            () => {
                                (t.current = void 0),
                                    n.removeEventListener("change", r);
                            }
                    );
                }, [e]),
                    y.useCallback(() => {
                        var n;
                        (n = t.current) == null || n.click();
                    }, [t])
            );
        }
        function mne() {
            const e = W(),
                t = y.useRef(null),
                n = y.useRef(null);
            return y.useCallback(
                async function () {
                    const o = document.createElement("div"),
                        i = document.createElement("style"),
                        a = (b, x) => {
                            b && (b.innerHTML = ""),
                            x &&
                            document.head.contains(x) &&
                            document.head.removeChild(x),
                            b &&
                            document.body.contains(b) &&
                            document.body.removeChild(b);
                        };
                    a(t.current, n.current), (t.current = o), (n.current = i);
                    const s = `tl-print-surface-${He()}`;
                    (o.className = s),
                        (i.innerHTML = `
			.${s} {
				display: none;
			}

			.${s} svg {
				max-width: 100%;
				height: 100%;
				display: block;
			}

			@media print {				  
				html, body {
					min-height: 100%;
					height: 100%;
					margin: 0;
				}

				body {
					position: relative;
				}

				body > * {
					display: none;
				}

				.tldraw__editor {
					display: none;
				}

				.${s} {
					display: block !important;
					background: white;
					min-height: 100%;
					height: 100%;
					max-width: 100%;
				}

				.${s}__item {
					padding: 10mm;
					display: flex;
					min-height: 100%;
					flex-direction: column;
					page-break-after: always;
					position: relative;
					overflow: hidden;
					height: 100%;
				}

				.${s}__item__main {
					flex: 1;
					display: flex;
					align-items: center;
					justify-content: center;
					max-height: 100%;
				}

				.${s}__item__header {
					display: none;
				}

				.${s}__item__footer {
					display: none;
					text-align: right;
				}

				.${s}__item__footer__hide {
					display: none;
				}

				
			}

		`);
                    const l = () => {
                            document.head.appendChild(i),
                                document.body.appendChild(o);
                        },
                        c = () => {
                            e.once("change-history", () => {
                                a(o, i);
                            });
                        };
                    window.addEventListener("beforeprint", l),
                        window.addEventListener("afterprint", c);
                    function d(b, x, S) {
                        try {
                            o.innerHTML += `<div class="${s}__item">
        <div class="${s}__item__header">
          ${b.replace(/</g, "&lt;").replace(/>/g, "&gt;")}
        </div>
        <div class="${s}__item__main">
          ${S.outerHTML}
        </div>
        <div class="${s}__item__footer ${s}__item__footer__${x ? "" : "hide"}">
          ${x ?? ""}
        </div>
      </div>`;
                        } catch (_) {
                            console.error(_);
                        }
                    }
                    function u() {
                        e.environment.isChromeForIos
                            ? (l(), window.print())
                            : e.environment.isSafari
                                ? (l(), document.execCommand("print", !1))
                                : window.print();
                    }
                    const h = e.getSelectedShapeIds(),
                        p = e.getCurrentPageId(),
                        m = e.getPages(),
                        g = {
                            scale: 1,
                            background: !1,
                            darkMode: !1,
                            preserveAspectRatio: "xMidYMid meet",
                        };
                    if (e.getSelectedShapeIds().length > 0) {
                        const b = await e.getSvg(h, g);
                        if (b) {
                            const x = m.find((S) => S.id === p);
                            d(`tldraw — ${x == null ? void 0 : x.name}`, null, b),
                                u();
                        }
                    } else {
                        const b = e.getCurrentPage(),
                            x = await e.getSvg(
                                e.getSortedChildIdsForParent(b.id),
                                g
                            );
                        x && (d(`tldraw — ${b.name}`, null, x), u());
                    }
                    window.removeEventListener("beforeprint", l),
                        window.removeEventListener("afterprint", c);
                },
                [e]
            );
        }
        const m7 = y.createContext({});
        function gne(e) {
            return Object.fromEntries(e.map((t) => [t.id, t]));
        }
        function vne({overrides: e, children: t}) {
            const n = W(),
                {addDialog: r, clearDialogs: o} = bs(),
                {clearToasts: i} = $o(),
                a = f7(),
                s = mne(),
                {cut: l, copy: c, paste: d} = nne(),
                u = dne(),
                h = fne(),
                p = vc(),
                m = y.useMemo(() => {
                    function f() {
                        return (
                            n.isIn("select") ||
                            (n.complete(), n.setCurrentTool("select")),
                                !1
                        );
                    }
                    function g() {
                        return n.getSelectedShapeIds().length > 0;
                    }
                    const x = gne([
                        {
                            id: "edit-link",
                            label: "action.edit-link",
                            icon: "link",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("edit-link", {source: S}),
                                        n.mark("edit-link"),
                                        r({component: Dte})));
                            },
                        },
                        {
                            id: "insert-media",
                            label: "action.insert-media",
                            kbd: "$u",
                            readonlyOk: !1,
                            onSelect(S) {
                                p("insert-media", {source: S}), a();
                            },
                        },
                        {
                            id: "undo",
                            label: "action.undo",
                            icon: "undo",
                            kbd: "$z",
                            readonlyOk: !1,
                            onSelect(S) {
                                p("undo", {source: S}), n.undo();
                            },
                        },
                        {
                            id: "redo",
                            label: "action.redo",
                            icon: "redo",
                            kbd: "$!z",
                            readonlyOk: !1,
                            onSelect(S) {
                                p("redo", {source: S}), n.redo();
                            },
                        },
                        {
                            id: "export-as-svg",
                            label: "action.export-as-svg",
                            menuLabel: "action.export-as-svg.short",
                            contextMenuLabel: "action.export-as-svg.short",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("export-as", {format: "svg", source: S}),
                                    h(n.getSelectedShapeIds(), "svg");
                            },
                        },
                        {
                            id: "export-as-png",
                            label: "action.export-as-png",
                            menuLabel: "action.export-as-png.short",
                            contextMenuLabel: "action.export-as-png.short",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("export-as", {format: "png", source: S}),
                                    h(n.getSelectedShapeIds(), "png");
                            },
                        },
                        {
                            id: "export-as-json",
                            label: "action.export-as-json",
                            menuLabel: "action.export-as-json.short",
                            contextMenuLabel: "action.export-as-json.short",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("export-as", {format: "json", source: S}),
                                    h(n.getSelectedShapeIds(), "json");
                            },
                        },
                        {
                            id: "copy-as-svg",
                            label: "action.copy-as-svg",
                            menuLabel: "action.copy-as-svg.short",
                            contextMenuLabel: "action.copy-as-svg.short",
                            kbd: "$!c",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("copy-as", {format: "svg", source: S}),
                                    u(n.getSelectedShapeIds(), "svg");
                            },
                        },
                        {
                            id: "copy-as-png",
                            label: "action.copy-as-png",
                            menuLabel: "action.copy-as-png.short",
                            contextMenuLabel: "action.copy-as-png.short",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("copy-as", {format: "png", source: S}),
                                    u(n.getSelectedShapeIds(), "png");
                            },
                        },
                        {
                            id: "copy-as-json",
                            label: "action.copy-as-json",
                            menuLabel: "action.copy-as-json.short",
                            contextMenuLabel: "action.copy-as-json.short",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("copy-as", {format: "json", source: S}),
                                    u(n.getSelectedShapeIds(), "json");
                            },
                        },
                        {
                            id: "toggle-auto-size",
                            label: "action.toggle-auto-size",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("toggle-auto-size", {source: S}),
                                        n.mark("toggling auto size"),
                                        n.updateShapes(
                                            n
                                                .getSelectedShapes()
                                                .filter(
                                                    (_) =>
                                                        n.isShapeOfType(
                                                            _,
                                                            "text"
                                                        ) && _.props.autoSize === !1
                                                )
                                                .map((_) => ({
                                                    id: _.id,
                                                    type: _.type,
                                                    props: {
                                                        ..._.props,
                                                        w: 8,
                                                        autoSize: !0,
                                                    },
                                                }))
                                        )));
                            },
                        },
                        {
                            id: "open-embed-link",
                            label: "action.open-embed-link",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("open-embed-link", {source: S});
                                const _ = n.getSelectedShapeIds(),
                                    k = "No embed shapes selected";
                                if (_.length !== 1) {
                                    console.error(k);
                                    return;
                                }
                                const C = n.getShape(_[0]);
                                if (!C || !n.isShapeOfType(C, "embed")) {
                                    console.error(k);
                                    return;
                                }
                                uV(C.props.url, "_blank");
                            },
                        },
                        {
                            id: "select-zoom-tool",
                            readonlyOk: !0,
                            kbd: "z",
                            onSelect(S) {
                                var _, k;
                                if (
                                    ((_ = n.root.getCurrent()) == null
                                        ? void 0
                                        : _.id) !== "zoom" &&
                                    (p("zoom-tool", {source: S}),
                                        !(n.inputs.shiftKey || n.inputs.ctrlKey))
                                ) {
                                    const C = n.root.getCurrent();
                                    C &&
                                    ((k = C.getCurrent()) == null
                                        ? void 0
                                        : k.id) === "idle" &&
                                    n.setCurrentTool("zoom", {
                                        onInteractionEnd: C.id,
                                        maskAs: "zoom",
                                    });
                                }
                            },
                        },
                        {
                            id: "convert-to-bookmark",
                            label: "action.convert-to-bookmark",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    n.batch(() => {
                                        p("convert-to-bookmark", {source: S});
                                        const _ = n.getSelectedShapes(),
                                            k = [],
                                            C = [];
                                        for (const P of _) {
                                            if (
                                                !P ||
                                                !n.isShapeOfType(P, "embed") ||
                                                !P.props.url
                                            )
                                                continue;
                                            const I = new E(P.x, P.y);
                                            I.rot(-P.rotation),
                                                I.add(
                                                    new E(
                                                        P.props.w / 2 - 300 / 2,
                                                        P.props.h / 2 - 320 / 2
                                                    )
                                                ),
                                                I.rot(P.rotation);
                                            const $ = {
                                                id: Ge(),
                                                type: "bookmark",
                                                rotation: P.rotation,
                                                x: I.x,
                                                y: I.y,
                                                opacity: 1,
                                                props: {url: P.props.url},
                                            };
                                            k.push($), C.push(P.id);
                                        }
                                        n.mark("convert shapes to bookmark"),
                                            n.deleteShapes(C),
                                            n.createShapes(k);
                                    }));
                            },
                        },
                        {
                            id: "convert-to-embed",
                            label: "action.convert-to-embed",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("convert-to-embed", {source: S}),
                                        n.batch(() => {
                                            const _ = n.getSelectedShapeIds(),
                                                k = pe(_.map((I) => n.getShape(I))),
                                                C = [],
                                                P = [];
                                            for (const I of k) {
                                                if (!n.isShapeOfType(I, "bookmark"))
                                                    continue;
                                                const {url: $} = I.props,
                                                    T = vi(I.props.url);
                                                if (!T || !T.definition) continue;
                                                const {width: R, height: D} =
                                                        T.definition,
                                                    j = new E(I.x, I.y);
                                                j.rot(-I.rotation),
                                                    j.add(
                                                        new E(
                                                            I.props.w / 2 - R / 2,
                                                            I.props.h / 2 - D / 2
                                                        )
                                                    ),
                                                    j.rot(I.rotation);
                                                const z = {
                                                    id: Ge(),
                                                    type: "embed",
                                                    x: j.x,
                                                    y: j.y,
                                                    rotation: I.rotation,
                                                    props: {url: $, w: R, h: D},
                                                };
                                                C.push(z), P.push(I.id);
                                            }
                                            n.mark("convert shapes to embed"),
                                                n.deleteShapes(P),
                                                n.createShapes(C);
                                        })));
                            },
                        },
                        {
                            id: "duplicate",
                            kbd: "$d",
                            label: "action.duplicate",
                            icon: "duplicate",
                            readonlyOk: !1,
                            onSelect(S) {
                                if (!g() || f()) return;
                                p("duplicate-shapes", {source: S});
                                const _ = n.getSelectedShapeIds(),
                                    k = ce.Common(
                                        pe(_.map((P) => n.getShapePageBounds(P)))
                                    ),
                                    C = n.getInstanceState().canMoveCamera
                                        ? {x: k.width + 10, y: 0}
                                        : {
                                            x: 16 / n.getZoomLevel(),
                                            y: 16 / n.getZoomLevel(),
                                        };
                                n.mark("duplicate shapes"), n.duplicateShapes(_, C);
                            },
                        },
                        {
                            id: "ungroup",
                            label: "action.ungroup",
                            kbd: "$!g",
                            icon: "ungroup",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("ungroup-shapes", {source: S}),
                                        n.mark("ungroup"),
                                        n.ungroupShapes(n.getSelectedShapeIds())));
                            },
                        },
                        {
                            id: "group",
                            label: "action.group",
                            kbd: "$g",
                            icon: "group",
                            readonlyOk: !1,
                            onSelect(S) {
                                if (!g() || f()) return;
                                p("group-shapes", {source: S});
                                const _ = n.getOnlySelectedShape();
                                _ && n.isShapeOfType(_, "group")
                                    ? (n.mark("ungroup"),
                                        n.ungroupShapes(n.getSelectedShapeIds()))
                                    : (n.mark("group"),
                                        n.groupShapes(n.getSelectedShapeIds()));
                            },
                        },
                        {
                            id: "remove-frame",
                            label: "action.remove-frame",
                            kbd: "$!f",
                            readonlyOk: !1,
                            onSelect(S) {
                                if (!g()) return;
                                p("remove-frame", {source: S});
                                const _ = n.getSelectedShapes();
                                _.length > 0 &&
                                _.every((k) => n.isShapeOfType(k, "frame")) &&
                                (n.mark("remove-frame"),
                                    Iee(
                                        n,
                                        _.map((k) => k.id)
                                    ));
                            },
                        },
                        {
                            id: "fit-frame-to-content",
                            label: "action.fit-frame-to-content",
                            readonlyOk: !1,
                            onSelect(S) {
                                if (!g()) return;
                                p("fit-frame-to-content", {source: S});
                                const _ = n.getOnlySelectedShape();
                                _ &&
                                n.isShapeOfType(_, "frame") &&
                                (n.mark("fit-frame-to-content"), $ee(n, _.id));
                            },
                        },
                        {
                            id: "align-left",
                            label: "action.align-left",
                            kbd: "?A",
                            icon: "align-left",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("align-shapes", {
                                        operation: "left",
                                        source: S,
                                    }),
                                        n.mark("align left"),
                                        n.alignShapes(
                                            n.getSelectedShapeIds(),
                                            "left"
                                        )));
                            },
                        },
                        {
                            id: "align-center-horizontal",
                            label: "action.align-center-horizontal",
                            contextMenuLabel:
                                "action.align-center-horizontal.short",
                            kbd: "?H",
                            icon: "align-center-horizontal",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("align-shapes", {
                                        operation: "center-horizontal",
                                        source: S,
                                    }),
                                        n.mark("align center horizontal"),
                                        n.alignShapes(
                                            n.getSelectedShapeIds(),
                                            "center-horizontal"
                                        )));
                            },
                        },
                        {
                            id: "align-right",
                            label: "action.align-right",
                            kbd: "?D",
                            icon: "align-right",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("align-shapes", {
                                        operation: "right",
                                        source: S,
                                    }),
                                        n.mark("align right"),
                                        n.alignShapes(
                                            n.getSelectedShapeIds(),
                                            "right"
                                        )));
                            },
                        },
                        {
                            id: "align-center-vertical",
                            label: "action.align-center-vertical",
                            contextMenuLabel: "action.align-center-vertical.short",
                            kbd: "?V",
                            icon: "align-center-vertical",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("align-shapes", {
                                        operation: "center-vertical",
                                        source: S,
                                    }),
                                        n.mark("align center vertical"),
                                        n.alignShapes(
                                            n.getSelectedShapeIds(),
                                            "center-vertical"
                                        )));
                            },
                        },
                        {
                            id: "align-top",
                            label: "action.align-top",
                            icon: "align-top",
                            kbd: "?W",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("align-shapes", {
                                        operation: "top",
                                        source: S,
                                    }),
                                        n.mark("align top"),
                                        n.alignShapes(
                                            n.getSelectedShapeIds(),
                                            "top"
                                        )));
                            },
                        },
                        {
                            id: "align-bottom",
                            label: "action.align-bottom",
                            icon: "align-bottom",
                            kbd: "?S",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("align-shapes", {
                                        operation: "bottom",
                                        source: S,
                                    }),
                                        n.mark("align bottom"),
                                        n.alignShapes(
                                            n.getSelectedShapeIds(),
                                            "bottom"
                                        )));
                            },
                        },
                        {
                            id: "distribute-horizontal",
                            label: "action.distribute-horizontal",
                            contextMenuLabel: "action.distribute-horizontal.short",
                            icon: "distribute-horizontal",
                            kbd: "?!h",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("distribute-shapes", {
                                        operation: "horizontal",
                                        source: S,
                                    }),
                                        n.mark("distribute horizontal"),
                                        n.distributeShapes(
                                            n.getSelectedShapeIds(),
                                            "horizontal"
                                        )));
                            },
                        },
                        {
                            id: "distribute-vertical",
                            label: "action.distribute-vertical",
                            contextMenuLabel: "action.distribute-vertical.short",
                            icon: "distribute-vertical",
                            kbd: "?!V",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("distribute-shapes", {
                                        operation: "vertical",
                                        source: S,
                                    }),
                                        n.mark("distribute vertical"),
                                        n.distributeShapes(
                                            n.getSelectedShapeIds(),
                                            "vertical"
                                        )));
                            },
                        },
                        {
                            id: "stretch-horizontal",
                            label: "action.stretch-horizontal",
                            contextMenuLabel: "action.stretch-horizontal.short",
                            icon: "stretch-horizontal",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("stretch-shapes", {
                                        operation: "horizontal",
                                        source: S,
                                    }),
                                        n.mark("stretch horizontal"),
                                        n.stretchShapes(
                                            n.getSelectedShapeIds(),
                                            "horizontal"
                                        )));
                            },
                        },
                        {
                            id: "stretch-vertical",
                            label: "action.stretch-vertical",
                            contextMenuLabel: "action.stretch-vertical.short",
                            icon: "stretch-vertical",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("stretch-shapes", {
                                        operation: "vertical",
                                        source: S,
                                    }),
                                        n.mark("stretch vertical"),
                                        n.stretchShapes(
                                            n.getSelectedShapeIds(),
                                            "vertical"
                                        )));
                            },
                        },
                        {
                            id: "flip-horizontal",
                            label: "action.flip-horizontal",
                            contextMenuLabel: "action.flip-horizontal.short",
                            kbd: "!h",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("flip-shapes", {
                                        operation: "horizontal",
                                        source: S,
                                    }),
                                        n.mark("flip horizontal"),
                                        n.flipShapes(
                                            n.getSelectedShapeIds(),
                                            "horizontal"
                                        )));
                            },
                        },
                        {
                            id: "flip-vertical",
                            label: "action.flip-vertical",
                            contextMenuLabel: "action.flip-vertical.short",
                            kbd: "!v",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("flip-shapes", {
                                        operation: "vertical",
                                        source: S,
                                    }),
                                        n.mark("flip vertical"),
                                        n.flipShapes(
                                            n.getSelectedShapeIds(),
                                            "vertical"
                                        )));
                            },
                        },
                        {
                            id: "pack",
                            label: "action.pack",
                            icon: "pack",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("pack-shapes", {source: S}),
                                        n.mark("pack"),
                                        n.packShapes(n.getSelectedShapeIds(), 16)));
                            },
                        },
                        {
                            id: "stack-vertical",
                            label: "action.stack-vertical",
                            contextMenuLabel: "action.stack-vertical.short",
                            icon: "stack-vertical",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("stack-shapes", {
                                        operation: "vertical",
                                        source: S,
                                    }),
                                        n.mark("stack-vertical"),
                                        n.stackShapes(
                                            n.getSelectedShapeIds(),
                                            "vertical",
                                            16
                                        )));
                            },
                        },
                        {
                            id: "stack-horizontal",
                            label: "action.stack-horizontal",
                            contextMenuLabel: "action.stack-horizontal.short",
                            icon: "stack-horizontal",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("stack-shapes", {
                                        operation: "horizontal",
                                        source: S,
                                    }),
                                        n.mark("stack-horizontal"),
                                        n.stackShapes(
                                            n.getSelectedShapeIds(),
                                            "horizontal",
                                            16
                                        )));
                            },
                        },
                        {
                            id: "bring-to-front",
                            label: "action.bring-to-front",
                            kbd: "]",
                            icon: "bring-to-front",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("reorder-shapes", {
                                        operation: "toFront",
                                        source: S,
                                    }),
                                        n.mark("bring to front"),
                                        n.bringToFront(n.getSelectedShapeIds())));
                            },
                        },
                        {
                            id: "bring-forward",
                            label: "action.bring-forward",
                            icon: "bring-forward",
                            kbd: "?]",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("reorder-shapes", {
                                        operation: "forward",
                                        source: S,
                                    }),
                                        n.mark("bring forward"),
                                        n.bringForward(n.getSelectedShapeIds())));
                            },
                        },
                        {
                            id: "send-backward",
                            label: "action.send-backward",
                            icon: "send-backward",
                            kbd: "?[",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("reorder-shapes", {
                                        operation: "backward",
                                        source: S,
                                    }),
                                        n.mark("send backward"),
                                        n.sendBackward(n.getSelectedShapeIds())));
                            },
                        },
                        {
                            id: "send-to-back",
                            label: "action.send-to-back",
                            icon: "send-to-back",
                            kbd: "[",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("reorder-shapes", {
                                        operation: "toBack",
                                        source: S,
                                    }),
                                        n.mark("send to back"),
                                        n.sendToBack(n.getSelectedShapeIds())));
                            },
                        },
                        {
                            id: "cut",
                            label: "action.cut",
                            kbd: "$x",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() && (f() || (n.mark("cut"), l(S)));
                            },
                        },
                        {
                            id: "copy",
                            label: "action.copy",
                            kbd: "$c",
                            readonlyOk: !0,
                            onSelect(S) {
                                g() && (f() || c(S));
                            },
                        },
                        {
                            id: "paste",
                            label: "action.paste",
                            kbd: "$v",
                            readonlyOk: !1,
                            onSelect(S) {
                                var _;
                                (_ = navigator.clipboard) == null ||
                                _.read().then((k) => {
                                    d(
                                        k,
                                        S,
                                        S === "context-menu"
                                            ? n.inputs.currentPagePoint
                                            : void 0
                                    );
                                });
                            },
                        },
                        {
                            id: "select-all",
                            label: "action.select-all",
                            kbd: "$a",
                            readonlyOk: !0,
                            onSelect(S) {
                                n.batch(() => {
                                    f() ||
                                    (p("select-all-shapes", {source: S}),
                                        n.mark("select all kbd"),
                                        n.selectAll());
                                });
                            },
                        },
                        {
                            id: "select-none",
                            label: "action.select-none",
                            readonlyOk: !0,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("select-none-shapes", {source: S}),
                                        n.mark("select none"),
                                        n.selectNone()));
                            },
                        },
                        {
                            id: "delete",
                            label: "action.delete",
                            kbd: "⌫,del,backspace",
                            icon: "trash",
                            readonlyOk: !1,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("delete-shapes", {source: S}),
                                        n.mark("delete"),
                                        n.deleteShapes(n.getSelectedShapeIds())));
                            },
                        },
                        {
                            id: "rotate-cw",
                            label: "action.rotate-cw",
                            icon: "rotate-cw",
                            readonlyOk: !1,
                            onSelect(S) {
                                if (!g() || f()) return;
                                p("rotate-cw", {source: S}), n.mark("rotate-cw");
                                const _ = n.getSelectionRotation() % (qe / 2),
                                    k = iu(_, 0) || iu(_, qe / 2);
                                n.rotateShapesBy(
                                    n.getSelectedShapeIds(),
                                    qe / 2 - (k ? 0 : _)
                                );
                            },
                        },
                        {
                            id: "rotate-ccw",
                            label: "action.rotate-ccw",
                            icon: "rotate-ccw",
                            readonlyOk: !1,
                            onSelect(S) {
                                if (!g() || f()) return;
                                p("rotate-ccw", {source: S}), n.mark("rotate-ccw");
                                const _ = n.getSelectionRotation() % (qe / 2),
                                    k = iu(_, 0);
                                n.rotateShapesBy(
                                    n.getSelectedShapeIds(),
                                    k ? -(qe / 2) : -_
                                );
                            },
                        },
                        {
                            id: "zoom-in",
                            label: "action.zoom-in",
                            kbd: "$=,=",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("zoom-in", {source: S}),
                                    n.zoomIn(n.getViewportScreenCenter(), {
                                        duration: ci,
                                    });
                            },
                        },
                        {
                            id: "zoom-out",
                            label: "action.zoom-out",
                            kbd: "$-,-",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("zoom-out", {source: S}),
                                    n.zoomOut(n.getViewportScreenCenter(), {
                                        duration: ci,
                                    });
                            },
                        },
                        {
                            id: "zoom-to-100",
                            label: "action.zoom-to-100",
                            icon: "reset-zoom",
                            kbd: "!0",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("reset-zoom", {source: S}),
                                    n.resetZoom(n.getViewportScreenCenter(), {
                                        duration: ci,
                                    });
                            },
                        },
                        {
                            id: "zoom-to-fit",
                            label: "action.zoom-to-fit",
                            kbd: "!1",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("zoom-to-fit", {source: S}),
                                    n.zoomToFit({duration: ci});
                            },
                        },
                        {
                            id: "zoom-to-selection",
                            label: "action.zoom-to-selection",
                            kbd: "!2",
                            readonlyOk: !0,
                            onSelect(S) {
                                g() &&
                                (f() ||
                                    (p("zoom-to-selection", {source: S}),
                                        n.zoomToSelection({duration: ci})));
                            },
                        },
                        {
                            id: "toggle-snap-mode",
                            label: "action.toggle-snap-mode",
                            menuLabel: "action.toggle-snap-mode.menu",
                            readonlyOk: !1,
                            onSelect(S) {
                                p("toggle-snap-mode", {source: S}),
                                    n.user.updateUserPreferences({
                                        isSnapMode: !n.user.getIsSnapMode(),
                                    });
                            },
                            checkbox: !0,
                        },
                        {
                            id: "toggle-dark-mode",
                            label: "action.toggle-dark-mode",
                            menuLabel: "action.toggle-dark-mode.menu",
                            kbd: "$/",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("toggle-dark-mode", {source: S}),
                                    n.user.updateUserPreferences({
                                        isDarkMode: !n.user.getIsDarkMode(),
                                    });
                            },
                            checkbox: !0,
                        },
                        {
                            id: "toggle-reduce-motion",
                            label: "action.toggle-reduce-motion",
                            menuLabel: "action.toggle-reduce-motion.menu",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("toggle-reduce-motion", {source: S}),
                                    n.user.updateUserPreferences({
                                        animationSpeed:
                                            n.user.getAnimationSpeed() === 0
                                                ? 1
                                                : 0,
                                    });
                            },
                            checkbox: !0,
                        },
                        {
                            id: "toggle-edge-scrolling",
                            label: "action.toggle-edge-scrolling",
                            menuLabel: "action.toggle-edge-scrolling.menu",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("toggle-edge-scrolling", {source: S}),
                                    n.user.updateUserPreferences({
                                        edgeScrollSpeed:
                                            n.user.getEdgeScrollSpeed() === 0
                                                ? 1
                                                : 0,
                                    });
                            },
                            checkbox: !0,
                        },
                        {
                            id: "toggle-transparent",
                            label: "action.toggle-transparent",
                            menuLabel: "action.toggle-transparent.menu",
                            contextMenuLabel:
                                "action.toggle-transparent.context-menu",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("toggle-transparent", {source: S}),
                                    n.updateInstanceState(
                                        {
                                            exportBackground:
                                                !n.getInstanceState()
                                                    .exportBackground,
                                        },
                                        {ephemeral: !0}
                                    );
                            },
                            checkbox: !0,
                        },
                        {
                            id: "toggle-tool-lock",
                            label: "action.toggle-tool-lock",
                            menuLabel: "action.toggle-tool-lock.menu",
                            readonlyOk: !1,
                            kbd: "q",
                            onSelect(S) {
                                p("toggle-tool-lock", {source: S}),
                                    n.updateInstanceState({
                                        isToolLocked:
                                            !n.getInstanceState().isToolLocked,
                                    });
                            },
                            checkbox: !0,
                        },
                        {
                            id: "unlock-all",
                            label: "action.unlock-all",
                            readonlyOk: !1,
                            onSelect(S) {
                                p("unlock-all", {source: S});
                                const _ = [];
                                for (const k of n.getCurrentPageShapes())
                                    k.isLocked &&
                                    _.push({
                                        id: k.id,
                                        type: k.type,
                                        isLocked: !1,
                                    });
                                _.length > 0 && n.updateShapes(_);
                            },
                        },
                        {
                            id: "toggle-focus-mode",
                            label: "action.toggle-focus-mode",
                            menuLabel: "action.toggle-focus-mode.menu",
                            readonlyOk: !0,
                            kbd: "$.",
                            checkbox: !0,
                            onSelect(S) {
                                requestAnimationFrame(() => {
                                    n.batch(() => {
                                        p("toggle-focus-mode", {source: S}),
                                            o(),
                                            i(),
                                            n.updateInstanceState({
                                                isFocusMode:
                                                    !n.getInstanceState()
                                                        .isFocusMode,
                                            });
                                    });
                                });
                            },
                        },
                        {
                            id: "toggle-grid",
                            label: "action.toggle-grid",
                            menuLabel: "action.toggle-grid.menu",
                            readonlyOk: !0,
                            kbd: "$'",
                            onSelect(S) {
                                p("toggle-grid-mode", {source: S}),
                                    n.updateInstanceState({
                                        isGridMode:
                                            !n.getInstanceState().isGridMode,
                                    });
                            },
                            checkbox: !0,
                        },
                        {
                            id: "toggle-debug-mode",
                            label: "action.toggle-debug-mode",
                            menuLabel: "action.toggle-debug-mode.menu",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("toggle-debug-mode", {source: S}),
                                    n.updateInstanceState({
                                        isDebugMode:
                                            !n.getInstanceState().isDebugMode,
                                    });
                            },
                            checkbox: !0,
                        },
                        {
                            id: "print",
                            label: "action.print",
                            kbd: "$p",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("print", {source: S}), s();
                            },
                        },
                        {
                            id: "exit-pen-mode",
                            label: "action.exit-pen-mode",
                            icon: "cross-2",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("exit-pen-mode", {source: S}),
                                    n.updateInstanceState({isPenMode: !1});
                            },
                        },
                        {
                            id: "stop-following",
                            label: "action.stop-following",
                            icon: "cross-2",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("stop-following", {source: S}),
                                    n.stopFollowingUser();
                            },
                        },
                        {
                            id: "back-to-content",
                            label: "action.back-to-content",
                            icon: "arrow-left",
                            readonlyOk: !0,
                            onSelect(S) {
                                p("zoom-to-content", {source: S}),
                                    n.zoomToContent();
                            },
                        },
                        {
                            id: "toggle-lock",
                            label: "action.toggle-lock",
                            readonlyOk: !1,
                            kbd: "!l",
                            onSelect(S) {
                                n.mark("locking"),
                                    p("toggle-lock", {source: S}),
                                    n.toggleLock(n.getSelectedShapeIds());
                            },
                        },
                    ]);
                    return e ? e(n, x, void 0) : x;
                }, [n, p, e, r, a, h, u, l, c, d, o, i, s]);
            return v.jsx(m7.Provider, {value: m, children: t});
        }
        function bn() {
            const e = y.useContext(m7);
            if (!e) throw new Error("useTools must be used within a ToolProvider");
            return e;
        }
        function ome(e) {
            return e;
        }
        function Mg(e) {
            return e.filter((t) => t != null && t !== !1);
        }
        function xe(e, ...t) {
            const n = Mg(t);
            return n.length === 0
                ? null
                : {
                    id: e,
                    type: "group",
                    checkbox: n.every(
                        (r) => r.type === "item" && r.actionItem.checkbox
                    ),
                    disabled: n.every((r) => r.disabled),
                    readonlyOk: n.some((r) => r.readonlyOk),
                    children: n,
                };
        }
        function Ao(e, t, ...n) {
            const r = Mg(n);
            return r.length === 0
                ? null
                : {
                    id: e,
                    type: "submenu",
                    label: t,
                    children: r,
                    disabled: r.every((o) => o.disabled),
                    readonlyOk: r.some((o) => o.readonlyOk),
                };
        }
        function Tx(e, t = {}) {
            const {readonlyOk: n = !0, disabled: r = !1} = t;
            return {id: e, type: "custom", disabled: r, readonlyOk: n};
        }
        function U(e, t = {}) {
            if (!e) throw Error("No action item provided to menuItem");
            if (!e.label)
                throw Error(
                    "Trying to create menu item for action item that doesn't have a label"
                );
            const {checked: n = !1, disabled: r = !1} = t;
            return {
                id: e.id,
                type: "item",
                actionItem: e,
                disabled: r,
                checked: n,
                readonlyOk: e.readonlyOk,
            };
        }
        function bne(e) {
            return e
                .getSelectedShapeIds()
                .map((r) => e.getShape(r))
                .filter(
                    (r) =>
                        !(
                            !r ||
                            (e.isShapeOfType(r, "arrow") &&
                                r.props.start.type === "binding") ||
                            (e.isShapeOfType(r, "arrow") &&
                                r.props.end.type === "binding")
                        )
                );
        }
        const g7 = () => {
            const e = W();
            return X("threeStackableItems", () => bne(e).length > 2, [e]);
        };
        function yne(e) {
            const t = e.getSelectedShapes(),
                n = [],
                r = new Map();
            t.forEach((i) => {
                i.type === "arrow" ? n.push(i) : r.set(i.id, i);
            });
            const o = n.filter(
                (i) =>
                    !(
                        (i.props.start.type === "binding" &&
                            !r.has(i.props.start.boundShapeId)) ||
                        (i.props.end.type === "binding" &&
                            !r.has(i.props.end.boundShapeId))
                    )
            );
            return Array.from(r.values()).concat(o);
        }
        const $x = () => {
                const e = W();
                return X("allowGroup", () => yne(e).length > 1, [e]);
            },
            Ax = () => {
                const e = W();
                return X(
                    "allowUngroup",
                    () =>
                        e.getSelectedShapeIds().some((t) => {
                            var n;
                            return (
                                ((n = e.getShape(t)) == null ? void 0 : n.type) ===
                                "group"
                            );
                        }),
                    [e]
                );
            },
            v7 =
                typeof window < "u" &&
                "navigator" in window &&
                !!navigator.clipboard &&
                !!navigator.clipboard.read,
            Mx = [0, 390, 428, 468, 580, 640, 840, 1023],
            b7 = N.createContext(0);
        function wne({forceMobile: e = !1, children: t}) {
            const n = W(),
                r = X(
                    "breakpoint",
                    () => {
                        const {width: o} = n.getViewportScreenBounds(),
                            i = e ? 3 : Mx.length - 1;
                        for (let a = 0; a < i; a++)
                            if (o > Mx[a] && o <= Mx[a + 1]) return a;
                        return i;
                    },
                    [n]
                );
            return v.jsx(b7.Provider, {value: r, children: t});
        }
        function $r() {
            return y.useContext(b7);
        }
        function zx() {
            const e = W();
            return X(
                "hasLinkShapeSelected",
                () => {
                    const t = e.getSelectedShapes();
                    return (
                        t.length === 1 &&
                        "url" in t[0].props &&
                        t[0].type !== "embed"
                    );
                },
                [e]
            );
        }
        const y7 = N.createContext({}),
            xne = ({overrides: e, children: t}) => {
                const n = W(),
                    r = bn(),
                    o = X("selected count", () => n.getSelectedShapeIds().length, [
                        n,
                    ]),
                    i = o > 0,
                    a = o > 1,
                    s = o > 2,
                    l = g7(),
                    c = $x(),
                    d = Ax(),
                    u = zx(),
                    h = $r(),
                    p = X("zoom is 1", () => n.getZoomLevel() === 1, [n]),
                    m = y.useMemo(() => {
                        const f = [
                            U(r["align-left"], {disabled: !a}),
                            U(r["align-center-horizontal"], {disabled: !a}),
                            U(r["align-right"], {disabled: !a}),
                            U(r["stretch-horizontal"], {disabled: !a}),
                            U(r["align-top"], {disabled: !a}),
                            U(r["align-center-vertical"], {disabled: !a}),
                            U(r["align-bottom"], {disabled: !a}),
                            U(r["stretch-vertical"], {disabled: !a}),
                            U(r["distribute-horizontal"], {disabled: !s}),
                            U(r["distribute-vertical"], {disabled: !s}),
                            U(r["stack-horizontal"], {disabled: !l}),
                            U(r["stack-vertical"], {disabled: !l}),
                            U(r["send-to-back"], {disabled: !i}),
                            U(r["send-backward"], {disabled: !i}),
                            U(r["bring-forward"], {disabled: !i}),
                            U(r["bring-to-front"], {disabled: !i}),
                            h < 5
                                ? U(r["zoom-to-100"], {disabled: !!p})
                                : U(r["rotate-ccw"], {disabled: !i}),
                            U(r["rotate-cw"], {disabled: !i}),
                            U(r["edit-link"], {disabled: !u}),
                            c
                                ? U(r.group, {disabled: !a})
                                : d
                                    ? U(r.ungroup)
                                    : U(r.group, {disabled: !a}),
                        ];
                        return e
                            ? e(n, f, {
                                actions: r,
                                oneSelected: i,
                                twoSelected: a,
                                threeSelected: s,
                            })
                            : f;
                    }, [n, p, c, e, r, i, a, s, l, d, u, h]);
                return v.jsx(y7.Provider, {value: m, children: t});
            };
        function Sne() {
            const e = N.useContext(y7);
            if (!e)
                throw new Error(
                    "useActionsMenuSchema must be used inside of a ActionsMenuSchemaProvider."
                );
            return e;
        }
        function _ne() {
            const e = W();
            return X(
                "onlyFlippableShape",
                () => {
                    const t = e.getSelectedShapes();
                    return (
                        t.length === 1 &&
                        t.every(
                            (n) =>
                                e.isShapeOfType(n, "group") ||
                                e.isShapeOfType(n, "arrow") ||
                                e.isShapeOfType(n, "line") ||
                                e.isShapeOfType(n, "draw")
                        )
                    );
                },
                [e]
            );
        }
        function w7() {
            const e = W();
            return X(
                "showAutoSizeToggle",
                () => {
                    const t = e.getSelectedShapes();
                    return (
                        t.length === 1 &&
                        e.isShapeOfType(t[0], "text") &&
                        t[0].props.autoSize === !1
                    );
                },
                [e]
            );
        }
        const x7 = N.createContext({}),
            kne = ze(function ({overrides: t, children: n}) {
                var I;
                const r = W(),
                    o = bn(),
                    i = w7(),
                    a = _ne(),
                    s = r.getSelectedShapes(),
                    l = s.length,
                    c = l > 0,
                    d = l > 1,
                    u = l > 2,
                    h = g7(),
                    p = X(
                        "atLeastOneShapeOnPage",
                        () => r.getCurrentPageShapeIds().size > 0,
                        []
                    ),
                    m = X(
                        "isTransparentBg",
                        () => r.getInstanceState().exportBackground,
                        []
                    ),
                    f = $x(),
                    g = Ax(),
                    b = !!((I = window.navigator.clipboard) != null && I.write),
                    x = zx(),
                    S = r.getOnlySelectedShape(),
                    _ = c && s.every(($) => r.isShapeOfType($, "frame")),
                    k =
                        S &&
                        r.isShapeOfType(S, "frame") &&
                        r.getSortedChildIdsForParent(S).length > 0,
                    C = S && r.isShapeOrAncestorLocked(S),
                    P = y.useMemo(() => {
                        let $ = Mg([
                            xe(
                                "selection",
                                i && U(o["toggle-auto-size"]),
                                x && !C && U(o["edit-link"]),
                                c && !C && U(o.duplicate),
                                f && !C && U(o.group),
                                g && !C && U(o.ungroup),
                                _ && !C && U(o["remove-frame"]),
                                k && !C && U(o["fit-frame-to-content"]),
                                c && U(o["toggle-lock"])
                            ),
                            xe(
                                "modify",
                                (d || a) &&
                                Ao(
                                    "arrange",
                                    "context-menu.arrange",
                                    d &&
                                    xe(
                                        "align",
                                        U(o["align-left"]),
                                        U(o["align-center-horizontal"]),
                                        U(o["align-right"]),
                                        U(o["align-top"]),
                                        U(o["align-center-vertical"]),
                                        U(o["align-bottom"])
                                    ),
                                    u &&
                                    xe(
                                        "distribute",
                                        U(o["distribute-horizontal"]),
                                        U(o["distribute-vertical"])
                                    ),
                                    d &&
                                    xe(
                                        "stretch",
                                        U(o["stretch-horizontal"]),
                                        U(o["stretch-vertical"])
                                    ),
                                    a &&
                                    !C &&
                                    xe(
                                        "flip",
                                        U(o["flip-horizontal"]),
                                        U(o["flip-vertical"])
                                    ),
                                    d &&
                                    xe(
                                        "order",
                                        U(o.pack, {disabled: !d}),
                                        h && U(o["stack-vertical"]),
                                        h && U(o["stack-horizontal"])
                                    )
                                ),
                                c &&
                                !C &&
                                Ao(
                                    "reorder",
                                    "context-menu.reorder",
                                    xe(
                                        "reorder",
                                        U(o["bring-to-front"]),
                                        U(o["bring-forward"]),
                                        U(o["send-backward"]),
                                        U(o["send-to-back"])
                                    )
                                ),
                                c && !C && Tx("MOVE_TO_PAGE_MENU", {readonlyOk: !1})
                            ),
                            xe(
                                "clipboard-group",
                                c && !C && U(o.cut),
                                c && U(o.copy),
                                v7 && U(o.paste)
                            ),
                            p &&
                            xe(
                                "conversions",
                                Ao(
                                    "copy-as",
                                    "context-menu.copy-as",
                                    xe(
                                        "copy-as-group",
                                        U(o["copy-as-svg"]),
                                        b && U(o["copy-as-png"]),
                                        U(o["copy-as-json"])
                                    ),
                                    xe(
                                        "export-bg",
                                        U(o["toggle-transparent"], {
                                            checked: !m,
                                        })
                                    )
                                ),
                                Ao(
                                    "export-as",
                                    "context-menu.export-as",
                                    xe(
                                        "export-as-group",
                                        U(o["export-as-svg"]),
                                        U(o["export-as-png"]),
                                        U(o["export-as-json"])
                                    ),
                                    xe(
                                        "export-bg,",
                                        U(o["toggle-transparent"], {
                                            checked: !m,
                                        })
                                    )
                                )
                            ),
                            p &&
                            xe(
                                "set-selection-group",
                                U(o["select-all"]),
                                c && U(o["select-none"])
                            ),
                            c && !C && xe("delete-group", U(o.delete)),
                        ]);
                        return (
                            t &&
                            ($ = t(r, $, {
                                actions: o,
                                oneSelected: c,
                                twoSelected: d,
                                threeSelected: u,
                                showAutoSizeToggle: i,
                                showUngroup: g,
                                onlyFlippableShapeSelected: a,
                            })),
                                $
                        );
                    }, [r, t, o, c, d, u, i, a, p, h, f, g, _, k, b, x, m, C]);
                return v.jsx(x7.Provider, {value: P, children: n});
            });
        function S7() {
            const e = N.useContext(x7);
            if (!e)
                throw new Error(
                    "useContextMenuSchema must be used inside of a TLUiContextMenuSchemaProvider."
                );
            return e;
        }
        const _7 = y.createContext({});
        function Cne({overrides: e, children: t}) {
            const n = W(),
                r = vc(),
                {addDialog: o} = bs(),
                i = f7(),
                a = y.useMemo(() => {
                    const s = [
                        {
                            id: "select",
                            label: "tool.select",
                            icon: "tool-pointer",
                            kbd: "v",
                            readonlyOk: !0,
                            onSelect(c) {
                                n.setCurrentTool("select"),
                                    r("select-tool", {source: c, id: "select"});
                            },
                        },
                        {
                            id: "hand",
                            label: "tool.hand",
                            icon: "tool-hand",
                            kbd: "h",
                            readonlyOk: !0,
                            onSelect(c) {
                                n.setCurrentTool("hand"),
                                    r("select-tool", {source: c, id: "hand"});
                            },
                        },
                        {
                            id: "eraser",
                            label: "tool.eraser",
                            icon: "tool-eraser",
                            kbd: "e",
                            readonlyOk: !1,
                            onSelect(c) {
                                n.setCurrentTool("eraser"),
                                    r("select-tool", {source: c, id: "eraser"});
                            },
                        },
                        {
                            id: "draw",
                            label: "tool.draw",
                            readonlyOk: !1,
                            icon: "tool-pencil",
                            kbd: "d,b,x",
                            onSelect(c) {
                                n.setCurrentTool("draw"),
                                    r("select-tool", {source: c, id: "draw"});
                            },
                        },
                        ...[...xo.values].map((c) => ({
                            id: c,
                            label: `tool.${c}`,
                            readonlyOk: !1,
                            meta: {geo: c},
                            kbd:
                                c === "rectangle"
                                    ? "r"
                                    : c === "ellipse"
                                        ? "o"
                                        : void 0,
                            icon: "geo-" + c,
                            onSelect(d) {
                                n.batch(() => {
                                    n.updateInstanceState(
                                        {
                                            stylesForNextShape: {
                                                ...n.getInstanceState()
                                                    .stylesForNextShape,
                                                [xo.id]: c,
                                            },
                                        },
                                        {ephemeral: !0}
                                    ),
                                        n.setCurrentTool("geo"),
                                        r("select-tool", {
                                            source: d,
                                            id: `geo-${c}`,
                                        });
                                });
                            },
                        })),
                        {
                            id: "arrow",
                            label: "tool.arrow",
                            readonlyOk: !1,
                            icon: "tool-arrow",
                            kbd: "a",
                            onSelect(c) {
                                n.setCurrentTool("arrow"),
                                    r("select-tool", {source: c, id: "arrow"});
                            },
                        },
                        {
                            id: "line",
                            label: "tool.line",
                            readonlyOk: !1,
                            icon: "tool-line",
                            kbd: "l",
                            onSelect(c) {
                                n.setCurrentTool("line"),
                                    r("select-tool", {source: c, id: "line"});
                            },
                        },
                        {
                            id: "frame",
                            label: "tool.frame",
                            readonlyOk: !1,
                            icon: "tool-frame",
                            kbd: "f",
                            onSelect(c) {
                                n.setCurrentTool("frame"),
                                    r("select-tool", {source: c, id: "frame"});
                            },
                        },
                        {
                            id: "text",
                            label: "tool.text",
                            readonlyOk: !1,
                            icon: "tool-text",
                            kbd: "t",
                            onSelect(c) {
                                n.setCurrentTool("text"),
                                    r("select-tool", {source: c, id: "text"});
                            },
                        },
                        {
                            id: "asset",
                            label: "tool.asset",
                            readonlyOk: !1,
                            icon: "tool-media",
                            kbd: "$u",
                            onSelect(c) {
                                i(), r("select-tool", {source: c, id: "media"});
                            },
                        },
                        {
                            id: "note",
                            label: "tool.note",
                            readonlyOk: !1,
                            icon: "tool-note",
                            kbd: "n",
                            onSelect(c) {
                                n.setCurrentTool("note"),
                                    r("select-tool", {source: c, id: "note"});
                            },
                        },
                        {
                            id: "laser",
                            label: "tool.laser",
                            readonlyOk: !0,
                            icon: "tool-laser",
                            kbd: "k",
                            onSelect(c) {
                                n.setCurrentTool("laser"),
                                    r("select-tool", {source: c, id: "laser"});
                            },
                        },
                        {
                            id: "embed",
                            label: "tool.embed",
                            readonlyOk: !1,
                            icon: "tool-embed",
                            onSelect(c) {
                                o({component: J8}),
                                    r("select-tool", {source: c, id: "embed"});
                            },
                        },
                    ];
                    s.push({
                        id: "highlight",
                        label: "tool.highlight",
                        readonlyOk: !0,
                        icon: "tool-highlight",
                        kbd: "!d",
                        onSelect(c) {
                            n.setCurrentTool("highlight"),
                                r("select-tool", {source: c, id: "highlight"});
                        },
                    });
                    const l = Object.fromEntries(s.map((c) => [c.id, c]));
                    return e ? e(n, l, {insertMedia: i}) : l;
                }, [e, n, r, i, o]);
            return v.jsx(_7.Provider, {value: a, children: t});
        }
        function Rx() {
            const e = y.useContext(_7);
            if (!e) throw new Error("useTools must be used within a ToolProvider");
            return e;
        }
        const k7 = N.createContext({}),
            Ene = ze(function ({overrides: t, children: n}) {
                const r = W(),
                    o = Rx(),
                    i = bn(),
                    a = y.useMemo(() => {
                        const s = pe([
                            xe(
                                "shortcuts-dialog.tools",
                                U(i["toggle-tool-lock"]),
                                U(o.select),
                                U(o.draw),
                                U(o.eraser),
                                U(o.hand),
                                U(o.rectangle),
                                U(o.ellipse),
                                U(o.arrow),
                                U(o.line),
                                U(o.text),
                                U(o.frame),
                                U(o.note),
                                U(o.laser)
                            ),
                            xe(
                                "shortcuts-dialog.file",
                                U(i["insert-media"]),
                                U(i.print)
                            ),
                            xe(
                                "shortcuts-dialog.preferences",
                                U(i["toggle-dark-mode"]),
                                U(i["toggle-focus-mode"]),
                                U(i["toggle-grid"])
                            ),
                            xe(
                                "shortcuts-dialog.edit",
                                U(i.undo),
                                U(i.redo),
                                U(i.cut),
                                U(i.copy),
                                U(i.paste),
                                U(i["select-all"]),
                                U(i.delete),
                                U(i.duplicate),
                                U(i["export-as-svg"]),
                                U(i["export-as-png"])
                            ),
                            xe(
                                "shortcuts-dialog.view",
                                U(i["zoom-in"]),
                                U(i["zoom-out"]),
                                U(i["zoom-to-100"]),
                                U(i["zoom-to-fit"]),
                                U(i["zoom-to-selection"])
                            ),
                            xe(
                                "shortcuts-dialog.transform",
                                U(i["bring-to-front"]),
                                U(i["bring-forward"]),
                                U(i["send-backward"]),
                                U(i["send-to-back"]),
                                U(i.group),
                                U(i.ungroup),
                                U(i["flip-horizontal"]),
                                U(i["flip-vertical"]),
                                U(i["align-top"]),
                                U(i["align-center-vertical"]),
                                U(i["align-bottom"]),
                                U(i["align-left"]),
                                U(i["align-center-horizontal"]),
                                U(i["align-right"])
                            ),
                        ]);
                        return t ? t(r, s, {tools: o, actions: i}) : s;
                    }, [r, t, i, o]);
                return v.jsx(k7.Provider, {value: a, children: n});
            });
        function Pne() {
            const e = N.useContext(k7);
            if (!e)
                throw new Error(
                    "Shortcuts must be used inside of a ShortcutsProvider."
                );
            return e;
        }
        const Ine = () => {
            const e = Ee(),
                t = Pr(),
                n = Pne();
            function r(o) {
                if (!o || (t && !o.readonlyOk)) return null;
                switch (o.type) {
                    case "group":
                        return v.jsxs(
                            "div",
                            {
                                className: "tlui-shortcuts-dialog__group",
                                children: [
                                    v.jsx("h2", {
                                        className:
                                            "tlui-shortcuts-dialog__group__title",
                                        children: e(o.id),
                                    }),
                                    v.jsx("div", {
                                        className:
                                            "tlui-shortcuts-dialog__group__content",
                                        children: o.children
                                            .filter(
                                                (i) =>
                                                    i &&
                                                    i.type === "item" &&
                                                    i.actionItem.kbd
                                            )
                                            .map(r),
                                    }),
                                ],
                            },
                            o.id
                        );
                    case "item": {
                        const {
                            id: i,
                            label: a,
                            shortcutsLabel: s,
                            kbd: l,
                        } = o.actionItem;
                        return v.jsxs(
                            "div",
                            {
                                className: "tlui-shortcuts-dialog__key-pair",
                                children: [
                                    v.jsx("div", {
                                        className:
                                            "tlui-shortcuts-dialog__key-pair__key",
                                        children: e(s ?? a),
                                    }),
                                    v.jsx("div", {
                                        className:
                                            "tlui-shortcuts-dialog__key-pair__value",
                                        children: v.jsx(vg, {children: l}),
                                    }),
                                ],
                            },
                            i
                        );
                    }
                }
            }
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsxs(Cg, {
                        className: "tlui-shortcuts-dialog__header",
                        children: [
                            v.jsx(Eg, {children: e("shortcuts-dialog.title")}),
                            v.jsx(Pg, {}),
                        ],
                    }),
                    v.jsx(Ku, {
                        className: "tlui-shortcuts-dialog__body",
                        children: n.map(r),
                    }),
                    v.jsx("div", {className: "tlui-dialog__scrim"}),
                ],
            });
        };
        function C7() {
            const e = W();
            return {languages: Jd, currentLanguage: e.user.getLocale()};
        }
        const E7 = N.createContext({}),
            Tne = ze(function ({overrides: t, children: n}) {
                const r = W(),
                    o = bn(),
                    i = r.getSelectedShapeIds().length,
                    a = i > 0,
                    s = i > 1,
                    l = i > 2,
                    {languages: c, currentLanguage: d} = C7(),
                    {addDialog: u} = bs(),
                    h = y.useMemo(() => {
                        const p = pe([
                            xe(
                                "top",
                                Tx("LANGUAGE_MENU", {readonlyOk: !0}),
                                U({
                                    id: "keyboard-shortcuts",
                                    label: "help-menu.keyboard-shortcuts",
                                    readonlyOk: !0,
                                    onSelect() {
                                        u({component: Ine});
                                    },
                                })
                            ),
                        ]);
                        return t
                            ? t(r, p, {
                                actions: o,
                                currentLanguage: d,
                                languages: c,
                                oneSelected: a,
                                twoSelected: s,
                                threeSelected: l,
                            })
                            : p;
                    }, [r, t, c, o, a, s, l, d, u]);
                return v.jsx(E7.Provider, {value: h, children: n});
            });
        function $ne() {
            const e = N.useContext(E7);
            if (!e)
                throw new Error(
                    "useHelpMenuSchema must be used inside of a helpTLUiMenuSchemaProvider."
                );
            return e;
        }
        function P7() {
            const e = W();
            return X("useCanRedo", () => e.getCanRedo(), [e]);
        }
        function I7() {
            const e = W();
            return X("useCanUndo", () => e.getCanUndo(), [e]);
        }
        const T7 = N.createContext({});
        function Ane({overrides: e, children: t}) {
            var F;
            const n = W(),
                r = bn(),
                i = $r() < 5,
                a = X("isDarkMode", () => n.user.getIsDarkMode(), [n]),
                s = X("animationSpeed", () => n.user.getAnimationSpeed(), [n]),
                l = X("edgeScrollSpeed", () => n.user.getEdgeScrollSpeed(), [n]),
                c = X("isGridMode", () => n.getInstanceState().isGridMode, [n]),
                d = X("isSnapMode", () => n.user.getIsSnapMode(), [n]),
                u = X("isToolLock", () => n.getInstanceState().isToolLocked, [n]),
                h = X("isFocusMode", () => n.getInstanceState().isFocusMode, [n]),
                p = X("isDebugMode", () => n.getInstanceState().isDebugMode, [n]),
                m = X(
                    "exportBackground",
                    () => n.getInstanceState().exportBackground,
                    [n]
                ),
                f = X("emptyPage", () => n.getCurrentPageShapeIds().size === 0, [
                    n,
                ]),
                g = X("selectedCount", () => n.getSelectedShapeIds().length, [n]),
                b = g === 0,
                x = g > 0,
                S = g > 1,
                _ = g > 2,
                k = !!((F = window.navigator.clipboard) != null && F.write),
                C = zx(),
                P = w7(),
                I = $x(),
                $ = Ax(),
                T = I7(),
                R = P7(),
                D = X("isZoomedTo100", () => n.getZoomLevel() === 1, [n]),
                j = X(
                    "oneEmbedSelected",
                    () => {
                        const K = n.getOnlySelectedShape();
                        return K
                            ? !!(
                                n.isShapeOfType(K, "embed") &&
                                K.props.url &&
                                !n.isShapeOrAncestorLocked(K)
                            )
                            : !1;
                    },
                    []
                ),
                z = X(
                    "oneEmbeddableBookmarkSelected",
                    () => {
                        const K = n.getOnlySelectedShape();
                        return K
                            ? !!(
                                n.isShapeOfType(K, "bookmark") &&
                                K.props.url &&
                                vi(K.props.url) &&
                                !n.isShapeOrAncestorLocked(K)
                            )
                            : !1;
                    },
                    []
                ),
                O = y.useMemo(() => {
                    const K = Mg([
                        xe(
                            "menu",
                            Ao(
                                "file",
                                "menu.file",
                                xe("print", U(r.print, {disabled: f}))
                            ),
                            Ao(
                                "edit",
                                "menu.edit",
                                xe(
                                    "undo-actions",
                                    U(r.undo, {disabled: !T}),
                                    U(r.redo, {disabled: !R})
                                ),
                                xe(
                                    "clipboard-actions",
                                    U(r.cut, {disabled: b}),
                                    U(r.copy, {disabled: b}),
                                    U(r.paste, {disabled: !v7})
                                ),
                                xe(
                                    "conversions",
                                    Ao(
                                        "copy-as",
                                        "menu.copy-as",
                                        xe(
                                            "copy-as-group",
                                            U(r["copy-as-svg"], {disabled: f}),
                                            U(r["copy-as-png"], {
                                                disabled: f || !k,
                                            }),
                                            U(r["copy-as-json"], {disabled: f})
                                        ),
                                        xe(
                                            "export-bg",
                                            U(r["toggle-transparent"], {
                                                checked: !m,
                                            })
                                        )
                                    ),
                                    Ao(
                                        "export-as",
                                        "menu.export-as",
                                        xe(
                                            "export-as-group",
                                            U(r["export-as-svg"], {disabled: f}),
                                            U(r["export-as-png"], {disabled: f}),
                                            U(r["export-as-json"], {disabled: f})
                                        ),
                                        xe(
                                            "export-bg",
                                            U(r["toggle-transparent"], {
                                                checked: !m,
                                            })
                                        )
                                    )
                                ),
                                xe(
                                    "set-selection-group",
                                    U(r["select-all"], {disabled: f}),
                                    U(r["select-none"], {disabled: !x})
                                ),
                                xe(
                                    "selection",
                                    P && U(r["toggle-auto-size"]),
                                    C && U(r["edit-link"]),
                                    U(r.duplicate, {disabled: !x}),
                                    I && U(r.group),
                                    $ && U(r.ungroup),
                                    U(r["unlock-all"], {disabled: f})
                                ),
                                xe("delete-group", U(r.delete, {disabled: !x})),
                                xe(
                                    "embeds",
                                    j && U(r["open-embed-link"]),
                                    j && U(r["convert-to-bookmark"]),
                                    z && U(r["convert-to-embed"])
                                )
                            ),
                            Ao(
                                "view",
                                "menu.view",
                                xe(
                                    "view-actions",
                                    U(r["zoom-in"]),
                                    U(r["zoom-out"]),
                                    U(r["zoom-to-100"], {disabled: D}),
                                    U(r["zoom-to-fit"], {disabled: f}),
                                    U(r["zoom-to-selection"], {disabled: f || !x})
                                )
                            )
                        ),
                        xe("extras", U(r["insert-media"])),
                        xe(
                            "preferences",
                            Ao(
                                "preferences",
                                "menu.preferences",
                                xe(
                                    "preferences-actions",
                                    U(r["toggle-snap-mode"], {checked: d}),
                                    U(r["toggle-tool-lock"], {checked: u}),
                                    U(r["toggle-grid"], {checked: c}),
                                    U(r["toggle-dark-mode"], {checked: a}),
                                    U(r["toggle-focus-mode"], {checked: h}),
                                    U(r["toggle-edge-scrolling"], {
                                        checked: l === 1,
                                    }),
                                    U(r["toggle-reduce-motion"], {
                                        checked: s === 0,
                                    }),
                                    U(r["toggle-debug-mode"], {checked: p})
                                )
                            ),
                            i && Tx("LANGUAGE_MENU", {readonlyOk: !0})
                        ),
                    ]);
                    return e
                        ? e(n, K, {
                            actions: r,
                            noneSelected: b,
                            oneSelected: x,
                            twoSelected: S,
                            threeSelected: _,
                        })
                        : K;
                }, [
                    n,
                    e,
                    r,
                    x,
                    S,
                    _,
                    f,
                    i,
                    I,
                    $,
                    C,
                    k,
                    P,
                    b,
                    T,
                    R,
                    s,
                    a,
                    c,
                    d,
                    u,
                    h,
                    m,
                    p,
                    l,
                    D,
                    z,
                    j,
                ]);
            return v.jsx(T7.Provider, {value: O, children: t});
        }
        function Mne() {
            const e = N.useContext(T7);
            if (!e)
                throw new Error(
                    "useMenuSchema must be used inside of a TLUiMenuSchemaProvider."
                );
            return e;
        }
        function Ve(e) {
            return {id: e.id, type: "item", readonlyOk: e.readonlyOk, toolItem: e};
        }
        const $7 = N.createContext([]);
        function zne({overrides: e, children: t}) {
            const n = W(),
                r = Rx(),
                o = N.useMemo(() => {
                    const i = pe([
                        Ve(r.select),
                        Ve(r.hand),
                        Ve(r.draw),
                        Ve(r.eraser),
                        Ve(r.arrow),
                        Ve(r.text),
                        Ve(r.note),
                        Ve(r.asset),
                        Ve(r.rectangle),
                        Ve(r.ellipse),
                        Ve(r.diamond),
                        Ve(r.triangle),
                        Ve(r.trapezoid),
                        Ve(r.rhombus),
                        Ve(r.hexagon),
                        Ve(r.cloud),
                        Ve(r.star),
                        Ve(r.oval),
                        Ve(r["x-box"]),
                        Ve(r["check-box"]),
                        Ve(r["arrow-left"]),
                        Ve(r["arrow-up"]),
                        Ve(r["arrow-down"]),
                        Ve(r["arrow-right"]),
                        Ve(r.line),
                        Ve(r.highlight),
                        Ve(r.frame),
                        Ve(r.laser),
                    ]);
                    return e ? e(n, i, {tools: r}) : i;
                }, [n, e, r]);
            return v.jsx($7.Provider, {value: o, children: t});
        }
        function Rne() {
            const e = N.useContext($7);
            if (!e)
                throw new Error(
                    "useToolbarSchema must be used within a ToolbarSchemaProvider"
                );
            return e;
        }
        function One() {
            const {addToast: e, removeToast: t, clearToasts: n} = $o(),
                {
                    addDialog: r,
                    clearDialogs: o,
                    removeDialog: i,
                    updateDialog: a,
                } = bs(),
                l = $r() < 5,
                c = Ee();
            return y.useMemo(
                () => ({
                    addToast: e,
                    removeToast: t,
                    clearToasts: n,
                    addDialog: r,
                    clearDialogs: o,
                    removeDialog: i,
                    updateDialog: a,
                    msg: c,
                    isMobile: l,
                }),
                [r, e, o, n, c, i, t, a, l]
            );
        }
        function Dne(e, t) {
            const n = {};
            for (const r of e)
                if (r.translations)
                    for (const [o, i] of ri(r.translations)) {
                        let a = n[o];
                        a || (a = n[o] = {}), Object.assign(a, i);
                    }
            return {
                actionsMenu: (r, o, i) => {
                    for (const a of e)
                        a.actionsMenu && (o = a.actionsMenu(r, o, {...t, ...i}));
                    return o;
                },
                actions: (r, o) => {
                    for (const i of e) i.actions && (o = i.actions(r, o, t));
                    return o;
                },
                contextMenu: (r, o, i) => {
                    for (const a of e)
                        a.contextMenu && (o = a.contextMenu(r, o, {...t, ...i}));
                    return o;
                },
                helpMenu: (r, o, i) => {
                    for (const a of e)
                        a.helpMenu && (o = a.helpMenu(r, o, {...t, ...i}));
                    return o;
                },
                menu: (r, o, i) => {
                    for (const a of e) a.menu && (o = a.menu(r, o, {...t, ...i}));
                    return o;
                },
                toolbar: (r, o, i) => {
                    for (const a of e)
                        a.toolbar && (o = a.toolbar(r, o, {...t, ...i}));
                    return o;
                },
                keyboardShortcutsMenu: (r, o, i) => {
                    for (const a of e)
                        a.keyboardShortcutsMenu &&
                        (o = a.keyboardShortcutsMenu(r, o, {...t, ...i}));
                    return o;
                },
                tools: (r, o, i) => {
                    for (const a of e) a.tools && (o = a.tools(r, o, {...t, ...i}));
                    return o;
                },
                translations: n,
            };
        }
        function A7(e) {
            return y.useMemo(() => e, e);
        }
        function Lne(e) {
            const t = A7(e == null ? [] : Array.isArray(e) ? e : [e]);
            return y.useMemo(() => {
                const n = {};
                for (const r of t)
                    if (r.translations)
                        for (const [o, i] of ri(r.translations)) {
                            let a = n[o];
                            a || (a = n[o] = {}), Object.assign(a, i);
                        }
                return n;
            }, [t]);
        }
        function jne(e) {
            const t = One(),
                n = A7(e == null ? [] : Array.isArray(e) ? e : [e]);
            return y.useMemo(() => Dne(n, t), [n, t]);
        }
        function Nne({
                         overrides: e,
                         assetUrls: t,
                         onUiEvent: n,
                         forceMobile: r,
                         children: o,
                     }) {
            return v.jsx(Aee, {
                assetUrls: Pee(t),
                children: v.jsx(Ree, {
                    overrides: Lne(e),
                    children: v.jsx(Gte, {
                        onEvent: n,
                        children: v.jsx(cne, {
                            children: v.jsx(une, {
                                children: v.jsx(wne, {
                                    forceMobile: r,
                                    children: v.jsx(Fne, {
                                        overrides: e,
                                        children: o,
                                    }),
                                }),
                            }),
                        }),
                    }),
                }),
            });
        }
        function Fne({overrides: e, children: t}) {
            const n = jne(e);
            return v.jsx(vne, {
                overrides: n.actions,
                children: v.jsx(Cne, {
                    overrides: n.tools,
                    children: v.jsx(zne, {
                        overrides: n.toolbar,
                        children: v.jsx(xne, {
                            overrides: n.actionsMenu,
                            children: v.jsx(Ene, {
                                overrides: n.keyboardShortcutsMenu,
                                children: v.jsx(kne, {
                                    overrides: n.contextMenu,
                                    children: v.jsx(Tne, {
                                        overrides: n.helpMenu,
                                        children: v.jsx(Ane, {
                                            overrides: n.menu,
                                            children: t,
                                        }),
                                    }),
                                }),
                            }),
                        }),
                    }),
                }),
            });
        }
        function Bne() {
            const e = W(),
                n = bn()["back-to-content"],
                [r, o] = y.useState(!1);
            return (
                y.useEffect(() => {
                    let i = !1;
                    const a = setInterval(() => {
                        const s = e.getRenderingShapes(),
                            l = e.getRenderingBounds(),
                            d =
                                s.filter(
                                    (u) =>
                                        u.maskedPageBounds &&
                                        l.includes(u.maskedPageBounds)
                                ).length === 0 &&
                                e.getCurrentPageShapes().length > 0;
                        i !== d && (o(d), (i = d));
                    }, 1e3);
                    return () => {
                        clearInterval(a);
                    };
                }, [e]),
                    r
                        ? v.jsx(se, {
                            iconLeft: n.icon,
                            label: n.label,
                            type: "low",
                            onClick: () => {
                                n.onSelect("helper-buttons"), o(!1);
                            },
                        })
                        : null
            );
        }
        const Une = y.createContext(void 0);
        function Ox(e) {
            const t = y.useContext(Une);
            return e || t || "ltr";
        }
        const Hne = ["top", "right", "bottom", "left"],
            no = Math.min,
            yn = Math.max,
            zg = Math.round,
            Rg = Math.floor,
            ba = (e) => ({x: e, y: e}),
            Vne = {left: "right", right: "left", bottom: "top", top: "bottom"},
            Kne = {start: "end", end: "start"};
        function Dx(e, t, n) {
            return yn(e, no(t, n));
        }
        function Mo(e, t) {
            return typeof e == "function" ? e(t) : e;
        }
        function ro(e) {
            return e.split("-")[0];
        }
        function bc(e) {
            return e.split("-")[1];
        }
        function Lx(e) {
            return e === "x" ? "y" : "x";
        }
        function jx(e) {
            return e === "y" ? "height" : "width";
        }
        function ys(e) {
            return ["top", "bottom"].includes(ro(e)) ? "y" : "x";
        }
        function Nx(e) {
            return Lx(ys(e));
        }
        function Wne(e, t, n) {
            n === void 0 && (n = !1);
            const r = bc(e),
                o = Nx(e),
                i = jx(o);
            let a =
                o === "x"
                    ? r === (n ? "end" : "start")
                        ? "right"
                        : "left"
                    : r === "start"
                        ? "bottom"
                        : "top";
            return t.reference[i] > t.floating[i] && (a = Og(a)), [a, Og(a)];
        }
        function Yne(e) {
            const t = Og(e);
            return [Fx(e), t, Fx(t)];
        }
        function Fx(e) {
            return e.replace(/start|end/g, (t) => Kne[t]);
        }
        function Gne(e, t, n) {
            const r = ["left", "right"],
                o = ["right", "left"],
                i = ["top", "bottom"],
                a = ["bottom", "top"];
            switch (e) {
                case "top":
                case "bottom":
                    return n ? (t ? o : r) : t ? r : o;
                case "left":
                case "right":
                    return t ? i : a;
                default:
                    return [];
            }
        }
        function Xne(e, t, n, r) {
            const o = bc(e);
            let i = Gne(ro(e), n === "start", r);
            return (
                o &&
                ((i = i.map((a) => a + "-" + o)),
                t && (i = i.concat(i.map(Fx)))),
                    i
            );
        }
        function Og(e) {
            return e.replace(/left|right|bottom|top/g, (t) => Vne[t]);
        }
        function qne(e) {
            return {top: 0, right: 0, bottom: 0, left: 0, ...e};
        }
        function Bx(e) {
            return typeof e != "number"
                ? qne(e)
                : {top: e, right: e, bottom: e, left: e};
        }
        function yc(e) {
            return {
                ...e,
                top: e.y,
                left: e.x,
                right: e.x + e.width,
                bottom: e.y + e.height,
            };
        }
        function M7(e, t, n) {
            let {reference: r, floating: o} = e;
            const i = ys(t),
                a = Nx(t),
                s = jx(a),
                l = ro(t),
                c = i === "y",
                d = r.x + r.width / 2 - o.width / 2,
                u = r.y + r.height / 2 - o.height / 2,
                h = r[s] / 2 - o[s] / 2;
            let p;
            switch (l) {
                case "top":
                    p = {x: d, y: r.y - o.height};
                    break;
                case "bottom":
                    p = {x: d, y: r.y + r.height};
                    break;
                case "right":
                    p = {x: r.x + r.width, y: u};
                    break;
                case "left":
                    p = {x: r.x - o.width, y: u};
                    break;
                default:
                    p = {x: r.x, y: r.y};
            }
            switch (bc(t)) {
                case "start":
                    p[a] -= h * (n && c ? -1 : 1);
                    break;
                case "end":
                    p[a] += h * (n && c ? -1 : 1);
                    break;
            }
            return p;
        }
        const Zne = async (e, t, n) => {
            const {
                    placement: r = "bottom",
                    strategy: o = "absolute",
                    middleware: i = [],
                    platform: a,
                } = n,
                s = i.filter(Boolean),
                l = await (a.isRTL == null ? void 0 : a.isRTL(t));
            let c = await a.getElementRects({
                    reference: e,
                    floating: t,
                    strategy: o,
                }),
                {x: d, y: u} = M7(c, r, l),
                h = r,
                p = {},
                m = 0;
            for (let f = 0; f < s.length; f++) {
                const {name: g, fn: b} = s[f],
                    {
                        x,
                        y: S,
                        data: _,
                        reset: k,
                    } = await b({
                        x: d,
                        y: u,
                        initialPlacement: r,
                        placement: h,
                        strategy: o,
                        middlewareData: p,
                        rects: c,
                        platform: a,
                        elements: {reference: e, floating: t},
                    });
                (d = x ?? d),
                    (u = S ?? u),
                    (p = {...p, [g]: {...p[g], ..._}}),
                k &&
                m <= 50 &&
                (m++,
                typeof k == "object" &&
                (k.placement && (h = k.placement),
                k.rects &&
                (c =
                    k.rects === !0
                        ? await a.getElementRects({
                            reference: e,
                            floating: t,
                            strategy: o,
                        })
                        : k.rects),
                    ({x: d, y: u} = M7(c, h, l))),
                    (f = -1));
            }
            return {x: d, y: u, placement: h, strategy: o, middlewareData: p};
        };
        async function Yu(e, t) {
            var n;
            t === void 0 && (t = {});
            const {x: r, y: o, platform: i, rects: a, elements: s, strategy: l} = e,
                {
                    boundary: c = "clippingAncestors",
                    rootBoundary: d = "viewport",
                    elementContext: u = "floating",
                    altBoundary: h = !1,
                    padding: p = 0,
                } = Mo(t, e),
                m = Bx(p),
                g = s[h ? (u === "floating" ? "reference" : "floating") : u],
                b = yc(
                    await i.getClippingRect({
                        element:
                            (n = await (i.isElement == null
                                ? void 0
                                : i.isElement(g))) == null || n
                                ? g
                                : g.contextElement ||
                                (await (i.getDocumentElement == null
                                    ? void 0
                                    : i.getDocumentElement(s.floating))),
                        boundary: c,
                        rootBoundary: d,
                        strategy: l,
                    })
                ),
                x = u === "floating" ? {...a.floating, x: r, y: o} : a.reference,
                S = await (i.getOffsetParent == null
                    ? void 0
                    : i.getOffsetParent(s.floating)),
                _ = (await (i.isElement == null ? void 0 : i.isElement(S)))
                    ? (await (i.getScale == null ? void 0 : i.getScale(S))) || {
                    x: 1,
                    y: 1,
                }
                    : {x: 1, y: 1},
                k = yc(
                    i.convertOffsetParentRelativeRectToViewportRelativeRect
                        ? await i.convertOffsetParentRelativeRectToViewportRelativeRect(
                            {elements: s, rect: x, offsetParent: S, strategy: l}
                        )
                        : x
                );
            return {
                top: (b.top - k.top + m.top) / _.y,
                bottom: (k.bottom - b.bottom + m.bottom) / _.y,
                left: (b.left - k.left + m.left) / _.x,
                right: (k.right - b.right + m.right) / _.x,
            };
        }
        const Qne = (e) => ({
                name: "arrow",
                options: e,
                async fn(t) {
                    const {
                            x: n,
                            y: r,
                            placement: o,
                            rects: i,
                            platform: a,
                            elements: s,
                            middlewareData: l,
                        } = t,
                        {element: c, padding: d = 0} = Mo(e, t) || {};
                    if (c == null) return {};
                    const u = Bx(d),
                        h = {x: n, y: r},
                        p = Nx(o),
                        m = jx(p),
                        f = await a.getDimensions(c),
                        g = p === "y",
                        b = g ? "top" : "left",
                        x = g ? "bottom" : "right",
                        S = g ? "clientHeight" : "clientWidth",
                        _ = i.reference[m] + i.reference[p] - h[p] - i.floating[m],
                        k = h[p] - i.reference[p],
                        C = await (a.getOffsetParent == null
                            ? void 0
                            : a.getOffsetParent(c));
                    let P = C ? C[S] : 0;
                    (!P ||
                        !(await (a.isElement == null ? void 0 : a.isElement(C)))) &&
                    (P = s.floating[S] || i.floating[m]);
                    const I = _ / 2 - k / 2,
                        $ = P / 2 - f[m] / 2 - 1,
                        T = no(u[b], $),
                        R = no(u[x], $),
                        D = T,
                        j = P - f[m] - R,
                        z = P / 2 - f[m] / 2 + I,
                        O = Dx(D, z, j),
                        F =
                            !l.arrow &&
                            bc(o) != null &&
                            z !== O &&
                            i.reference[m] / 2 - (z < D ? T : R) - f[m] / 2 < 0,
                        K = F ? (z < D ? z - D : z - j) : 0;
                    return {
                        [p]: h[p] + K,
                        data: {
                            [p]: O,
                            centerOffset: z - O - K,
                            ...(F && {alignmentOffset: K}),
                        },
                        reset: F,
                    };
                },
            }),
            Jne = function (e) {
                return (
                    e === void 0 && (e = {}),
                        {
                            name: "flip",
                            options: e,
                            async fn(t) {
                                var n, r;
                                const {
                                        placement: o,
                                        middlewareData: i,
                                        rects: a,
                                        initialPlacement: s,
                                        platform: l,
                                        elements: c,
                                    } = t,
                                    {
                                        mainAxis: d = !0,
                                        crossAxis: u = !0,
                                        fallbackPlacements: h,
                                        fallbackStrategy: p = "bestFit",
                                        fallbackAxisSideDirection: m = "none",
                                        flipAlignment: f = !0,
                                        ...g
                                    } = Mo(e, t);
                                if ((n = i.arrow) != null && n.alignmentOffset)
                                    return {};
                                const b = ro(o),
                                    x = ro(s) === s,
                                    S = await (l.isRTL == null
                                        ? void 0
                                        : l.isRTL(c.floating)),
                                    _ = h || (x || !f ? [Og(s)] : Yne(s));
                                !h && m !== "none" && _.push(...Xne(s, f, m, S));
                                const k = [s, ..._],
                                    C = await Yu(t, g),
                                    P = [];
                                let I =
                                    ((r = i.flip) == null ? void 0 : r.overflows) || [];
                                if ((d && P.push(C[b]), u)) {
                                    const D = Wne(o, a, S);
                                    P.push(C[D[0]], C[D[1]]);
                                }
                                if (
                                    ((I = [...I, {placement: o, overflows: P}]),
                                        !P.every((D) => D <= 0))
                                ) {
                                    var $, T;
                                    const D =
                                            ((($ = i.flip) == null
                                                ? void 0
                                                : $.index) || 0) + 1,
                                        j = k[D];
                                    if (j)
                                        return {
                                            data: {index: D, overflows: I},
                                            reset: {placement: j},
                                        };
                                    let z =
                                        (T = I.filter((O) => O.overflows[0] <= 0).sort(
                                            (O, F) => O.overflows[1] - F.overflows[1]
                                        )[0]) == null
                                            ? void 0
                                            : T.placement;
                                    if (!z)
                                        switch (p) {
                                            case "bestFit": {
                                                var R;
                                                const O =
                                                    (R = I.map((F) => [
                                                        F.placement,
                                                        F.overflows
                                                            .filter((K) => K > 0)
                                                            .reduce((K, V) => K + V, 0),
                                                    ]).sort(
                                                        (F, K) => F[1] - K[1]
                                                    )[0]) == null
                                                        ? void 0
                                                        : R[0];
                                                O && (z = O);
                                                break;
                                            }
                                            case "initialPlacement":
                                                z = s;
                                                break;
                                        }
                                    if (o !== z) return {reset: {placement: z}};
                                }
                                return {};
                            },
                        }
                );
            };
        function z7(e, t) {
            return {
                top: e.top - t.height,
                right: e.right - t.width,
                bottom: e.bottom - t.height,
                left: e.left - t.width,
            };
        }
        function R7(e) {
            return Hne.some((t) => e[t] >= 0);
        }
        const ere = function (e) {
            return (
                e === void 0 && (e = {}),
                    {
                        name: "hide",
                        options: e,
                        async fn(t) {
                            const {rects: n} = t,
                                {strategy: r = "referenceHidden", ...o} = Mo(e, t);
                            switch (r) {
                                case "referenceHidden": {
                                    const i = await Yu(t, {
                                            ...o,
                                            elementContext: "reference",
                                        }),
                                        a = z7(i, n.reference);
                                    return {
                                        data: {
                                            referenceHiddenOffsets: a,
                                            referenceHidden: R7(a),
                                        },
                                    };
                                }
                                case "escaped": {
                                    const i = await Yu(t, {...o, altBoundary: !0}),
                                        a = z7(i, n.floating);
                                    return {data: {escapedOffsets: a, escaped: R7(a)}};
                                }
                                default:
                                    return {};
                            }
                        },
                    }
            );
        };
        function O7(e) {
            const t = no(...e.map((i) => i.left)),
                n = no(...e.map((i) => i.top)),
                r = yn(...e.map((i) => i.right)),
                o = yn(...e.map((i) => i.bottom));
            return {x: t, y: n, width: r - t, height: o - n};
        }
        function tre(e) {
            const t = e.slice().sort((o, i) => o.y - i.y),
                n = [];
            let r = null;
            for (let o = 0; o < t.length; o++) {
                const i = t[o];
                !r || i.y - r.y > r.height / 2
                    ? n.push([i])
                    : n[n.length - 1].push(i),
                    (r = i);
            }
            return n.map((o) => yc(O7(o)));
        }
        const nre = function (e) {
            return (
                e === void 0 && (e = {}),
                    {
                        name: "inline",
                        options: e,
                        async fn(t) {
                            const {
                                    placement: n,
                                    elements: r,
                                    rects: o,
                                    platform: i,
                                    strategy: a,
                                } = t,
                                {padding: s = 2, x: l, y: c} = Mo(e, t),
                                d = Array.from(
                                    (await (i.getClientRects == null
                                        ? void 0
                                        : i.getClientRects(r.reference))) || []
                                ),
                                u = tre(d),
                                h = yc(O7(d)),
                                p = Bx(s);
                            function m() {
                                if (
                                    u.length === 2 &&
                                    u[0].left > u[1].right &&
                                    l != null &&
                                    c != null
                                )
                                    return (
                                        u.find(
                                            (g) =>
                                                l > g.left - p.left &&
                                                l < g.right + p.right &&
                                                c > g.top - p.top &&
                                                c < g.bottom + p.bottom
                                        ) || h
                                    );
                                if (u.length >= 2) {
                                    if (ys(n) === "y") {
                                        const T = u[0],
                                            R = u[u.length - 1],
                                            D = ro(n) === "top",
                                            j = T.top,
                                            z = R.bottom,
                                            O = D ? T.left : R.left,
                                            F = D ? T.right : R.right,
                                            K = F - O,
                                            V = z - j;
                                        return {
                                            top: j,
                                            bottom: z,
                                            left: O,
                                            right: F,
                                            width: K,
                                            height: V,
                                            x: O,
                                            y: j,
                                        };
                                    }
                                    const g = ro(n) === "left",
                                        b = yn(...u.map((T) => T.right)),
                                        x = no(...u.map((T) => T.left)),
                                        S = u.filter((T) =>
                                            g ? T.left === x : T.right === b
                                        ),
                                        _ = S[0].top,
                                        k = S[S.length - 1].bottom,
                                        C = x,
                                        P = b,
                                        I = P - C,
                                        $ = k - _;
                                    return {
                                        top: _,
                                        bottom: k,
                                        left: C,
                                        right: P,
                                        width: I,
                                        height: $,
                                        x: C,
                                        y: _,
                                    };
                                }
                                return h;
                            }
                            const f = await i.getElementRects({
                                reference: {getBoundingClientRect: m},
                                floating: r.floating,
                                strategy: a,
                            });
                            return o.reference.x !== f.reference.x ||
                            o.reference.y !== f.reference.y ||
                            o.reference.width !== f.reference.width ||
                            o.reference.height !== f.reference.height
                                ? {reset: {rects: f}}
                                : {};
                        },
                    }
            );
        };
        async function rre(e, t) {
            const {placement: n, platform: r, elements: o} = e,
                i = await (r.isRTL == null ? void 0 : r.isRTL(o.floating)),
                a = ro(n),
                s = bc(n),
                l = ys(n) === "y",
                c = ["left", "top"].includes(a) ? -1 : 1,
                d = i && l ? -1 : 1,
                u = Mo(t, e);
            let {
                mainAxis: h,
                crossAxis: p,
                alignmentAxis: m,
            } = typeof u == "number"
                ? {mainAxis: u, crossAxis: 0, alignmentAxis: null}
                : {mainAxis: 0, crossAxis: 0, alignmentAxis: null, ...u};
            return (
                s && typeof m == "number" && (p = s === "end" ? m * -1 : m),
                    l ? {x: p * d, y: h * c} : {x: h * c, y: p * d}
            );
        }
        const D7 = function (e) {
                return (
                    e === void 0 && (e = 0),
                        {
                            name: "offset",
                            options: e,
                            async fn(t) {
                                var n, r;
                                const {x: o, y: i, placement: a, middlewareData: s} = t,
                                    l = await rre(t, e);
                                return a ===
                                ((n = s.offset) == null ? void 0 : n.placement) &&
                                (r = s.arrow) != null &&
                                r.alignmentOffset
                                    ? {}
                                    : {
                                        x: o + l.x,
                                        y: i + l.y,
                                        data: {...l, placement: a},
                                    };
                            },
                        }
                );
            },
            ore = function (e) {
                return (
                    e === void 0 && (e = {}),
                        {
                            name: "shift",
                            options: e,
                            async fn(t) {
                                const {x: n, y: r, placement: o} = t,
                                    {
                                        mainAxis: i = !0,
                                        crossAxis: a = !1,
                                        limiter: s = {
                                            fn: (g) => {
                                                let {x: b, y: x} = g;
                                                return {x: b, y: x};
                                            },
                                        },
                                        ...l
                                    } = Mo(e, t),
                                    c = {x: n, y: r},
                                    d = await Yu(t, l),
                                    u = ys(ro(o)),
                                    h = Lx(u);
                                let p = c[h],
                                    m = c[u];
                                if (i) {
                                    const g = h === "y" ? "top" : "left",
                                        b = h === "y" ? "bottom" : "right",
                                        x = p + d[g],
                                        S = p - d[b];
                                    p = Dx(x, p, S);
                                }
                                if (a) {
                                    const g = u === "y" ? "top" : "left",
                                        b = u === "y" ? "bottom" : "right",
                                        x = m + d[g],
                                        S = m - d[b];
                                    m = Dx(x, m, S);
                                }
                                const f = s.fn({...t, [h]: p, [u]: m});
                                return {...f, data: {x: f.x - n, y: f.y - r}};
                            },
                        }
                );
            },
            ire = function (e) {
                return (
                    e === void 0 && (e = {}),
                        {
                            options: e,
                            fn(t) {
                                const {
                                        x: n,
                                        y: r,
                                        placement: o,
                                        rects: i,
                                        middlewareData: a,
                                    } = t,
                                    {
                                        offset: s = 0,
                                        mainAxis: l = !0,
                                        crossAxis: c = !0,
                                    } = Mo(e, t),
                                    d = {x: n, y: r},
                                    u = ys(o),
                                    h = Lx(u);
                                let p = d[h],
                                    m = d[u];
                                const f = Mo(s, t),
                                    g =
                                        typeof f == "number"
                                            ? {mainAxis: f, crossAxis: 0}
                                            : {mainAxis: 0, crossAxis: 0, ...f};
                                if (l) {
                                    const S = h === "y" ? "height" : "width",
                                        _ = i.reference[h] - i.floating[S] + g.mainAxis,
                                        k =
                                            i.reference[h] +
                                            i.reference[S] -
                                            g.mainAxis;
                                    p < _ ? (p = _) : p > k && (p = k);
                                }
                                if (c) {
                                    var b, x;
                                    const S = h === "y" ? "width" : "height",
                                        _ = ["top", "left"].includes(ro(o)),
                                        k =
                                            i.reference[u] -
                                            i.floating[S] +
                                            ((_ &&
                                                    ((b = a.offset) == null
                                                        ? void 0
                                                        : b[u])) ||
                                                0) +
                                            (_ ? 0 : g.crossAxis),
                                        C =
                                            i.reference[u] +
                                            i.reference[S] +
                                            (_
                                                ? 0
                                                : ((x = a.offset) == null
                                                ? void 0
                                                : x[u]) || 0) -
                                            (_ ? g.crossAxis : 0);
                                    m < k ? (m = k) : m > C && (m = C);
                                }
                                return {[h]: p, [u]: m};
                            },
                        }
                );
            },
            are = function (e) {
                return (
                    e === void 0 && (e = {}),
                        {
                            name: "size",
                            options: e,
                            async fn(t) {
                                const {
                                        placement: n,
                                        rects: r,
                                        platform: o,
                                        elements: i,
                                    } = t,
                                    {apply: a = () => {}, ...s} = Mo(e, t),
                                    l = await Yu(t, s),
                                    c = ro(n),
                                    d = bc(n),
                                    u = ys(n) === "y",
                                    {width: h, height: p} = r.floating;
                                let m, f;
                                c === "top" || c === "bottom"
                                    ? ((m = c),
                                        (f =
                                            d ===
                                            ((await (o.isRTL == null
                                                ? void 0
                                                : o.isRTL(i.floating)))
                                                ? "start"
                                                : "end")
                                                ? "left"
                                                : "right"))
                                    : ((f = c), (m = d === "end" ? "top" : "bottom"));
                                const g = p - l[m],
                                    b = h - l[f],
                                    x = !t.middlewareData.shift;
                                let S = g,
                                    _ = b;
                                if (u) {
                                    const C = h - l.left - l.right;
                                    _ = d || x ? no(b, C) : C;
                                } else {
                                    const C = p - l.top - l.bottom;
                                    S = d || x ? no(g, C) : C;
                                }
                                if (x && !d) {
                                    const C = yn(l.left, 0),
                                        P = yn(l.right, 0),
                                        I = yn(l.top, 0),
                                        $ = yn(l.bottom, 0);
                                    u
                                        ? (_ =
                                            h -
                                            2 *
                                            (C !== 0 || P !== 0
                                                ? C + P
                                                : yn(l.left, l.right)))
                                        : (S =
                                            p -
                                            2 *
                                            (I !== 0 || $ !== 0
                                                ? I + $
                                                : yn(l.top, l.bottom)));
                                }
                                await a({...t, availableWidth: _, availableHeight: S});
                                const k = await o.getDimensions(i.floating);
                                return h !== k.width || p !== k.height
                                    ? {reset: {rects: !0}}
                                    : {};
                            },
                        }
                );
            };
        function ya(e) {
            return L7(e) ? (e.nodeName || "").toLowerCase() : "#document";
        }
        function hr(e) {
            var t;
            return (
                (e == null || (t = e.ownerDocument) == null
                    ? void 0
                    : t.defaultView) || window
            );
        }
        function wi(e) {
            var t;
            return (t =
                (L7(e) ? e.ownerDocument : e.document) || window.document) == null
                ? void 0
                : t.documentElement;
        }
        function L7(e) {
            return e instanceof Node || e instanceof hr(e).Node;
        }
        function xi(e) {
            return e instanceof Element || e instanceof hr(e).Element;
        }
        function zo(e) {
            return e instanceof HTMLElement || e instanceof hr(e).HTMLElement;
        }
        function j7(e) {
            return typeof ShadowRoot > "u"
                ? !1
                : e instanceof ShadowRoot || e instanceof hr(e).ShadowRoot;
        }
        function Gu(e) {
            const {overflow: t, overflowX: n, overflowY: r, display: o} = Ar(e);
            return (
                /auto|scroll|overlay|hidden|clip/.test(t + r + n) &&
                !["inline", "contents"].includes(o)
            );
        }
        function sre(e) {
            return ["table", "td", "th"].includes(ya(e));
        }
        function Ux(e) {
            const t = Hx(),
                n = Ar(e);
            return (
                n.transform !== "none" ||
                n.perspective !== "none" ||
                (n.containerType ? n.containerType !== "normal" : !1) ||
                (!t && (n.backdropFilter ? n.backdropFilter !== "none" : !1)) ||
                (!t && (n.filter ? n.filter !== "none" : !1)) ||
                ["transform", "perspective", "filter"].some((r) =>
                    (n.willChange || "").includes(r)
                ) ||
                ["paint", "layout", "strict", "content"].some((r) =>
                    (n.contain || "").includes(r)
                )
            );
        }
        function lre(e) {
            let t = wc(e);
            for (; zo(t) && !Dg(t); ) {
                if (Ux(t)) return t;
                t = wc(t);
            }
            return null;
        }
        function Hx() {
            return typeof CSS > "u" || !CSS.supports
                ? !1
                : CSS.supports("-webkit-backdrop-filter", "none");
        }
        function Dg(e) {
            return ["html", "body", "#document"].includes(ya(e));
        }
        function Ar(e) {
            return hr(e).getComputedStyle(e);
        }
        function Lg(e) {
            return xi(e)
                ? {scrollLeft: e.scrollLeft, scrollTop: e.scrollTop}
                : {scrollLeft: e.pageXOffset, scrollTop: e.pageYOffset};
        }
        function wc(e) {
            if (ya(e) === "html") return e;
            const t = e.assignedSlot || e.parentNode || (j7(e) && e.host) || wi(e);
            return j7(t) ? t.host : t;
        }
        function N7(e) {
            const t = wc(e);
            return Dg(t)
                ? e.ownerDocument
                    ? e.ownerDocument.body
                    : e.body
                : zo(t) && Gu(t)
                    ? t
                    : N7(t);
        }
        function Xu(e, t, n) {
            var r;
            t === void 0 && (t = []), n === void 0 && (n = !0);
            const o = N7(e),
                i = o === ((r = e.ownerDocument) == null ? void 0 : r.body),
                a = hr(o);
            return i
                ? t.concat(
                    a,
                    a.visualViewport || [],
                    Gu(o) ? o : [],
                    a.frameElement && n ? Xu(a.frameElement) : []
                )
                : t.concat(o, Xu(o, [], n));
        }
        function F7(e) {
            const t = Ar(e);
            let n = parseFloat(t.width) || 0,
                r = parseFloat(t.height) || 0;
            const o = zo(e),
                i = o ? e.offsetWidth : n,
                a = o ? e.offsetHeight : r,
                s = zg(n) !== i || zg(r) !== a;
            return s && ((n = i), (r = a)), {width: n, height: r, $: s};
        }
        function Vx(e) {
            return xi(e) ? e : e.contextElement;
        }
        function xc(e) {
            const t = Vx(e);
            if (!zo(t)) return ba(1);
            const n = t.getBoundingClientRect(),
                {width: r, height: o, $: i} = F7(t);
            let a = (i ? zg(n.width) : n.width) / r,
                s = (i ? zg(n.height) : n.height) / o;
            return (
                (!a || !Number.isFinite(a)) && (a = 1),
                (!s || !Number.isFinite(s)) && (s = 1),
                    {x: a, y: s}
            );
        }
        const cre = ba(0);
        function B7(e) {
            const t = hr(e);
            return !Hx() || !t.visualViewport
                ? cre
                : {x: t.visualViewport.offsetLeft, y: t.visualViewport.offsetTop};
        }
        function dre(e, t, n) {
            return t === void 0 && (t = !1), !n || (t && n !== hr(e)) ? !1 : t;
        }
        function ws(e, t, n, r) {
            t === void 0 && (t = !1), n === void 0 && (n = !1);
            const o = e.getBoundingClientRect(),
                i = Vx(e);
            let a = ba(1);
            t && (r ? xi(r) && (a = xc(r)) : (a = xc(e)));
            const s = dre(i, n, r) ? B7(i) : ba(0);
            let l = (o.left + s.x) / a.x,
                c = (o.top + s.y) / a.y,
                d = o.width / a.x,
                u = o.height / a.y;
            if (i) {
                const h = hr(i),
                    p = r && xi(r) ? hr(r) : r;
                let m = h,
                    f = m.frameElement;
                for (; f && r && p !== m; ) {
                    const g = xc(f),
                        b = f.getBoundingClientRect(),
                        x = Ar(f),
                        S =
                            b.left +
                            (f.clientLeft + parseFloat(x.paddingLeft)) * g.x,
                        _ = b.top + (f.clientTop + parseFloat(x.paddingTop)) * g.y;
                    (l *= g.x),
                        (c *= g.y),
                        (d *= g.x),
                        (u *= g.y),
                        (l += S),
                        (c += _),
                        (m = hr(f)),
                        (f = m.frameElement);
                }
            }
            return yc({width: d, height: u, x: l, y: c});
        }
        const ure = [":popover-open", ":modal"];
        function U7(e) {
            return ure.some((t) => {
                try {
                    return e.matches(t);
                } catch {
                    return !1;
                }
            });
        }
        function hre(e) {
            let {elements: t, rect: n, offsetParent: r, strategy: o} = e;
            const i = o === "fixed",
                a = wi(r),
                s = t ? U7(t.floating) : !1;
            if (r === a || (s && i)) return n;
            let l = {scrollLeft: 0, scrollTop: 0},
                c = ba(1);
            const d = ba(0),
                u = zo(r);
            if (
                (u || (!u && !i)) &&
                ((ya(r) !== "body" || Gu(a)) && (l = Lg(r)), zo(r))
            ) {
                const h = ws(r);
                (c = xc(r)), (d.x = h.x + r.clientLeft), (d.y = h.y + r.clientTop);
            }
            return {
                width: n.width * c.x,
                height: n.height * c.y,
                x: n.x * c.x - l.scrollLeft * c.x + d.x,
                y: n.y * c.y - l.scrollTop * c.y + d.y,
            };
        }
        function pre(e) {
            return Array.from(e.getClientRects());
        }
        function H7(e) {
            return ws(wi(e)).left + Lg(e).scrollLeft;
        }
        function fre(e) {
            const t = wi(e),
                n = Lg(e),
                r = e.ownerDocument.body,
                o = yn(t.scrollWidth, t.clientWidth, r.scrollWidth, r.clientWidth),
                i = yn(
                    t.scrollHeight,
                    t.clientHeight,
                    r.scrollHeight,
                    r.clientHeight
                );
            let a = -n.scrollLeft + H7(e);
            const s = -n.scrollTop;
            return (
                Ar(r).direction === "rtl" &&
                (a += yn(t.clientWidth, r.clientWidth) - o),
                    {width: o, height: i, x: a, y: s}
            );
        }
        function mre(e, t) {
            const n = hr(e),
                r = wi(e),
                o = n.visualViewport;
            let i = r.clientWidth,
                a = r.clientHeight,
                s = 0,
                l = 0;
            if (o) {
                (i = o.width), (a = o.height);
                const c = Hx();
                (!c || (c && t === "fixed")) &&
                ((s = o.offsetLeft), (l = o.offsetTop));
            }
            return {width: i, height: a, x: s, y: l};
        }
        function gre(e, t) {
            const n = ws(e, !0, t === "fixed"),
                r = n.top + e.clientTop,
                o = n.left + e.clientLeft,
                i = zo(e) ? xc(e) : ba(1),
                a = e.clientWidth * i.x,
                s = e.clientHeight * i.y,
                l = o * i.x,
                c = r * i.y;
            return {width: a, height: s, x: l, y: c};
        }
        function V7(e, t, n) {
            let r;
            if (t === "viewport") r = mre(e, n);
            else if (t === "document") r = fre(wi(e));
            else if (xi(t)) r = gre(t, n);
            else {
                const o = B7(e);
                r = {...t, x: t.x - o.x, y: t.y - o.y};
            }
            return yc(r);
        }
        function K7(e, t) {
            const n = wc(e);
            return n === t || !xi(n) || Dg(n)
                ? !1
                : Ar(n).position === "fixed" || K7(n, t);
        }
        function vre(e, t) {
            const n = t.get(e);
            if (n) return n;
            let r = Xu(e, [], !1).filter((s) => xi(s) && ya(s) !== "body"),
                o = null;
            const i = Ar(e).position === "fixed";
            let a = i ? wc(e) : e;
            for (; xi(a) && !Dg(a); ) {
                const s = Ar(a),
                    l = Ux(a);
                !l && s.position === "fixed" && (o = null),
                    (
                        i
                            ? !l && !o
                            : (!l &&
                                s.position === "static" &&
                                !!o &&
                                ["absolute", "fixed"].includes(o.position)) ||
                            (Gu(a) && !l && K7(e, a))
                    )
                        ? (r = r.filter((d) => d !== a))
                        : (o = s),
                    (a = wc(a));
            }
            return t.set(e, r), r;
        }
        function bre(e) {
            let {element: t, boundary: n, rootBoundary: r, strategy: o} = e;
            const a = [
                    ...(n === "clippingAncestors" ? vre(t, this._c) : [].concat(n)),
                    r,
                ],
                s = a[0],
                l = a.reduce((c, d) => {
                    const u = V7(t, d, o);
                    return (
                        (c.top = yn(u.top, c.top)),
                            (c.right = no(u.right, c.right)),
                            (c.bottom = no(u.bottom, c.bottom)),
                            (c.left = yn(u.left, c.left)),
                            c
                    );
                }, V7(t, s, o));
            return {
                width: l.right - l.left,
                height: l.bottom - l.top,
                x: l.left,
                y: l.top,
            };
        }
        function yre(e) {
            const {width: t, height: n} = F7(e);
            return {width: t, height: n};
        }
        function wre(e, t, n) {
            const r = zo(t),
                o = wi(t),
                i = n === "fixed",
                a = ws(e, !0, i, t);
            let s = {scrollLeft: 0, scrollTop: 0};
            const l = ba(0);
            if (r || (!r && !i))
                if (((ya(t) !== "body" || Gu(o)) && (s = Lg(t)), r)) {
                    const u = ws(t, !0, i, t);
                    (l.x = u.x + t.clientLeft), (l.y = u.y + t.clientTop);
                } else o && (l.x = H7(o));
            const c = a.left + s.scrollLeft - l.x,
                d = a.top + s.scrollTop - l.y;
            return {x: c, y: d, width: a.width, height: a.height};
        }
        function W7(e, t) {
            return !zo(e) || Ar(e).position === "fixed"
                ? null
                : t
                    ? t(e)
                    : e.offsetParent;
        }
        function Y7(e, t) {
            const n = hr(e);
            if (!zo(e) || U7(e)) return n;
            let r = W7(e, t);
            for (; r && sre(r) && Ar(r).position === "static"; ) r = W7(r, t);
            return r &&
            (ya(r) === "html" ||
                (ya(r) === "body" && Ar(r).position === "static" && !Ux(r)))
                ? n
                : r || lre(e) || n;
        }
        const xre = async function (e) {
            const t = this.getOffsetParent || Y7,
                n = this.getDimensions;
            return {
                reference: wre(e.reference, await t(e.floating), e.strategy),
                floating: {x: 0, y: 0, ...(await n(e.floating))},
            };
        };
        function Sre(e) {
            return Ar(e).direction === "rtl";
        }
        const _re = {
            convertOffsetParentRelativeRectToViewportRelativeRect: hre,
            getDocumentElement: wi,
            getClippingRect: bre,
            getOffsetParent: Y7,
            getElementRects: xre,
            getClientRects: pre,
            getDimensions: yre,
            getScale: xc,
            isElement: xi,
            isRTL: Sre,
        };
        function kre(e, t) {
            let n = null,
                r;
            const o = wi(e);
            function i() {
                var s;
                clearTimeout(r), (s = n) == null || s.disconnect(), (n = null);
            }
            function a(s, l) {
                s === void 0 && (s = !1), l === void 0 && (l = 1), i();
                const {
                    left: c,
                    top: d,
                    width: u,
                    height: h,
                } = e.getBoundingClientRect();
                if ((s || t(), !u || !h)) return;
                const p = Rg(d),
                    m = Rg(o.clientWidth - (c + u)),
                    f = Rg(o.clientHeight - (d + h)),
                    g = Rg(c),
                    x = {
                        rootMargin:
                            -p + "px " + -m + "px " + -f + "px " + -g + "px",
                        threshold: yn(0, no(1, l)) || 1,
                    };
                let S = !0;
                function _(k) {
                    const C = k[0].intersectionRatio;
                    if (C !== l) {
                        if (!S) return a();
                        C
                            ? a(!1, C)
                            : (r = setTimeout(() => {
                                a(!1, 1e-7);
                            }, 100));
                    }
                    S = !1;
                }
                try {
                    n = new IntersectionObserver(_, {...x, root: o.ownerDocument});
                } catch {
                    n = new IntersectionObserver(_, x);
                }
                n.observe(e);
            }
            return a(!0), i;
        }
        function G7(e, t, n, r) {
            r === void 0 && (r = {});
            const {
                    ancestorScroll: o = !0,
                    ancestorResize: i = !0,
                    elementResize: a = typeof ResizeObserver == "function",
                    layoutShift: s = typeof IntersectionObserver == "function",
                    animationFrame: l = !1,
                } = r,
                c = Vx(e),
                d = o || i ? [...(c ? Xu(c) : []), ...Xu(t)] : [];
            d.forEach((b) => {
                o && b.addEventListener("scroll", n, {passive: !0}),
                i && b.addEventListener("resize", n);
            });
            const u = c && s ? kre(c, n) : null;
            let h = -1,
                p = null;
            a &&
            ((p = new ResizeObserver((b) => {
                let [x] = b;
                x &&
                x.target === c &&
                p &&
                (p.unobserve(t),
                    cancelAnimationFrame(h),
                    (h = requestAnimationFrame(() => {
                        var S;
                        (S = p) == null || S.observe(t);
                    }))),
                    n();
            })),
            c && !l && p.observe(c),
                p.observe(t));
            let m,
                f = l ? ws(e) : null;
            l && g();
            function g() {
                const b = ws(e);
                f &&
                (b.x !== f.x ||
                    b.y !== f.y ||
                    b.width !== f.width ||
                    b.height !== f.height) &&
                n(),
                    (f = b),
                    (m = requestAnimationFrame(g));
            }
            return (
                n(),
                    () => {
                        var b;
                        d.forEach((x) => {
                            o && x.removeEventListener("scroll", n),
                            i && x.removeEventListener("resize", n);
                        }),
                        u == null || u(),
                        (b = p) == null || b.disconnect(),
                            (p = null),
                        l && cancelAnimationFrame(m);
                    }
            );
        }
        const X7 = ore,
            q7 = Jne,
            Z7 = are,
            Cre = ere,
            Q7 = Qne,
            Ere = nre,
            J7 = ire,
            Pre = (e, t, n) => {
                const r = new Map(),
                    o = {platform: _re, ...n},
                    i = {...o.platform, _c: r};
                return Zne(e, t, {...o, platform: i});
            },
            e9 = (e) => {
                function t(n) {
                    return {}.hasOwnProperty.call(n, "current");
                }
                return {
                    name: "arrow",
                    options: e,
                    fn(n) {
                        const {element: r, padding: o} =
                            typeof e == "function" ? e(n) : e;
                        return r && t(r)
                            ? r.current != null
                                ? Q7({element: r.current, padding: o}).fn(n)
                                : {}
                            : r
                                ? Q7({element: r, padding: o}).fn(n)
                                : {};
                    },
                };
            };
        var jg = typeof document < "u" ? y.useLayoutEffect : y.useEffect;
        function Ng(e, t) {
            if (e === t) return !0;
            if (typeof e != typeof t) return !1;
            if (typeof e == "function" && e.toString() === t.toString()) return !0;
            let n, r, o;
            if (e && t && typeof e == "object") {
                if (Array.isArray(e)) {
                    if (((n = e.length), n !== t.length)) return !1;
                    for (r = n; r-- !== 0; ) if (!Ng(e[r], t[r])) return !1;
                    return !0;
                }
                if (
                    ((o = Object.keys(e)),
                        (n = o.length),
                    n !== Object.keys(t).length)
                )
                    return !1;
                for (r = n; r-- !== 0; )
                    if (!{}.hasOwnProperty.call(t, o[r])) return !1;
                for (r = n; r-- !== 0; ) {
                    const i = o[r];
                    if (!(i === "_owner" && e.$$typeof) && !Ng(e[i], t[i]))
                        return !1;
                }
                return !0;
            }
            return e !== e && t !== t;
        }
        function t9(e) {
            return typeof window > "u"
                ? 1
                : (e.ownerDocument.defaultView || window).devicePixelRatio || 1;
        }
        function n9(e, t) {
            const n = t9(e);
            return Math.round(t * n) / n;
        }
        function r9(e) {
            const t = y.useRef(e);
            return (
                jg(() => {
                    t.current = e;
                }),
                    t
            );
        }
        function o9(e) {
            e === void 0 && (e = {});
            const {
                    placement: t = "bottom",
                    strategy: n = "absolute",
                    middleware: r = [],
                    platform: o,
                    elements: {reference: i, floating: a} = {},
                    transform: s = !0,
                    whileElementsMounted: l,
                    open: c,
                } = e,
                [d, u] = y.useState({
                    x: 0,
                    y: 0,
                    strategy: n,
                    placement: t,
                    middlewareData: {},
                    isPositioned: !1,
                }),
                [h, p] = y.useState(r);
            Ng(h, r) || p(r);
            const [m, f] = y.useState(null),
                [g, b] = y.useState(null),
                x = y.useCallback((K) => {
                    K !== C.current && ((C.current = K), f(K));
                }, []),
                S = y.useCallback((K) => {
                    K !== P.current && ((P.current = K), b(K));
                }, []),
                _ = i || m,
                k = a || g,
                C = y.useRef(null),
                P = y.useRef(null),
                I = y.useRef(d),
                $ = l != null,
                T = r9(l),
                R = r9(o),
                D = y.useCallback(() => {
                    if (!C.current || !P.current) return;
                    const K = {placement: t, strategy: n, middleware: h};
                    R.current && (K.platform = R.current),
                        Pre(C.current, P.current, K).then((V) => {
                            const B = {...V, isPositioned: !0};
                            j.current &&
                            !Ng(I.current, B) &&
                            ((I.current = B),
                                Za.flushSync(() => {
                                    u(B);
                                }));
                        });
                }, [h, t, n, R]);
            jg(() => {
                c === !1 &&
                I.current.isPositioned &&
                ((I.current.isPositioned = !1),
                    u((K) => ({...K, isPositioned: !1})));
            }, [c]);
            const j = y.useRef(!1);
            jg(
                () => (
                    (j.current = !0),
                        () => {
                            j.current = !1;
                        }
                ),
                []
            ),
                jg(() => {
                    if ((_ && (C.current = _), k && (P.current = k), _ && k)) {
                        if (T.current) return T.current(_, k, D);
                        D();
                    }
                }, [_, k, D, T, $]);
            const z = y.useMemo(
                    () => ({
                        reference: C,
                        floating: P,
                        setReference: x,
                        setFloating: S,
                    }),
                    [x, S]
                ),
                O = y.useMemo(() => ({reference: _, floating: k}), [_, k]),
                F = y.useMemo(() => {
                    const K = {position: n, left: 0, top: 0};
                    if (!O.floating) return K;
                    const V = n9(O.floating, d.x),
                        B = n9(O.floating, d.y);
                    return s
                        ? {
                            ...K,
                            transform: "translate(" + V + "px, " + B + "px)",
                            ...(t9(O.floating) >= 1.5 && {
                                willChange: "transform",
                            }),
                        }
                        : {position: n, left: V, top: B};
                }, [n, s, O.floating, d.x, d.y]);
            return y.useMemo(
                () => ({...d, update: D, refs: z, elements: O, floatingStyles: F}),
                [d, D, z, O, F]
            );
        }
        const Ire = y.forwardRef((e, t) => {
            const {children: n, width: r = 10, height: o = 5, ...i} = e;
            return y.createElement(
                De.svg,
                J({}, i, {
                    ref: t,
                    width: r,
                    height: o,
                    viewBox: "0 0 30 10",
                    preserveAspectRatio: "none",
                }),
                e.asChild
                    ? n
                    : y.createElement("polygon", {points: "0,0 30,0 15,10"})
            );
        });
        function i9(e) {
            const [t, n] = y.useState(void 0);
            return (
                gs(() => {
                    if (e) {
                        n({width: e.offsetWidth, height: e.offsetHeight});
                        const r = new ResizeObserver((o) => {
                            if (!Array.isArray(o) || !o.length) return;
                            const i = o[0];
                            let a, s;
                            if ("borderBoxSize" in i) {
                                const l = i.borderBoxSize,
                                    c = Array.isArray(l) ? l[0] : l;
                                (a = c.inlineSize), (s = c.blockSize);
                            } else (a = e.offsetWidth), (s = e.offsetHeight);
                            n({width: a, height: s});
                        });
                        return (
                            r.observe(e, {box: "border-box"}), () => r.unobserve(e)
                        );
                    } else n(void 0);
                }, [e]),
                    t
            );
        }
        const a9 = "Popper",
            [s9, Fg] = Po(a9),
            [Tre, l9] = s9(a9),
            $re = (e) => {
                const {__scopePopper: t, children: n} = e,
                    [r, o] = y.useState(null);
                return y.createElement(
                    Tre,
                    {scope: t, anchor: r, onAnchorChange: o},
                    n
                );
            },
            Are = "PopperAnchor",
            Mre = y.forwardRef((e, t) => {
                const {__scopePopper: n, virtualRef: r, ...o} = e,
                    i = l9(Are, n),
                    a = y.useRef(null),
                    s = Ze(t, a);
                return (
                    y.useEffect(() => {
                        i.onAnchorChange(
                            (r == null ? void 0 : r.current) || a.current
                        );
                    }),
                        r ? null : y.createElement(De.div, J({}, o, {ref: s}))
                );
            }),
            c9 = "PopperContent",
            [zre, Rre] = s9(c9),
            Ore = y.forwardRef((e, t) => {
                var n, r, o, i, a, s, l, c;
                const {
                        __scopePopper: d,
                        side: u = "bottom",
                        sideOffset: h = 0,
                        align: p = "center",
                        alignOffset: m = 0,
                        arrowPadding: f = 0,
                        avoidCollisions: g = !0,
                        collisionBoundary: b = [],
                        collisionPadding: x = 0,
                        sticky: S = "partial",
                        hideWhenDetached: _ = !1,
                        updatePositionStrategy: k = "optimized",
                        onPlaced: C,
                        ...P
                    } = e,
                    I = l9(c9, d),
                    [$, T] = y.useState(null),
                    R = Ze(t, (it) => T(it)),
                    [D, j] = y.useState(null),
                    z = i9(D),
                    O =
                        (n = z == null ? void 0 : z.width) !== null && n !== void 0
                            ? n
                            : 0,
                    F =
                        (r = z == null ? void 0 : z.height) !== null && r !== void 0
                            ? r
                            : 0,
                    K = u + (p !== "center" ? "-" + p : ""),
                    V =
                        typeof x == "number"
                            ? x
                            : {top: 0, right: 0, bottom: 0, left: 0, ...x},
                    B = Array.isArray(b) ? b : [b],
                    H = B.length > 0,
                    G = {padding: V, boundary: B.filter(jre), altBoundary: H},
                    {
                        refs: ee,
                        floatingStyles: fe,
                        placement: Se,
                        isPositioned: te,
                        middlewareData: ye,
                    } = o9({
                        strategy: "fixed",
                        placement: K,
                        whileElementsMounted: (...it) =>
                            G7(...it, {animationFrame: k === "always"}),
                        elements: {reference: I.anchor},
                        middleware: [
                            D7({mainAxis: h + F, alignmentAxis: m}),
                            g &&
                            X7({
                                mainAxis: !0,
                                crossAxis: !1,
                                limiter: S === "partial" ? J7() : void 0,
                                ...G,
                            }),
                            g && q7({...G}),
                            Z7({
                                ...G,
                                apply: ({
                                            elements: it,
                                            rects: wt,
                                            availableWidth: Or,
                                            availableHeight: Ma,
                                        }) => {
                                    const {width: Xc, height: qc} = wt.reference,
                                        $i = it.floating.style;
                                    $i.setProperty(
                                        "--radix-popper-available-width",
                                        `${Or}px`
                                    ),
                                        $i.setProperty(
                                            "--radix-popper-available-height",
                                            `${Ma}px`
                                        ),
                                        $i.setProperty(
                                            "--radix-popper-anchor-width",
                                            `${Xc}px`
                                        ),
                                        $i.setProperty(
                                            "--radix-popper-anchor-height",
                                            `${qc}px`
                                        );
                                },
                            }),
                            D && e9({element: D, padding: f}),
                            Nre({arrowWidth: O, arrowHeight: F}),
                            _ && Cre({strategy: "referenceHidden", ...G}),
                        ],
                    }),
                    [Ae, We] = u9(Se),
                    _e = vn(C);
                gs(() => {
                    te && (_e == null || _e());
                }, [te, _e]);
                const tt = (o = ye.arrow) === null || o === void 0 ? void 0 : o.x,
                    Me = (i = ye.arrow) === null || i === void 0 ? void 0 : i.y,
                    Jt =
                        ((a = ye.arrow) === null || a === void 0
                            ? void 0
                            : a.centerOffset) !== 0,
                    [je, _n] = y.useState();
                return (
                    gs(() => {
                        $ && _n(window.getComputedStyle($).zIndex);
                    }, [$]),
                        y.createElement(
                            "div",
                            {
                                ref: ee.setFloating,
                                "data-radix-popper-content-wrapper": "",
                                style: {
                                    ...fe,
                                    transform: te
                                        ? fe.transform
                                        : "translate(0, -200%)",
                                    minWidth: "max-content",
                                    zIndex: je,
                                    "--radix-popper-transform-origin": [
                                        (s = ye.transformOrigin) === null ||
                                        s === void 0
                                            ? void 0
                                            : s.x,
                                        (l = ye.transformOrigin) === null ||
                                        l === void 0
                                            ? void 0
                                            : l.y,
                                    ].join(" "),
                                },
                                dir: e.dir,
                            },
                            y.createElement(
                                zre,
                                {
                                    scope: d,
                                    placedSide: Ae,
                                    onArrowChange: j,
                                    arrowX: tt,
                                    arrowY: Me,
                                    shouldHideArrow: Jt,
                                },
                                y.createElement(
                                    De.div,
                                    J({"data-side": Ae, "data-align": We}, P, {
                                        ref: R,
                                        style: {
                                            ...P.style,
                                            animation: te ? void 0 : "none",
                                            opacity:
                                                (c = ye.hide) !== null &&
                                                c !== void 0 &&
                                                c.referenceHidden
                                                    ? 0
                                                    : void 0,
                                        },
                                    })
                                )
                            )
                        )
                );
            }),
            d9 = "PopperArrow",
            Dre = {top: "bottom", right: "left", bottom: "top", left: "right"},
            Lre = y.forwardRef(function (t, n) {
                const {__scopePopper: r, ...o} = t,
                    i = Rre(d9, r),
                    a = Dre[i.placedSide];
                return y.createElement(
                    "span",
                    {
                        ref: i.onArrowChange,
                        style: {
                            position: "absolute",
                            left: i.arrowX,
                            top: i.arrowY,
                            [a]: 0,
                            transformOrigin: {
                                top: "",
                                right: "0 0",
                                bottom: "center 0",
                                left: "100% 0",
                            }[i.placedSide],
                            transform: {
                                top: "translateY(100%)",
                                right: "translateY(50%) rotate(90deg) translateX(-50%)",
                                bottom: "rotate(180deg)",
                                left: "translateY(50%) rotate(-90deg) translateX(50%)",
                            }[i.placedSide],
                            visibility: i.shouldHideArrow ? "hidden" : void 0,
                        },
                    },
                    y.createElement(
                        Ire,
                        J({}, o, {ref: n, style: {...o.style, display: "block"}})
                    )
                );
            });
        function jre(e) {
            return e !== null;
        }
        const Nre = (e) => ({
            name: "transformOrigin",
            options: e,
            fn(t) {
                var n, r, o, i, a;
                const {placement: s, rects: l, middlewareData: c} = t,
                    u =
                        ((n = c.arrow) === null || n === void 0
                            ? void 0
                            : n.centerOffset) !== 0,
                    h = u ? 0 : e.arrowWidth,
                    p = u ? 0 : e.arrowHeight,
                    [m, f] = u9(s),
                    g = {start: "0%", center: "50%", end: "100%"}[f],
                    b =
                        ((r =
                            (o = c.arrow) === null || o === void 0
                                ? void 0
                                : o.x) !== null && r !== void 0
                            ? r
                            : 0) +
                        h / 2,
                    x =
                        ((i =
                            (a = c.arrow) === null || a === void 0
                                ? void 0
                                : a.y) !== null && i !== void 0
                            ? i
                            : 0) +
                        p / 2;
                let S = "",
                    _ = "";
                return (
                    m === "bottom"
                        ? ((S = u ? g : `${b}px`), (_ = `${-p}px`))
                        : m === "top"
                            ? ((S = u ? g : `${b}px`),
                                (_ = `${l.floating.height + p}px`))
                            : m === "right"
                                ? ((S = `${-p}px`), (_ = u ? g : `${x}px`))
                                : m === "left" &&
                                ((S = `${l.floating.width + p}px`),
                                    (_ = u ? g : `${x}px`)),
                        {data: {x: S, y: _}}
                );
            },
        });
        function u9(e) {
            const [t, n = "center"] = e.split("-");
            return [t, n];
        }
        const Kx = $re,
            h9 = Mre,
            p9 = Ore,
            Wx = "rovingFocusGroup.onEntryFocus",
            Fre = {bubbles: !1, cancelable: !0},
            Yx = "RovingFocusGroup",
            [Gx, f9, Bre] = dg(Yx),
            [Ure, m9] = Po(Yx, [Bre]),
            [Hre, Vre] = Ure(Yx),
            Kre = y.forwardRef((e, t) =>
                y.createElement(
                    Gx.Provider,
                    {scope: e.__scopeRovingFocusGroup},
                    y.createElement(
                        Gx.Slot,
                        {scope: e.__scopeRovingFocusGroup},
                        y.createElement(Wre, J({}, e, {ref: t}))
                    )
                )
            ),
            Wre = y.forwardRef((e, t) => {
                const {
                        __scopeRovingFocusGroup: n,
                        orientation: r,
                        loop: o = !1,
                        dir: i,
                        currentTabStopId: a,
                        defaultCurrentTabStopId: s,
                        onCurrentTabStopIdChange: l,
                        onEntryFocus: c,
                        ...d
                    } = e,
                    u = y.useRef(null),
                    h = Ze(t, u),
                    p = Ox(i),
                    [m = null, f] = ga({prop: a, defaultProp: s, onChange: l}),
                    [g, b] = y.useState(!1),
                    x = vn(c),
                    S = f9(n),
                    _ = y.useRef(!1),
                    [k, C] = y.useState(0);
                return (
                    y.useEffect(() => {
                        const P = u.current;
                        if (P)
                            return (
                                P.addEventListener(Wx, x),
                                    () => P.removeEventListener(Wx, x)
                            );
                    }, [x]),
                        y.createElement(
                            Hre,
                            {
                                scope: n,
                                orientation: r,
                                dir: p,
                                loop: o,
                                currentTabStopId: m,
                                onItemFocus: y.useCallback((P) => f(P), [f]),
                                onItemShiftTab: y.useCallback(() => b(!0), []),
                                onFocusableItemAdd: y.useCallback(
                                    () => C((P) => P + 1),
                                    []
                                ),
                                onFocusableItemRemove: y.useCallback(
                                    () => C((P) => P - 1),
                                    []
                                ),
                            },
                            y.createElement(
                                De.div,
                                J(
                                    {
                                        tabIndex: g || k === 0 ? -1 : 0,
                                        "data-orientation": r,
                                    },
                                    d,
                                    {
                                        ref: h,
                                        style: {outline: "none", ...e.style},
                                        onMouseDown: ae(e.onMouseDown, () => {
                                            _.current = !0;
                                        }),
                                        onFocus: ae(e.onFocus, (P) => {
                                            const I = !_.current;
                                            if (
                                                P.target === P.currentTarget &&
                                                I &&
                                                !g
                                            ) {
                                                const $ = new CustomEvent(Wx, Fre);
                                                if (
                                                    (P.currentTarget.dispatchEvent($),
                                                        !$.defaultPrevented)
                                                ) {
                                                    const T = S().filter(
                                                            (O) => O.focusable
                                                        ),
                                                        R = T.find((O) => O.active),
                                                        D = T.find((O) => O.id === m),
                                                        z = [R, D, ...T]
                                                            .filter(Boolean)
                                                            .map((O) => O.ref.current);
                                                    g9(z);
                                                }
                                            }
                                            _.current = !1;
                                        }),
                                        onBlur: ae(e.onBlur, () => b(!1)),
                                    }
                                )
                            )
                        )
                );
            }),
            Yre = "RovingFocusGroupItem",
            Gre = y.forwardRef((e, t) => {
                const {
                        __scopeRovingFocusGroup: n,
                        focusable: r = !0,
                        active: o = !1,
                        tabStopId: i,
                        ...a
                    } = e,
                    s = yi(),
                    l = i || s,
                    c = Vre(Yre, n),
                    d = c.currentTabStopId === l,
                    u = f9(n),
                    {onFocusableItemAdd: h, onFocusableItemRemove: p} = c;
                return (
                    y.useEffect(() => {
                        if (r) return h(), () => p();
                    }, [r, h, p]),
                        y.createElement(
                            Gx.ItemSlot,
                            {scope: n, id: l, focusable: r, active: o},
                            y.createElement(
                                De.span,
                                J(
                                    {
                                        tabIndex: d ? 0 : -1,
                                        "data-orientation": c.orientation,
                                    },
                                    a,
                                    {
                                        ref: t,
                                        onMouseDown: ae(e.onMouseDown, (m) => {
                                            r ? c.onItemFocus(l) : m.preventDefault();
                                        }),
                                        onFocus: ae(e.onFocus, () => c.onItemFocus(l)),
                                        onKeyDown: ae(e.onKeyDown, (m) => {
                                            if (m.key === "Tab" && m.shiftKey) {
                                                c.onItemShiftTab();
                                                return;
                                            }
                                            if (m.target !== m.currentTarget) return;
                                            const f = Zre(m, c.orientation, c.dir);
                                            if (f !== void 0) {
                                                m.preventDefault();
                                                let b = u()
                                                    .filter((x) => x.focusable)
                                                    .map((x) => x.ref.current);
                                                if (f === "last") b.reverse();
                                                else if (f === "prev" || f === "next") {
                                                    f === "prev" && b.reverse();
                                                    const x = b.indexOf(
                                                        m.currentTarget
                                                    );
                                                    b = c.loop
                                                        ? Qre(b, x + 1)
                                                        : b.slice(x + 1);
                                                }
                                                setTimeout(() => g9(b));
                                            }
                                        }),
                                    }
                                )
                            )
                        )
                );
            }),
            Xre = {
                ArrowLeft: "prev",
                ArrowUp: "prev",
                ArrowRight: "next",
                ArrowDown: "next",
                PageUp: "first",
                Home: "first",
                PageDown: "last",
                End: "last",
            };
        function qre(e, t) {
            return t !== "rtl"
                ? e
                : e === "ArrowLeft"
                    ? "ArrowRight"
                    : e === "ArrowRight"
                        ? "ArrowLeft"
                        : e;
        }
        function Zre(e, t, n) {
            const r = qre(e.key, n);
            if (
                !(t === "vertical" && ["ArrowLeft", "ArrowRight"].includes(r)) &&
                !(t === "horizontal" && ["ArrowUp", "ArrowDown"].includes(r))
            )
                return Xre[r];
        }
        function g9(e) {
            const t = document.activeElement;
            for (const n of e)
                if (n === t || (n.focus(), document.activeElement !== t)) return;
        }
        function Qre(e, t) {
            return e.map((n, r) => e[(t + r) % e.length]);
        }
        const Jre = Kre,
            eoe = Gre;
        var v9 = px(),
            Xx = function () {},
            Bg = y.forwardRef(function (e, t) {
                var n = y.useRef(null),
                    r = y.useState({
                        onScrollCapture: Xx,
                        onWheelCapture: Xx,
                        onTouchMoveCapture: Xx,
                    }),
                    o = r[0],
                    i = r[1],
                    a = e.forwardProps,
                    s = e.children,
                    l = e.className,
                    c = e.removeScrollBar,
                    d = e.enabled,
                    u = e.shards,
                    h = e.sideCar,
                    p = e.noIsolation,
                    m = e.inert,
                    f = e.allowPinchZoom,
                    g = e.as,
                    b = g === void 0 ? "div" : g,
                    x = bg(e, [
                        "forwardProps",
                        "children",
                        "className",
                        "removeScrollBar",
                        "enabled",
                        "shards",
                        "sideCar",
                        "noIsolation",
                        "inert",
                        "allowPinchZoom",
                        "as",
                    ]),
                    S = h,
                    _ = hx([n, t]),
                    k = yt(yt({}, x), o);
                return y.createElement(
                    y.Fragment,
                    null,
                    d &&
                    y.createElement(S, {
                        sideCar: v9,
                        removeScrollBar: c,
                        shards: u,
                        noIsolation: p,
                        inert: m,
                        setCallbacks: i,
                        allowPinchZoom: !!f,
                        lockRef: n,
                    }),
                    a
                        ? y.cloneElement(
                            y.Children.only(s),
                            yt(yt({}, k), {ref: _})
                        )
                        : y.createElement(b, yt({}, k, {className: l, ref: _}), s)
                );
            });
        (Bg.defaultProps = {enabled: !0, removeScrollBar: !0, inert: !1}),
            (Bg.classNames = {fullWidth: hc, zeroRight: uc});
        var qx = !1;
        if (typeof window < "u")
            try {
                var Ug = Object.defineProperty({}, "passive", {
                    get: function () {
                        return (qx = !0), !0;
                    },
                });
                window.addEventListener("test", Ug, Ug),
                    window.removeEventListener("test", Ug, Ug);
            } catch {
                qx = !1;
            }
        var Sc = qx ? {passive: !1} : !1,
            toe = function (e) {
                return e.tagName === "TEXTAREA";
            },
            b9 = function (e, t) {
                var n = window.getComputedStyle(e);
                return (
                    n[t] !== "hidden" &&
                    !(n.overflowY === n.overflowX && !toe(e) && n[t] === "visible")
                );
            },
            noe = function (e) {
                return b9(e, "overflowY");
            },
            roe = function (e) {
                return b9(e, "overflowX");
            },
            y9 = function (e, t) {
                var n = t;
                do {
                    typeof ShadowRoot < "u" &&
                    n instanceof ShadowRoot &&
                    (n = n.host);
                    var r = w9(e, n);
                    if (r) {
                        var o = x9(e, n),
                            i = o[1],
                            a = o[2];
                        if (i > a) return !0;
                    }
                    n = n.parentNode;
                } while (n && n !== document.body);
                return !1;
            },
            ooe = function (e) {
                var t = e.scrollTop,
                    n = e.scrollHeight,
                    r = e.clientHeight;
                return [t, n, r];
            },
            ioe = function (e) {
                var t = e.scrollLeft,
                    n = e.scrollWidth,
                    r = e.clientWidth;
                return [t, n, r];
            },
            w9 = function (e, t) {
                return e === "v" ? noe(t) : roe(t);
            },
            x9 = function (e, t) {
                return e === "v" ? ooe(t) : ioe(t);
            },
            aoe = function (e, t) {
                return e === "h" && t === "rtl" ? -1 : 1;
            },
            soe = function (e, t, n, r, o) {
                var i = aoe(e, window.getComputedStyle(t).direction),
                    a = i * r,
                    s = n.target,
                    l = t.contains(s),
                    c = !1,
                    d = a > 0,
                    u = 0,
                    h = 0;
                do {
                    var p = x9(e, s),
                        m = p[0],
                        f = p[1],
                        g = p[2],
                        b = f - g - i * m;
                    (m || b) && w9(e, s) && ((u += b), (h += m)),
                        (s = s.parentNode);
                } while (
                    (!l && s !== document.body) ||
                    (l && (t.contains(s) || t === s))
                    );
                return (
                    ((d && ((o && u === 0) || (!o && a > u))) ||
                        (!d && ((o && h === 0) || (!o && -a > h)))) &&
                    (c = !0),
                        c
                );
            },
            Hg = function (e) {
                return "changedTouches" in e
                    ? [e.changedTouches[0].clientX, e.changedTouches[0].clientY]
                    : [0, 0];
            },
            S9 = function (e) {
                return [e.deltaX, e.deltaY];
            },
            _9 = function (e) {
                return e && "current" in e ? e.current : e;
            },
            loe = function (e, t) {
                return e[0] === t[0] && e[1] === t[1];
            },
            coe = function (e) {
                return `
  .block-interactivity-`
                    .concat(
                        e,
                        ` {pointer-events: none;}
  .allow-interactivity-`
                    )
                    .concat(
                        e,
                        ` {pointer-events: all;}
`
                    );
            },
            doe = 0,
            _c = [];
        function uoe(e) {
            var t = y.useRef([]),
                n = y.useRef([0, 0]),
                r = y.useRef(),
                o = y.useState(doe++)[0],
                i = y.useState(function () {
                    return wg();
                })[0],
                a = y.useRef(e);
            y.useEffect(
                function () {
                    a.current = e;
                },
                [e]
            ),
                y.useEffect(
                    function () {
                        if (e.inert) {
                            document.body.classList.add(
                                "block-interactivity-".concat(o)
                            );
                            var f = dx(
                                [e.lockRef.current],
                                (e.shards || []).map(_9),
                                !0
                            ).filter(Boolean);
                            return (
                                f.forEach(function (g) {
                                    return g.classList.add(
                                        "allow-interactivity-".concat(o)
                                    );
                                }),
                                    function () {
                                        document.body.classList.remove(
                                            "block-interactivity-".concat(o)
                                        ),
                                            f.forEach(function (g) {
                                                return g.classList.remove(
                                                    "allow-interactivity-".concat(o)
                                                );
                                            });
                                    }
                            );
                        }
                    },
                    [e.inert, e.lockRef.current, e.shards]
                );
            var s = y.useCallback(function (f, g) {
                    if ("touches" in f && f.touches.length === 2)
                        return !a.current.allowPinchZoom;
                    var b = Hg(f),
                        x = n.current,
                        S = "deltaX" in f ? f.deltaX : x[0] - b[0],
                        _ = "deltaY" in f ? f.deltaY : x[1] - b[1],
                        k,
                        C = f.target,
                        P = Math.abs(S) > Math.abs(_) ? "h" : "v";
                    if ("touches" in f && P === "h" && C.type === "range")
                        return !1;
                    var I = y9(P, C);
                    if (!I) return !0;
                    if (
                        (I
                            ? (k = P)
                            : ((k = P === "v" ? "h" : "v"), (I = y9(P, C))),
                            !I)
                    )
                        return !1;
                    if (
                        (!r.current &&
                        "changedTouches" in f &&
                        (S || _) &&
                        (r.current = k),
                            !k)
                    )
                        return !0;
                    var $ = r.current || k;
                    return soe($, g, f, $ === "h" ? S : _, !0);
                }, []),
                l = y.useCallback(function (f) {
                    var g = f;
                    if (!(!_c.length || _c[_c.length - 1] !== i)) {
                        var b = "deltaY" in g ? S9(g) : Hg(g),
                            x = t.current.filter(function (k) {
                                return (
                                    k.name === g.type &&
                                    k.target === g.target &&
                                    loe(k.delta, b)
                                );
                            })[0];
                        if (x && x.should) {
                            g.cancelable && g.preventDefault();
                            return;
                        }
                        if (!x) {
                            var S = (a.current.shards || [])
                                    .map(_9)
                                    .filter(Boolean)
                                    .filter(function (k) {
                                        return k.contains(g.target);
                                    }),
                                _ =
                                    S.length > 0
                                        ? s(g, S[0])
                                        : !a.current.noIsolation;
                            _ && g.cancelable && g.preventDefault();
                        }
                    }
                }, []),
                c = y.useCallback(function (f, g, b, x) {
                    var S = {name: f, delta: g, target: b, should: x};
                    t.current.push(S),
                        setTimeout(function () {
                            t.current = t.current.filter(function (_) {
                                return _ !== S;
                            });
                        }, 1);
                }, []),
                d = y.useCallback(function (f) {
                    (n.current = Hg(f)), (r.current = void 0);
                }, []),
                u = y.useCallback(function (f) {
                    c(f.type, S9(f), f.target, s(f, e.lockRef.current));
                }, []),
                h = y.useCallback(function (f) {
                    c(f.type, Hg(f), f.target, s(f, e.lockRef.current));
                }, []);
            y.useEffect(function () {
                return (
                    _c.push(i),
                        e.setCallbacks({
                            onScrollCapture: u,
                            onWheelCapture: u,
                            onTouchMoveCapture: h,
                        }),
                        document.addEventListener("wheel", l, Sc),
                        document.addEventListener("touchmove", l, Sc),
                        document.addEventListener("touchstart", d, Sc),
                        function () {
                            (_c = _c.filter(function (f) {
                                return f !== i;
                            })),
                                document.removeEventListener("wheel", l, Sc),
                                document.removeEventListener("touchmove", l, Sc),
                                document.removeEventListener("touchstart", d, Sc);
                        }
                );
            }, []);
            var p = e.removeScrollBar,
                m = e.inert;
            return y.createElement(
                y.Fragment,
                null,
                m ? y.createElement(i, {styles: coe(o)}) : null,
                p ? y.createElement(vx, {gapMode: "margin"}) : null
            );
        }
        const hoe = fx(v9, uoe);
        var k9 = y.forwardRef(function (e, t) {
            return y.createElement(Bg, yt({}, e, {ref: t, sideCar: hoe}));
        });
        k9.classNames = Bg.classNames;
        const poe = k9,
            Zx = ["Enter", " "],
            foe = ["ArrowDown", "PageUp", "Home"],
            C9 = ["ArrowUp", "PageDown", "End"],
            moe = [...foe, ...C9],
            goe = {ltr: [...Zx, "ArrowRight"], rtl: [...Zx, "ArrowLeft"]},
            voe = {ltr: ["ArrowLeft"], rtl: ["ArrowRight"]},
            Vg = "Menu",
            [qu, boe, yoe] = dg(Vg),
            [xs, Kg] = Po(Vg, [yoe, Fg, m9]),
            Wg = Fg(),
            E9 = m9(),
            [P9, wa] = xs(Vg),
            [woe, Zu] = xs(Vg),
            xoe = (e) => {
                const {
                        __scopeMenu: t,
                        open: n = !1,
                        children: r,
                        dir: o,
                        onOpenChange: i,
                        modal: a = !0,
                    } = e,
                    s = Wg(t),
                    [l, c] = y.useState(null),
                    d = y.useRef(!1),
                    u = vn(i),
                    h = Ox(o);
                return (
                    y.useEffect(() => {
                        const p = () => {
                                (d.current = !0),
                                    document.addEventListener("pointerdown", m, {
                                        capture: !0,
                                        once: !0,
                                    }),
                                    document.addEventListener("pointermove", m, {
                                        capture: !0,
                                        once: !0,
                                    });
                            },
                            m = () => (d.current = !1);
                        return (
                            document.addEventListener("keydown", p, {capture: !0}),
                                () => {
                                    document.removeEventListener("keydown", p, {
                                        capture: !0,
                                    }),
                                        document.removeEventListener("pointerdown", m, {
                                            capture: !0,
                                        }),
                                        document.removeEventListener("pointermove", m, {
                                            capture: !0,
                                        });
                                }
                        );
                    }, []),
                        y.createElement(
                            Kx,
                            s,
                            y.createElement(
                                P9,
                                {
                                    scope: t,
                                    open: n,
                                    onOpenChange: u,
                                    content: l,
                                    onContentChange: c,
                                },
                                y.createElement(
                                    woe,
                                    {
                                        scope: t,
                                        onClose: y.useCallback(() => u(!1), [u]),
                                        isUsingKeyboardRef: d,
                                        dir: h,
                                        modal: a,
                                    },
                                    r
                                )
                            )
                        )
                );
            },
            I9 = y.forwardRef((e, t) => {
                const {__scopeMenu: n, ...r} = e,
                    o = Wg(n);
                return y.createElement(h9, J({}, o, r, {ref: t}));
            }),
            T9 = "MenuPortal",
            [Soe, $9] = xs(T9, {forceMount: void 0}),
            _oe = (e) => {
                const {
                        __scopeMenu: t,
                        forceMount: n,
                        children: r,
                        container: o,
                    } = e,
                    i = wa(T9, t);
                return y.createElement(
                    Soe,
                    {scope: t, forceMount: n},
                    y.createElement(
                        to,
                        {present: n || i.open},
                        y.createElement(hg, {asChild: !0, container: o}, r)
                    )
                );
            },
            oo = "MenuContent",
            [koe, Qx] = xs(oo),
            Coe = y.forwardRef((e, t) => {
                const n = $9(oo, e.__scopeMenu),
                    {forceMount: r = n.forceMount, ...o} = e,
                    i = wa(oo, e.__scopeMenu),
                    a = Zu(oo, e.__scopeMenu);
                return y.createElement(
                    qu.Provider,
                    {scope: e.__scopeMenu},
                    y.createElement(
                        to,
                        {present: r || i.open},
                        y.createElement(
                            qu.Slot,
                            {scope: e.__scopeMenu},
                            a.modal
                                ? y.createElement(Eoe, J({}, o, {ref: t}))
                                : y.createElement(Poe, J({}, o, {ref: t}))
                        )
                    )
                );
            }),
            Eoe = y.forwardRef((e, t) => {
                const n = wa(oo, e.__scopeMenu),
                    r = y.useRef(null),
                    o = Ze(t, r);
                return (
                    y.useEffect(() => {
                        const i = r.current;
                        if (i) return wx(i);
                    }, []),
                        y.createElement(
                            Jx,
                            J({}, e, {
                                ref: o,
                                trapFocus: n.open,
                                disableOutsidePointerEvents: n.open,
                                disableOutsideScroll: !0,
                                onFocusOutside: ae(
                                    e.onFocusOutside,
                                    (i) => i.preventDefault(),
                                    {checkForDefaultPrevented: !1}
                                ),
                                onDismiss: () => n.onOpenChange(!1),
                            })
                        )
                );
            }),
            Poe = y.forwardRef((e, t) => {
                const n = wa(oo, e.__scopeMenu);
                return y.createElement(
                    Jx,
                    J({}, e, {
                        ref: t,
                        trapFocus: !1,
                        disableOutsidePointerEvents: !1,
                        disableOutsideScroll: !1,
                        onDismiss: () => n.onOpenChange(!1),
                    })
                );
            }),
            Jx = y.forwardRef((e, t) => {
                const {
                        __scopeMenu: n,
                        loop: r = !1,
                        trapFocus: o,
                        onOpenAutoFocus: i,
                        onCloseAutoFocus: a,
                        disableOutsidePointerEvents: s,
                        onEntryFocus: l,
                        onEscapeKeyDown: c,
                        onPointerDownOutside: d,
                        onFocusOutside: u,
                        onInteractOutside: h,
                        onDismiss: p,
                        disableOutsideScroll: m,
                        ...f
                    } = e,
                    g = wa(oo, n),
                    b = Zu(oo, n),
                    x = Wg(n),
                    S = E9(n),
                    _ = boe(n),
                    [k, C] = y.useState(null),
                    P = y.useRef(null),
                    I = Ze(t, P, g.onContentChange),
                    $ = y.useRef(0),
                    T = y.useRef(""),
                    R = y.useRef(0),
                    D = y.useRef(null),
                    j = y.useRef("right"),
                    z = y.useRef(0),
                    O = m ? poe : y.Fragment,
                    F = m ? {as: ms, allowPinchZoom: !0} : void 0,
                    K = (B) => {
                        var H, G;
                        const ee = T.current + B,
                            fe = _().filter((_e) => !_e.disabled),
                            Se = document.activeElement,
                            te =
                                (H = fe.find((_e) => _e.ref.current === Se)) ===
                                null || H === void 0
                                    ? void 0
                                    : H.textValue,
                            ye = fe.map((_e) => _e.textValue),
                            Ae = Foe(ye, ee, te),
                            We =
                                (G = fe.find((_e) => _e.textValue === Ae)) ===
                                null || G === void 0
                                    ? void 0
                                    : G.ref.current;
                        (function _e(tt) {
                            (T.current = tt),
                                window.clearTimeout($.current),
                            tt !== "" &&
                            ($.current = window.setTimeout(
                                () => _e(""),
                                1e3
                            ));
                        })(ee),
                        We && setTimeout(() => We.focus());
                    };
                y.useEffect(() => () => window.clearTimeout($.current), []), cx();
                const V = y.useCallback((B) => {
                    var H, G;
                    return (
                        j.current ===
                        ((H = D.current) === null || H === void 0
                            ? void 0
                            : H.side) &&
                        Uoe(
                            B,
                            (G = D.current) === null || G === void 0
                                ? void 0
                                : G.area
                        )
                    );
                }, []);
                return y.createElement(
                    koe,
                    {
                        scope: n,
                        searchRef: T,
                        onItemEnter: y.useCallback(
                            (B) => {
                                V(B) && B.preventDefault();
                            },
                            [V]
                        ),
                        onItemLeave: y.useCallback(
                            (B) => {
                                var H;
                                V(B) ||
                                ((H = P.current) === null ||
                                H === void 0 ||
                                H.focus(),
                                    C(null));
                            },
                            [V]
                        ),
                        onTriggerLeave: y.useCallback(
                            (B) => {
                                V(B) && B.preventDefault();
                            },
                            [V]
                        ),
                        pointerGraceTimerRef: R,
                        onPointerGraceIntentChange: y.useCallback((B) => {
                            D.current = B;
                        }, []),
                    },
                    y.createElement(
                        O,
                        F,
                        y.createElement(
                            sx,
                            {
                                asChild: !0,
                                trapped: o,
                                onMountAutoFocus: ae(i, (B) => {
                                    var H;
                                    B.preventDefault(),
                                    (H = P.current) === null ||
                                    H === void 0 ||
                                    H.focus();
                                }),
                                onUnmountAutoFocus: a,
                            },
                            y.createElement(
                                ug,
                                {
                                    asChild: !0,
                                    disableOutsidePointerEvents: s,
                                    onEscapeKeyDown: c,
                                    onPointerDownOutside: d,
                                    onFocusOutside: u,
                                    onInteractOutside: h,
                                    onDismiss: p,
                                },
                                y.createElement(
                                    Jre,
                                    J({asChild: !0}, S, {
                                        dir: b.dir,
                                        orientation: "vertical",
                                        loop: r,
                                        currentTabStopId: k,
                                        onCurrentTabStopIdChange: C,
                                        onEntryFocus: ae(l, (B) => {
                                            b.isUsingKeyboardRef.current ||
                                            B.preventDefault();
                                        }),
                                    }),
                                    y.createElement(
                                        p9,
                                        J(
                                            {
                                                role: "menu",
                                                "aria-orientation": "vertical",
                                                "data-state": L9(g.open),
                                                "data-radix-menu-content": "",
                                                dir: b.dir,
                                            },
                                            x,
                                            f,
                                            {
                                                ref: I,
                                                style: {
                                                    outline: "none",
                                                    ...f.style,
                                                },
                                                onKeyDown: ae(f.onKeyDown, (B) => {
                                                    const G =
                                                            B.target.closest(
                                                                "[data-radix-menu-content]"
                                                            ) === B.currentTarget,
                                                        ee =
                                                            B.ctrlKey ||
                                                            B.altKey ||
                                                            B.metaKey,
                                                        fe = B.key.length === 1;
                                                    G &&
                                                    (B.key === "Tab" &&
                                                    B.preventDefault(),
                                                    !ee && fe && K(B.key));
                                                    const Se = P.current;
                                                    if (
                                                        B.target !== Se ||
                                                        !moe.includes(B.key)
                                                    )
                                                        return;
                                                    B.preventDefault();
                                                    const ye = _()
                                                        .filter(
                                                            (Ae) => !Ae.disabled
                                                        )
                                                        .map(
                                                            (Ae) => Ae.ref.current
                                                        );
                                                    C9.includes(B.key) &&
                                                    ye.reverse(),
                                                        joe(ye);
                                                }),
                                                onBlur: ae(e.onBlur, (B) => {
                                                    B.currentTarget.contains(
                                                        B.target
                                                    ) ||
                                                    (window.clearTimeout(
                                                        $.current
                                                    ),
                                                        (T.current = ""));
                                                }),
                                                onPointerMove: ae(
                                                    e.onPointerMove,
                                                    Qu((B) => {
                                                        const H = B.target,
                                                            G =
                                                                z.current !==
                                                                B.clientX;
                                                        if (
                                                            B.currentTarget.contains(
                                                                H
                                                            ) &&
                                                            G
                                                        ) {
                                                            const ee =
                                                                B.clientX >
                                                                z.current
                                                                    ? "right"
                                                                    : "left";
                                                            (j.current = ee),
                                                                (z.current =
                                                                    B.clientX);
                                                        }
                                                    })
                                                ),
                                            }
                                        )
                                    )
                                )
                            )
                        )
                    )
                );
            }),
            Ioe = y.forwardRef((e, t) => {
                const {__scopeMenu: n, ...r} = e;
                return y.createElement(De.div, J({role: "group"}, r, {ref: t}));
            }),
            eS = "MenuItem",
            A9 = "menu.itemSelect",
            M9 = y.forwardRef((e, t) => {
                const {disabled: n = !1, onSelect: r, ...o} = e,
                    i = y.useRef(null),
                    a = Zu(eS, e.__scopeMenu),
                    s = Qx(eS, e.__scopeMenu),
                    l = Ze(t, i),
                    c = y.useRef(!1),
                    d = () => {
                        const u = i.current;
                        if (!n && u) {
                            const h = new CustomEvent(A9, {
                                bubbles: !0,
                                cancelable: !0,
                            });
                            u.addEventListener(
                                A9,
                                (p) => (r == null ? void 0 : r(p)),
                                {once: !0}
                            ),
                                qw(u, h),
                                h.defaultPrevented ? (c.current = !1) : a.onClose();
                        }
                    };
                return y.createElement(
                    z9,
                    J({}, o, {
                        ref: l,
                        disabled: n,
                        onClick: ae(e.onClick, d),
                        onPointerDown: (u) => {
                            var h;
                            (h = e.onPointerDown) === null ||
                            h === void 0 ||
                            h.call(e, u),
                                (c.current = !0);
                        },
                        onPointerUp: ae(e.onPointerUp, (u) => {
                            var h;
                            c.current ||
                            (h = u.currentTarget) === null ||
                            h === void 0 ||
                            h.click();
                        }),
                        onKeyDown: ae(e.onKeyDown, (u) => {
                            const h = s.searchRef.current !== "";
                            n ||
                            (h && u.key === " ") ||
                            (Zx.includes(u.key) &&
                                (u.currentTarget.click(), u.preventDefault()));
                        }),
                    })
                );
            }),
            z9 = y.forwardRef((e, t) => {
                const {__scopeMenu: n, disabled: r = !1, textValue: o, ...i} = e,
                    a = Qx(eS, n),
                    s = E9(n),
                    l = y.useRef(null),
                    c = Ze(t, l),
                    [d, u] = y.useState(!1),
                    [h, p] = y.useState("");
                return (
                    y.useEffect(() => {
                        const m = l.current;
                        if (m) {
                            var f;
                            p(
                                ((f = m.textContent) !== null && f !== void 0
                                        ? f
                                        : ""
                                ).trim()
                            );
                        }
                    }, [i.children]),
                        y.createElement(
                            qu.ItemSlot,
                            {scope: n, disabled: r, textValue: o ?? h},
                            y.createElement(
                                eoe,
                                J({asChild: !0}, s, {focusable: !r}),
                                y.createElement(
                                    De.div,
                                    J(
                                        {
                                            role: "menuitem",
                                            "data-highlighted": d ? "" : void 0,
                                            "aria-disabled": r || void 0,
                                            "data-disabled": r ? "" : void 0,
                                        },
                                        i,
                                        {
                                            ref: c,
                                            onPointerMove: ae(
                                                e.onPointerMove,
                                                Qu((m) => {
                                                    r
                                                        ? a.onItemLeave(m)
                                                        : (a.onItemEnter(m),
                                                        m.defaultPrevented ||
                                                        m.currentTarget.focus());
                                                })
                                            ),
                                            onPointerLeave: ae(
                                                e.onPointerLeave,
                                                Qu((m) => a.onItemLeave(m))
                                            ),
                                            onFocus: ae(e.onFocus, () => u(!0)),
                                            onBlur: ae(e.onBlur, () => u(!1)),
                                        }
                                    )
                                )
                            )
                        )
                );
            }),
            Toe = y.forwardRef((e, t) => {
                const {checked: n = !1, onCheckedChange: r, ...o} = e;
                return y.createElement(
                    $oe,
                    {scope: e.__scopeMenu, checked: n},
                    y.createElement(
                        M9,
                        J(
                            {
                                role: "menuitemcheckbox",
                                "aria-checked": Gg(n) ? "mixed" : n,
                            },
                            o,
                            {
                                ref: t,
                                "data-state": j9(n),
                                onSelect: ae(
                                    o.onSelect,
                                    () => (r == null ? void 0 : r(Gg(n) ? !0 : !n)),
                                    {checkForDefaultPrevented: !1}
                                ),
                            }
                        )
                    )
                );
            });
        xs("MenuRadioGroup", {value: void 0, onValueChange: () => {}});
        const R9 = "MenuItemIndicator",
            [$oe, Aoe] = xs(R9, {checked: !1}),
            Moe = y.forwardRef((e, t) => {
                const {__scopeMenu: n, forceMount: r, ...o} = e,
                    i = Aoe(R9, n);
                return y.createElement(
                    to,
                    {present: r || Gg(i.checked) || i.checked === !0},
                    y.createElement(
                        De.span,
                        J({}, o, {ref: t, "data-state": j9(i.checked)})
                    )
                );
            }),
            O9 = "MenuSub",
            [zoe, D9] = xs(O9),
            Roe = (e) => {
                const {
                        __scopeMenu: t,
                        children: n,
                        open: r = !1,
                        onOpenChange: o,
                    } = e,
                    i = wa(O9, t),
                    a = Wg(t),
                    [s, l] = y.useState(null),
                    [c, d] = y.useState(null),
                    u = vn(o);
                return (
                    y.useEffect(
                        () => (i.open === !1 && u(!1), () => u(!1)),
                        [i.open, u]
                    ),
                        y.createElement(
                            Kx,
                            a,
                            y.createElement(
                                P9,
                                {
                                    scope: t,
                                    open: r,
                                    onOpenChange: u,
                                    content: c,
                                    onContentChange: d,
                                },
                                y.createElement(
                                    zoe,
                                    {
                                        scope: t,
                                        contentId: yi(),
                                        triggerId: yi(),
                                        trigger: s,
                                        onTriggerChange: l,
                                    },
                                    n
                                )
                            )
                        )
                );
            },
            Yg = "MenuSubTrigger",
            Ooe = y.forwardRef((e, t) => {
                const n = wa(Yg, e.__scopeMenu),
                    r = Zu(Yg, e.__scopeMenu),
                    o = D9(Yg, e.__scopeMenu),
                    i = Qx(Yg, e.__scopeMenu),
                    a = y.useRef(null),
                    {pointerGraceTimerRef: s, onPointerGraceIntentChange: l} = i,
                    c = {__scopeMenu: e.__scopeMenu},
                    d = y.useCallback(() => {
                        a.current && window.clearTimeout(a.current),
                            (a.current = null);
                    }, []);
                return (
                    y.useEffect(() => d, [d]),
                        y.useEffect(() => {
                            const u = s.current;
                            return () => {
                                window.clearTimeout(u), l(null);
                            };
                        }, [s, l]),
                        y.createElement(
                            I9,
                            J({asChild: !0}, c),
                            y.createElement(
                                z9,
                                J(
                                    {
                                        id: o.triggerId,
                                        "aria-haspopup": "menu",
                                        "aria-expanded": n.open,
                                        "aria-controls": o.contentId,
                                        "data-state": L9(n.open),
                                    },
                                    e,
                                    {
                                        ref: cg(t, o.onTriggerChange),
                                        onClick: (u) => {
                                            var h;
                                            (h = e.onClick) === null ||
                                            h === void 0 ||
                                            h.call(e, u),
                                            !(e.disabled || u.defaultPrevented) &&
                                            (u.currentTarget.focus(),
                                            n.open || n.onOpenChange(!0));
                                        },
                                        onPointerMove: ae(
                                            e.onPointerMove,
                                            Qu((u) => {
                                                i.onItemEnter(u),
                                                !u.defaultPrevented &&
                                                !e.disabled &&
                                                !n.open &&
                                                !a.current &&
                                                (i.onPointerGraceIntentChange(
                                                    null
                                                ),
                                                    (a.current = window.setTimeout(
                                                        () => {
                                                            n.onOpenChange(!0), d();
                                                        },
                                                        100
                                                    )));
                                            })
                                        ),
                                        onPointerLeave: ae(
                                            e.onPointerLeave,
                                            Qu((u) => {
                                                var h;
                                                d();
                                                const p =
                                                    (h = n.content) === null ||
                                                    h === void 0
                                                        ? void 0
                                                        : h.getBoundingClientRect();
                                                if (p) {
                                                    var m;
                                                    const f =
                                                            (m = n.content) === null ||
                                                            m === void 0
                                                                ? void 0
                                                                : m.dataset.side,
                                                        g = f === "right",
                                                        b = g ? -5 : 5,
                                                        x = p[g ? "left" : "right"],
                                                        S = p[g ? "right" : "left"];
                                                    i.onPointerGraceIntentChange({
                                                        area: [
                                                            {
                                                                x: u.clientX + b,
                                                                y: u.clientY,
                                                            },
                                                            {x, y: p.top},
                                                            {x: S, y: p.top},
                                                            {x: S, y: p.bottom},
                                                            {x, y: p.bottom},
                                                        ],
                                                        side: f,
                                                    }),
                                                        window.clearTimeout(s.current),
                                                        (s.current = window.setTimeout(
                                                            () =>
                                                                i.onPointerGraceIntentChange(
                                                                    null
                                                                ),
                                                            300
                                                        ));
                                                } else {
                                                    if (
                                                        (i.onTriggerLeave(u),
                                                            u.defaultPrevented)
                                                    )
                                                        return;
                                                    i.onPointerGraceIntentChange(null);
                                                }
                                            })
                                        ),
                                        onKeyDown: ae(e.onKeyDown, (u) => {
                                            const h = i.searchRef.current !== "";
                                            if (
                                                !(e.disabled || (h && u.key === " ")) &&
                                                goe[r.dir].includes(u.key)
                                            ) {
                                                var p;
                                                n.onOpenChange(!0),
                                                (p = n.content) === null ||
                                                p === void 0 ||
                                                p.focus(),
                                                    u.preventDefault();
                                            }
                                        }),
                                    }
                                )
                            )
                        )
                );
            }),
            Doe = "MenuSubContent",
            Loe = y.forwardRef((e, t) => {
                const n = $9(oo, e.__scopeMenu),
                    {forceMount: r = n.forceMount, ...o} = e,
                    i = wa(oo, e.__scopeMenu),
                    a = Zu(oo, e.__scopeMenu),
                    s = D9(Doe, e.__scopeMenu),
                    l = y.useRef(null),
                    c = Ze(t, l);
                return y.createElement(
                    qu.Provider,
                    {scope: e.__scopeMenu},
                    y.createElement(
                        to,
                        {present: r || i.open},
                        y.createElement(
                            qu.Slot,
                            {scope: e.__scopeMenu},
                            y.createElement(
                                Jx,
                                J(
                                    {
                                        id: s.contentId,
                                        "aria-labelledby": s.triggerId,
                                    },
                                    o,
                                    {
                                        ref: c,
                                        align: "start",
                                        side: a.dir === "rtl" ? "left" : "right",
                                        disableOutsidePointerEvents: !1,
                                        disableOutsideScroll: !1,
                                        trapFocus: !1,
                                        onOpenAutoFocus: (d) => {
                                            var u;
                                            a.isUsingKeyboardRef.current &&
                                            ((u = l.current) === null ||
                                                u === void 0 ||
                                                u.focus()),
                                                d.preventDefault();
                                        },
                                        onCloseAutoFocus: (d) => d.preventDefault(),
                                        onFocusOutside: ae(
                                            e.onFocusOutside,
                                            (d) => {
                                                d.target !== s.trigger &&
                                                i.onOpenChange(!1);
                                            }
                                        ),
                                        onEscapeKeyDown: ae(
                                            e.onEscapeKeyDown,
                                            (d) => {
                                                a.onClose(), d.preventDefault();
                                            }
                                        ),
                                        onKeyDown: ae(e.onKeyDown, (d) => {
                                            const u = d.currentTarget.contains(
                                                    d.target
                                                ),
                                                h = voe[a.dir].includes(d.key);
                                            if (u && h) {
                                                var p;
                                                i.onOpenChange(!1),
                                                (p = s.trigger) === null ||
                                                p === void 0 ||
                                                p.focus(),
                                                    d.preventDefault();
                                            }
                                        }),
                                    }
                                )
                            )
                        )
                    )
                );
            });
        function L9(e) {
            return e ? "open" : "closed";
        }
        function Gg(e) {
            return e === "indeterminate";
        }
        function j9(e) {
            return Gg(e) ? "indeterminate" : e ? "checked" : "unchecked";
        }
        function joe(e) {
            const t = document.activeElement;
            for (const n of e)
                if (n === t || (n.focus(), document.activeElement !== t)) return;
        }
        function Noe(e, t) {
            return e.map((n, r) => e[(t + r) % e.length]);
        }
        function Foe(e, t, n) {
            const o =
                    t.length > 1 && Array.from(t).every((c) => c === t[0])
                        ? t[0]
                        : t,
                i = n ? e.indexOf(n) : -1;
            let a = Noe(e, Math.max(i, 0));
            o.length === 1 && (a = a.filter((c) => c !== n));
            const l = a.find((c) => c.toLowerCase().startsWith(o.toLowerCase()));
            return l !== n ? l : void 0;
        }
        function Boe(e, t) {
            const {x: n, y: r} = e;
            let o = !1;
            for (let i = 0, a = t.length - 1; i < t.length; a = i++) {
                const s = t[i].x,
                    l = t[i].y,
                    c = t[a].x,
                    d = t[a].y;
                l > r != d > r && n < ((c - s) * (r - l)) / (d - l) + s && (o = !o);
            }
            return o;
        }
        function Uoe(e, t) {
            if (!t) return !1;
            const n = {x: e.clientX, y: e.clientY};
            return Boe(n, t);
        }
        function Qu(e) {
            return (t) => (t.pointerType === "mouse" ? e(t) : void 0);
        }
        const N9 = xoe,
            F9 = I9,
            B9 = _oe,
            U9 = Coe,
            H9 = Ioe,
            V9 = M9,
            K9 = Toe,
            Hoe = Moe,
            W9 = Roe,
            Y9 = Ooe,
            G9 = Loe,
            X9 = "DropdownMenu",
            [Voe, sme] = Po(X9, [Kg]),
            io = Kg(),
            [Koe, q9] = Voe(X9),
            Woe = (e) => {
                const {
                        __scopeDropdownMenu: t,
                        children: n,
                        dir: r,
                        open: o,
                        defaultOpen: i,
                        onOpenChange: a,
                        modal: s = !0,
                    } = e,
                    l = io(t),
                    c = y.useRef(null),
                    [d = !1, u] = ga({prop: o, defaultProp: i, onChange: a});
                return y.createElement(
                    Koe,
                    {
                        scope: t,
                        triggerId: yi(),
                        triggerRef: c,
                        contentId: yi(),
                        open: d,
                        onOpenChange: u,
                        onOpenToggle: y.useCallback(() => u((h) => !h), [u]),
                        modal: s,
                    },
                    y.createElement(
                        N9,
                        J({}, l, {open: d, onOpenChange: u, dir: r, modal: s}),
                        n
                    )
                );
            },
            Yoe = "DropdownMenuTrigger",
            Goe = y.forwardRef((e, t) => {
                const {__scopeDropdownMenu: n, disabled: r = !1, ...o} = e,
                    i = q9(Yoe, n),
                    a = io(n);
                return y.createElement(
                    F9,
                    J({asChild: !0}, a),
                    y.createElement(
                        De.button,
                        J(
                            {
                                type: "button",
                                id: i.triggerId,
                                "aria-haspopup": "menu",
                                "aria-expanded": i.open,
                                "aria-controls": i.open ? i.contentId : void 0,
                                "data-state": i.open ? "open" : "closed",
                                "data-disabled": r ? "" : void 0,
                                disabled: r,
                            },
                            o,
                            {
                                ref: cg(t, i.triggerRef),
                                onPointerDown: ae(e.onPointerDown, (s) => {
                                    !r &&
                                    s.button === 0 &&
                                    s.ctrlKey === !1 &&
                                    (i.onOpenToggle(),
                                    i.open || s.preventDefault());
                                }),
                                onKeyDown: ae(e.onKeyDown, (s) => {
                                    r ||
                                    (["Enter", " "].includes(s.key) &&
                                    i.onOpenToggle(),
                                    s.key === "ArrowDown" && i.onOpenChange(!0),
                                    ["Enter", " ", "ArrowDown"].includes(
                                        s.key
                                    ) && s.preventDefault());
                                }),
                            }
                        )
                    )
                );
            }),
            Xoe = (e) => {
                const {__scopeDropdownMenu: t, ...n} = e,
                    r = io(t);
                return y.createElement(B9, J({}, r, n));
            },
            qoe = "DropdownMenuContent",
            Zoe = y.forwardRef((e, t) => {
                const {__scopeDropdownMenu: n, ...r} = e,
                    o = q9(qoe, n),
                    i = io(n),
                    a = y.useRef(!1);
                return y.createElement(
                    U9,
                    J({id: o.contentId, "aria-labelledby": o.triggerId}, i, r, {
                        ref: t,
                        onCloseAutoFocus: ae(e.onCloseAutoFocus, (s) => {
                            var l;
                            a.current ||
                            (l = o.triggerRef.current) === null ||
                            l === void 0 ||
                            l.focus(),
                                (a.current = !1),
                                s.preventDefault();
                        }),
                        onInteractOutside: ae(e.onInteractOutside, (s) => {
                            const l = s.detail.originalEvent,
                                c = l.button === 0 && l.ctrlKey === !0,
                                d = l.button === 2 || c;
                            (!o.modal || d) && (a.current = !0);
                        }),
                        style: {
                            ...e.style,
                            "--radix-dropdown-menu-content-transform-origin":
                                "var(--radix-popper-transform-origin)",
                            "--radix-dropdown-menu-content-available-width":
                                "var(--radix-popper-available-width)",
                            "--radix-dropdown-menu-content-available-height":
                                "var(--radix-popper-available-height)",
                            "--radix-dropdown-menu-trigger-width":
                                "var(--radix-popper-anchor-width)",
                            "--radix-dropdown-menu-trigger-height":
                                "var(--radix-popper-anchor-height)",
                        },
                    })
                );
            }),
            Qoe = y.forwardRef((e, t) => {
                const {__scopeDropdownMenu: n, ...r} = e,
                    o = io(n);
                return y.createElement(H9, J({}, o, r, {ref: t}));
            }),
            Joe = y.forwardRef((e, t) => {
                const {__scopeDropdownMenu: n, ...r} = e,
                    o = io(n);
                return y.createElement(V9, J({}, o, r, {ref: t}));
            }),
            eie = y.forwardRef((e, t) => {
                const {__scopeDropdownMenu: n, ...r} = e,
                    o = io(n);
                return y.createElement(K9, J({}, o, r, {ref: t}));
            }),
            tie = y.forwardRef((e, t) => {
                const {__scopeDropdownMenu: n, ...r} = e,
                    o = io(n);
                return y.createElement(Hoe, J({}, o, r, {ref: t}));
            }),
            nie = (e) => {
                const {
                        __scopeDropdownMenu: t,
                        children: n,
                        open: r,
                        onOpenChange: o,
                        defaultOpen: i,
                    } = e,
                    a = io(t),
                    [s = !1, l] = ga({prop: r, defaultProp: i, onChange: o});
                return y.createElement(W9, J({}, a, {open: s, onOpenChange: l}), n);
            },
            rie = y.forwardRef((e, t) => {
                const {__scopeDropdownMenu: n, ...r} = e,
                    o = io(n);
                return y.createElement(Y9, J({}, o, r, {ref: t}));
            }),
            oie = y.forwardRef((e, t) => {
                const {__scopeDropdownMenu: n, ...r} = e,
                    o = io(n);
                return y.createElement(
                    G9,
                    J({}, o, r, {
                        ref: t,
                        style: {
                            ...e.style,
                            "--radix-dropdown-menu-content-transform-origin":
                                "var(--radix-popper-transform-origin)",
                            "--radix-dropdown-menu-content-available-width":
                                "var(--radix-popper-available-width)",
                            "--radix-dropdown-menu-content-available-height":
                                "var(--radix-popper-available-height)",
                            "--radix-dropdown-menu-trigger-width":
                                "var(--radix-popper-anchor-width)",
                            "--radix-dropdown-menu-trigger-height":
                                "var(--radix-popper-anchor-height)",
                        },
                    })
                );
            }),
            Z9 = Woe,
            Ju = Goe,
            tS = Xoe,
            Q9 = Zoe,
            iie = Qoe,
            kc = Joe,
            J9 = eie,
            aie = tie,
            sie = nie,
            lie = rie,
            cie = oie;
        function Ss(e, t) {
            const n = W(),
                r = y.useRef(!1),
                o = vc(),
                i = y.useRef(0),
                a = y.useCallback(
                    (l) => {
                        const c = Date.now();
                        c - i.current < 50 ||
                        ((i.current = c),
                            (r.current = l),
                            n.batch(() => {
                                l
                                    ? (n.complete(), n.addOpenMenu(e))
                                    : n.updateInstanceState({
                                        openMenus: n
                                            .getOpenMenus()
                                            .filter((d) => !d.startsWith(e)),
                                    }),
                                t == null || t(l);
                            }));
                    },
                    [n, e, t]
                ),
                s = X("is menu open", () => n.getOpenMenus().includes(e), [n, e]);
            return (
                y.useEffect(
                    () => (
                        r.current &&
                        (o("open-menu", {source: "unknown", id: e}),
                            n.addOpenMenu(e)),
                            () => {
                                r.current &&
                                (n.deleteOpenMenu(e),
                                    n.getOpenMenus().forEach((l) => {
                                        l.startsWith(e) &&
                                        (o("close-menu", {
                                            source: "unknown",
                                            id: e,
                                        }),
                                            n.deleteOpenMenu(l));
                                    }),
                                    (r.current = !1));
                            }
                    ),
                    [n, e, o]
                ),
                    [s, a]
            );
        }
        function xa({id: e, children: t, modal: n = !1, debugOpen: r = !1}) {
            const [o, i] = Ss(e);
            return v.jsx(Z9, {
                open: r || o,
                dir: "ltr",
                modal: n,
                onOpenChange: i,
                children: t,
            });
        }
        function eh({children: e, "data-testid": t}) {
            return v.jsx(Ju, {
                dir: "ltr",
                "data-testid": t,
                asChild: !0,
                onTouchEnd: (n) => $e(n),
                children: e,
            });
        }
        function Sa({
                        side: e = "bottom",
                        align: t = "start",
                        sideOffset: n = 8,
                        alignOffset: r = 8,
                        children: o,
                    }) {
            const i = dn();
            return v.jsx(tS, {
                container: i,
                children: v.jsx(Q9, {
                    className: "tlui-menu",
                    align: t,
                    sideOffset: n,
                    side: e,
                    alignOffset: r,
                    collisionPadding: 4,
                    children: o,
                }),
            });
        }
        function nS({id: e, children: t}) {
            const [n, r] = Ss(e);
            return v.jsx(sie, {open: n, onOpenChange: r, children: t});
        }
        function rS({label: e, "data-testid": t, "data-direction": n}) {
            return v.jsx(lie, {
                dir: "ltr",
                "data-direction": n,
                "data-testid": t,
                asChild: !0,
                children: v.jsx(se, {
                    type: "menu",
                    className: "tlui-menu__submenu__trigger",
                    label: e,
                    icon: "chevron-right",
                }),
            });
        }
        function oS({alignOffset: e = 0, sideOffset: t = 5, children: n}) {
            const r = dn();
            return v.jsx(tS, {
                container: r,
                children: v.jsx(cie, {
                    className: "tlui-menu tlui-menu__submenu__content",
                    alignOffset: e,
                    sideOffset: t,
                    collisionPadding: 4,
                    children: n,
                }),
            });
        }
        function Si({children: e, size: t = "medium"}) {
            return v.jsx(iie, {
                dir: "ltr",
                className: "tlui-menu__group",
                "data-size": t,
                children: e,
            });
        }
        function pr({noClose: e, ...t}) {
            return v.jsx(kc, {
                dir: "ltr",
                asChild: !0,
                onClick: e || t.isChecked !== void 0 ? $e : void 0,
                children: v.jsx(se, {...t}),
            });
        }
        function eT({children: e, onSelect: t, ...n}) {
            return v.jsxs(J9, {
                dir: "ltr",
                className: "tlui-button tlui-button__menu tlui-button__checkbox",
                onSelect: (r) => {
                    t == null || t(r), $e(r);
                },
                ...n,
                children: [
                    v.jsx(ur, {
                        small: !0,
                        icon: n.checked ? "check" : "checkbox-empty",
                    }),
                    e,
                ],
            });
        }
        function die({children: e, onSelect: t, ...n}) {
            return v.jsxs(J9, {
                dir: "ltr",
                className: "tlui-button tlui-button__menu tlui-button__checkbox",
                onSelect: (r) => {
                    t == null || t(r), $e(r);
                },
                ...n,
                children: [
                    v.jsx("div", {
                        className: "tlui-button__checkbox__indicator",
                        children: v.jsx(aie, {
                            dir: "ltr",
                            children: v.jsx(ur, {icon: "check", small: !0}),
                        }),
                    }),
                    e,
                ],
            });
        }
        let tT = 0;
        function uie(e, t) {
            const n = Array(t),
                r = Math.floor(Math.sqrt(t));
            for (let o = 0; o < t; o++)
                tT++,
                    (n[o] = {
                        id: Ge("box" + tT),
                        type: "geo",
                        x: (o % r) * 132,
                        y: Math.floor(o / r) * 132,
                    });
            e.batch(() => {
                e.createShapes(n).setSelectedShapes(n.map((o) => o.id));
            });
        }
        const hie = y.memo(function ({renderDebugMenuItems: t}) {
                const n = Ee();
                return v.jsxs("div", {
                    className: "tlui-debug-panel",
                    children: [
                        v.jsx(pie, {}),
                        v.jsx(fie, {}),
                        v.jsxs(xa, {
                            id: "debug",
                            children: [
                                v.jsx(eh, {
                                    children: v.jsx(se, {
                                        type: "icon",
                                        icon: "dots-horizontal",
                                        title: n("debug-panel.more"),
                                    }),
                                }),
                                v.jsx(Sa, {
                                    side: "top",
                                    align: "end",
                                    alignOffset: 0,
                                    children: v.jsx(mie, {renderDebugMenuItems: t}),
                                }),
                            ],
                        }),
                    ],
                });
            }),
            pie = ze(function () {
                const t = W();
                return v.jsx("div", {
                    className: "tlui-debug-panel__current-state",
                    children: t.getPath(),
                });
            }),
            fie = function () {
                const t = W(),
                    n = X(
                        "rendering shapes count",
                        () => t.getRenderingShapes().length,
                        [t]
                    );
                return v.jsxs("div", {children: [n, " Shapes"]});
            },
            mie = ze(function ({renderDebugMenuItems: t}) {
                const n = W(),
                    {addToast: r} = $o(),
                    {addDialog: o} = bs(),
                    [i, a] = y.useState(!1);
                return v.jsxs(v.Fragment, {
                    children: [
                        v.jsxs(Si, {
                            children: [
                                v.jsx(pr, {
                                    type: "menu",
                                    onClick: () => {
                                        r({
                                            id: He(),
                                            title: "Something happened",
                                            description:
                                                "Hey, attend to this thing over here. It might be important!",
                                            keepOpen: !0,
                                        }),
                                            r({
                                                id: He(),
                                                title: "Something happened",
                                                description:
                                                    "Hey, attend to this thing over here. It might be important!",
                                                keepOpen: !0,
                                                actions: [
                                                    {
                                                        label: "Primary",
                                                        type: "primary",
                                                        onClick: () => {},
                                                    },
                                                    {
                                                        label: "Normal",
                                                        type: "normal",
                                                        onClick: () => {},
                                                    },
                                                    {
                                                        label: "Danger",
                                                        type: "danger",
                                                        onClick: () => {},
                                                    },
                                                ],
                                            }),
                                            r({
                                                id: He(),
                                                title: "Something happened",
                                                description:
                                                    "Hey, attend to this thing over here. It might be important!",
                                                keepOpen: !0,
                                                icon: "twitter",
                                                actions: [
                                                    {
                                                        label: "Primary",
                                                        type: "primary",
                                                        onClick: () => {},
                                                    },
                                                    {
                                                        label: "Normal",
                                                        type: "normal",
                                                        onClick: () => {},
                                                    },
                                                    {
                                                        label: "Danger",
                                                        type: "danger",
                                                        onClick: () => {},
                                                    },
                                                ],
                                            });
                                    },
                                    label: "Show toast",
                                }),
                                v.jsx(pr, {
                                    type: "menu",
                                    onClick: () => {
                                        o({
                                            component: ({onClose: s}) =>
                                                v.jsx(vie, {
                                                    displayDontShowAgain: !0,
                                                    onCancel: () => {
                                                        s();
                                                    },
                                                    onContinue: () => {
                                                        s();
                                                    },
                                                }),
                                            onClose: () => {},
                                        });
                                    },
                                    label: "Show dialog",
                                }),
                                v.jsx(pr, {
                                    type: "menu",
                                    onClick: () => uie(n, 100),
                                    label: "Create 100 shapes",
                                }),
                                v.jsx(pr, {
                                    type: "menu",
                                    onClick: () => {
                                        function s({children: h}) {
                                            let p = 0;
                                            if (!h.length) return 0;
                                            for (const m of [...h])
                                                p++, (p += s(m));
                                            return p;
                                        }
                                        const l = n.getSelectedShapes(),
                                            c =
                                                l.length === 0
                                                    ? n.getRenderingShapes()
                                                    : l,
                                            d = c.map(
                                                (h) =>
                                                    document.getElementById(h.id)
                                                        .parentElement
                                            );
                                        let u = d.length;
                                        for (const h of d) u += s(h);
                                        window.alert(
                                            `Shapes ${c.length}, DOM nodes:${u}`
                                        );
                                    },
                                    label: "Count shapes / nodes",
                                }),
                                (() => {
                                    if (i) throw Error("oh no!");
                                })(),
                                v.jsx(pr, {
                                    type: "menu",
                                    onClick: () => {
                                        a(!0);
                                    },
                                    label: "Throw error",
                                }),
                                v.jsx(pr, {
                                    type: "menu",
                                    onClick: () => {
                                        KC();
                                    },
                                    label: "Hard reset",
                                }),
                            ],
                        }),
                        v.jsxs(Si, {
                            children: [
                                v.jsx(th, {flag: Xe.debugSvg}),
                                v.jsx(th, {flag: Xe.forceSrgb}),
                                v.jsx(th, {flag: Xe.debugGeometry}),
                                v.jsx(th, {flag: Xe.hideShapes}),
                            ],
                        }),
                        v.jsx(Si, {
                            children: Object.values(XL).map((s) =>
                                v.jsx(th, {flag: s}, s.name)
                            ),
                        }),
                        t == null ? void 0 : t(),
                    ],
                });
            });
        function gie({label: e, value: t, onChange: n}) {
            return v.jsx(eT, {
                title: e,
                checked: t,
                onSelect: () => n(!t),
                children: v.jsx("span", {
                    className: "tlui-button__label",
                    draggable: !1,
                    children: e,
                }),
            });
        }
        const th = ze(function ({flag: t, onChange: n}) {
            return v.jsx(gie, {
                label: t.name
                    .replace(
                        /([a-z0-9])([A-Z])/g,
                        (r) => `${r[0]} ${r[1].toLowerCase()}`
                    )
                    .replace(/^[a-z]/, (r) => r.toUpperCase()),
                value: t.get(),
                onChange: (r) => {
                    t.set(r), n == null || n(r);
                },
            });
        });
        function vie({
                         title: e = "title",
                         body: t = "hello hello hello",
                         cancel: n = "Cancel",
                         confirm: r = "Continue",
                         displayDontShowAgain: o = !1,
                         onCancel: i,
                         onContinue: a,
                     }) {
            const [s, l] = y.useState(!1);
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsxs(Cg, {
                        children: [v.jsx(Eg, {children: e}), v.jsx(Pg, {})],
                    }),
                    v.jsx(Ku, {style: {maxWidth: 350}, children: t}),
                    v.jsxs(Sx, {
                        className: "tlui-dialog__footer__actions",
                        children: [
                            o &&
                            v.jsx(se, {
                                type: "normal",
                                onClick: () => l(!s),
                                iconLeft: s ? "check" : "checkbox-empty",
                                style: {marginRight: "auto"},
                                children: "Don't show again",
                            }),
                            v.jsx(se, {type: "normal", onClick: i, children: n}),
                            v.jsx(se, {
                                type: "primary",
                                onClick: async () => a(),
                                children: r,
                            }),
                        ],
                    }),
                ],
            });
        }
        const bie = ({id: e, component: t, onClose: n}) => {
            const {removeDialog: r} = bs(),
                o = dn(),
                i = y.useCallback(
                    (a) => {
                        if (!a) {
                            if (n)
                                try {
                                    n();
                                } catch (s) {
                                    console.warn(s);
                                }
                            r(e);
                        }
                    },
                    [e, n, r]
                );
            return v.jsx(Mte, {
                onOpenChange: i,
                defaultOpen: !0,
                children: v.jsx(zte, {
                    container: o,
                    children: v.jsx(Rte, {
                        dir: "ltr",
                        className: "tlui-dialog__overlay",
                        children: v.jsx(Ote, {
                            dir: "ltr",
                            className: "tlui-dialog__content",
                            children: v.jsx(t, {onClose: () => i(!1)}),
                        }),
                    }),
                }),
            });
        };
        function yie() {
            const {dialogs: e} = bs();
            return v.jsx(v.Fragment, {
                children: e.map((t) => v.jsx(bie, {...t}, t.id)),
            });
        }
        const wie = N.memo(yie);
        function xie() {
            const e = W(),
                t = X("follow", () => e.getInstanceState().followingUserId, [e]);
            return t ? v.jsx(Sie, {userId: t}) : null;
        }
        function Sie({userId: e}) {
            const t = T4(e);
            return t
                ? v.jsx("div", {
                    className: "tlui-following-indicator",
                    style: {borderColor: t.color},
                })
                : null;
        }
        function nT() {
            const e = W(),
                {languages: t, currentLanguage: n} = C7(),
                r = y.useCallback(
                    (o) => e.user.updateUserPreferences({locale: o}),
                    [e]
                );
            return v.jsxs(nS, {
                id: "help menu language",
                children: [
                    v.jsx(rS, {label: "menu.language", "data-direction": "left"}),
                    v.jsx(oS, {
                        sideOffset: -4,
                        children: v.jsx(Si, {
                            children: t.map(({locale: o, label: i}) =>
                                v.jsx(
                                    die,
                                    {
                                        title: o,
                                        checked: o === n,
                                        onSelect: () => r(o),
                                        children: v.jsx("span", {
                                            className: "tlui-button__label",
                                            children: i,
                                        }),
                                    },
                                    o
                                )
                            ),
                        }),
                    }),
                ],
            });
        }
        const _ie = y.memo(function () {
            const t = dn(),
                n = Ee(),
                [r, o] = Ss("help menu");
            return v.jsx("div", {
                className: "tlui-help-menu",
                children: v.jsxs(Z9, {
                    dir: "ltr",
                    open: r,
                    onOpenChange: o,
                    modal: !1,
                    children: [
                        v.jsx(Ju, {
                            asChild: !0,
                            dir: "ltr",
                            children: v.jsx(se, {
                                type: "help",
                                className: "tlui-button",
                                smallIcon: !0,
                                title: n("help-menu.title"),
                                icon: "question-mark",
                            }),
                        }),
                        v.jsx(tS, {
                            container: t,
                            children: v.jsx(Q9, {
                                className: "tlui-menu",
                                side: "top",
                                sideOffset: 8,
                                align: "end",
                                alignOffset: 0,
                                collisionPadding: 4,
                                children: v.jsx(kie, {}),
                            }),
                        }),
                    ],
                }),
            });
        });
        function kie() {
            const e = $ne(),
                t = Pr();
            function n(r) {
                if (!r || (t && !r.readonlyOk)) return null;
                switch (r.type) {
                    case "custom": {
                        if (r.id === "LANGUAGE_MENU") return v.jsx(nT, {}, "item");
                        break;
                    }
                    case "group":
                        return v.jsx(
                            Si,
                            {size: "small", children: r.children.map(n)},
                            r.id
                        );
                    case "submenu":
                        return v.jsxs(
                            nS,
                            {
                                id: `help menu ${r.id}`,
                                children: [
                                    v.jsx(rS, {label: r.label}),
                                    v.jsx(oS, {children: r.children.map(n)}),
                                ],
                            },
                            r.id
                        );
                    case "item": {
                        const {
                            id: o,
                            kbd: i,
                            label: a,
                            onSelect: s,
                            icon: l,
                        } = r.actionItem;
                        return v.jsx(
                            pr,
                            {
                                type: "menu",
                                kbd: i,
                                label: a,
                                onClick: () => s("help-menu"),
                                iconLeft: l,
                            },
                            o
                        );
                    }
                }
            }
            return v.jsx(v.Fragment, {children: e.map(n)});
        }
        var rT = px(),
            iS = function () {},
            Xg = y.forwardRef(function (e, t) {
                var n = y.useRef(null),
                    r = y.useState({
                        onScrollCapture: iS,
                        onWheelCapture: iS,
                        onTouchMoveCapture: iS,
                    }),
                    o = r[0],
                    i = r[1],
                    a = e.forwardProps,
                    s = e.children,
                    l = e.className,
                    c = e.removeScrollBar,
                    d = e.enabled,
                    u = e.shards,
                    h = e.sideCar,
                    p = e.noIsolation,
                    m = e.inert,
                    f = e.allowPinchZoom,
                    g = e.as,
                    b = g === void 0 ? "div" : g,
                    x = bg(e, [
                        "forwardProps",
                        "children",
                        "className",
                        "removeScrollBar",
                        "enabled",
                        "shards",
                        "sideCar",
                        "noIsolation",
                        "inert",
                        "allowPinchZoom",
                        "as",
                    ]),
                    S = h,
                    _ = hx([n, t]),
                    k = yt(yt({}, x), o);
                return y.createElement(
                    y.Fragment,
                    null,
                    d &&
                    y.createElement(S, {
                        sideCar: rT,
                        removeScrollBar: c,
                        shards: u,
                        noIsolation: p,
                        inert: m,
                        setCallbacks: i,
                        allowPinchZoom: !!f,
                        lockRef: n,
                    }),
                    a
                        ? y.cloneElement(
                            y.Children.only(s),
                            yt(yt({}, k), {ref: _})
                        )
                        : y.createElement(b, yt({}, k, {className: l, ref: _}), s)
                );
            });
        (Xg.defaultProps = {enabled: !0, removeScrollBar: !0, inert: !1}),
            (Xg.classNames = {fullWidth: hc, zeroRight: uc});
        var aS = !1;
        if (typeof window < "u")
            try {
                var qg = Object.defineProperty({}, "passive", {
                    get: function () {
                        return (aS = !0), !0;
                    },
                });
                window.addEventListener("test", qg, qg),
                    window.removeEventListener("test", qg, qg);
            } catch {
                aS = !1;
            }
        var Cc = aS ? {passive: !1} : !1,
            Cie = function (e) {
                return e.tagName === "TEXTAREA";
            },
            oT = function (e, t) {
                var n = window.getComputedStyle(e);
                return (
                    n[t] !== "hidden" &&
                    !(n.overflowY === n.overflowX && !Cie(e) && n[t] === "visible")
                );
            },
            Eie = function (e) {
                return oT(e, "overflowY");
            },
            Pie = function (e) {
                return oT(e, "overflowX");
            },
            iT = function (e, t) {
                var n = t;
                do {
                    typeof ShadowRoot < "u" &&
                    n instanceof ShadowRoot &&
                    (n = n.host);
                    var r = aT(e, n);
                    if (r) {
                        var o = sT(e, n),
                            i = o[1],
                            a = o[2];
                        if (i > a) return !0;
                    }
                    n = n.parentNode;
                } while (n && n !== document.body);
                return !1;
            },
            Iie = function (e) {
                var t = e.scrollTop,
                    n = e.scrollHeight,
                    r = e.clientHeight;
                return [t, n, r];
            },
            Tie = function (e) {
                var t = e.scrollLeft,
                    n = e.scrollWidth,
                    r = e.clientWidth;
                return [t, n, r];
            },
            aT = function (e, t) {
                return e === "v" ? Eie(t) : Pie(t);
            },
            sT = function (e, t) {
                return e === "v" ? Iie(t) : Tie(t);
            },
            $ie = function (e, t) {
                return e === "h" && t === "rtl" ? -1 : 1;
            },
            Aie = function (e, t, n, r, o) {
                var i = $ie(e, window.getComputedStyle(t).direction),
                    a = i * r,
                    s = n.target,
                    l = t.contains(s),
                    c = !1,
                    d = a > 0,
                    u = 0,
                    h = 0;
                do {
                    var p = sT(e, s),
                        m = p[0],
                        f = p[1],
                        g = p[2],
                        b = f - g - i * m;
                    (m || b) && aT(e, s) && ((u += b), (h += m)),
                        (s = s.parentNode);
                } while (
                    (!l && s !== document.body) ||
                    (l && (t.contains(s) || t === s))
                    );
                return (
                    ((d && ((o && u === 0) || (!o && a > u))) ||
                        (!d && ((o && h === 0) || (!o && -a > h)))) &&
                    (c = !0),
                        c
                );
            },
            Zg = function (e) {
                return "changedTouches" in e
                    ? [e.changedTouches[0].clientX, e.changedTouches[0].clientY]
                    : [0, 0];
            },
            lT = function (e) {
                return [e.deltaX, e.deltaY];
            },
            cT = function (e) {
                return e && "current" in e ? e.current : e;
            },
            Mie = function (e, t) {
                return e[0] === t[0] && e[1] === t[1];
            },
            zie = function (e) {
                return `
  .block-interactivity-`
                    .concat(
                        e,
                        ` {pointer-events: none;}
  .allow-interactivity-`
                    )
                    .concat(
                        e,
                        ` {pointer-events: all;}
`
                    );
            },
            Rie = 0,
            Ec = [];
        function Oie(e) {
            var t = y.useRef([]),
                n = y.useRef([0, 0]),
                r = y.useRef(),
                o = y.useState(Rie++)[0],
                i = y.useState(function () {
                    return wg();
                })[0],
                a = y.useRef(e);
            y.useEffect(
                function () {
                    a.current = e;
                },
                [e]
            ),
                y.useEffect(
                    function () {
                        if (e.inert) {
                            document.body.classList.add(
                                "block-interactivity-".concat(o)
                            );
                            var f = dx(
                                [e.lockRef.current],
                                (e.shards || []).map(cT),
                                !0
                            ).filter(Boolean);
                            return (
                                f.forEach(function (g) {
                                    return g.classList.add(
                                        "allow-interactivity-".concat(o)
                                    );
                                }),
                                    function () {
                                        document.body.classList.remove(
                                            "block-interactivity-".concat(o)
                                        ),
                                            f.forEach(function (g) {
                                                return g.classList.remove(
                                                    "allow-interactivity-".concat(o)
                                                );
                                            });
                                    }
                            );
                        }
                    },
                    [e.inert, e.lockRef.current, e.shards]
                );
            var s = y.useCallback(function (f, g) {
                    if ("touches" in f && f.touches.length === 2)
                        return !a.current.allowPinchZoom;
                    var b = Zg(f),
                        x = n.current,
                        S = "deltaX" in f ? f.deltaX : x[0] - b[0],
                        _ = "deltaY" in f ? f.deltaY : x[1] - b[1],
                        k,
                        C = f.target,
                        P = Math.abs(S) > Math.abs(_) ? "h" : "v";
                    if ("touches" in f && P === "h" && C.type === "range")
                        return !1;
                    var I = iT(P, C);
                    if (!I) return !0;
                    if (
                        (I
                            ? (k = P)
                            : ((k = P === "v" ? "h" : "v"), (I = iT(P, C))),
                            !I)
                    )
                        return !1;
                    if (
                        (!r.current &&
                        "changedTouches" in f &&
                        (S || _) &&
                        (r.current = k),
                            !k)
                    )
                        return !0;
                    var $ = r.current || k;
                    return Aie($, g, f, $ === "h" ? S : _, !0);
                }, []),
                l = y.useCallback(function (f) {
                    var g = f;
                    if (!(!Ec.length || Ec[Ec.length - 1] !== i)) {
                        var b = "deltaY" in g ? lT(g) : Zg(g),
                            x = t.current.filter(function (k) {
                                return (
                                    k.name === g.type &&
                                    k.target === g.target &&
                                    Mie(k.delta, b)
                                );
                            })[0];
                        if (x && x.should) {
                            g.cancelable && g.preventDefault();
                            return;
                        }
                        if (!x) {
                            var S = (a.current.shards || [])
                                    .map(cT)
                                    .filter(Boolean)
                                    .filter(function (k) {
                                        return k.contains(g.target);
                                    }),
                                _ =
                                    S.length > 0
                                        ? s(g, S[0])
                                        : !a.current.noIsolation;
                            _ && g.cancelable && g.preventDefault();
                        }
                    }
                }, []),
                c = y.useCallback(function (f, g, b, x) {
                    var S = {name: f, delta: g, target: b, should: x};
                    t.current.push(S),
                        setTimeout(function () {
                            t.current = t.current.filter(function (_) {
                                return _ !== S;
                            });
                        }, 1);
                }, []),
                d = y.useCallback(function (f) {
                    (n.current = Zg(f)), (r.current = void 0);
                }, []),
                u = y.useCallback(function (f) {
                    c(f.type, lT(f), f.target, s(f, e.lockRef.current));
                }, []),
                h = y.useCallback(function (f) {
                    c(f.type, Zg(f), f.target, s(f, e.lockRef.current));
                }, []);
            y.useEffect(function () {
                return (
                    Ec.push(i),
                        e.setCallbacks({
                            onScrollCapture: u,
                            onWheelCapture: u,
                            onTouchMoveCapture: h,
                        }),
                        document.addEventListener("wheel", l, Cc),
                        document.addEventListener("touchmove", l, Cc),
                        document.addEventListener("touchstart", d, Cc),
                        function () {
                            (Ec = Ec.filter(function (f) {
                                return f !== i;
                            })),
                                document.removeEventListener("wheel", l, Cc),
                                document.removeEventListener("touchmove", l, Cc),
                                document.removeEventListener("touchstart", d, Cc);
                        }
                );
            }, []);
            var p = e.removeScrollBar,
                m = e.inert;
            return y.createElement(
                y.Fragment,
                null,
                m ? y.createElement(i, {styles: zie(o)}) : null,
                p ? y.createElement(vx, {gapMode: "margin"}) : null
            );
        }
        const Die = fx(rT, Oie);
        var dT = y.forwardRef(function (e, t) {
            return y.createElement(Xg, yt({}, e, {ref: t, sideCar: Die}));
        });
        dT.classNames = Xg.classNames;
        const Lie = dT,
            uT = "Popover",
            [hT, lme] = Po(uT, [Fg]),
            sS = Fg(),
            [jie, Pc] = hT(uT),
            Nie = (e) => {
                const {
                        __scopePopover: t,
                        children: n,
                        open: r,
                        defaultOpen: o,
                        onOpenChange: i,
                        modal: a = !1,
                    } = e,
                    s = sS(t),
                    l = y.useRef(null),
                    [c, d] = y.useState(!1),
                    [u = !1, h] = ga({prop: r, defaultProp: o, onChange: i});
                return y.createElement(
                    Kx,
                    s,
                    y.createElement(
                        jie,
                        {
                            scope: t,
                            contentId: yi(),
                            triggerRef: l,
                            open: u,
                            onOpenChange: h,
                            onOpenToggle: y.useCallback(() => h((p) => !p), [h]),
                            hasCustomAnchor: c,
                            onCustomAnchorAdd: y.useCallback(() => d(!0), []),
                            onCustomAnchorRemove: y.useCallback(() => d(!1), []),
                            modal: a,
                        },
                        n
                    )
                );
            },
            Fie = "PopoverTrigger",
            Bie = y.forwardRef((e, t) => {
                const {__scopePopover: n, ...r} = e,
                    o = Pc(Fie, n),
                    i = sS(n),
                    a = Ze(t, o.triggerRef),
                    s = y.createElement(
                        De.button,
                        J(
                            {
                                type: "button",
                                "aria-haspopup": "dialog",
                                "aria-expanded": o.open,
                                "aria-controls": o.contentId,
                                "data-state": mT(o.open),
                            },
                            r,
                            {ref: a, onClick: ae(e.onClick, o.onOpenToggle)}
                        )
                    );
                return o.hasCustomAnchor
                    ? s
                    : y.createElement(h9, J({asChild: !0}, i), s);
            }),
            pT = "PopoverPortal",
            [Uie, Hie] = hT(pT, {forceMount: void 0}),
            Vie = (e) => {
                const {
                        __scopePopover: t,
                        forceMount: n,
                        children: r,
                        container: o,
                    } = e,
                    i = Pc(pT, t);
                return y.createElement(
                    Uie,
                    {scope: t, forceMount: n},
                    y.createElement(
                        to,
                        {present: n || i.open},
                        y.createElement(hg, {asChild: !0, container: o}, r)
                    )
                );
            },
            nh = "PopoverContent",
            Kie = y.forwardRef((e, t) => {
                const n = Hie(nh, e.__scopePopover),
                    {forceMount: r = n.forceMount, ...o} = e,
                    i = Pc(nh, e.__scopePopover);
                return y.createElement(
                    to,
                    {present: r || i.open},
                    i.modal
                        ? y.createElement(Wie, J({}, o, {ref: t}))
                        : y.createElement(Yie, J({}, o, {ref: t}))
                );
            }),
            Wie = y.forwardRef((e, t) => {
                const n = Pc(nh, e.__scopePopover),
                    r = y.useRef(null),
                    o = Ze(t, r),
                    i = y.useRef(!1);
                return (
                    y.useEffect(() => {
                        const a = r.current;
                        if (a) return wx(a);
                    }, []),
                        y.createElement(
                            Lie,
                            {as: ms, allowPinchZoom: !0},
                            y.createElement(
                                fT,
                                J({}, e, {
                                    ref: o,
                                    trapFocus: n.open,
                                    disableOutsidePointerEvents: !0,
                                    onCloseAutoFocus: ae(e.onCloseAutoFocus, (a) => {
                                        var s;
                                        a.preventDefault(),
                                        i.current ||
                                        (s = n.triggerRef.current) === null ||
                                        s === void 0 ||
                                        s.focus();
                                    }),
                                    onPointerDownOutside: ae(
                                        e.onPointerDownOutside,
                                        (a) => {
                                            const s = a.detail.originalEvent,
                                                l = s.button === 0 && s.ctrlKey === !0,
                                                c = s.button === 2 || l;
                                            i.current = c;
                                        },
                                        {checkForDefaultPrevented: !1}
                                    ),
                                    onFocusOutside: ae(
                                        e.onFocusOutside,
                                        (a) => a.preventDefault(),
                                        {checkForDefaultPrevented: !1}
                                    ),
                                })
                            )
                        )
                );
            }),
            Yie = y.forwardRef((e, t) => {
                const n = Pc(nh, e.__scopePopover),
                    r = y.useRef(!1),
                    o = y.useRef(!1);
                return y.createElement(
                    fT,
                    J({}, e, {
                        ref: t,
                        trapFocus: !1,
                        disableOutsidePointerEvents: !1,
                        onCloseAutoFocus: (i) => {
                            var a;
                            if (
                                ((a = e.onCloseAutoFocus) === null ||
                                a === void 0 ||
                                a.call(e, i),
                                    !i.defaultPrevented)
                            ) {
                                var s;
                                r.current ||
                                (s = n.triggerRef.current) === null ||
                                s === void 0 ||
                                s.focus(),
                                    i.preventDefault();
                            }
                            (r.current = !1), (o.current = !1);
                        },
                        onInteractOutside: (i) => {
                            var a, s;
                            (a = e.onInteractOutside) === null ||
                            a === void 0 ||
                            a.call(e, i),
                            i.defaultPrevented ||
                            ((r.current = !0),
                            i.detail.originalEvent.type === "pointerdown" &&
                            (o.current = !0));
                            const l = i.target;
                            ((s = n.triggerRef.current) === null || s === void 0
                                ? void 0
                                : s.contains(l)) && i.preventDefault(),
                            i.detail.originalEvent.type === "focusin" &&
                            o.current &&
                            i.preventDefault();
                        },
                    })
                );
            }),
            fT = y.forwardRef((e, t) => {
                const {
                        __scopePopover: n,
                        trapFocus: r,
                        onOpenAutoFocus: o,
                        onCloseAutoFocus: i,
                        disableOutsidePointerEvents: a,
                        onEscapeKeyDown: s,
                        onPointerDownOutside: l,
                        onFocusOutside: c,
                        onInteractOutside: d,
                        ...u
                    } = e,
                    h = Pc(nh, n),
                    p = sS(n);
                return (
                    cx(),
                        y.createElement(
                            sx,
                            {
                                asChild: !0,
                                loop: !0,
                                trapped: r,
                                onMountAutoFocus: o,
                                onUnmountAutoFocus: i,
                            },
                            y.createElement(
                                ug,
                                {
                                    asChild: !0,
                                    disableOutsidePointerEvents: a,
                                    onInteractOutside: d,
                                    onEscapeKeyDown: s,
                                    onPointerDownOutside: l,
                                    onFocusOutside: c,
                                    onDismiss: () => h.onOpenChange(!1),
                                },
                                y.createElement(
                                    p9,
                                    J(
                                        {
                                            "data-state": mT(h.open),
                                            role: "dialog",
                                            id: h.contentId,
                                        },
                                        p,
                                        u,
                                        {
                                            ref: t,
                                            style: {
                                                ...u.style,
                                                "--radix-popover-content-transform-origin":
                                                    "var(--radix-popper-transform-origin)",
                                                "--radix-popover-content-available-width":
                                                    "var(--radix-popper-available-width)",
                                                "--radix-popover-content-available-height":
                                                    "var(--radix-popper-available-height)",
                                                "--radix-popover-trigger-width":
                                                    "var(--radix-popper-anchor-width)",
                                                "--radix-popover-trigger-height":
                                                    "var(--radix-popper-anchor-height)",
                                            },
                                        }
                                    )
                                )
                            )
                        )
                );
            });
        function mT(e) {
            return e ? "open" : "closed";
        }
        const Gie = Nie,
            Xie = Bie,
            gT = Vie,
            vT = Kie,
            lS = ({id: e, children: t, onOpenChange: n, open: r}) => {
                const [o, i] = Ss(e, n);
                return v.jsx(Gie, {
                    onOpenChange: i,
                    open: r || o,
                    children: v.jsx("div", {
                        className: "tlui-popover",
                        children: t,
                    }),
                });
            },
            cS = ({children: e, disabled: t, "data-testid": n}) =>
                v.jsx(Xie, {
                    "data-testid": n,
                    disabled: t,
                    asChild: !0,
                    dir: "ltr",
                    children: e,
                }),
            bT = ({
                      side: e,
                      children: t,
                      align: n = "center",
                      sideOffset: r = 8,
                      alignOffset: o = 0,
                  }) => {
                const i = dn();
                return v.jsx(gT, {
                    container: i,
                    children: v.jsx(vT, {
                        className: "tlui-popover__content",
                        side: e,
                        sideOffset: r,
                        align: n,
                        alignOffset: o,
                        dir: "ltr",
                        children: t,
                    }),
                });
            },
            yT = y.memo(function () {
                const t = Ee(),
                    n = dn(),
                    r = Sne(),
                    o = Pr();
                function i(a) {
                    if (!a || (o && !a.readonlyOk)) return null;
                    switch (a.type) {
                        case "item": {
                            const {
                                id: s,
                                icon: l,
                                label: c,
                                kbd: d,
                                onSelect: u,
                            } = a.actionItem;
                            return v.jsx(
                                se,
                                {
                                    "data-testid": `menu-item.${a.id}`,
                                    icon: l,
                                    type: "icon",
                                    title: c
                                        ? d
                                            ? `${t(c)} ${Io(d)}`
                                            : `${t(c)}`
                                        : d
                                            ? `${Io(d)}`
                                            : "",
                                    onClick: () => u("actions-menu"),
                                    disabled: a.disabled,
                                },
                                s
                            );
                        }
                    }
                }
                return v.jsxs(lS, {
                    id: "actions-menu",
                    children: [
                        v.jsx(cS, {
                            children: v.jsx(se, {
                                className: "tlui-menu__trigger",
                                "data-testid": "main.action-menu",
                                icon: "dots-vertical",
                                title: t("actions-menu.title"),
                                type: "icon",
                                smallIcon: !0,
                            }),
                        }),
                        v.jsx(gT, {
                            container: n,
                            children: v.jsx(vT, {
                                className: "tlui-popover__content",
                                side: "bottom",
                                dir: "ltr",
                                sideOffset: 6,
                                children: v.jsx("div", {
                                    className:
                                        "tlui-actions-menu tlui-buttons__grid",
                                    children: r.map(i),
                                }),
                            }),
                        }),
                    ],
                });
            }),
            wT = ze(function () {
                const t = W(),
                    n = bn(),
                    r = Ee(),
                    o = n.duplicate;
                return v.jsx(se, {
                    icon: o.icon,
                    type: "icon",
                    onClick: () => o.onSelect("quick-actions"),
                    disabled: !(
                        t.isIn("select") && t.getSelectedShapeIds().length > 0
                    ),
                    title: `${r(o.label)} ${Io(o.kbd)}`,
                    smallIcon: !0,
                });
            }),
            qie = y.memo(function () {
                const t = Ee();
                return v.jsxs(xa, {
                    id: "main menu",
                    children: [
                        v.jsx(eh, {
                            children: v.jsx(se, {
                                type: "icon",
                                className: "tlui-menu__trigger",
                                "data-testid": "main.menu",
                                title: t("menu.title"),
                                icon: "menu",
                                smallIcon: !0,
                            }),
                        }),
                        v.jsx(Sa, {
                            alignOffset: 0,
                            sideOffset: 6,
                            children: v.jsx(Zie, {}),
                        }),
                    ],
                });
            });
        function Zie() {
            const e = W(),
                t = Ee(),
                n = Mne(),
                r = $r(),
                o = Pr();
            function i(a, s, l, c) {
                if (!s) return null;
                switch (s.type) {
                    case "custom":
                        return o && !s.readonlyOk
                            ? null
                            : s.id === "LANGUAGE_MENU"
                                ? v.jsx(nT, {}, "item")
                                : null;
                    case "group":
                        return o && !s.readonlyOk
                            ? null
                            : v.jsx(
                                Si,
                                {
                                    size:
                                        c <= 1
                                            ? "medium"
                                            : r < 3 ||
                                            ((l == null ? void 0 : l.type) ===
                                                "submenu" &&
                                                c > 2)
                                                ? "tiny"
                                                : "medium",
                                    children: s.children.map((d) =>
                                        i(a, d, s, c + 1)
                                    ),
                                },
                                s.id
                            );
                    case "submenu":
                        return o && !s.readonlyOk
                            ? null
                            : v.jsxs(
                                nS,
                                {
                                    id: `main menu ${l ? l.id + " " : ""}${s.id}`,
                                    children: [
                                        v.jsx(rS, {
                                            label: s.label,
                                            "data-testid": `menu-item.${s.id}`,
                                        }),
                                        v.jsx(oS, {
                                            sideOffset: -4,
                                            alignOffset: -1,
                                            children: s.children.map((d) =>
                                                i(a, d, s, c + 1)
                                            ),
                                        }),
                                    ],
                                },
                                s.id
                            );
                    case "item": {
                        if (o && !s.readonlyOk) return null;
                        const {
                                id: d,
                                checkbox: u,
                                menuLabel: h,
                                label: p,
                                onSelect: m,
                                kbd: f,
                            } = s.actionItem,
                            g = h ?? p,
                            b = g ? t(g) : void 0;
                        return u
                            ? v.jsxs(
                                eT,
                                {
                                    onSelect: () => m("menu"),
                                    title: b || "",
                                    checked: s.checked,
                                    disabled: s.disabled,
                                    children: [
                                        b &&
                                        v.jsx("span", {
                                            className: "tlui-button__label",
                                            children: b,
                                        }),
                                        f && v.jsx(vg, {children: f}),
                                    ],
                                },
                                d
                            )
                            : v.jsx(
                                pr,
                                {
                                    type: "menu",
                                    "data-testid": `menu-item.${s.id}`,
                                    kbd: f,
                                    label: g,
                                    onClick: () => m("menu"),
                                    disabled: s.disabled,
                                },
                                d
                            );
                    }
                }
            }
            return v.jsx(v.Fragment, {children: n.map((a) => i(e, a, null, 0))});
        }
        const Qie = function ({name: t, id: n, isCurrentPage: r}) {
                const o = W(),
                    i = y.useRef(null),
                    a = y.useCallback(
                        (l) => {
                            o.renamePage(n, l || "New Page", {ephemeral: !0});
                        },
                        [o, n]
                    ),
                    s = y.useCallback(
                        (l) => {
                            o.mark("rename page"),
                                o.renamePage(n, l || "New Page", {ephemeral: !1});
                        },
                        [o, n]
                    );
                return v.jsx(_x, {
                    className: "tlui-page-menu__item__input",
                    ref: (l) => (i.current = l),
                    defaultValue: t,
                    onValueChange: a,
                    onComplete: s,
                    onCancel: s,
                    shouldManuallyMaintainScrollPositionWhenFocused: !0,
                    autofocus: r,
                    autoselect: !0,
                });
            },
            dS = (e, t, n, r) => {
                let o;
                const i = e.getPages(),
                    a = n > r ? i[r - 1] : i[r],
                    s = n > r ? i[r] : i[r + 1];
                a && !s
                    ? (o = di(a.index))
                    : !a && s
                        ? (o = bU(i[0].index))
                        : (o = yu(a.index, s.index)),
                o !== i[n].index &&
                (e.mark("moving page"), e.updatePage({id: t, index: o}));
            },
            xT = ze(function ({index: t, listSize: n, item: r, onRename: o}) {
                const i = W(),
                    a = Ee(),
                    s = i.getPages(),
                    l = y.useCallback(() => {
                        i.mark("creating page");
                        const h = ai.createId();
                        i.duplicatePage(r.id, h);
                    }, [i, r]),
                    c = y.useCallback(() => {
                        dS(i, r.id, t, t - 1);
                    }, [i, r, t]),
                    d = y.useCallback(() => {
                        dS(i, r.id, t, t + 1);
                    }, [i, r, t]),
                    u = y.useCallback(() => {
                        i.mark("deleting page"), i.deletePage(r.id);
                    }, [i, r]);
                return v.jsxs(xa, {
                    id: `page item submenu ${t}`,
                    children: [
                        v.jsx(eh, {
                            children: v.jsx(se, {
                                type: "icon",
                                title: a("page-menu.submenu.title"),
                                icon: "dots-vertical",
                            }),
                        }),
                        v.jsxs(Sa, {
                            alignOffset: 0,
                            children: [
                                v.jsxs(Si, {
                                    children: [
                                        o &&
                                        v.jsx(kc, {
                                            dir: "ltr",
                                            onSelect: o,
                                            asChild: !0,
                                            children: v.jsx(se, {
                                                type: "menu",
                                                label: "page-menu.submenu.rename",
                                            }),
                                        }),
                                        v.jsx(kc, {
                                            dir: "ltr",
                                            onSelect: l,
                                            disabled: s.length >= zf,
                                            asChild: !0,
                                            children: v.jsx(se, {
                                                type: "menu",
                                                label: "page-menu.submenu.duplicate-page",
                                            }),
                                        }),
                                        t > 0 &&
                                        v.jsx(kc, {
                                            dir: "ltr",
                                            onSelect: c,
                                            asChild: !0,
                                            children: v.jsx(se, {
                                                type: "menu",
                                                label: "page-menu.submenu.move-up",
                                            }),
                                        }),
                                        t < n - 1 &&
                                        v.jsx(kc, {
                                            dir: "ltr",
                                            onSelect: d,
                                            asChild: !0,
                                            children: v.jsx(se, {
                                                type: "menu",
                                                label: "page-menu.submenu.move-down",
                                            }),
                                        }),
                                    ],
                                }),
                                n > 1 &&
                                v.jsx(Si, {
                                    children: v.jsx(kc, {
                                        dir: "ltr",
                                        onSelect: u,
                                        asChild: !0,
                                        children: v.jsx(se, {
                                            type: "menu",
                                            label: "page-menu.submenu.delete",
                                        }),
                                    }),
                                }),
                            ],
                        }),
                    ],
                });
            }),
            Jie = function () {
                const t = W(),
                    n = Ee(),
                    r = $r(),
                    o = y.useCallback(() => g(!1), []),
                    [i, a] = Ss("page-menu", o),
                    s = 36,
                    l = y.useRef(null),
                    c = X("pages", () => t.getPages(), [t]),
                    d = X("currentPage", () => t.getCurrentPage(), [t]),
                    u = X("currentPageId", () => t.getCurrentPageId(), [t]),
                    h = Pr(),
                    p = X("maxPageCountReached", () => t.getPages().length >= zf, [
                        t,
                    ]),
                    m = X(
                        "isCoarsePointer",
                        () => t.getInstanceState().isCoarsePointer,
                        [t]
                    ),
                    [f, g] = y.useState(!1),
                    b = y.useCallback(() => {
                        h || g((T) => !T);
                    }, [h]),
                    x = y.useRef({
                        isPointing: !1,
                        status: "idle",
                        pointing: null,
                        startY: 0,
                        startIndex: 0,
                        dragIndex: 0,
                    }),
                    [S, _] = y.useState(
                        Object.fromEntries(
                            c.map((T, R) => [
                                T.id,
                                {y: R * s, offsetY: 0, isSelected: !1},
                            ])
                        )
                    );
                y.useLayoutEffect(() => {
                    _(
                        Object.fromEntries(
                            c.map((T, R) => [
                                T.id,
                                {y: R * s, offsetY: 0, isSelected: !1},
                            ])
                        )
                    );
                }, [s, c]),
                    y.useEffect(() => {
                        i &&
                        requestAnimationFrame(() => {
                            const T = document.querySelector(
                                `[data-testid="page-menu-item-${u}"]`
                            );
                            if (T) {
                                const R = l.current;
                                if (!R) return;
                                const D = T.offsetTop,
                                    j = R.scrollTop;
                                D < j && R.scrollTo({top: D});
                                const z = D + s,
                                    O = R.scrollTop + R.offsetHeight;
                                z > O && R.scrollTo({top: z - R.offsetHeight});
                            }
                        });
                    }, [s, u, i]);
                const k = y.useCallback(
                        (T) => {
                            const {clientY: R, currentTarget: D} = T,
                                {
                                    dataset: {id: j, index: z},
                                } = D;
                            if (!j || !z) return;
                            const O = x.current;
                            eu(T.currentTarget, T),
                                (O.status = "pointing"),
                                (O.pointing = {id: j, index: +z});
                            const K = S[j].y;
                            (O.startY = R),
                                (O.startIndex = Math.max(
                                    0,
                                    Math.min(Math.round(K / s), c.length - 1)
                                ));
                        },
                        [s, c.length, S]
                    ),
                    C = y.useCallback(
                        (T) => {
                            const R = x.current;
                            if (R.status === "pointing") {
                                const {clientY: D} = T,
                                    j = D - R.startY;
                                Math.abs(j) > 5 && (R.status = "dragging");
                            }
                            if (R.status === "dragging") {
                                const {clientY: D} = T,
                                    j = D - R.startY,
                                    z = S[R.pointing.id],
                                    {startIndex: O, pointing: F} = R,
                                    K = z.y + j,
                                    V = Math.max(
                                        0,
                                        Math.min(Math.round(K / s), c.length - 1)
                                    ),
                                    B = {...S};
                                if (
                                    ((B[F.id] = {
                                        y: z.y,
                                        offsetY: j,
                                        isSelected: !0,
                                    }),
                                    V !== R.dragIndex)
                                ) {
                                    R.dragIndex = V;
                                    for (let H = 0; H < c.length; H++) {
                                        const G = c[H];
                                        if (G.id === R.pointing.id) continue;
                                        let {y: ee} = B[G.id];
                                        V === O
                                            ? (ee = H * s)
                                            : V < O
                                                ? V <= H && H < O
                                                    ? (ee = (H + 1) * s)
                                                    : (ee = H * s)
                                                : V > O &&
                                                (V >= H && H > O
                                                    ? (ee = (H - 1) * s)
                                                    : (ee = H * s)),
                                        ee !== B[G.id].y &&
                                        (B[G.id] = {
                                            y: ee,
                                            offsetY: 0,
                                            isSelected: !0,
                                        });
                                    }
                                }
                                _(B);
                            }
                        },
                        [s, c, S]
                    ),
                    P = y.useCallback(
                        (T) => {
                            const R = x.current;
                            if (R.status === "dragging") {
                                const {id: D, index: j} = R.pointing;
                                dS(t, D, j, R.dragIndex);
                            }
                            tu(T.currentTarget, T), (R.status = "idle");
                        },
                        [t]
                    ),
                    I = y.useCallback(
                        (T) => {
                            const R = x.current;
                            T.key === "Escape" &&
                            (R.status === "dragging" &&
                            _(
                                Object.fromEntries(
                                    c.map((D, j) => [
                                        D.id,
                                        {
                                            y: j * s,
                                            offsetY: 0,
                                            isSelected: !1,
                                        },
                                    ])
                                )
                            ),
                                (R.status = "idle"));
                        },
                        [s, c]
                    ),
                    $ = y.useCallback(() => {
                        h ||
                        t.batch(() => {
                            t.mark("creating page");
                            const T = ai.createId();
                            t.createPage({
                                name: n("page-menu.new-page-initial-name"),
                                id: T,
                            }),
                                t.setCurrentPage(T),
                                g(!0);
                        });
                    }, [t, n, h]);
                return v.jsxs(lS, {
                    id: "pages",
                    onOpenChange: a,
                    open: i,
                    children: [
                        v.jsx(cS, {
                            children: v.jsx(se, {
                                className:
                                    "tlui-page-menu__trigger tlui-menu__trigger",
                                "data-testid": "main.page-menu",
                                icon: "chevron-down",
                                type: "menu",
                                title: d.name,
                                children: v.jsx("div", {
                                    className: "tlui-page-menu__name",
                                    children: d.name,
                                }),
                            }),
                        }),
                        v.jsx(bT, {
                            side: "bottom",
                            align: "start",
                            sideOffset: 6,
                            children: v.jsxs("div", {
                                className: "tlui-page-menu__wrapper",
                                children: [
                                    v.jsxs("div", {
                                        className: "tlui-page-menu__header",
                                        children: [
                                            v.jsx("div", {
                                                className:
                                                    "tlui-page-menu__header__title",
                                                children: n("page-menu.title"),
                                            }),
                                            !h &&
                                            v.jsxs("div", {
                                                className:
                                                    "tlui-buttons__horizontal",
                                                children: [
                                                    v.jsx(se, {
                                                        type: "icon",
                                                        "data-testid":
                                                            "page-menu.edit",
                                                        title: n(
                                                            f
                                                                ? "page-menu.edit-done"
                                                                : "page-menu.edit-start"
                                                        ),
                                                        icon: f
                                                            ? "check"
                                                            : "edit",
                                                        onClick: b,
                                                    }),
                                                    v.jsx(se, {
                                                        type: "icon",
                                                        "data-testid":
                                                            "page-menu.create",
                                                        icon: "plus",
                                                        title: n(
                                                            p
                                                                ? "page-menu.max-page-count-reached"
                                                                : "page-menu.create-new-page"
                                                        ),
                                                        disabled: p,
                                                        onClick: $,
                                                    }),
                                                ],
                                            }),
                                        ],
                                    }),
                                    v.jsx("div", {
                                        className:
                                            "tlui-page-menu__list tlui-menu__group",
                                        style: {height: s * c.length + 4},
                                        ref: l,
                                        children: c.map((T, R) => {
                                            const D = S[T.id] ?? {
                                                position: R * 40,
                                                offsetY: 0,
                                            };
                                            return f
                                                ? v.jsxs(
                                                    "div",
                                                    {
                                                        "data-testid": `page-menu-item-${T.id}`,
                                                        className:
                                                            "tlui-page_menu__item__sortable",
                                                        style: {
                                                            zIndex:
                                                                T.id === d.id
                                                                    ? 888
                                                                    : R,
                                                            transform: `translate(0px, ${
                                                                D.y + D.offsetY
                                                            }px)`,
                                                        },
                                                        children: [
                                                            v.jsx(se, {
                                                                type: "icon",
                                                                tabIndex: -1,
                                                                className:
                                                                    "tlui-page_menu__item__sortable__handle",
                                                                icon: "drag-handle-dots",
                                                                onPointerDown: k,
                                                                onPointerUp: P,
                                                                onPointerMove: C,
                                                                onKeyDown: I,
                                                                "data-id": T.id,
                                                                "data-index": R,
                                                            }),
                                                            r < 5 && m
                                                                ? v.jsx(se, {
                                                                    type: "normal",
                                                                    className:
                                                                        "tlui-page-menu__item__button",
                                                                    onClick:
                                                                        () => {
                                                                            const j =
                                                                                window.prompt(
                                                                                    "Rename page",
                                                                                    T.name
                                                                                );
                                                                            j &&
                                                                            j !==
                                                                            T.name &&
                                                                            t.renamePage(
                                                                                T.id,
                                                                                j
                                                                            );
                                                                        },
                                                                    onDoubleClick:
                                                                    b,
                                                                    isChecked:
                                                                        T.id ===
                                                                        d.id,
                                                                    children:
                                                                        v.jsx(
                                                                            "span",
                                                                            {
                                                                                children:
                                                                                T.name,
                                                                            }
                                                                        ),
                                                                })
                                                                : v.jsx("div", {
                                                                    className:
                                                                        "tlui-page_menu__item__sortable__title",
                                                                    style: {
                                                                        height: s,
                                                                    },
                                                                    children:
                                                                        v.jsx(
                                                                            Qie,
                                                                            {
                                                                                id: T.id,
                                                                                name: T.name,
                                                                                isCurrentPage:
                                                                                    T.id ===
                                                                                    d.id,
                                                                            }
                                                                        ),
                                                                }),
                                                            !h &&
                                                            v.jsx("div", {
                                                                className:
                                                                    "tlui-page_menu__item__submenu",
                                                                "data-isediting":
                                                                f,
                                                                children:
                                                                    v.jsx(
                                                                        xT,
                                                                        {
                                                                            index: R,
                                                                            item: T,
                                                                            listSize:
                                                                            c.length,
                                                                        }
                                                                    ),
                                                            }),
                                                        ],
                                                    },
                                                    T.id + "_editing"
                                                )
                                                : v.jsxs(
                                                    "div",
                                                    {
                                                        "data-testid": `page-menu-item-${T.id}`,
                                                        className:
                                                            "tlui-page-menu__item",
                                                        children: [
                                                            v.jsxs(se, {
                                                                type: "normal",
                                                                className:
                                                                    "tlui-page-menu__item__button tlui-page-menu__item__button__checkbox",
                                                                onClick: () =>
                                                                    t.setCurrentPage(
                                                                        T.id
                                                                    ),
                                                                onDoubleClick: b,
                                                                isChecked:
                                                                    T.id === d.id,
                                                                title: n(
                                                                    "page-menu.go-to-page"
                                                                ),
                                                                children: [
                                                                    v.jsx("div", {
                                                                        className:
                                                                            "tlui-page-menu__item__button__check",
                                                                        children:
                                                                            T.id ===
                                                                            d.id &&
                                                                            v.jsx(
                                                                                ur,
                                                                                {
                                                                                    icon: "check",
                                                                                }
                                                                            ),
                                                                    }),
                                                                    v.jsx(
                                                                        "span",
                                                                        {
                                                                            children:
                                                                            T.name,
                                                                        }
                                                                    ),
                                                                ],
                                                            }),
                                                            !h &&
                                                            v.jsx("div", {
                                                                className:
                                                                    "tlui-page_menu__item__submenu",
                                                                children:
                                                                    v.jsx(
                                                                        xT,
                                                                        {
                                                                            index: R,
                                                                            item: T,
                                                                            listSize:
                                                                            c.length,
                                                                            onRename:
                                                                                () => {
                                                                                    if (
                                                                                        t
                                                                                            .environment
                                                                                            .isIos
                                                                                    ) {
                                                                                        const j =
                                                                                            window.prompt(
                                                                                                "Rename page",
                                                                                                T.name
                                                                                            );
                                                                                        j &&
                                                                                        j !==
                                                                                        T.name &&
                                                                                        t.renamePage(
                                                                                            T.id,
                                                                                            j
                                                                                        );
                                                                                    } else
                                                                                        t.batch(
                                                                                            () => {
                                                                                                g(
                                                                                                    !0
                                                                                                ),
                                                                                                    t.setCurrentPage(
                                                                                                        T.id
                                                                                                    );
                                                                                            }
                                                                                        );
                                                                                },
                                                                        }
                                                                    ),
                                                            }),
                                                        ],
                                                    },
                                                    T.id
                                                );
                                        }),
                                    }),
                                ],
                            }),
                        }),
                    ],
                });
            },
            ST = y.memo(function () {
                const t = Ee(),
                    n = P7(),
                    o = bn().redo;
                return v.jsx(se, {
                    "data-testid": "main.redo",
                    icon: o.icon,
                    type: "icon",
                    title: `${t(o.label)} ${Io(o.kbd)}`,
                    disabled: !n,
                    onClick: () => o.onSelect("quick-actions"),
                    smallIcon: !0,
                });
            }),
            _T = ze(function () {
                const t = W(),
                    n = bn(),
                    r = Ee(),
                    o = n.delete;
                return Pr()
                    ? null
                    : v.jsx(se, {
                        icon: o.icon,
                        type: "icon",
                        onClick: () => {
                            o.onSelect("quick-actions"), t.getContainer().focus();
                        },
                        disabled: !(
                            t.isIn("select") && t.getSelectedShapeIds().length > 0
                        ),
                        title: `${r(o.label)} ${Io(o.kbd)}`,
                        smallIcon: !0,
                    });
            }),
            kT = y.memo(function () {
                const t = Ee(),
                    n = I7(),
                    o = bn().undo;
                return v.jsx(se, {
                    "data-testid": "main.undo",
                    icon: o.icon,
                    type: "icon",
                    title: `${t(o.label)} ${Io(o.kbd)}`,
                    disabled: !n,
                    onClick: () => o.onSelect("quick-actions"),
                    smallIcon: !0,
                });
            }),
            eae = ze(function () {
                const t = W(),
                    n = $r(),
                    r = Pr();
                return v.jsx("div", {
                    className: "tlui-menu-zone",
                    children: v.jsxs("div", {
                        className: "tlui-buttons__horizontal",
                        children: [
                            v.jsx(qie, {}),
                            v.jsx(Jie, {}),
                            n >= 6 &&
                            !r &&
                            !t.isInAny("hand", "zoom") &&
                            v.jsxs(v.Fragment, {
                                children: [
                                    v.jsx(kT, {}),
                                    v.jsx(ST, {}),
                                    v.jsx(_T, {}),
                                    v.jsx(wT, {}),
                                    v.jsx(yT, {}),
                                ],
                            }),
                        ],
                    }),
                });
            });
        function tae(e, t) {
            const [n, r] = N.useState(t);
            N.useLayoutEffect(() => {
                const i = localStorage.getItem(e);
                if (i)
                    try {
                        r(JSON.parse(i));
                    } catch {
                        console.error(
                            `Could not restore value ${e} from local storage.`
                        );
                    }
            }, [e]);
            const o = N.useCallback(
                (i) => {
                    r((a) => {
                        const s = typeof i == "function" ? i(a) : i;
                        return localStorage.setItem(e, JSON.stringify(s)), s;
                    });
                },
                [e]
            );
            return [n, o];
        }
        class rh {
            constructor(t) {
                w(this, "dpr", 1);
                w(this, "colors", {
                    shapeFill: "rgba(144, 144, 144, .1)",
                    selectFill: "#2f80ed",
                    viewportFill: "rgba(144, 144, 144, .1)",
                });
                w(this, "id", He());
                w(this, "cvs", null);
                w(this, "pageBounds", []);
                w(this, "collaborators", []);
                w(this, "canvasScreenBounds", new ce());
                w(this, "canvasPageBounds", new ce());
                w(this, "contentPageBounds", new ce());
                w(this, "contentScreenBounds", new ce());
                w(this, "originPagePoint", new E());
                w(this, "originPageCenter", new E());
                w(this, "isInViewport", !1);
                w(this, "debug", !1);
                w(this, "updateContentScreenBounds", () => {
                    const {
                        contentScreenBounds: t,
                        contentPageBounds: n,
                        canvasScreenBounds: r,
                    } = this;
                    let {x: o, y: i, w: a, h: s} = t;
                    if (n.w > n.h) {
                        const l = r.w / (n.w / n.h);
                        l > r.h
                            ? ((o = (r.w - r.w * (r.h / l)) / 2),
                                (i = 0),
                                (a = r.w * (r.h / l)),
                                (s = r.h))
                            : ((o = 0), (i = (r.h - l) / 2), (a = r.w), (s = l));
                    } else if (n.w < n.h) {
                        const l = r.h / (n.h / n.w);
                        (o = (r.w - l) / 2), (i = 0), (a = l), (s = r.h);
                    } else (o = r.h / 2), (i = 0), (a = r.h), (s = r.h);
                    t.set(o, i, a, s);
                });
                w(this, "updateCanvasPageBounds", () => {
                    const {
                        canvasPageBounds: t,
                        canvasScreenBounds: n,
                        contentPageBounds: r,
                        contentScreenBounds: o,
                    } = this;
                    t.set(
                        0,
                        0,
                        r.width / (o.width / n.width),
                        r.height / (o.height / n.height)
                    ),
                        (t.center = r.center);
                });
                w(this, "getScreenPoint", (t, n) => {
                    const {canvasScreenBounds: r} = this,
                        o = (t - r.minX) * this.dpr,
                        i = (n - r.minY) * this.dpr;
                    return {x: o, y: i};
                });
                w(this, "getPagePoint", (t, n) => {
                    const {
                            contentPageBounds: r,
                            contentScreenBounds: o,
                            canvasPageBounds: i,
                        } = this,
                        {x: a, y: s} = this.getScreenPoint(t, n);
                    return new E(
                        i.minX + (a * r.width) / o.width,
                        i.minY + (s * r.height) / o.height,
                        1
                    );
                });
                w(this, "minimapScreenPointToPagePoint", (t, n, r = !1, o = !1) => {
                    const {editor: i} = this,
                        a = i.getViewportPageBounds();
                    let {x: s, y: l} = this.getPagePoint(t, n);
                    if (o) {
                        const c = this.editor.getCurrentPageBounds(),
                            d = a,
                            u = ((c == null ? void 0 : c.minX) ?? 0) - d.width / 2,
                            h = ((c == null ? void 0 : c.maxX) ?? 0) + d.width / 2,
                            p = ((c == null ? void 0 : c.minY) ?? 0) - d.height / 2,
                            m = ((c == null ? void 0 : c.maxY) ?? 0) + d.height / 2,
                            f = Math.max(0, u + d.width - s),
                            g = Math.max(0, -(h - d.width - s)),
                            b = Math.max(0, p + d.height - l),
                            x = Math.max(0, -(m - d.height - l)),
                            S = Math.max(0, f - g),
                            _ = Math.max(0, g - f),
                            k = Math.max(0, b - x),
                            C = Math.max(0, x - b);
                        S && S > _ ? (s += S / 2) : _ && (s -= _ / 2),
                            k && k > C ? (l += k / 2) : C && (l -= C / 2),
                            (s = So(s, u, h)),
                            (l = So(l, p, m));
                    }
                    if (r) {
                        const {originPagePoint: c} = this,
                            d = Math.abs(s - c.x),
                            u = Math.abs(l - c.y);
                        d > u ? (l = c.y) : (s = c.x);
                    }
                    return new E(s, l);
                });
                w(this, "render", () => {
                    const {cvs: t, pageBounds: n} = this;
                    this.updateCanvasPageBounds();
                    const {
                            editor: r,
                            canvasScreenBounds: o,
                            canvasPageBounds: i,
                            contentPageBounds: a,
                            contentScreenBounds: s,
                        } = this,
                        {width: l, height: c} = o,
                        d = r.getSelectedShapeIds(),
                        u = r.getViewportPageBounds();
                    if (!t || !n) return;
                    const h = t.getContext("2d");
                    if (!h)
                        throw new Error("Minimap (shapes): Could not get context");
                    h.resetTransform(),
                        (h.globalAlpha = 1),
                        h.clearRect(0, 0, l, c);
                    const p = s.width / a.width,
                        m = s.height / a.height;
                    h.translate((l - s.width) / 2, (c - s.height) / 2),
                        h.scale(p, m),
                        h.translate(-a.minX, -a.minY);
                    const f = 8 / p,
                        g = 8 / p,
                        b = 1 / p,
                        x = 1 / p,
                        S = f / 4,
                        _ = g / 4,
                        k = new Path2D(),
                        C = new Path2D(),
                        {
                            shapeFill: P,
                            selectFill: I,
                            viewportFill: $,
                        } = this.colors;
                    let T;
                    for (let O = 0, F = n.length; O < F; O++)
                        (T = n[O]),
                            rh.roundedRect(
                                d.includes(T.id) ? C : k,
                                T.minX,
                                T.minY,
                                T.width,
                                T.height,
                                So(f, b, T.width / S),
                                So(g, x, T.height / _)
                            );
                    if (
                        ((h.fillStyle = P),
                            h.fill(k),
                            (h.fillStyle = I),
                            h.fill(C),
                            this.debug)
                    ) {
                        const O = ce.Common(n),
                            {minX: F, minY: K, width: V, height: B} = O;
                        (h.strokeStyle = "green"),
                            (h.lineWidth = 2 / p),
                            h.strokeRect(
                                F + 1 / p,
                                K + 1 / m,
                                V - 2 / p,
                                B - 2 / m
                            );
                    }
                    {
                        const {brush: O} = r.getInstanceState();
                        if (O) {
                            const {x: F, y: K, w: V, h: B} = O;
                            h.beginPath(),
                                rh.sharpRect(h, F, K, V, B),
                                h.closePath(),
                                (h.fillStyle = $),
                                h.fill();
                        }
                    }
                    {
                        const {minX: O, minY: F, width: K, height: V} = u;
                        h.beginPath();
                        const B = 12 / p,
                            H = 12 / p;
                        rh.roundedRect(
                            h,
                            O,
                            F,
                            K,
                            V,
                            Math.min(K / 4, B),
                            Math.min(V / 4, H)
                        ),
                            h.closePath(),
                            (h.fillStyle = $),
                            h.fill(),
                        this.debug &&
                        ((h.strokeStyle = "orange"),
                            h.strokeRect(
                                O + 1 / p,
                                F + 1 / m,
                                K - 2 / p,
                                V - 2 / m
                            ));
                    }
                    const R = 2.5 / p,
                        D = 2.5 / m,
                        j = r.getCurrentPageId();
                    let z;
                    for (let O = 0; O < this.collaborators.length; O++)
                        (z = this.collaborators[O]),
                        z.currentPageId === j &&
                        (h.beginPath(),
                            h.ellipse(
                                So(z.cursor.x, i.minX + R, i.maxX - R),
                                So(z.cursor.y, i.minY + D, i.maxY - D),
                                5 / p,
                                5 / m,
                                0,
                                0,
                                Fe
                            ),
                            (h.fillStyle = z.color),
                            h.fill());
                    if (this.debug) {
                        h.lineWidth = 2 / p;
                        {
                            const {minX: O, minY: F, width: K, height: V} = a;
                            (h.strokeStyle = "red"),
                                h.strokeRect(
                                    O + 1 / p,
                                    F + 1 / m,
                                    K - 2 / p,
                                    V - 2 / m
                                );
                        }
                        {
                            const {minX: O, minY: F, width: K, height: V} = i;
                            (h.strokeStyle = "blue"),
                                h.strokeRect(
                                    O + 1 / p,
                                    F + 1 / m,
                                    K - 2 / p,
                                    V - 2 / m
                                );
                        }
                    }
                });
                this.editor = t;
            }
            setDpr(t) {
                this.dpr = +t.toFixed(2);
            }
            static roundedRect(t, n, r, o, i, a, s) {
                if (a < 1 && s < 1) {
                    t.rect(n, r, o, i);
                    return;
                }
                t.moveTo(n + a, r),
                    t.lineTo(n + o - a, r),
                    t.quadraticCurveTo(n + o, r, n + o, r + s),
                    t.lineTo(n + o, r + i - s),
                    t.quadraticCurveTo(n + o, r + i, n + o - a, r + i),
                    t.lineTo(n + a, r + i),
                    t.quadraticCurveTo(n, r + i, n, r + i - s),
                    t.lineTo(n, r + s),
                    t.quadraticCurveTo(n, r, n + a, r);
            }
            static sharpRect(t, n, r, o, i, a, s) {
                t.rect(n, r, o, i);
            }
        }
        function nae({shapeFill: e, selectFill: t, viewportFill: n}) {
            const r = W(),
                o = y.useRef(null),
                i = y.useRef(!1),
                a = em(),
                s = Q3("dpr", () => r.getInstanceState().devicePixelRatio, [r]),
                l = y.useMemo(
                    () => r.store.query.records("instance_presence"),
                    [r]
                ),
                c = y.useMemo(() => new rh(r), [r]);
            y.useEffect(() => {
                const m = requestAnimationFrame(() => {
                    const f = getComputedStyle(r.getContainer());
                    (c.colors = {
                        shapeFill: f.getPropertyValue(e).trim(),
                        selectFill: f.getPropertyValue(t).trim(),
                        viewportFill: f.getPropertyValue(n).trim(),
                    }),
                        c.render();
                });
                return () => {
                    cancelAnimationFrame(m);
                };
            }, [r, t, e, n, c, a]);
            const d = y.useCallback(
                    (m) => {
                        if (!r.getCurrentPageShapeIds().size) return;
                        const f = c.minimapScreenPointToPagePoint(
                                m.clientX,
                                m.clientY,
                                !1,
                                !1
                            ),
                            g = c.minimapScreenPointToPagePoint(
                                m.clientX,
                                m.clientY,
                                !1,
                                !0
                            );
                        c.originPagePoint.setTo(g),
                            c.originPageCenter.setTo(
                                r.getViewportPageBounds().center
                            ),
                            r.centerOnPoint(f, {duration: ci});
                    },
                    [r, c]
                ),
                u = y.useCallback(
                    (m) => {
                        const f = m.currentTarget;
                        if ((eu(f, m), !r.getCurrentPageShapeIds().size)) return;
                        (i.current = !0), (c.isInViewport = !1);
                        const g = c.minimapScreenPointToPagePoint(
                                m.clientX,
                                m.clientY,
                                !1,
                                !1
                            ),
                            b = c.minimapScreenPointToPagePoint(
                                m.clientX,
                                m.clientY,
                                !1,
                                !0
                            ),
                            x = r.getViewportPageBounds();
                        if (((c.isInViewport = x.containsPoint(b)), c.isInViewport))
                            c.originPagePoint.setTo(b),
                                c.originPageCenter.setTo(x.center);
                        else {
                            const _ = E.Sub(x.center, x.point),
                                k = E.Add(g, _);
                            c.originPagePoint.setTo(k),
                                c.originPageCenter.setTo(g),
                                r.centerOnPoint(g, {duration: ci});
                        }
                        function S(_) {
                            f && tu(f, _),
                                (i.current = !1),
                                document.body.removeEventListener("pointerup", S);
                        }
                        document.body.addEventListener("pointerup", S);
                    },
                    [r, c]
                ),
                h = y.useCallback(
                    (m) => {
                        const f = c.minimapScreenPointToPagePoint(
                            m.clientX,
                            m.clientY,
                            m.shiftKey,
                            !0
                        );
                        if (i.current) {
                            if (c.isInViewport) {
                                const S = c.originPagePoint
                                    .clone()
                                    .sub(c.originPageCenter);
                                r.centerOnPoint(E.Sub(f, S));
                                return;
                            }
                            r.centerOnPoint(f);
                        }
                        const g = c.getPagePoint(m.clientX, m.clientY),
                            b = r.pageToScreen(g),
                            x = {
                                type: "pointer",
                                target: "canvas",
                                name: "pointer_move",
                                ...Wn(m),
                                point: b,
                                isPen: r.getInstanceState().isPenMode,
                            };
                        r.dispatch(x);
                    },
                    [r, c]
                ),
                p = y.useCallback(
                    (m) => {
                        const f = y4(m);
                        r.dispatch({
                            type: "wheel",
                            name: "wheel",
                            delta: f,
                            point: new E(m.clientX, m.clientY),
                            shiftKey: m.shiftKey,
                            altKey: m.altKey,
                            ctrlKey: m.metaKey || m.ctrlKey,
                        });
                    },
                    [r]
                );
            return (
                Ja(
                    "update when dpr changes",
                    () => {
                        const m = s.get();
                        c.setDpr(m);
                        const f = o.current,
                            g = f.getBoundingClientRect(),
                            b = g.width * m,
                            x = g.height * m;
                        (f.width = b),
                            (f.height = x),
                            c.canvasScreenBounds.set(g.x, g.y, b, x),
                            (c.cvs = o.current);
                    },
                    [s, c]
                ),
                    Ja(
                        "minimap render when pagebounds or collaborators changes",
                        () => {
                            const m = r.getCurrentPageShapeIds(),
                                f = r.getCurrentPageBounds(),
                                g = r.getViewportPageBounds();
                            s.get(),
                                (c.contentPageBounds = f ? ce.Expand(f, g) : g),
                                c.updateContentScreenBounds();
                            const b = [];
                            m.forEach((x) => {
                                let S = r.getShapePageBounds(x);
                                if (!S) return;
                                const _ = r.getShapeMask(x);
                                if (_) {
                                    const k = r1(_, S.corners);
                                    if (!k) return;
                                    S = ce.FromPoints(k);
                                }
                                S && ((S.id = x), b.push(S));
                            }),
                                (c.pageBounds = b),
                                (c.collaborators = l.get()),
                                c.render();
                        },
                        [r, c]
                    ),
                    v.jsx("div", {
                        className: "tlui-minimap",
                        children: v.jsx("canvas", {
                            ref: o,
                            className: "tlui-minimap__canvas",
                            onDoubleClick: d,
                            onPointerMove: h,
                            onPointerDown: u,
                            onWheel: p,
                        }),
                    })
            );
        }
        const uS = ze(function () {
            const t = W(),
                n = Ee(),
                r = $r(),
                o = t.getZoomLevel(),
                i = t.getCurrentPageShapeIds().size > 0,
                a = t.getSelectedShapeIds().length > 0,
                s = t.getZoomLevel() === 1,
                l = y.useCallback(() => {
                    t.resetZoom(t.getViewportScreenCenter(), {duration: ci});
                }, [t]);
            return v.jsxs(xa, {
                id: "zoom",
                children: [
                    v.jsx(eh, {
                        children: v.jsx(se, {
                            type: "icon",
                            title: `${n("navigation-zone.zoom")}`,
                            "data-testid": "minimap.zoom-menu",
                            className:
                                r < 5
                                    ? "tlui-zoom-menu__button"
                                    : "tlui-zoom-menu__button__pct",
                            onDoubleClick: l,
                            icon: r < 4 ? "zoom-in" : void 0,
                            children:
                                r < 4
                                    ? null
                                    : v.jsxs("span", {
                                        style: {flexGrow: 0, textAlign: "center"},
                                        children: [Math.floor(o * 100), "%"],
                                    }),
                        }),
                    }),
                    v.jsx(Sa, {
                        side: "top",
                        align: "start",
                        alignOffset: 0,
                        children: v.jsxs(Si, {
                            children: [
                                v.jsx(oh, {
                                    action: "zoom-in",
                                    "data-testid": "minimap.zoom-menu.zoom-in",
                                    noClose: !0,
                                }),
                                v.jsx(oh, {
                                    action: "zoom-out",
                                    "data-testid": "minimap.zoom-menu.zoom-out",
                                    noClose: !0,
                                }),
                                v.jsx(oh, {
                                    action: "zoom-to-100",
                                    "data-testid": "minimap.zoom-menu.zoom-to-100",
                                    noClose: !0,
                                    disabled: s,
                                }),
                                v.jsx(oh, {
                                    action: "zoom-to-fit",
                                    disabled: !i,
                                    "data-testid": "minimap.zoom-menu.zoom-to-fit",
                                    noClose: !0,
                                }),
                                v.jsx(oh, {
                                    action: "zoom-to-selection",
                                    disabled: !a,
                                    "data-testid":
                                        "minimap.zoom-menu.zoom-to-selection",
                                    noClose: !0,
                                }),
                            ],
                        }),
                    }),
                ],
            });
        });
        function oh(e) {
            const {action: t, disabled: n = !1, noClose: r = !1} = e,
                o = bn();
            return v.jsx(pr, {
                type: "menu",
                label: o[t].label,
                kbd: o[t].kbd,
                "data-testid": e["data-testid"],
                onClick: () => o[t].onSelect("zoom-menu"),
                noClose: r,
                disabled: n,
            });
        }
        const rae = y.memo(function () {
                const t = bn(),
                    n = Ee(),
                    r = $r(),
                    [o, i] = tae("minimap", !0),
                    a = y.useCallback(() => {
                        i((s) => !s);
                    }, [i]);
                return r < 4
                    ? null
                    : v.jsxs("div", {
                        className: "tlui-navigation-zone",
                        children: [
                            v.jsx("div", {
                                className: "tlui-buttons__horizontal",
                                children:
                                    r < 6
                                        ? v.jsx(uS, {})
                                        : o
                                            ? v.jsxs(v.Fragment, {
                                                children: [
                                                    v.jsx(uS, {}),
                                                    v.jsx(se, {
                                                        type: "icon",
                                                        icon: o
                                                            ? "chevrons-ne"
                                                            : "chevrons-sw",
                                                        "data-testid":
                                                            "minimap.toggle",
                                                        title: n(
                                                            "navigation-zone.toggle-minimap"
                                                        ),
                                                        className:
                                                            "tlui-navigation-zone__toggle",
                                                        onClick: a,
                                                    }),
                                                ],
                                            })
                                            : v.jsxs(v.Fragment, {
                                                children: [
                                                    v.jsx(se, {
                                                        type: "icon",
                                                        icon: "minus",
                                                        "data-testid":
                                                            "minimap.zoom-out",
                                                        title: `${n(
                                                            t["zoom-out"].label
                                                        )} ${Io(
                                                            t["zoom-out"].kbd
                                                        )}`,
                                                        onClick: () =>
                                                            t["zoom-out"].onSelect(
                                                                "navigation-zone"
                                                            ),
                                                    }),
                                                    v.jsx(uS, {}),
                                                    v.jsx(se, {
                                                        type: "icon",
                                                        icon: "plus",
                                                        "data-testid":
                                                            "minimap.zoom-in",
                                                        title: `${n(
                                                            t["zoom-in"].label
                                                        )} ${Io(t["zoom-in"].kbd)}`,
                                                        onClick: () =>
                                                            t["zoom-in"].onSelect(
                                                                "navigation-zone"
                                                            ),
                                                    }),
                                                    v.jsx(se, {
                                                        type: "icon",
                                                        icon: o
                                                            ? "chevrons-ne"
                                                            : "chevrons-sw",
                                                        "data-testid":
                                                            "minimap.toggle",
                                                        title: n(
                                                            "navigation-zone.toggle-minimap"
                                                        ),
                                                        className:
                                                            "tlui-navigation-zone__toggle",
                                                        onClick: a,
                                                    }),
                                                ],
                                            }),
                            }),
                            r >= 6 &&
                            !o &&
                            v.jsx(nae, {
                                viewportFill: "--color-muted-1",
                                selectFill: "--color-selected",
                                shapeFill: "--color-text-3",
                            }),
                        ],
                    });
            }),
            oae = ze(function () {
                const n = W().getInstanceState().isPenMode,
                    r = bn();
                if (!n) return null;
                const o = r["exit-pen-mode"];
                return v.jsx(se, {
                    type: "normal",
                    label: o.label,
                    iconLeft: o.icon,
                    onClick: () => o.onSelect("helper-buttons"),
                });
            }),
            iae = ze(function () {
                const t = W(),
                    n = bn();
                if (!t.getInstanceState().followingUserId) return null;
                const r = n["stop-following"];
                return v.jsx(se, {
                    type: "normal",
                    label: r.label,
                    iconLeft: r.icon,
                    onClick: () => r.onSelect("people-menu"),
                });
            }),
            aae = [Cr, os, Tl, wo];
        function CT() {
            const e = W();
            return X(
                "getRelevantStyles",
                () => {
                    var r;
                    const t = new i1(e.getSharedStyles()),
                        n =
                            e.getSelectedShapeIds().length > 0 ||
                            !!((r = e.root.getCurrent()) != null && r.shapeType);
                    if (
                        t.size === 0 &&
                        e.isIn("select") &&
                        e.getSelectedShapeIds().length === 0
                    )
                        for (const o of aae)
                            t.applyValue(o, e.getStyleForNextShape(o));
                    return t.size === 0 && !n
                        ? null
                        : {styles: t, opacity: e.getSharedOpacity()};
                },
                [e]
            );
        }
        function sae(e) {
            const {
                    uiType: t,
                    items: n,
                    title: r,
                    style: o,
                    value: i,
                    onValueChange: a,
                } = e,
                s = W(),
                l = Ee(),
                c = y.useRef(!1),
                {
                    handleButtonClick: d,
                    handleButtonPointerDown: u,
                    handleButtonPointerEnter: h,
                    handleButtonPointerUp: p,
                } = y.useMemo(() => {
                    const f = () => {
                        (c.current = !1),
                            window.removeEventListener("pointerup", f);
                    };
                    return {
                        handleButtonClick: (_) => {
                            const {id: k} = _.currentTarget.dataset;
                            (i.type === "shared" && i.value === k) ||
                            (s.mark("point picker item"), a(o, k, !1));
                        },
                        handleButtonPointerDown: (_) => {
                            const {id: k} = _.currentTarget.dataset;
                            s.mark("point picker item"),
                                a(o, k, !0),
                                (c.current = !0),
                                window.addEventListener("pointerup", f);
                        },
                        handleButtonPointerEnter: (_) => {
                            if (!c.current) return;
                            const {id: k} = _.currentTarget.dataset;
                            a(o, k, !0);
                        },
                        handleButtonPointerUp: (_) => {
                            const {id: k} = _.currentTarget.dataset;
                            a(o, k, !1);
                        },
                    };
                }, [i, s, a, o]),
                m = X("theme", () => Kn({isDarkMode: s.user.getIsDarkMode()}), [s]);
            return v.jsx("div", {
                className: me("tlui-buttons__grid"),
                children: n.map((f) =>
                    v.jsx(
                        se,
                        {
                            type: "icon",
                            "data-id": f.value,
                            "data-testid": `style.${t}.${f.value}`,
                            "aria-label": f.value,
                            "data-state":
                                i.type === "shared" && i.value === f.value
                                    ? "hinted"
                                    : void 0,
                            title: r + " — " + l(`${t}-style.${f.value}`),
                            className: me("tlui-button-grid__button"),
                            style: o === Cr ? {color: m[f.value].solid} : void 0,
                            onPointerEnter: h,
                            onPointerDown: u,
                            onPointerUp: p,
                            onClick: d,
                            icon: f.icon,
                        },
                        f.value
                    )
                ),
            });
        }
        const Ic = y.memo(sae);
        function ET(e, [t, n]) {
            return Math.min(n, Math.max(t, e));
        }
        function lae(e) {
            const t = y.useRef({value: e, previous: e});
            return y.useMemo(
                () => (
                    t.current.value !== e &&
                    ((t.current.previous = t.current.value),
                        (t.current.value = e)),
                        t.current.previous
                ),
                [e]
            );
        }
        const PT = ["PageUp", "PageDown"],
            IT = ["ArrowUp", "ArrowDown", "ArrowLeft", "ArrowRight"],
            TT = {
                "from-left": ["Home", "PageDown", "ArrowDown", "ArrowLeft"],
                "from-right": ["Home", "PageDown", "ArrowDown", "ArrowRight"],
                "from-bottom": ["Home", "PageDown", "ArrowDown", "ArrowLeft"],
                "from-top": ["Home", "PageDown", "ArrowUp", "ArrowLeft"],
            },
            ih = "Slider",
            [hS, cae, dae] = dg(ih),
            [$T, cme] = Po(ih, [dae]),
            [uae, Qg] = $T(ih),
            hae = y.forwardRef((e, t) => {
                const {
                        name: n,
                        min: r = 0,
                        max: o = 100,
                        step: i = 1,
                        orientation: a = "horizontal",
                        disabled: s = !1,
                        minStepsBetweenThumbs: l = 0,
                        defaultValue: c = [r],
                        value: d,
                        onValueChange: u = () => {},
                        onValueCommit: h = () => {},
                        inverted: p = !1,
                        ...m
                    } = e,
                    [f, g] = y.useState(null),
                    b = Ze(t, (z) => g(z)),
                    x = y.useRef(new Set()),
                    S = y.useRef(0),
                    _ = a === "horizontal",
                    k = f ? !!f.closest("form") : !0,
                    C = _ ? pae : fae,
                    [P = [], I] = ga({
                        prop: d,
                        defaultProp: c,
                        onChange: (z) => {
                            var O;
                            (O = [...x.current][S.current]) === null ||
                            O === void 0 ||
                            O.focus(),
                                u(z);
                        },
                    }),
                    $ = y.useRef(P);
                function T(z) {
                    const O = _ae(P, z);
                    j(z, O);
                }
                function R(z) {
                    j(z, S.current);
                }
                function D() {
                    const z = $.current[S.current];
                    P[S.current] !== z && h(P);
                }
                function j(z, O, {commit: F} = {commit: !1}) {
                    const K = Pae(i),
                        V = Iae(Math.round((z - r) / i) * i + r, K),
                        B = ET(V, [r, o]);
                    I((H = []) => {
                        const G = xae(H, B, O);
                        if (Eae(G, l * i)) {
                            S.current = G.indexOf(B);
                            const ee = String(G) !== String(H);
                            return ee && F && h(G), ee ? G : H;
                        } else return H;
                    });
                }
                return y.createElement(
                    uae,
                    {
                        scope: e.__scopeSlider,
                        disabled: s,
                        min: r,
                        max: o,
                        valueIndexToChangeRef: S,
                        thumbs: x.current,
                        values: P,
                        orientation: a,
                    },
                    y.createElement(
                        hS.Provider,
                        {scope: e.__scopeSlider},
                        y.createElement(
                            hS.Slot,
                            {scope: e.__scopeSlider},
                            y.createElement(
                                C,
                                J(
                                    {
                                        "aria-disabled": s,
                                        "data-disabled": s ? "" : void 0,
                                    },
                                    m,
                                    {
                                        ref: b,
                                        onPointerDown: ae(m.onPointerDown, () => {
                                            s || ($.current = P);
                                        }),
                                        min: r,
                                        max: o,
                                        inverted: p,
                                        onSlideStart: s ? void 0 : T,
                                        onSlideMove: s ? void 0 : R,
                                        onSlideEnd: s ? void 0 : D,
                                        onHomeKeyDown: () =>
                                            !s && j(r, 0, {commit: !0}),
                                        onEndKeyDown: () =>
                                            !s && j(o, P.length - 1, {commit: !0}),
                                        onStepKeyDown: ({
                                                            event: z,
                                                            direction: O,
                                                        }) => {
                                            if (!s) {
                                                const V =
                                                        PT.includes(z.key) ||
                                                        (z.shiftKey &&
                                                            IT.includes(z.key))
                                                            ? 10
                                                            : 1,
                                                    B = S.current,
                                                    H = P[B],
                                                    G = i * V * O;
                                                j(H + G, B, {commit: !0});
                                            }
                                        },
                                    }
                                )
                            )
                        )
                    ),
                    k &&
                    P.map((z, O) =>
                        y.createElement(wae, {
                            key: O,
                            name: n ? n + (P.length > 1 ? "[]" : "") : void 0,
                            value: z,
                        })
                    )
                );
            }),
            [AT, MT] = $T(ih, {
                startEdge: "left",
                endEdge: "right",
                size: "width",
                direction: 1,
            }),
            pae = y.forwardRef((e, t) => {
                const {
                        min: n,
                        max: r,
                        dir: o,
                        inverted: i,
                        onSlideStart: a,
                        onSlideMove: s,
                        onSlideEnd: l,
                        onStepKeyDown: c,
                        ...d
                    } = e,
                    [u, h] = y.useState(null),
                    p = Ze(t, (S) => h(S)),
                    m = y.useRef(),
                    f = Ox(o),
                    g = f === "ltr",
                    b = (g && !i) || (!g && i);
                function x(S) {
                    const _ = m.current || u.getBoundingClientRect(),
                        k = [0, _.width],
                        P = pS(k, b ? [n, r] : [r, n]);
                    return (m.current = _), P(S - _.left);
                }
                return y.createElement(
                    AT,
                    {
                        scope: e.__scopeSlider,
                        startEdge: b ? "left" : "right",
                        endEdge: b ? "right" : "left",
                        direction: b ? 1 : -1,
                        size: "width",
                    },
                    y.createElement(
                        zT,
                        J({dir: f, "data-orientation": "horizontal"}, d, {
                            ref: p,
                            style: {
                                ...d.style,
                                "--radix-slider-thumb-transform":
                                    "translateX(-50%)",
                            },
                            onSlideStart: (S) => {
                                const _ = x(S.clientX);
                                a == null || a(_);
                            },
                            onSlideMove: (S) => {
                                const _ = x(S.clientX);
                                s == null || s(_);
                            },
                            onSlideEnd: () => {
                                (m.current = void 0), l == null || l();
                            },
                            onStepKeyDown: (S) => {
                                const k = TT[
                                    b ? "from-left" : "from-right"
                                    ].includes(S.key);
                                c == null || c({event: S, direction: k ? -1 : 1});
                            },
                        })
                    )
                );
            }),
            fae = y.forwardRef((e, t) => {
                const {
                        min: n,
                        max: r,
                        inverted: o,
                        onSlideStart: i,
                        onSlideMove: a,
                        onSlideEnd: s,
                        onStepKeyDown: l,
                        ...c
                    } = e,
                    d = y.useRef(null),
                    u = Ze(t, d),
                    h = y.useRef(),
                    p = !o;
                function m(f) {
                    const g = h.current || d.current.getBoundingClientRect(),
                        b = [0, g.height],
                        S = pS(b, p ? [r, n] : [n, r]);
                    return (h.current = g), S(f - g.top);
                }
                return y.createElement(
                    AT,
                    {
                        scope: e.__scopeSlider,
                        startEdge: p ? "bottom" : "top",
                        endEdge: p ? "top" : "bottom",
                        size: "height",
                        direction: p ? 1 : -1,
                    },
                    y.createElement(
                        zT,
                        J({"data-orientation": "vertical"}, c, {
                            ref: u,
                            style: {
                                ...c.style,
                                "--radix-slider-thumb-transform": "translateY(50%)",
                            },
                            onSlideStart: (f) => {
                                const g = m(f.clientY);
                                i == null || i(g);
                            },
                            onSlideMove: (f) => {
                                const g = m(f.clientY);
                                a == null || a(g);
                            },
                            onSlideEnd: () => {
                                (h.current = void 0), s == null || s();
                            },
                            onStepKeyDown: (f) => {
                                const b = TT[
                                    p ? "from-bottom" : "from-top"
                                    ].includes(f.key);
                                l == null || l({event: f, direction: b ? -1 : 1});
                            },
                        })
                    )
                );
            }),
            zT = y.forwardRef((e, t) => {
                const {
                        __scopeSlider: n,
                        onSlideStart: r,
                        onSlideMove: o,
                        onSlideEnd: i,
                        onHomeKeyDown: a,
                        onEndKeyDown: s,
                        onStepKeyDown: l,
                        ...c
                    } = e,
                    d = Qg(ih, n);
                return y.createElement(
                    De.span,
                    J({}, c, {
                        ref: t,
                        onKeyDown: ae(e.onKeyDown, (u) => {
                            u.key === "Home"
                                ? (a(u), u.preventDefault())
                                : u.key === "End"
                                    ? (s(u), u.preventDefault())
                                    : PT.concat(IT).includes(u.key) &&
                                    (l(u), u.preventDefault());
                        }),
                        onPointerDown: ae(e.onPointerDown, (u) => {
                            const h = u.target;
                            h.setPointerCapture(u.pointerId),
                                u.preventDefault(),
                                d.thumbs.has(h) ? h.focus() : r(u);
                        }),
                        onPointerMove: ae(e.onPointerMove, (u) => {
                            u.target.hasPointerCapture(u.pointerId) && o(u);
                        }),
                        onPointerUp: ae(e.onPointerUp, (u) => {
                            const h = u.target;
                            h.hasPointerCapture(u.pointerId) &&
                            (h.releasePointerCapture(u.pointerId), i(u));
                        }),
                    })
                );
            }),
            mae = "SliderTrack",
            gae = y.forwardRef((e, t) => {
                const {__scopeSlider: n, ...r} = e,
                    o = Qg(mae, n);
                return y.createElement(
                    De.span,
                    J(
                        {
                            "data-disabled": o.disabled ? "" : void 0,
                            "data-orientation": o.orientation,
                        },
                        r,
                        {ref: t}
                    )
                );
            }),
            RT = "SliderRange",
            vae = y.forwardRef((e, t) => {
                const {__scopeSlider: n, ...r} = e,
                    o = Qg(RT, n),
                    i = MT(RT, n),
                    a = y.useRef(null),
                    s = Ze(t, a),
                    l = o.values.length,
                    c = o.values.map((h) => DT(h, o.min, o.max)),
                    d = l > 1 ? Math.min(...c) : 0,
                    u = 100 - Math.max(...c);
                return y.createElement(
                    De.span,
                    J(
                        {
                            "data-orientation": o.orientation,
                            "data-disabled": o.disabled ? "" : void 0,
                        },
                        r,
                        {
                            ref: s,
                            style: {
                                ...e.style,
                                [i.startEdge]: d + "%",
                                [i.endEdge]: u + "%",
                            },
                        }
                    )
                );
            }),
            OT = "SliderThumb",
            bae = y.forwardRef((e, t) => {
                const n = cae(e.__scopeSlider),
                    [r, o] = y.useState(null),
                    i = Ze(t, (s) => o(s)),
                    a = y.useMemo(
                        () => (r ? n().findIndex((s) => s.ref.current === r) : -1),
                        [n, r]
                    );
                return y.createElement(yae, J({}, e, {ref: i, index: a}));
            }),
            yae = y.forwardRef((e, t) => {
                const {__scopeSlider: n, index: r, ...o} = e,
                    i = Qg(OT, n),
                    a = MT(OT, n),
                    [s, l] = y.useState(null),
                    c = Ze(t, (g) => l(g)),
                    d = i9(s),
                    u = i.values[r],
                    h = u === void 0 ? 0 : DT(u, i.min, i.max),
                    p = Sae(r, i.values.length),
                    m = d == null ? void 0 : d[a.size],
                    f = m ? kae(m, h, a.direction) : 0;
                return (
                    y.useEffect(() => {
                        if (s)
                            return (
                                i.thumbs.add(s),
                                    () => {
                                        i.thumbs.delete(s);
                                    }
                            );
                    }, [s, i.thumbs]),
                        y.createElement(
                            "span",
                            {
                                style: {
                                    transform: "var(--radix-slider-thumb-transform)",
                                    position: "absolute",
                                    [a.startEdge]: `calc(${h}% + ${f}px)`,
                                },
                            },
                            y.createElement(
                                hS.ItemSlot,
                                {scope: e.__scopeSlider},
                                y.createElement(
                                    De.span,
                                    J(
                                        {
                                            role: "slider",
                                            "aria-label": e["aria-label"] || p,
                                            "aria-valuemin": i.min,
                                            "aria-valuenow": u,
                                            "aria-valuemax": i.max,
                                            "aria-orientation": i.orientation,
                                            "data-orientation": i.orientation,
                                            "data-disabled": i.disabled ? "" : void 0,
                                            tabIndex: i.disabled ? void 0 : 0,
                                        },
                                        o,
                                        {
                                            ref: c,
                                            style:
                                                u === void 0
                                                    ? {display: "none"}
                                                    : e.style,
                                            onFocus: ae(e.onFocus, () => {
                                                i.valueIndexToChangeRef.current = r;
                                            }),
                                        }
                                    )
                                )
                            )
                        )
                );
            }),
            wae = (e) => {
                const {value: t, ...n} = e,
                    r = y.useRef(null),
                    o = lae(t);
                return (
                    y.useEffect(() => {
                        const i = r.current,
                            a = window.HTMLInputElement.prototype,
                            l = Object.getOwnPropertyDescriptor(a, "value").set;
                        if (o !== t && l) {
                            const c = new Event("input", {bubbles: !0});
                            l.call(i, t), i.dispatchEvent(c);
                        }
                    }, [o, t]),
                        y.createElement(
                            "input",
                            J({style: {display: "none"}}, n, {ref: r, defaultValue: t})
                        )
                );
            };
        function xae(e = [], t, n) {
            const r = [...e];
            return (r[n] = t), r.sort((o, i) => o - i);
        }
        function DT(e, t, n) {
            const i = (100 / (n - t)) * (e - t);
            return ET(i, [0, 100]);
        }
        function Sae(e, t) {
            return t > 2
                ? `Value ${e + 1} of ${t}`
                : t === 2
                    ? ["Minimum", "Maximum"][e]
                    : void 0;
        }
        function _ae(e, t) {
            if (e.length === 1) return 0;
            const n = e.map((o) => Math.abs(o - t)),
                r = Math.min(...n);
            return n.indexOf(r);
        }
        function kae(e, t, n) {
            const r = e / 2,
                i = pS([0, 50], [0, r]);
            return (r - i(t) * n) * n;
        }
        function Cae(e) {
            return e.slice(0, -1).map((t, n) => e[n + 1] - t);
        }
        function Eae(e, t) {
            if (t > 0) {
                const n = Cae(e);
                return Math.min(...n) >= t;
            }
            return !0;
        }
        function pS(e, t) {
            return (n) => {
                if (e[0] === e[1] || t[0] === t[1]) return t[0];
                const r = (t[1] - t[0]) / (e[1] - e[0]);
                return t[0] + r * (n - e[0]);
            };
        }
        function Pae(e) {
            return (String(e).split(".")[1] || "").length;
        }
        function Iae(e, t) {
            const n = Math.pow(10, t);
            return Math.round(e * n) / n;
        }
        const Tae = hae,
            $ae = gae,
            Aae = vae,
            Mae = bae,
            zae = y.memo(function (t) {
                const {
                        title: n,
                        steps: r,
                        value: o,
                        label: i,
                        onValueChange: a,
                    } = t,
                    s = W(),
                    l = Ee(),
                    c = y.useCallback(
                        (h) => {
                            a(h[0], !0);
                        },
                        [a]
                    ),
                    d = y.useCallback(() => {
                        s.mark("click slider");
                    }, [s]),
                    u = y.useCallback(() => {
                        o && a(o, !1);
                    }, [o, a]);
                return v.jsx("div", {
                    className: "tlui-slider__container",
                    children: v.jsxs(Tae, {
                        "data-testid": t["data-testid"],
                        className: "tlui-slider",
                        "area-label": "Opacity",
                        dir: "ltr",
                        min: 0,
                        max: r,
                        step: 1,
                        value: o ? [o] : void 0,
                        onPointerDown: d,
                        onValueChange: c,
                        onPointerUp: u,
                        title: n + " — " + l(i),
                        children: [
                            v.jsx($ae, {
                                className: "tlui-slider__track",
                                dir: "ltr",
                                children:
                                    o !== null &&
                                    v.jsx(Aae, {
                                        className: "tlui-slider__range",
                                        dir: "ltr",
                                    }),
                            }),
                            o !== null &&
                            v.jsx(Mae, {
                                className: "tlui-slider__thumb",
                                dir: "ltr",
                            }),
                        ],
                    }),
                });
            }),
            Rae = y.memo(function ({
                                       label: t,
                                       uiTypeA: n,
                                       uiTypeB: r,
                                       labelA: o,
                                       labelB: i,
                                       itemsA: a,
                                       itemsB: s,
                                       styleA: l,
                                       styleB: c,
                                       valueA: d,
                                       valueB: u,
                                       onValueChange: h,
                                   }) {
                const p = Ee(),
                    m = y.useMemo(() => {
                        var g;
                        return (
                            ((g = a.find(
                                (b) => d.type === "shared" && d.value === b.value
                            )) == null
                                ? void 0
                                : g.icon) ?? "mixed"
                        );
                    }, [a, d]),
                    f = y.useMemo(() => {
                        var g;
                        return (
                            ((g = s.find(
                                (b) => u.type === "shared" && u.value === b.value
                            )) == null
                                ? void 0
                                : g.icon) ?? "mixed"
                        );
                    }, [s, u]);
                return d === void 0 && u === void 0
                    ? null
                    : v.jsxs("div", {
                        className: "tlui-style-panel__double-select-picker",
                        children: [
                            v.jsx("div", {
                                title: p(t),
                                className:
                                    "tlui-style-panel__double-select-picker-label",
                                children: p(t),
                            }),
                            v.jsxs("div", {
                                className: "tlui-buttons__horizontal",
                                children: [
                                    v.jsxs(xa, {
                                        id: `style panel ${n} A`,
                                        children: [
                                            v.jsx(Ju, {
                                                asChild: !0,
                                                onTouchEnd: (g) => $e(g),
                                                children: v.jsx(se, {
                                                    type: "icon",
                                                    "data-testid": `style.${n}`,
                                                    title:
                                                        p(o) +
                                                        " — " +
                                                        (d === null ||
                                                        d.type === "mixed"
                                                            ? p(
                                                                "style-panel.mixed"
                                                            )
                                                            : p(
                                                                `${n}-style.${d.value}`
                                                            )),
                                                    icon: m,
                                                    invertIcon: !0,
                                                    smallIcon: !0,
                                                }),
                                            }),
                                            v.jsx(Sa, {
                                                side: "bottom",
                                                align: "end",
                                                sideOffset: 0,
                                                alignOffset: -2,
                                                children: v.jsx("div", {
                                                    className:
                                                        "tlui-buttons__grid",
                                                    children: a.map((g) =>
                                                        v.jsx(
                                                            pr,
                                                            {
                                                                type: "icon",
                                                                title:
                                                                    p(o) +
                                                                    " — " +
                                                                    p(
                                                                        `${n}-style.${g.value}`
                                                                    ),
                                                                "data-testid": `style.${n}.${g.value}`,
                                                                icon: g.icon,
                                                                onClick: () =>
                                                                    h(
                                                                        l,
                                                                        g.value,
                                                                        !1
                                                                    ),
                                                                invertIcon: !0,
                                                            },
                                                            g.value
                                                        )
                                                    ),
                                                }),
                                            }),
                                        ],
                                    }),
                                    v.jsxs(xa, {
                                        id: `style panel ${r}`,
                                        children: [
                                            v.jsx(Ju, {
                                                asChild: !0,
                                                onTouchEnd: (g) => $e(g),
                                                children: v.jsx(se, {
                                                    type: "icon",
                                                    "data-testid": `style.${r}`,
                                                    title:
                                                        p(i) +
                                                        " — " +
                                                        (u === null ||
                                                        u.type === "mixed"
                                                            ? p(
                                                                "style-panel.mixed"
                                                            )
                                                            : p(
                                                                `${r}-style.${u.value}`
                                                            )),
                                                    icon: f,
                                                    smallIcon: !0,
                                                }),
                                            }),
                                            v.jsx(Sa, {
                                                side: "bottom",
                                                align: "end",
                                                sideOffset: 0,
                                                alignOffset: -2,
                                                children: v.jsx("div", {
                                                    className:
                                                        "tlui-buttons__grid",
                                                    children: s.map((g) =>
                                                        v.jsx(
                                                            pr,
                                                            {
                                                                type: "icon",
                                                                title:
                                                                    p(i) +
                                                                    " — " +
                                                                    p(
                                                                        `${r}-style.${g.value}`
                                                                    ),
                                                                "data-testid": `style.${r}.${g.value}`,
                                                                icon: g.icon,
                                                                onClick: () =>
                                                                    h(
                                                                        c,
                                                                        g.value,
                                                                        !1
                                                                    ),
                                                            },
                                                            g.value
                                                        )
                                                    ),
                                                }),
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                        ],
                    });
            }),
            fS = y.memo(function ({
                                      id: t,
                                      label: n,
                                      uiType: r,
                                      style: o,
                                      items: i,
                                      type: a,
                                      value: s,
                                      onValueChange: l,
                                  }) {
                const c = Ee(),
                    d = y.useMemo(() => {
                        var u;
                        return (u = i.find(
                            (h) => s.type === "shared" && h.value === s.value
                        )) == null
                            ? void 0
                            : u.icon;
                    }, [i, s]);
                return v.jsxs(xa, {
                    id: `style panel ${t}`,
                    children: [
                        v.jsx(Ju, {
                            asChild: !0,
                            onTouchEnd: (u) => $e(u),
                            children: v.jsx(se, {
                                type: a,
                                "data-testid": `style.${r}`,
                                title:
                                    s.type === "mixed"
                                        ? c("style-panel.mixed")
                                        : c(`${r}-style.${s.value}`),
                                label: n,
                                icon: d ?? "mixed",
                            }),
                        }),
                        v.jsx(Sa, {
                            side: "left",
                            align: "center",
                            alignOffset: 0,
                            children: v.jsx("div", {
                                className: "tlui-buttons__grid",
                                children: i.map((u) =>
                                    v.jsx(
                                        pr,
                                        {
                                            type: "icon",
                                            "data-testid": `style.${r}.${u.value}`,
                                            title: c(`${r}-style.${u.value}`),
                                            icon: u.icon,
                                            onClick: () => l(o, u.value, !1),
                                        },
                                        u.value
                                    )
                                ),
                            }),
                        }),
                    ],
                });
            }),
            ao = {
                color: [
                    {value: "black", icon: "color"},
                    {value: "grey", icon: "color"},
                    {value: "light-violet", icon: "color"},
                    {value: "violet", icon: "color"},
                    {value: "blue", icon: "color"},
                    {value: "light-blue", icon: "color"},
                    {value: "yellow", icon: "color"},
                    {value: "orange", icon: "color"},
                    {value: "green", icon: "color"},
                    {value: "light-green", icon: "color"},
                    {value: "light-red", icon: "color"},
                    {value: "red", icon: "color"},
                ],
                fill: [
                    {value: "none", icon: "fill-none"},
                    {value: "semi", icon: "fill-semi"},
                    {value: "solid", icon: "fill-solid"},
                    {value: "pattern", icon: "fill-pattern"},
                ],
                dash: [
                    {value: "draw", icon: "dash-draw"},
                    {value: "dashed", icon: "dash-dashed"},
                    {value: "dotted", icon: "dash-dotted"},
                    {value: "solid", icon: "dash-solid"},
                ],
                size: [
                    {value: "s", icon: "size-small"},
                    {value: "m", icon: "size-medium"},
                    {value: "l", icon: "size-large"},
                    {value: "xl", icon: "size-extra-large"},
                ],
                font: [
                    {value: "draw", icon: "font-draw"},
                    {value: "sans", icon: "font-sans"},
                    {value: "serif", icon: "font-serif"},
                    {value: "mono", icon: "font-mono"},
                ],
                horizontalAlign: [
                    {value: "start", icon: "text-align-left"},
                    {value: "middle", icon: "text-align-center"},
                    {value: "end", icon: "text-align-right"},
                ],
                verticalAlign: [
                    {value: "start", icon: "vertical-align-start"},
                    {value: "middle", icon: "vertical-align-center"},
                    {value: "end", icon: "vertical-align-end"},
                ],
                geo: [
                    {value: "rectangle", icon: "geo-rectangle"},
                    {value: "ellipse", icon: "geo-ellipse"},
                    {value: "cloud", icon: "geo-cloud"},
                    {value: "triangle", icon: "geo-triangle"},
                    {value: "diamond", icon: "geo-diamond"},
                    {value: "pentagon", icon: "geo-pentagon"},
                    {value: "hexagon", icon: "geo-hexagon"},
                    {value: "octagon", icon: "geo-octagon"},
                    {value: "star", icon: "geo-star"},
                    {value: "rhombus", icon: "geo-rhombus"},
                    {value: "rhombus-2", icon: "geo-rhombus-2"},
                    {value: "oval", icon: "geo-oval"},
                    {value: "trapezoid", icon: "geo-trapezoid"},
                    {value: "arrow-right", icon: "geo-arrow-right"},
                    {value: "arrow-left", icon: "geo-arrow-left"},
                    {value: "arrow-up", icon: "geo-arrow-up"},
                    {value: "arrow-down", icon: "geo-arrow-down"},
                    {value: "x-box", icon: "geo-x-box"},
                    {value: "check-box", icon: "geo-check-box"},
                ],
                arrowheadStart: [
                    {value: "none", icon: "arrowhead-none"},
                    {value: "arrow", icon: "arrowhead-arrow"},
                    {value: "triangle", icon: "arrowhead-triangle"},
                    {value: "square", icon: "arrowhead-square"},
                    {value: "dot", icon: "arrowhead-dot"},
                    {value: "diamond", icon: "arrowhead-diamond"},
                    {value: "inverted", icon: "arrowhead-triangle-inverted"},
                    {value: "bar", icon: "arrowhead-bar"},
                ],
                arrowheadEnd: [
                    {value: "none", icon: "arrowhead-none"},
                    {value: "arrow", icon: "arrowhead-arrow"},
                    {value: "triangle", icon: "arrowhead-triangle"},
                    {value: "square", icon: "arrowhead-square"},
                    {value: "dot", icon: "arrowhead-dot"},
                    {value: "diamond", icon: "arrowhead-diamond"},
                    {value: "inverted", icon: "arrowhead-triangle-inverted"},
                    {value: "bar", icon: "arrowhead-bar"},
                ],
                spline: [
                    {value: "line", icon: "spline-line"},
                    {value: "cubic", icon: "spline-cubic"},
                ],
            },
            LT = function ({isMobile: t}) {
                const n = W(),
                    r = CT(),
                    o = y.useCallback(() => {
                        t || n.updateInstanceState({isChangingStyle: !1});
                    }, [n, t]);
                if (!r) return null;
                const {styles: i, opacity: a} = r,
                    s = i.get(xo),
                    l = i.get(_f),
                    c = i.get(Sf),
                    d = i.get(Ef),
                    u = i.get(yo),
                    h = s === void 0,
                    p = l === void 0 && c === void 0,
                    m = d === void 0,
                    f = u === void 0;
                return v.jsxs("div", {
                    className: "tlui-style-panel",
                    "data-ismobile": t,
                    onPointerLeave: o,
                    children: [
                        v.jsx(Oae, {styles: i, opacity: a}),
                        !f && v.jsx(Dae, {styles: i}),
                        !(h && p && m) &&
                        v.jsxs("div", {
                            className: "tlui-style-panel__section",
                            "aria-label": "style panel styles",
                            children: [
                                v.jsx(Lae, {styles: i}),
                                v.jsx(Nae, {styles: i}),
                                v.jsx(jae, {styles: i}),
                            ],
                        }),
                    ],
                });
            };
        function ah() {
            const e = W();
            return N.useMemo(
                () =>
                    function (n, r, o) {
                        e.batch(() => {
                            e.isIn("select") &&
                            e.setStyleForSelectedShapes(n, r, {squashing: o}),
                                e.setStyleForNextShapes(n, r, {squashing: o}),
                                e.updateInstanceState({isChangingStyle: !0});
                        });
                    },
                [e]
            );
        }
        const sh = [0.1, 0.25, 0.5, 0.75, 1];
        function Oae({styles: e, opacity: t}) {
            const n = W(),
                r = Ee(),
                o = ah(),
                i = N.useCallback(
                    (h, p) => {
                        const m = sh[h];
                        n.batch(() => {
                            n.isIn("select") &&
                            n.setOpacityForSelectedShapes(m, {ephemeral: p}),
                                n.setOpacityForNextShapes(m, {ephemeral: p}),
                                n.updateInstanceState({isChangingStyle: !0});
                        });
                    },
                    [n]
                ),
                a = e.get(Cr),
                s = e.get(Tl),
                l = e.get(os),
                c = e.get(wo),
                d = s !== void 0 || l !== void 0 || c !== void 0,
                u =
                    t.type === "mixed"
                        ? -1
                        : sh.indexOf(oD(sh, (h) => Math.abs(h - t.value)));
            return v.jsxs(v.Fragment, {
                children: [
                    v.jsxs("div", {
                        tabIndex: -1,
                        className: "tlui-style-panel__section__common",
                        "aria-label": "style panel styles",
                        children: [
                            a === void 0
                                ? null
                                : v.jsx(Ic, {
                                    title: r("style-panel.color"),
                                    uiType: "color",
                                    style: Cr,
                                    items: ao.color,
                                    value: a,
                                    onValueChange: o,
                                }),
                            t === void 0
                                ? null
                                : v.jsx(zae, {
                                    "data-testid": "style.opacity",
                                    value: u >= 0 ? u : sh.length - 1,
                                    label:
                                        t.type === "mixed"
                                            ? "style-panel.mixed"
                                            : `opacity-style.${t.value}`,
                                    onValueChange: i,
                                    steps: sh.length - 1,
                                    title: r("style-panel.opacity"),
                                }),
                        ],
                    }),
                    d &&
                    v.jsxs("div", {
                        className: "tlui-style-panel__section",
                        "aria-label": "style panel styles",
                        children: [
                            s === void 0
                                ? null
                                : v.jsx(Ic, {
                                    title: r("style-panel.fill"),
                                    uiType: "fill",
                                    style: Tl,
                                    items: ao.fill,
                                    value: s,
                                    onValueChange: o,
                                }),
                            l === void 0
                                ? null
                                : v.jsx(Ic, {
                                    title: r("style-panel.dash"),
                                    uiType: "dash",
                                    style: os,
                                    items: ao.dash,
                                    value: l,
                                    onValueChange: o,
                                }),
                            c === void 0
                                ? null
                                : v.jsx(Ic, {
                                    title: r("style-panel.size"),
                                    uiType: "size",
                                    style: wo,
                                    items: ao.size,
                                    value: c,
                                    onValueChange: o,
                                }),
                        ],
                    }),
                ],
            });
        }
        function Dae({styles: e}) {
            const t = Ee(),
                n = ah(),
                r = e.get(yo),
                o = e.get(Qd),
                i = e.get(kf);
            return r === void 0 && o === void 0
                ? null
                : v.jsxs("div", {
                    className: "tlui-style-panel__section",
                    "aria-label": "style panel text",
                    children: [
                        r === void 0
                            ? null
                            : v.jsx(Ic, {
                                title: t("style-panel.font"),
                                uiType: "font",
                                style: yo,
                                items: ao.font,
                                value: r,
                                onValueChange: n,
                            }),
                        o === void 0
                            ? null
                            : v.jsxs("div", {
                                className: "tlui-style-panel__row",
                                children: [
                                    v.jsx(Ic, {
                                        title: t("style-panel.align"),
                                        uiType: "align",
                                        style: Qd,
                                        items: ao.horizontalAlign,
                                        value: o,
                                        onValueChange: n,
                                    }),
                                    v.jsx("div", {
                                        className:
                                            "tlui-style-panel__row__extra-button",
                                        children:
                                            i === void 0
                                                ? v.jsx(se, {
                                                    type: "icon",
                                                    title: t(
                                                        "style-panel.vertical-align"
                                                    ),
                                                    "data-testid":
                                                        "vertical-align",
                                                    icon: "vertical-align-center",
                                                    disabled: !0,
                                                })
                                                : v.jsx(fS, {
                                                    type: "icon",
                                                    id: "geo-vertical-alignment",
                                                    uiType: "verticalAlign",
                                                    style: kf,
                                                    items: ao.verticalAlign,
                                                    value: i,
                                                    onValueChange: n,
                                                }),
                                    }),
                                ],
                            }),
                    ],
                });
        }
        function Lae({styles: e}) {
            const t = ah(),
                n = e.get(xo);
            return n === void 0
                ? null
                : v.jsx(fS, {
                    id: "geo",
                    type: "menu",
                    label: "style-panel.geo",
                    uiType: "geo",
                    style: xo,
                    items: ao.geo,
                    value: n,
                    onValueChange: t,
                });
        }
        function jae({styles: e}) {
            const t = ah(),
                n = e.get(Ef);
            return n === void 0
                ? null
                : v.jsx(fS, {
                    id: "spline",
                    type: "menu",
                    label: "style-panel.spline",
                    uiType: "spline",
                    style: Ef,
                    items: ao.spline,
                    value: n,
                    onValueChange: t,
                });
        }
        function Nae({styles: e}) {
            const t = ah(),
                n = e.get(_f),
                r = e.get(Sf);
            return !n || !r
                ? null
                : v.jsx(Rae, {
                    label: "style-panel.arrowheads",
                    uiTypeA: "arrowheadStart",
                    styleA: Sf,
                    itemsA: ao.arrowheadStart,
                    valueA: r,
                    uiTypeB: "arrowheadEnd",
                    styleB: _f,
                    itemsB: ao.arrowheadEnd,
                    valueB: n,
                    onValueChange: t,
                    labelA: "style-panel.arrowhead-start",
                    labelB: "style-panel.arrowhead-end",
                });
        }
        function Fae({toast: e}) {
            const {removeToast: t} = $o(),
                n = Ee(),
                r = (i) => {
                    i || t(e.id);
                },
                o = e.actions && e.actions.length > 0;
            return v.jsxs(See, {
                onOpenChange: r,
                className: "tlui-toast__container",
                duration: e.keepOpen ? 1 / 0 : 5e3,
                children: [
                    e.icon &&
                    v.jsx("div", {
                        className: "tlui-toast__icon",
                        children: v.jsx(ur, {icon: e.icon}),
                    }),
                    v.jsxs("div", {
                        className: "tlui-toast__main",
                        children: [
                            v.jsxs("div", {
                                className: "tlui-toast__content",
                                children: [
                                    e.title &&
                                    v.jsx(_ee, {
                                        className: "tlui-toast__title",
                                        children: e.title,
                                    }),
                                    e.description &&
                                    v.jsx(kee, {
                                        className: "tlui-toast__description",
                                        children: e.description,
                                    }),
                                ],
                            }),
                            e.actions &&
                            v.jsxs("div", {
                                className: "tlui-toast__actions",
                                children: [
                                    e.actions.map((i, a) =>
                                        v.jsx(
                                            Cee,
                                            {
                                                altText: i.label,
                                                asChild: !0,
                                                onClick: i.onClick,
                                                children: v.jsx(se, {
                                                    type: i.type,
                                                    children: i.label,
                                                }),
                                            },
                                            a
                                        )
                                    ),
                                    v.jsx(v8, {
                                        asChild: !0,
                                        children: v.jsx(se, {
                                            type: "normal",
                                            className: "tlui-toast__close",
                                            style: {marginLeft: "auto"},
                                            children:
                                                e.closeLabel ??
                                                n("toast.close"),
                                        }),
                                    }),
                                ],
                            }),
                        ],
                    }),
                    !o &&
                    v.jsx(v8, {
                        asChild: !0,
                        children: v.jsx(se, {
                            type: "normal",
                            className: "tlui-toast__close",
                            children: e.closeLabel ?? n("toast.close"),
                        }),
                    }),
                ],
            });
        }
        function Bae() {
            const {toasts: e} = $o();
            return v.jsx(v.Fragment, {
                children: e.map((t) => v.jsx(Fae, {toast: t}, t.id)),
            });
        }
        const Uae = y.memo(Bae);
        function Hae() {
            const {toasts: e} = $o(),
                [t, n] = y.useState(!1);
            return (
                y.useEffect(() => {
                    let r = !1;
                    return (
                        e.length
                            ? n(!0)
                            : setTimeout(() => {
                                r || n(!1);
                            }, 1e3),
                            () => {
                                r = !0;
                            }
                    );
                }, [e.length, n]),
                    t ? v.jsx(iee, {className: "tlui-toast__viewport"}) : null
            );
        }
        function Vae() {
            const e = W(),
                t = Ee(),
                n = CT(),
                r = n == null ? void 0 : n.styles.get(Cr),
                o = Kn({isDarkMode: e.user.getIsDarkMode()}),
                i = (
                    (r == null ? void 0 : r.type) === "shared"
                        ? o[r.value]
                        : o.black
                ).solid,
                a = X(
                    "isHandOrEraserToolActive",
                    () => e.isInAny("hand", "zoom", "eraser", "laser"),
                    [e]
                ),
                s = y.useCallback(
                    (l) => {
                        l || e.updateInstanceState({isChangingStyle: !1});
                    },
                    [e]
                );
            return v.jsxs(lS, {
                id: "style menu",
                onOpenChange: s,
                children: [
                    v.jsx(cS, {
                        disabled: a,
                        children: v.jsx(se, {
                            type: "tool",
                            "data-testid": "mobile.styles",
                            style: {color: a ? "var(--color-muted-1)" : i},
                            title: t("style-panel.title"),
                            children: v.jsx(ur, {
                                icon: a
                                    ? "blob"
                                    : (r == null ? void 0 : r.type) === "mixed"
                                        ? "mixed"
                                        : "blob",
                            }),
                        }),
                    }),
                    v.jsx(bT, {
                        side: "top",
                        align: "end",
                        children: v.jsx(LT, {isMobile: !0}),
                    }),
                ],
            });
        }
        const Kae = [
            "select",
            "hand",
            "draw",
            "eraser",
            "text",
            "zoom",
            "laser",
            "highlight",
        ];
        function Wae({activeToolId: e}) {
            const t = W(),
                n = $r(),
                r = Ee(),
                o = X("is tool locked", () => t.getInstanceState().isToolLocked, [
                    t,
                ]);
            return !e || Kae.includes(e)
                ? null
                : v.jsx(se, {
                    type: "normal",
                    title: r("action.toggle-tool-lock"),
                    className: me("tlui-toolbar__lock-button", {
                        "tlui-toolbar__lock-button__mobile": n < 5,
                    }),
                    icon: o ? "lock" : "unlock",
                    onClick: () => t.updateInstanceState({isToolLocked: !o}),
                    smallIcon: !0,
                });
        }
        const Yae = y.memo(function () {
                const t = W(),
                    n = Ee(),
                    r = $r(),
                    o = N.useRef(void 0),
                    i = Pr(),
                    a = Rne(),
                    s = a.find((g) => g.toolItem.id === "laser"),
                    l = X("current tool id", () => t.getCurrentToolId(), [t]),
                    c = X("geo", () => t.getSharedStyles().getAsKnownValue(xo), [
                        t,
                    ]),
                    d = !i,
                    u = (g) =>
                        g.label ? `${n(g.label)} ${g.kbd ? Io(g.kbd) : ""}` : "",
                    h = a.find((g) => Tc(g.toolItem, l, c)),
                    {
                        itemsInPanel: p,
                        itemsInDropdown: m,
                        dropdownFirstItem: f,
                    } = N.useMemo(() => {
                        const g = [],
                            b = [];
                        let x;
                        const S = Math.min(8, 5 + r);
                        for (let _ = 4; _ < a.length; _++) {
                            const k = a[_];
                            _ < S ? g.push(k) : (k === h && (x = k), b.push(k));
                        }
                        return (
                            x ||
                            (o.current || (o.current = b[0]),
                                (x = o.current),
                            b.includes(x) || (x = b[0])),
                                (o.current = x),
                            b.length <= 2 && (g.push(...b), (b.length = 0)),
                                {
                                    itemsInPanel: g,
                                    itemsInDropdown: b,
                                    dropdownFirstItem: x,
                                }
                        );
                    }, [a, h, r]);
                return v.jsx("div", {
                    className: "tlui-toolbar",
                    children: v.jsxs("div", {
                        className: "tlui-toolbar__inner",
                        children: [
                            v.jsxs("div", {
                                className: "tlui-toolbar__left",
                                children: [
                                    !i &&
                                    v.jsxs("div", {
                                        className: "tlui-toolbar__extras",
                                        children: [
                                            r < 6 &&
                                            !(
                                                l === "hand" || l === "zoom"
                                            ) &&
                                            v.jsxs("div", {
                                                className:
                                                    "tlui-toolbar__extras__controls tlui-buttons__horizontal",
                                                children: [
                                                    v.jsx(kT, {}),
                                                    v.jsx(ST, {}),
                                                    v.jsx(_T, {}),
                                                    v.jsx(wT, {}),
                                                    v.jsx(yT, {}),
                                                ],
                                            }),
                                            v.jsx(Wae, {activeToolId: l}),
                                        ],
                                    }),
                                    v.jsxs("div", {
                                        className: me("tlui-toolbar__tools", {
                                            "tlui-toolbar__tools__mobile": r < 5,
                                        }),
                                        children: [
                                            a
                                                .slice(0, 2)
                                                .map(({toolItem: g}) =>
                                                    v.jsx(
                                                        lh,
                                                        {
                                                            item: g,
                                                            title: u(g),
                                                            isSelected: Tc(g, l, c),
                                                        },
                                                        g.id
                                                    )
                                                ),
                                            i &&
                                            s &&
                                            v.jsx(
                                                lh,
                                                {
                                                    item: s.toolItem,
                                                    title: u(s.toolItem),
                                                    isSelected: Tc(
                                                        s.toolItem,
                                                        l,
                                                        c
                                                    ),
                                                },
                                                s.toolItem.id
                                            ),
                                            d &&
                                            v.jsxs(v.Fragment, {
                                                children: [
                                                    a
                                                        .slice(2, 4)
                                                        .map(({toolItem: g}) =>
                                                            v.jsx(
                                                                lh,
                                                                {
                                                                    item: g,
                                                                    title: u(g),
                                                                    isSelected:
                                                                        Tc(
                                                                            g,
                                                                            l,
                                                                            c
                                                                        ),
                                                                },
                                                                g.id
                                                            )
                                                        ),
                                                    p.map(({toolItem: g}) =>
                                                        v.jsx(
                                                            lh,
                                                            {
                                                                item: g,
                                                                title: u(g),
                                                                isSelected: Tc(
                                                                    g,
                                                                    l,
                                                                    c
                                                                ),
                                                            },
                                                            g.id
                                                        )
                                                    ),
                                                    m.length
                                                        ? v.jsxs(v.Fragment, {
                                                            children: [
                                                                v.jsx(
                                                                    lh,
                                                                    {
                                                                        item: f.toolItem,
                                                                        title: u(
                                                                            f.toolItem
                                                                        ),
                                                                        isSelected:
                                                                            Tc(
                                                                                f.toolItem,
                                                                                l,
                                                                                c
                                                                            ),
                                                                    },
                                                                    f.toolItem
                                                                        .id
                                                                ),
                                                                v.jsxs(xa, {
                                                                    id: "toolbar overflow",
                                                                    modal: !1,
                                                                    children:
                                                                        [
                                                                            v.jsx(
                                                                                eh,
                                                                                {
                                                                                    children:
                                                                                        v.jsx(
                                                                                            se,
                                                                                            {
                                                                                                className:
                                                                                                    "tlui-toolbar__overflow",
                                                                                                icon: "chevron-up",
                                                                                                type: "tool",
                                                                                                "data-testid":
                                                                                                    "tools.more",
                                                                                                title: n(
                                                                                                    "tool-panel.more"
                                                                                                ),
                                                                                            }
                                                                                        ),
                                                                                }
                                                                            ),
                                                                            v.jsx(
                                                                                Sa,
                                                                                {
                                                                                    side: "top",
                                                                                    align: "center",
                                                                                    children:
                                                                                        v.jsx(
                                                                                            Gae,
                                                                                            {
                                                                                                toolbarItems:
                                                                                                m,
                                                                                            }
                                                                                        ),
                                                                                }
                                                                            ),
                                                                        ],
                                                                }),
                                                            ],
                                                        })
                                                        : null,
                                                ],
                                            }),
                                        ],
                                    }),
                                ],
                            }),
                            r < 5 &&
                            !i &&
                            v.jsx("div", {
                                className: "tlui-toolbar__tools",
                                children: v.jsx(Vae, {}),
                            }),
                        ],
                    }),
                });
            }),
            Gae = ze(function ({toolbarItems: t}) {
                const n = Ee();
                return v.jsx("div", {
                    className: "tlui-buttons__grid",
                    children: t.map(
                        ({
                             toolItem: {
                                 id: r,
                                 meta: o,
                                 kbd: i,
                                 label: a,
                                 onSelect: s,
                                 icon: l,
                             },
                         }) =>
                            v.jsx(
                                pr,
                                {
                                    type: "icon",
                                    className: "tlui-button-grid__button",
                                    "data-testid": `tools.more.${r}`,
                                    "data-tool": r,
                                    "data-geo": (o == null ? void 0 : o.geo) ?? "",
                                    "aria-label": a,
                                    onClick: () => s("toolbar"),
                                    title: a ? `${n(a)} ${i ? Io(i) : ""}` : "",
                                    icon: l,
                                },
                                r
                            )
                    ),
                });
            });
        function lh({item: e, title: t, isSelected: n}) {
            var r;
            return v.jsx(se, {
                type: "tool",
                "data-testid": `tools.${e.id}`,
                "data-tool": e.id,
                "data-geo": ((r = e.meta) == null ? void 0 : r.geo) ?? "",
                "aria-label": e.label,
                title: t,
                icon: e.icon,
                "data-state": n ? "selected" : void 0,
                onClick: () => e.onSelect("toolbar"),
                onTouchStart: (o) => {
                    $e(o), e.onSelect("toolbar");
                },
            });
        }
        const Tc = (e, t, n) => {
            var r, o;
            return (r = e.meta) != null && r.geo
                ? t === "geo" && n === ((o = e.meta) == null ? void 0 : o.geo)
                : t === e.id;
        };
        function Xae() {
            const e = W(),
                {addToast: t} = $o();
            y.useEffect(() => {
                function n({name: r, count: o}) {
                    t({
                        title: "Maximum Shapes Reached",
                        description: `You've reached the maximum number of shapes allowed on ${r} (${o}). Please delete some shapes or move to a different page to continue.`,
                    });
                }
                return (
                    e.addListener("max-shapes", n),
                        () => {
                            e.removeListener("max-shapes", n);
                        }
                );
            }, [e, t]);
        }
        const mS =
            typeof navigator < "u"
                ? navigator.userAgent.toLowerCase().indexOf("firefox") > 0
                : !1;
        function gS(e, t, n, r) {
            e.addEventListener
                ? e.addEventListener(t, n, r)
                : e.attachEvent && e.attachEvent("on".concat(t), n);
        }
        function ch(e, t, n, r) {
            e.removeEventListener
                ? e.removeEventListener(t, n, r)
                : e.detachEvent && e.detachEvent("on".concat(t), n);
        }
        function jT(e, t) {
            const n = t.slice(0, t.length - 1);
            for (let r = 0; r < n.length; r++) n[r] = e[n[r].toLowerCase()];
            return n;
        }
        function NT(e) {
            typeof e != "string" && (e = ""), (e = e.replace(/\s/g, ""));
            const t = e.split(",");
            let n = t.lastIndexOf("");
            for (; n >= 0; )
                (t[n - 1] += ","), t.splice(n, 1), (n = t.lastIndexOf(""));
            return t;
        }
        function qae(e, t) {
            const n = e.length >= t.length ? e : t,
                r = e.length >= t.length ? t : e;
            let o = !0;
            for (let i = 0; i < n.length; i++) r.indexOf(n[i]) === -1 && (o = !1);
            return o;
        }
        const dh = {
                backspace: 8,
                "⌫": 8,
                tab: 9,
                clear: 12,
                enter: 13,
                "↩": 13,
                return: 13,
                esc: 27,
                escape: 27,
                space: 32,
                left: 37,
                up: 38,
                right: 39,
                down: 40,
                del: 46,
                delete: 46,
                ins: 45,
                insert: 45,
                home: 36,
                end: 35,
                pageup: 33,
                pagedown: 34,
                capslock: 20,
                num_0: 96,
                num_1: 97,
                num_2: 98,
                num_3: 99,
                num_4: 100,
                num_5: 101,
                num_6: 102,
                num_7: 103,
                num_8: 104,
                num_9: 105,
                num_multiply: 106,
                num_add: 107,
                num_enter: 108,
                num_subtract: 109,
                num_decimal: 110,
                num_divide: 111,
                "⇪": 20,
                ",": 188,
                ".": 190,
                "/": 191,
                "`": 192,
                "-": mS ? 173 : 189,
                "=": mS ? 61 : 187,
                ";": mS ? 59 : 186,
                "'": 222,
                "[": 219,
                "]": 221,
                "\\": 220,
            },
            Ro = {
                "⇧": 16,
                shift: 16,
                "⌥": 18,
                alt: 18,
                option: 18,
                "⌃": 17,
                ctrl: 17,
                control: 17,
                "⌘": 91,
                cmd: 91,
                command: 91,
            },
            vS = {
                16: "shiftKey",
                18: "altKey",
                17: "ctrlKey",
                91: "metaKey",
                shiftKey: 16,
                ctrlKey: 17,
                altKey: 18,
                metaKey: 91,
            },
            Zt = {16: !1, 18: !1, 17: !1, 91: !1},
            ft = {};
        for (let e = 1; e < 20; e++) dh["f".concat(e)] = 111 + e;
        let Qe = [],
            uh = null,
            FT = "all";
        const _i = new Map(),
            hh = (e) =>
                dh[e.toLowerCase()] ||
                Ro[e.toLowerCase()] ||
                e.toUpperCase().charCodeAt(0),
            Zae = (e) => Object.keys(dh).find((t) => dh[t] === e),
            Qae = (e) => Object.keys(Ro).find((t) => Ro[t] === e);
        function BT(e) {
            FT = e || "all";
        }
        function ph() {
            return FT || "all";
        }
        function Jae() {
            return Qe.slice(0);
        }
        function ese() {
            return Qe.map((e) => Zae(e) || Qae(e) || String.fromCharCode(e));
        }
        function tse() {
            const e = [];
            return (
                Object.keys(ft).forEach((t) => {
                    ft[t].forEach((n) => {
                        let {key: r, scope: o, mods: i, shortcut: a} = n;
                        e.push({
                            scope: o,
                            shortcut: a,
                            mods: i,
                            keys: r.split("+").map((s) => hh(s)),
                        });
                    });
                }),
                    e
            );
        }
        function nse(e) {
            const t = e.target || e.srcElement,
                {tagName: n} = t;
            let r = !0;
            const o =
                n === "INPUT" &&
                ![
                    "checkbox",
                    "radio",
                    "range",
                    "button",
                    "file",
                    "reset",
                    "submit",
                    "color",
                ].includes(t.type);
            return (
                (t.isContentEditable ||
                    ((o || n === "TEXTAREA" || n === "SELECT") && !t.readOnly)) &&
                (r = !1),
                    r
            );
        }
        function rse(e) {
            return typeof e == "string" && (e = hh(e)), Qe.indexOf(e) !== -1;
        }
        function ose(e, t) {
            let n, r;
            e || (e = ph());
            for (const o in ft)
                if (Object.prototype.hasOwnProperty.call(ft, o))
                    for (n = ft[o], r = 0; r < n.length; )
                        n[r].scope === e
                            ? n.splice(r, 1).forEach((a) => {
                                let {element: s} = a;
                                return bS(s);
                            })
                            : r++;
            ph() === e && BT(t || "all");
        }
        function ise(e) {
            let t = e.keyCode || e.which || e.charCode;
            const n = Qe.indexOf(t);
            if (
                (n >= 0 && Qe.splice(n, 1),
                e.key && e.key.toLowerCase() === "meta" && Qe.splice(0, Qe.length),
                (t === 93 || t === 224) && (t = 91),
                t in Zt)
            ) {
                Zt[t] = !1;
                for (const r in Ro) Ro[r] === t && (so[r] = !1);
            }
        }
        function UT(e) {
            if (typeof e > "u")
                Object.keys(ft).forEach((o) => {
                    Array.isArray(ft[o]) && ft[o].forEach((i) => Jg(i)),
                        delete ft[o];
                }),
                    bS(null);
            else if (Array.isArray(e))
                e.forEach((o) => {
                    o.key && Jg(o);
                });
            else if (typeof e == "object") e.key && Jg(e);
            else if (typeof e == "string") {
                for (
                    var t = arguments.length,
                        n = new Array(t > 1 ? t - 1 : 0),
                        r = 1;
                    r < t;
                    r++
                )
                    n[r - 1] = arguments[r];
                let [o, i] = n;
                typeof o == "function" && ((i = o), (o = "")),
                    Jg({key: e, scope: o, method: i, splitKey: "+"});
            }
        }
        const Jg = (e) => {
            let {key: t, scope: n, method: r, splitKey: o = "+"} = e;
            NT(t).forEach((a) => {
                const s = a.split(o),
                    l = s.length,
                    c = s[l - 1],
                    d = c === "*" ? "*" : hh(c);
                if (!ft[d]) return;
                n || (n = ph());
                const u = l > 1 ? jT(Ro, s) : [],
                    h = [];
                (ft[d] = ft[d].filter((p) => {
                    const f =
                        (r ? p.method === r : !0) &&
                        p.scope === n &&
                        qae(p.mods, u);
                    return f && h.push(p.element), !f;
                })),
                    h.forEach((p) => bS(p));
            });
        };
        function HT(e, t, n, r) {
            if (t.element !== r) return;
            let o;
            if (t.scope === n || t.scope === "all") {
                o = t.mods.length > 0;
                for (const i in Zt)
                    Object.prototype.hasOwnProperty.call(Zt, i) &&
                    ((!Zt[i] && t.mods.indexOf(+i) > -1) ||
                        (Zt[i] && t.mods.indexOf(+i) === -1)) &&
                    (o = !1);
                ((t.mods.length === 0 &&
                        !Zt[16] &&
                        !Zt[18] &&
                        !Zt[17] &&
                        !Zt[91]) ||
                    o ||
                    t.shortcut === "*") &&
                ((t.keys = []),
                    (t.keys = t.keys.concat(Qe)),
                t.method(e, t) === !1 &&
                (e.preventDefault
                    ? e.preventDefault()
                    : (e.returnValue = !1),
                e.stopPropagation && e.stopPropagation(),
                e.cancelBubble && (e.cancelBubble = !0)));
            }
        }
        function VT(e, t) {
            const n = ft["*"];
            let r = e.keyCode || e.which || e.charCode;
            if (!so.filter.call(this, e)) return;
            if (
                ((r === 93 || r === 224) && (r = 91),
                Qe.indexOf(r) === -1 && r !== 229 && Qe.push(r),
                    ["ctrlKey", "altKey", "shiftKey", "metaKey"].forEach((s) => {
                        const l = vS[s];
                        e[s] && Qe.indexOf(l) === -1
                            ? Qe.push(l)
                            : !e[s] && Qe.indexOf(l) > -1
                                ? Qe.splice(Qe.indexOf(l), 1)
                                : s === "metaKey" &&
                                e[s] &&
                                Qe.length === 3 &&
                                (e.ctrlKey ||
                                    e.shiftKey ||
                                    e.altKey ||
                                    (Qe = Qe.slice(Qe.indexOf(l))));
                    }),
                r in Zt)
            ) {
                Zt[r] = !0;
                for (const s in Ro) Ro[s] === r && (so[s] = !0);
                if (!n) return;
            }
            for (const s in Zt)
                Object.prototype.hasOwnProperty.call(Zt, s) && (Zt[s] = e[vS[s]]);
            e.getModifierState &&
            !(e.altKey && !e.ctrlKey) &&
            e.getModifierState("AltGraph") &&
            (Qe.indexOf(17) === -1 && Qe.push(17),
            Qe.indexOf(18) === -1 && Qe.push(18),
                (Zt[17] = !0),
                (Zt[18] = !0));
            const o = ph();
            if (n)
                for (let s = 0; s < n.length; s++)
                    n[s].scope === o &&
                    ((e.type === "keydown" && n[s].keydown) ||
                        (e.type === "keyup" && n[s].keyup)) &&
                    HT(e, n[s], o, t);
            if (!(r in ft)) return;
            const i = ft[r],
                a = i.length;
            for (let s = 0; s < a; s++)
                if (
                    ((e.type === "keydown" && i[s].keydown) ||
                        (e.type === "keyup" && i[s].keyup)) &&
                    i[s].key
                ) {
                    const l = i[s],
                        {splitKey: c} = l,
                        d = l.key.split(c),
                        u = [];
                    for (let h = 0; h < d.length; h++) u.push(hh(d[h]));
                    u.sort().join("") === Qe.sort().join("") && HT(e, l, o, t);
                }
        }
        function so(e, t, n) {
            Qe = [];
            const r = NT(e);
            let o = [],
                i = "all",
                a = document,
                s = 0,
                l = !1,
                c = !0,
                d = "+",
                u = !1,
                h = !1;
            for (
                n === void 0 && typeof t == "function" && (n = t),
                Object.prototype.toString.call(t) === "[object Object]" &&
                (t.scope && (i = t.scope),
                t.element && (a = t.element),
                t.keyup && (l = t.keyup),
                t.keydown !== void 0 && (c = t.keydown),
                t.capture !== void 0 && (u = t.capture),
                typeof t.splitKey == "string" && (d = t.splitKey),
                t.single === !0 && (h = !0)),
                typeof t == "string" && (i = t),
                h && UT(e, i);
                s < r.length;
                s++
            )
                (e = r[s].split(d)),
                    (o = []),
                e.length > 1 && (o = jT(Ro, e)),
                    (e = e[e.length - 1]),
                    (e = e === "*" ? "*" : hh(e)),
                e in ft || (ft[e] = []),
                    ft[e].push({
                        keyup: l,
                        keydown: c,
                        scope: i,
                        mods: o,
                        shortcut: r[s],
                        method: n,
                        key: r[s],
                        splitKey: d,
                        element: a,
                    });
            if (typeof a < "u" && window) {
                if (!_i.has(a)) {
                    const p = function () {
                            let f =
                                arguments.length > 0 && arguments[0] !== void 0
                                    ? arguments[0]
                                    : window.event;
                            return VT(f, a);
                        },
                        m = function () {
                            let f =
                                arguments.length > 0 && arguments[0] !== void 0
                                    ? arguments[0]
                                    : window.event;
                            VT(f, a), ise(f);
                        };
                    _i.set(a, {keydownListener: p, keyupListenr: m, capture: u}),
                        gS(a, "keydown", p, u),
                        gS(a, "keyup", m, u);
                }
                if (!uh) {
                    const p = () => {
                        Qe = [];
                    };
                    (uh = {listener: p, capture: u}), gS(window, "focus", p, u);
                }
            }
        }
        function ase(e) {
            let t =
                arguments.length > 1 && arguments[1] !== void 0
                    ? arguments[1]
                    : "all";
            Object.keys(ft).forEach((n) => {
                ft[n]
                    .filter((o) => o.scope === t && o.shortcut === e)
                    .forEach((o) => {
                        o && o.method && o.method();
                    });
            });
        }
        function bS(e) {
            const t = Object.values(ft).flat();
            if (
                t.findIndex((r) => {
                    let {element: o} = r;
                    return o === e;
                }) < 0
            ) {
                const {
                    keydownListener: r,
                    keyupListenr: o,
                    capture: i,
                } = _i.get(e) || {};
                r &&
                o &&
                (ch(e, "keyup", o, i), ch(e, "keydown", r, i), _i.delete(e));
            }
            if (
                (t.length <= 0 || _i.size <= 0) &&
                (Object.keys(_i).forEach((o) => {
                    const {
                        keydownListener: i,
                        keyupListenr: a,
                        capture: s,
                    } = _i.get(o) || {};
                    i &&
                    a &&
                    (ch(o, "keyup", a, s),
                        ch(o, "keydown", i, s),
                        _i.delete(o));
                }),
                    _i.clear(),
                    Object.keys(ft).forEach((o) => delete ft[o]),
                    uh)
            ) {
                const {listener: o, capture: i} = uh;
                ch(window, "focus", o, i), (uh = null);
            }
        }
        const yS = {
            getPressedKeyString: ese,
            setScope: BT,
            getScope: ph,
            deleteScope: ose,
            getPressedKeyCodes: Jae,
            getAllKeyCodes: tse,
            isPressed: rse,
            filter: nse,
            trigger: ase,
            unbind: UT,
            keyMap: dh,
            modifier: Ro,
            modifierMap: vS,
        };
        for (const e in yS)
            Object.prototype.hasOwnProperty.call(yS, e) && (so[e] = yS[e]);
        if (typeof window < "u") {
            const e = window.hotkeys;
            (so.noConflict = (t) => (
                t && window.hotkeys === so && (window.hotkeys = e), so
            )),
                (window.hotkeys = so);
        }
        const KT = ["copy", "cut", "paste", "asset"];
        function sse() {
            const e = W(),
                t = Pr(),
                n = bn(),
                r = Rx(),
                o = X("is focused", () => e.getInstanceState().isFocused, [e]);
            y.useEffect(() => {
                if (!o) return;
                const i = e.getContainer();
                so.setScope(e.store.id);
                const a = (l, c) => {
                        so(l, {element: i, scope: e.store.id}, c);
                    },
                    s = () =>
                        e.getIsMenuOpen() ||
                        e.getEditingShapeId() !== null ||
                        e.getCrashingError();
                for (const l of Object.values(n))
                    l.kbd &&
                    ((t && !l.readonlyOk) ||
                        KT.includes(l.id) ||
                        a(WT(l.kbd), (c) => {
                            s() || ($e(c), l.onSelect("kbd"));
                        }));
                for (const l of Object.values(r))
                    !l.kbd ||
                    (!l.readonlyOk && e.getInstanceState().isReadonly) ||
                    KT.includes(l.id) ||
                    a(WT(l.kbd), (c) => {
                        s() || ($e(c), l.onSelect("kbd"));
                    });
                return () => {
                    so.deleteScope(e.store.id);
                };
            }, [n, r, t, e, o]);
        }
        function WT(e) {
            return lse(e)
                .map((t) => {
                    let n = "";
                    const r = t.split("");
                    return (
                        r.length === 1
                            ? (n = r[0])
                            : r[0] === "!"
                                ? (n = `shift+${r[1]}`)
                                : r[0] === "?"
                                    ? r.length === 3 && r[1] === "!"
                                        ? (n = `alt+shift+${r[2]}`)
                                        : (n = `alt+${r[1]}`)
                                    : r[0] === "$"
                                        ? r[1] === "!"
                                            ? (n = `cmd+shift+${r[2]},ctrl+shift+${r[2]}`)
                                            : r[1] === "?"
                                                ? (n = `cmd+⌥+${r[2]},ctrl+alt+${r[2]}`)
                                                : (n = `cmd+${r[1]},ctrl+${r[1]}`)
                                        : (n = t),
                            n
                    );
                })
                .join(",");
        }
        function lse(e) {
            typeof e != "string" && (e = ""), (e = e.replace(/\s/g, ""));
            const t = e.split(",");
            let n = t.lastIndexOf("");
            for (; n >= 0; )
                (t[n - 1] += ","), t.splice(n, 1), (n = t.lastIndexOf(""));
            return t;
        }
        const cse = N.memo(function ({
                                         shareZone: t,
                                         topZone: n,
                                         renderDebugMenuItems: r,
                                         children: o,
                                         hideUi: i,
                                         ...a
                                     }) {
                return v.jsx(Nne, {
                    ...a,
                    children: v.jsx(dse, {
                        hideUi: i,
                        shareZone: t,
                        topZone: n,
                        renderDebugMenuItems: r,
                        children: o,
                    }),
                });
            }),
            dse = N.memo(function ({children: t, hideUi: n, ...r}) {
                return v.jsxs(v.Fragment, {
                    children: [t, n ? null : v.jsx(use, {...r})],
                });
            }),
            use = N.memo(function ({
                                       shareZone: t,
                                       topZone: n,
                                       renderDebugMenuItems: r,
                                   }) {
                const o = W(),
                    i = Ee(),
                    a = $r(),
                    s = X("isReadonlyMode", () => o.getInstanceState().isReadonly, [
                        o,
                    ]),
                    l = X("focus", () => o.getInstanceState().isFocusMode, [o]),
                    c = X("debug", () => o.getInstanceState().isDebugMode, [o]);
                sse(), rne(), Xae();
                const {"toggle-focus-mode": d} = bn();
                return v.jsx(c8, {
                    children: v.jsxs("div", {
                        className: me("tlui-layout", {
                            "tlui-layout__mobile": a < 5,
                        }),
                        "data-breakpoint": a,
                        children: [
                            l
                                ? v.jsx("div", {
                                    className: "tlui-layout__top",
                                    children: v.jsx(se, {
                                        type: "icon",
                                        className: "tlui-focus-button",
                                        title: `${i(
                                            "focus-mode.toggle-focus-mode"
                                        )}`,
                                        icon: "dot",
                                        onClick: () => d.onSelect("menu"),
                                    }),
                                })
                                : v.jsxs(v.Fragment, {
                                    children: [
                                        v.jsxs("div", {
                                            className: "tlui-layout__top",
                                            children: [
                                                v.jsxs("div", {
                                                    className:
                                                        "tlui-layout__top__left",
                                                    children: [
                                                        v.jsx(eae, {}),
                                                        v.jsxs("div", {
                                                            className:
                                                                "tlui-helper-buttons",
                                                            children: [
                                                                v.jsx(oae, {}),
                                                                v.jsx(Bne, {}),
                                                                v.jsx(iae, {}),
                                                            ],
                                                        }),
                                                    ],
                                                }),
                                                v.jsx("div", {
                                                    className:
                                                        "tlui-layout__top__center",
                                                    children: n,
                                                }),
                                                v.jsxs("div", {
                                                    className:
                                                        "tlui-layout__top__right",
                                                    children: [
                                                        t,
                                                        a >= 5 &&
                                                        !s &&
                                                        v.jsx("div", {
                                                            className:
                                                                "tlui-style-panel__wrapper",
                                                            children: v.jsx(
                                                                LT,
                                                                {}
                                                            ),
                                                        }),
                                                    ],
                                                }),
                                            ],
                                        }),
                                        v.jsxs("div", {
                                            className: "tlui-layout__bottom",
                                            children: [
                                                v.jsxs("div", {
                                                    className:
                                                        "tlui-layout__bottom__main",
                                                    children: [
                                                        v.jsx(rae, {}),
                                                        v.jsx(Yae, {}),
                                                        a >= 4 && v.jsx(_ie, {}),
                                                    ],
                                                }),
                                                c &&
                                                v.jsx(hie, {
                                                    renderDebugMenuItems:
                                                        r ?? null,
                                                }),
                                            ],
                                        }),
                                    ],
                                }),
                            v.jsx(Uae, {}),
                            v.jsx(wie, {}),
                            v.jsx(Hae, {}),
                            v.jsx(xie, {}),
                        ],
                    }),
                });
            }),
            YT = "ContextMenu",
            [hse, dme] = Po(YT, [Kg]),
            Oo = Kg(),
            [pse, GT] = hse(YT),
            fse = (e) => {
                const {
                        __scopeContextMenu: t,
                        children: n,
                        onOpenChange: r,
                        dir: o,
                        modal: i = !0,
                    } = e,
                    [a, s] = y.useState(!1),
                    l = Oo(t),
                    c = vn(r),
                    d = y.useCallback(
                        (u) => {
                            s(u), c(u);
                        },
                        [c]
                    );
                return y.createElement(
                    pse,
                    {scope: t, open: a, onOpenChange: d, modal: i},
                    y.createElement(
                        N9,
                        J({}, l, {dir: o, open: a, onOpenChange: d, modal: i}),
                        n
                    )
                );
            },
            mse = "ContextMenuTrigger",
            gse = y.forwardRef((e, t) => {
                const {__scopeContextMenu: n, disabled: r = !1, ...o} = e,
                    i = GT(mse, n),
                    a = Oo(n),
                    s = y.useRef({x: 0, y: 0}),
                    l = y.useRef({
                        getBoundingClientRect: () =>
                            DOMRect.fromRect({width: 0, height: 0, ...s.current}),
                    }),
                    c = y.useRef(0),
                    d = y.useCallback(() => window.clearTimeout(c.current), []),
                    u = (h) => {
                        (s.current = {x: h.clientX, y: h.clientY}),
                            i.onOpenChange(!0);
                    };
                return (
                    y.useEffect(() => d, [d]),
                        y.useEffect(() => void (r && d()), [r, d]),
                        y.createElement(
                            y.Fragment,
                            null,
                            y.createElement(F9, J({}, a, {virtualRef: l})),
                            y.createElement(
                                De.span,
                                J(
                                    {
                                        "data-state": i.open ? "open" : "closed",
                                        "data-disabled": r ? "" : void 0,
                                    },
                                    o,
                                    {
                                        ref: t,
                                        style: {WebkitTouchCallout: "none", ...e.style},
                                        onContextMenu: r
                                            ? e.onContextMenu
                                            : ae(e.onContextMenu, (h) => {
                                                d(), u(h), h.preventDefault();
                                            }),
                                        onPointerDown: r
                                            ? e.onPointerDown
                                            : ae(
                                                e.onPointerDown,
                                                ev((h) => {
                                                    d(),
                                                        (c.current =
                                                            window.setTimeout(
                                                                () => u(h),
                                                                700
                                                            ));
                                                })
                                            ),
                                        onPointerMove: r
                                            ? e.onPointerMove
                                            : ae(e.onPointerMove, ev(d)),
                                        onPointerCancel: r
                                            ? e.onPointerCancel
                                            : ae(e.onPointerCancel, ev(d)),
                                        onPointerUp: r
                                            ? e.onPointerUp
                                            : ae(e.onPointerUp, ev(d)),
                                    }
                                )
                            )
                        )
                );
            }),
            vse = (e) => {
                const {__scopeContextMenu: t, ...n} = e,
                    r = Oo(t);
                return y.createElement(B9, J({}, r, n));
            },
            bse = "ContextMenuContent",
            yse = y.forwardRef((e, t) => {
                const {__scopeContextMenu: n, ...r} = e,
                    o = GT(bse, n),
                    i = Oo(n),
                    a = y.useRef(!1);
                return y.createElement(
                    U9,
                    J({}, i, r, {
                        ref: t,
                        side: "right",
                        sideOffset: 2,
                        align: "start",
                        onCloseAutoFocus: (s) => {
                            var l;
                            (l = e.onCloseAutoFocus) === null ||
                            l === void 0 ||
                            l.call(e, s),
                            !s.defaultPrevented &&
                            a.current &&
                            s.preventDefault(),
                                (a.current = !1);
                        },
                        onInteractOutside: (s) => {
                            var l;
                            (l = e.onInteractOutside) === null ||
                            l === void 0 ||
                            l.call(e, s),
                            !s.defaultPrevented && !o.modal && (a.current = !0);
                        },
                        style: {
                            ...e.style,
                            "--radix-context-menu-content-transform-origin":
                                "var(--radix-popper-transform-origin)",
                            "--radix-context-menu-content-available-width":
                                "var(--radix-popper-available-width)",
                            "--radix-context-menu-content-available-height":
                                "var(--radix-popper-available-height)",
                            "--radix-context-menu-trigger-width":
                                "var(--radix-popper-anchor-width)",
                            "--radix-context-menu-trigger-height":
                                "var(--radix-popper-anchor-height)",
                        },
                    })
                );
            }),
            wse = y.forwardRef((e, t) => {
                const {__scopeContextMenu: n, ...r} = e,
                    o = Oo(n);
                return y.createElement(H9, J({}, o, r, {ref: t}));
            }),
            xse = y.forwardRef((e, t) => {
                const {__scopeContextMenu: n, ...r} = e,
                    o = Oo(n);
                return y.createElement(V9, J({}, o, r, {ref: t}));
            }),
            Sse = y.forwardRef((e, t) => {
                const {__scopeContextMenu: n, ...r} = e,
                    o = Oo(n);
                return y.createElement(K9, J({}, o, r, {ref: t}));
            }),
            _se = (e) => {
                const {
                        __scopeContextMenu: t,
                        children: n,
                        onOpenChange: r,
                        open: o,
                        defaultOpen: i,
                    } = e,
                    a = Oo(t),
                    [s, l] = ga({prop: o, defaultProp: i, onChange: r});
                return y.createElement(W9, J({}, a, {open: s, onOpenChange: l}), n);
            },
            kse = y.forwardRef((e, t) => {
                const {__scopeContextMenu: n, ...r} = e,
                    o = Oo(n);
                return y.createElement(Y9, J({}, o, r, {ref: t}));
            }),
            Cse = y.forwardRef((e, t) => {
                const {__scopeContextMenu: n, ...r} = e,
                    o = Oo(n);
                return y.createElement(
                    G9,
                    J({}, o, r, {
                        ref: t,
                        style: {
                            ...e.style,
                            "--radix-context-menu-content-transform-origin":
                                "var(--radix-popper-transform-origin)",
                            "--radix-context-menu-content-available-width":
                                "var(--radix-popper-available-width)",
                            "--radix-context-menu-content-available-height":
                                "var(--radix-popper-available-height)",
                            "--radix-context-menu-trigger-width":
                                "var(--radix-popper-anchor-width)",
                            "--radix-context-menu-trigger-height":
                                "var(--radix-popper-anchor-height)",
                        },
                    })
                );
            });
        function ev(e) {
            return (t) => (t.pointerType !== "mouse" ? e(t) : void 0);
        }
        const Ese = fse,
            Pse = gse,
            wS = vse,
            Ise = yse,
            xS = wse,
            SS = xse,
            Tse = Sse,
            XT = _se,
            qT = kse,
            ZT = Cse,
            $se = ze(function () {
                const t = W(),
                    n = dn(),
                    r = t.getPages(),
                    o = t.getCurrentPageId(),
                    i = Ee(),
                    {addToast: a} = $o();
                return v.jsxs(XT, {
                    children: [
                        v.jsx(qT, {
                            dir: "ltr",
                            asChild: !0,
                            children: v.jsx(se, {
                                type: "menu",
                                label: "context-menu.move-to-page",
                                "data-testid": "menu-item.move-to-page",
                                icon: "chevron-right",
                            }),
                        }),
                        v.jsx(wS, {
                            container: n,
                            children: v.jsxs(ZT, {
                                className: "tlui-menu",
                                sideOffset: -4,
                                collisionPadding: 4,
                                children: [
                                    v.jsx(
                                        xS,
                                        {
                                            dir: "ltr",
                                            className: "tlui-menu__group",
                                            "data-testid": "menu-item.pages",
                                            children: r.map((s) =>
                                                v.jsx(
                                                    SS,
                                                    {
                                                        disabled: o === s.id,
                                                        onSelect: () => {
                                                            t.mark(
                                                                "move_shapes_to_page"
                                                            ),
                                                                t.moveShapesToPage(
                                                                    t.getSelectedShapeIds(),
                                                                    s.id
                                                                );
                                                            const l = t.getPage(
                                                                s.id
                                                            );
                                                            l &&
                                                            a({
                                                                title: "Changed Page",
                                                                description: `Moved to ${l.name}.`,
                                                                actions: [
                                                                    {
                                                                        label: "Go Back",
                                                                        type: "primary",
                                                                        onClick:
                                                                            () => {
                                                                                t.mark(
                                                                                    "change-page"
                                                                                ),
                                                                                    t.setCurrentPage(
                                                                                        o
                                                                                    );
                                                                            },
                                                                    },
                                                                ],
                                                            });
                                                        },
                                                        asChild: !0,
                                                        children: v.jsx(se, {
                                                            type: "menu",
                                                            title: s.name,
                                                            className:
                                                                "tlui-context-menu__move-to-page__name",
                                                            children: v.jsx(
                                                                "span",
                                                                {
                                                                    className:
                                                                        "tlui-button__label",
                                                                    children:
                                                                    s.name,
                                                                }
                                                            ),
                                                        }),
                                                    },
                                                    s.id
                                                )
                                            ),
                                        },
                                        "pages"
                                    ),
                                    v.jsx(
                                        xS,
                                        {
                                            dir: "ltr",
                                            className: "tlui-menu__group",
                                            "data-testid": "menu-item.new-page",
                                            children: v.jsx(
                                                SS,
                                                {
                                                    onSelect: () => {
                                                        const s = ai.createId(),
                                                            l =
                                                                t.getSelectedShapeIds();
                                                        t.batch(() => {
                                                            t.mark(
                                                                "move_shapes_to_page"
                                                            ),
                                                                t.createPage({
                                                                    name: i(
                                                                        "page-menu.new-page-initial-name"
                                                                    ),
                                                                    id: s,
                                                                }),
                                                                t.moveShapesToPage(
                                                                    l,
                                                                    s
                                                                );
                                                        });
                                                    },
                                                    asChild: !0,
                                                    children: v.jsx(se, {
                                                        type: "menu",
                                                        title: i(
                                                            "context.pages.new-page"
                                                        ),
                                                        className:
                                                            "tlui-context-menu__move-to-page__name",
                                                        children: v.jsx("span", {
                                                            className:
                                                                "tlui-button__label",
                                                            children: i(
                                                                "context.pages.new-page"
                                                            ),
                                                        }),
                                                    }),
                                                },
                                                "new-page"
                                            ),
                                        },
                                        "new-page"
                                    ),
                                ],
                            }),
                        }),
                    ],
                });
            }),
            Ase = function ({children: t}) {
                const n = W(),
                    r = S7(),
                    o = y.useCallback(
                        (u) => {
                            if (u) {
                                if (n.getInstanceState().isCoarsePointer) {
                                    const h = n.getSelectedShapes(),
                                        {
                                            inputs: {currentPagePoint: p},
                                        } = n,
                                        m = n.getShapesAtPoint(p);
                                    if (
                                        !n.getSelectedShapes().length ||
                                        !m.some((f) => h.includes(f))
                                    ) {
                                        const f = m.filter((g) =>
                                            n.isShapeOrAncestorLocked(g)
                                        );
                                        f.length && n.select(...f.map((g) => g.id));
                                    }
                                }
                            } else {
                                const h = n.getOnlySelectedShape();
                                h &&
                                n.isShapeOrAncestorLocked(h) &&
                                n.setSelectedShapes([]);
                            }
                        },
                        [n]
                    ),
                    [i, a] = Ss("context menu", o),
                    s = Pr(),
                    l = r.length === 0 || (s && r.every((u) => !u.readonlyOk)),
                    d =
                        !X(
                            "isSelectToolActive",
                            () => n.getCurrentToolId() === "select",
                            [n]
                        ) || l;
                return v.jsxs(Ese, {
                    dir: "ltr",
                    onOpenChange: a,
                    modal: !1,
                    children: [
                        v.jsx(Pse, {
                            onContextMenu: d ? $e : void 0,
                            dir: "ltr",
                            disabled: d,
                            children: t,
                        }),
                        i && v.jsx(Mse, {}),
                    ],
                });
            },
            Mse = y.forwardRef(function () {
                const t = W(),
                    n = Ee(),
                    r = S7(),
                    [o, i] = Ss("context menu sub"),
                    a = Pr(),
                    s = $r(),
                    l = dn(),
                    [c, d] = y.useState(!1);
                function u(h, p, m, f) {
                    if (!p || (a && !p.readonlyOk)) return null;
                    switch (p.type) {
                        case "custom": {
                            switch (p.id) {
                                case "MOVE_TO_PAGE_MENU":
                                    return v.jsx($se, {}, p.id);
                            }
                            break;
                        }
                        case "group":
                            return v.jsx(
                                xS,
                                {
                                    dir: "ltr",
                                    className: me("tlui-menu__group", {
                                        "tlui-menu__group__small":
                                            (m == null ? void 0 : m.type) ===
                                            "submenu",
                                    }),
                                    "data-testid": `menu-item.${p.id}`,
                                    children: p.children.map((g) =>
                                        u(h, g, p, f + 1)
                                    ),
                                },
                                p.id
                            );
                        case "submenu":
                            return v.jsxs(
                                XT,
                                {
                                    onOpenChange: i,
                                    children: [
                                        v.jsx(qT, {
                                            dir: "ltr",
                                            disabled: p.disabled,
                                            asChild: !0,
                                            children: v.jsx(se, {
                                                type: "menu",
                                                label: p.label,
                                                "data-testid": `menu-item.${p.id}`,
                                                icon: "chevron-right",
                                            }),
                                        }),
                                        v.jsx(wS, {
                                            container: l,
                                            children: v.jsx(ZT, {
                                                className: "tlui-menu",
                                                sideOffset: -4,
                                                collisionPadding: 4,
                                                children: p.children.map((g) =>
                                                    u(h, g, p, f + 1)
                                                ),
                                            }),
                                        }),
                                    ],
                                },
                                p.id
                            );
                        case "item": {
                            if (a && !p.readonlyOk) return null;
                            const {
                                    id: g,
                                    checkbox: b,
                                    contextMenuLabel: x,
                                    label: S,
                                    onSelect: _,
                                    kbd: k,
                                    icon: C,
                                } = p.actionItem,
                                P = x ?? S,
                                I = P ? n(P) : void 0;
                            return b
                                ? v.jsxs(
                                    Tse,
                                    {
                                        className:
                                            "tlui-button tlui-button__menu tlui-button__checkbox",
                                        dir: "ltr",
                                        disabled: p.disabled,
                                        onSelect: ($) => {
                                            _("context-menu"), $e($);
                                        },
                                        title: I || void 0,
                                        checked: p.checked,
                                        children: [
                                            v.jsx(ur, {
                                                small: !0,
                                                icon: p.checked
                                                    ? "check"
                                                    : "checkbox-empty",
                                            }),
                                            I &&
                                            v.jsx("span", {
                                                className:
                                                    "tlui-button__label",
                                                draggable: !1,
                                                children: I,
                                            }),
                                            k && v.jsx(vg, {children: k}),
                                        ],
                                    },
                                    g
                                )
                                : v.jsx(
                                    SS,
                                    {
                                        dir: "ltr",
                                        asChild: !0,
                                        children: v.jsx(se, {
                                            type: "menu",
                                            "data-testid": `menu-item.${g}`,
                                            kbd: k,
                                            label: P,
                                            disabled: p.disabled,
                                            iconLeft: s < 3 && f > 2 ? C : void 0,
                                            onClick: () => {
                                                c ? d(!1) : _("context-menu");
                                            },
                                        }),
                                    },
                                    g
                                );
                        }
                    }
                }
                return v.jsx(wS, {
                    container: l,
                    children: v.jsx(Ise, {
                        className: "tlui-menu scrollable",
                        alignOffset: -4,
                        collisionPadding: 4,
                        onContextMenu: $e,
                        children: r.map((h) => u(t, h, null, 0)),
                    }),
                });
            }),
            tv = (e, t) => {
                const [n, r] = y.useState(2);
                return (
                    y.useEffect(() => {
                        const {
                            url: o,
                            style: i = "normal",
                            weight: a = "500",
                            display: s,
                            featureSettings: l,
                            stretch: c,
                            unicodeRange: d,
                            variant: u,
                        } = t;
                        let h = !1;
                        r(2);
                        const p = {
                                style: i,
                                weight: a,
                                display: s,
                                featureSettings: l,
                                stretch: c,
                                unicodeRange: d,
                                variant: u,
                            },
                            m = new FontFace(e, `url(${o})`, p);
                        return (
                            m
                                .load()
                                .then(() => {
                                    h || (document.fonts.add(m), r(0));
                                })
                                .catch((f) => {
                                    h || (console.error(f), r(1));
                                }),
                                (m.$$_url = o),
                                (m.$$_fontface = `
@font-face {
	font-family: ${m.family};
	font-stretch: ${m.stretch};
	font-weight: ${m.weight};
	font-style: ${m.style};
	src: url("${o}") format("woff2")
}`),
                                () => {
                                    document.fonts.delete(m), (h = !0);
                                }
                        );
                    }, [e, t]),
                        n
                );
            };
        function zse(e) {
            return {
                draw: {url: e.fonts.draw},
                serif: {url: e.fonts.serif},
                sansSerif: {url: e.fonts.sansSerif},
                monospace: {url: e.fonts.monospace},
            };
        }
        function Rse(e) {
            const t = y.useMemo(() => zse(e), [e]),
                n = [
                    tv("tldraw_draw", t.draw),
                    tv("tldraw_serif", t.serif),
                    tv("tldraw_sans", t.sansSerif),
                    tv("tldraw_mono", t.monospace),
                ];
            return {error: n.some((r) => r === 1), done: !n.some((r) => r === 2)};
        }
        function Ose(e) {
            const {
                    children: t,
                    maxImageDimension: n,
                    maxAssetSize: r,
                    acceptedImageMimeTypes: o,
                    acceptedVideoMimeTypes: i,
                    onMount: a,
                    ...s
                } = e,
                l = nV(s.components ?? {}),
                c = $E(s.shapeUtils ?? []),
                d = $E(s.tools ?? []),
                u = {
                    initialState: "select",
                    ...s,
                    components: y.useMemo(
                        () => ({
                            Scribble: C6,
                            CollaboratorScribble: C6,
                            SelectionForeground: uZ,
                            SelectionBackground: cZ,
                            Handles: rZ,
                            HoveredShapeIndicator: oZ,
                            ...l,
                        }),
                        [l]
                    ),
                    shapeUtils: y.useMemo(() => [...CI, ...c], [c]),
                    tools: y.useMemo(() => [...LJ, ...rQ, ...d], [d]),
                },
                h = Eee(s.assetUrls),
                {done: p, error: m} = Rse(h);
            return m
                ? v.jsx(QH, {
                    children: "Could not load assets. Please refresh the page.",
                })
                : p
                    ? v.jsx(GH, {
                        ...u,
                        children: v.jsxs(cse, {
                            ...u,
                            children: [
                                v.jsx(Ase, {children: v.jsx(t1, {})}),
                                v.jsx(Dse, {
                                    maxImageDimension: n,
                                    maxAssetSize: r,
                                    acceptedImageMimeTypes: o,
                                    acceptedVideoMimeTypes: i,
                                    onMount: a,
                                }),
                                t,
                            ],
                        }),
                    })
                    : v.jsx(PE, {children: "Loading assets..."});
        }
        function Dse({
                         maxImageDimension: e = 1e3,
                         maxAssetSize: t = 10 * 1024 * 1024,
                         acceptedImageMimeTypes: n = [
                             "image/jpeg",
                             "image/png",
                             "image/gif",
                             "image/svg+xml",
                         ],
                         acceptedVideoMimeTypes: r = ["video/mp4", "video/quicktime"],
                         onMount: o,
                     }) {
            const i = W(),
                a = Lse((s) => {
                    const l = [];
                    return (
                        l.push(...kJ(s)),
                            VZ(s, {
                                maxImageDimension: e,
                                maxAssetSize: t,
                                acceptedImageMimeTypes: n,
                                acceptedVideoMimeTypes: r,
                            }),
                            l.push(o == null ? void 0 : o(s)),
                            () => {
                                l.forEach((c) => (c == null ? void 0 : c()));
                            }
                    );
                });
            return (
                y.useLayoutEffect(() => {
                    if (i) return a == null ? void 0 : a(i);
                }, [i, a]),
                    null
            );
        }
        function Lse(e) {
            const t = y.useRef();
            return (
                y.useLayoutEffect(() => {
                    t.current = e;
                }),
                    y.useDebugValue(e),
                    y.useCallback((...n) => {
                        const r = t.current;
                        return es(r, "fn does not exist"), r(...n);
                    }, [])
            );
        }
        Ie({
            tldrawFileFormatVersion: ID,
            schema: Ie({
                schemaVersion: gf,
                storeVersion: gf,
                recordVersions: Ey(
                    be,
                    Ie({
                        version: gf,
                        subTypeVersions: Ey(be, gf).optional(),
                        subTypeKey: be.optional(),
                    })
                ),
            }),
            records: An(Ie({id: be, typeName: be}).allowUnknownProperties()),
        });
        const lo = () => new Map(),
            _S = (e) => {
                const t = lo();
                return (
                    e.forEach((n, r) => {
                        t.set(r, n);
                    }),
                        t
                );
            },
            ki = (e, t, n) => {
                let r = e.get(t);
                return r === void 0 && e.set(t, (r = n())), r;
            },
            jse = (e, t) => {
                const n = [];
                for (const [r, o] of e) n.push(t(o, r));
                return n;
            },
            Nse = (e, t) => {
                for (const [n, r] of e) if (t(r, n)) return !0;
                return !1;
            },
            _s = () => new Set(),
            kS = (e) => e[e.length - 1],
            Fse = (e, t) => {
                for (let n = 0; n < t.length; n++) e.push(t[n]);
            },
            _a = Array.from,
            Bse = Array.isArray;
        class nv {
            constructor() {
                this._observers = lo();
            }
            on(t, n) {
                ki(this._observers, t, _s).add(n);
            }
            once(t, n) {
                const r = (...o) => {
                    this.off(t, r), n(...o);
                };
                this.on(t, r);
            }
            off(t, n) {
                const r = this._observers.get(t);
                r !== void 0 &&
                (r.delete(n), r.size === 0 && this._observers.delete(t));
            }
            emit(t, n) {
                return _a((this._observers.get(t) || lo()).values()).forEach((r) =>
                    r(...n)
                );
            }
            destroy() {
                this._observers = lo();
            }
        }
        const Ci = Math.floor,
            rv = Math.abs,
            CS = (e, t) => (e < t ? e : t),
            ks = (e, t) => (e > t ? e : t),
            Use = Math.pow,
            QT = (e) => (e !== 0 ? e < 0 : 1 / e < 0),
            JT = 1,
            e$ = 2,
            ES = 4,
            PS = 8,
            fh = 32,
            Ei = 64,
            fr = 128,
            ov = 31,
            IS = 63,
            Cs = 127,
            Hse = 2147483647,
            t$ = Number.MAX_SAFE_INTEGER,
            Vse =
                Number.isInteger ||
                ((e) => typeof e == "number" && isFinite(e) && Ci(e) === e),
            Kse = String.fromCharCode,
            Wse = (e) => e.toLowerCase(),
            Yse = /^\s*/g,
            Gse = (e) => e.replace(Yse, ""),
            Xse = /([A-Z])/g,
            n$ = (e, t) => Gse(e.replace(Xse, (n) => `${t}${Wse(n)}`)),
            qse = (e) => {
                const t = unescape(encodeURIComponent(e)),
                    n = t.length,
                    r = new Uint8Array(n);
                for (let o = 0; o < n; o++) r[o] = t.codePointAt(o);
                return r;
            },
            mh = typeof TextEncoder < "u" ? new TextEncoder() : null,
            Zse = mh ? (e) => mh.encode(e) : qse;
        let gh =
            typeof TextDecoder > "u"
                ? null
                : new TextDecoder("utf-8", {fatal: !0, ignoreBOM: !0});
        gh && gh.decode(new Uint8Array()).length === 1 && (gh = null);
        class vh {
            constructor() {
                (this.cpos = 0),
                    (this.cbuf = new Uint8Array(100)),
                    (this.bufs = []);
            }
        }
        const wn = () => new vh(),
            TS = (e) => {
                let t = e.cpos;
                for (let n = 0; n < e.bufs.length; n++) t += e.bufs[n].length;
                return t;
            },
            mt = (e) => {
                const t = new Uint8Array(TS(e));
                let n = 0;
                for (let r = 0; r < e.bufs.length; r++) {
                    const o = e.bufs[r];
                    t.set(o, n), (n += o.length);
                }
                return t.set(new Uint8Array(e.cbuf.buffer, 0, e.cpos), n), t;
            },
            Qse = (e, t) => {
                const n = e.cbuf.length;
                n - e.cpos < t &&
                (e.bufs.push(new Uint8Array(e.cbuf.buffer, 0, e.cpos)),
                    (e.cbuf = new Uint8Array(ks(n, t) * 2)),
                    (e.cpos = 0));
            },
            jt = (e, t) => {
                const n = e.cbuf.length;
                e.cpos === n &&
                (e.bufs.push(e.cbuf),
                    (e.cbuf = new Uint8Array(n * 2)),
                    (e.cpos = 0)),
                    (e.cbuf[e.cpos++] = t);
            },
            $S = jt,
            ue = (e, t) => {
                for (; t > Cs; ) jt(e, fr | (Cs & t)), (t = Ci(t / 128));
                jt(e, Cs & t);
            },
            AS = (e, t) => {
                const n = QT(t);
                for (
                    n && (t = -t),
                        jt(e, (t > IS ? fr : 0) | (n ? Ei : 0) | (IS & t)),
                        t = Ci(t / 64);
                    t > 0;

                )
                    jt(e, (t > Cs ? fr : 0) | (Cs & t)), (t = Ci(t / 128));
            },
            MS = new Uint8Array(3e4),
            Jse = MS.length / 3,
            ele = (e, t) => {
                if (t.length < Jse) {
                    const n = mh.encodeInto(t, MS).written || 0;
                    ue(e, n);
                    for (let r = 0; r < n; r++) jt(e, MS[r]);
                } else kt(e, Zse(t));
            },
            tle = (e, t) => {
                const n = unescape(encodeURIComponent(t)),
                    r = n.length;
                ue(e, r);
                for (let o = 0; o < r; o++) jt(e, n.codePointAt(o));
            },
            Es = mh && mh.encodeInto ? ele : tle,
            iv = (e, t) => {
                const n = e.cbuf.length,
                    r = e.cpos,
                    o = CS(n - r, t.length),
                    i = t.length - o;
                e.cbuf.set(t.subarray(0, o), r),
                    (e.cpos += o),
                i > 0 &&
                (e.bufs.push(e.cbuf),
                    (e.cbuf = new Uint8Array(ks(n * 2, i))),
                    e.cbuf.set(t.subarray(o)),
                    (e.cpos = i));
            },
            kt = (e, t) => {
                ue(e, t.byteLength), iv(e, t);
            },
            zS = (e, t) => {
                Qse(e, t);
                const n = new DataView(e.cbuf.buffer, e.cpos, t);
                return (e.cpos += t), n;
            },
            nle = (e, t) => zS(e, 4).setFloat32(0, t, !1),
            rle = (e, t) => zS(e, 8).setFloat64(0, t, !1),
            ole = (e, t) => zS(e, 8).setBigInt64(0, t, !1),
            r$ = new DataView(new ArrayBuffer(4)),
            ile = (e) => (r$.setFloat32(0, e), r$.getFloat32(0) === e),
            bh = (e, t) => {
                switch (typeof t) {
                    case "string":
                        jt(e, 119), Es(e, t);
                        break;
                    case "number":
                        Vse(t) && rv(t) <= Hse
                            ? (jt(e, 125), AS(e, t))
                            : ile(t)
                                ? (jt(e, 124), nle(e, t))
                                : (jt(e, 123), rle(e, t));
                        break;
                    case "bigint":
                        jt(e, 122), ole(e, t);
                        break;
                    case "object":
                        if (t === null) jt(e, 126);
                        else if (Bse(t)) {
                            jt(e, 117), ue(e, t.length);
                            for (let n = 0; n < t.length; n++) bh(e, t[n]);
                        } else if (t instanceof Uint8Array) jt(e, 116), kt(e, t);
                        else {
                            jt(e, 118);
                            const n = Object.keys(t);
                            ue(e, n.length);
                            for (let r = 0; r < n.length; r++) {
                                const o = n[r];
                                Es(e, o), bh(e, t[o]);
                            }
                        }
                        break;
                    case "boolean":
                        jt(e, t ? 120 : 121);
                        break;
                    default:
                        jt(e, 127);
                }
            };
        class o$ extends vh {
            constructor(t) {
                super(), (this.w = t), (this.s = null), (this.count = 0);
            }
            write(t) {
                this.s === t
                    ? this.count++
                    : (this.count > 0 && ue(this, this.count - 1),
                        (this.count = 1),
                        this.w(this, t),
                        (this.s = t));
            }
        }
        const i$ = (e) => {
            e.count > 0 &&
            (AS(e.encoder, e.count === 1 ? e.s : -e.s),
            e.count > 1 && ue(e.encoder, e.count - 2));
        };
        class av {
            constructor() {
                (this.encoder = new vh()), (this.s = 0), (this.count = 0);
            }
            write(t) {
                this.s === t
                    ? this.count++
                    : (i$(this), (this.count = 1), (this.s = t));
            }
            toUint8Array() {
                return i$(this), mt(this.encoder);
            }
        }
        const a$ = (e) => {
            if (e.count > 0) {
                const t = e.diff * 2 + (e.count === 1 ? 0 : 1);
                AS(e.encoder, t), e.count > 1 && ue(e.encoder, e.count - 2);
            }
        };
        class RS {
            constructor() {
                (this.encoder = new vh()),
                    (this.s = 0),
                    (this.count = 0),
                    (this.diff = 0);
            }
            write(t) {
                this.diff === t - this.s
                    ? ((this.s = t), this.count++)
                    : (a$(this),
                        (this.count = 1),
                        (this.diff = t - this.s),
                        (this.s = t));
            }
            toUint8Array() {
                return a$(this), mt(this.encoder);
            }
        }
        class ale {
            constructor() {
                (this.sarr = []), (this.s = ""), (this.lensE = new av());
            }
            write(t) {
                (this.s += t),
                this.s.length > 19 && (this.sarr.push(this.s), (this.s = "")),
                    this.lensE.write(t.length);
            }
            toUint8Array() {
                const t = new vh();
                return (
                    this.sarr.push(this.s),
                        (this.s = ""),
                        Es(t, this.sarr.join("")),
                        iv(t, this.lensE.toUint8Array()),
                        mt(t)
                );
            }
        }
        const ka = (e) => new Error(e),
            Do = () => {
                throw ka("Method unimplemented");
            },
            Lo = () => {
                throw ka("Unexpected case");
            },
            s$ = ka("Unexpected end of array"),
            l$ = ka("Integer out of Range");
        class sv {
            constructor(t) {
                (this.arr = t), (this.pos = 0);
            }
        }
        const Ca = (e) => new sv(e),
            sle = (e) => e.pos !== e.arr.length,
            lle = (e, t) => {
                const n = new Uint8Array(e.arr.buffer, e.pos + e.arr.byteOffset, t);
                return (e.pos += t), n;
            },
            xn = (e) => lle(e, ve(e)),
            $c = (e) => e.arr[e.pos++],
            ve = (e) => {
                let t = 0,
                    n = 1;
                const r = e.arr.length;
                for (; e.pos < r; ) {
                    const o = e.arr[e.pos++];
                    if (((t = t + (o & Cs) * n), (n *= 128), o < fr)) return t;
                    if (t > t$) throw l$;
                }
                throw s$;
            },
            OS = (e) => {
                let t = e.arr[e.pos++],
                    n = t & IS,
                    r = 64;
                const o = (t & Ei) > 0 ? -1 : 1;
                if (!(t & fr)) return o * n;
                const i = e.arr.length;
                for (; e.pos < i; ) {
                    if (
                        ((t = e.arr[e.pos++]),
                            (n = n + (t & Cs) * r),
                            (r *= 128),
                        t < fr)
                    )
                        return o * n;
                    if (n > t$) throw l$;
                }
                throw s$;
            },
            Ea = gh
                ? (e) => gh.decode(xn(e))
                : (e) => {
                    let t = ve(e);
                    if (t === 0) return "";
                    {
                        let n = String.fromCodePoint($c(e));
                        if (--t < 100)
                            for (; t--; ) n += String.fromCodePoint($c(e));
                        else
                            for (; t > 0; ) {
                                const r = t < 1e4 ? t : 1e4,
                                    o = e.arr.subarray(e.pos, e.pos + r);
                                (e.pos += r),
                                    (n += String.fromCodePoint.apply(null, o)),
                                    (t -= r);
                            }
                        return decodeURIComponent(escape(n));
                    }
                },
            DS = (e, t) => {
                const n = new DataView(e.arr.buffer, e.arr.byteOffset + e.pos, t);
                return (e.pos += t), n;
            },
            cle = [
                (e) => {},
                (e) => null,
                OS,
                (e) => DS(e, 4).getFloat32(0, !1),
                (e) => DS(e, 8).getFloat64(0, !1),
                (e) => DS(e, 8).getBigInt64(0, !1),
                (e) => !1,
                (e) => !0,
                Ea,
                (e) => {
                    const t = ve(e),
                        n = {};
                    for (let r = 0; r < t; r++) {
                        const o = Ea(e);
                        n[o] = yh(e);
                    }
                    return n;
                },
                (e) => {
                    const t = ve(e),
                        n = [];
                    for (let r = 0; r < t; r++) n.push(yh(e));
                    return n;
                },
                xn,
            ],
            yh = (e) => cle[127 - $c(e)](e);
        class c$ extends sv {
            constructor(t, n) {
                super(t), (this.reader = n), (this.s = null), (this.count = 0);
            }
            read() {
                return (
                    this.count === 0 &&
                    ((this.s = this.reader(this)),
                        sle(this)
                            ? (this.count = ve(this) + 1)
                            : (this.count = -1)),
                        this.count--,
                        this.s
                );
            }
        }
        class lv extends sv {
            constructor(t) {
                super(t), (this.s = 0), (this.count = 0);
            }
            read() {
                if (this.count === 0) {
                    this.s = OS(this);
                    const t = QT(this.s);
                    (this.count = 1),
                    t && ((this.s = -this.s), (this.count = ve(this) + 2));
                }
                return this.count--, this.s;
            }
        }
        class LS extends sv {
            constructor(t) {
                super(t), (this.s = 0), (this.count = 0), (this.diff = 0);
            }
            read() {
                if (this.count === 0) {
                    const t = OS(this),
                        n = t & 1;
                    (this.diff = Ci(t / 2)),
                        (this.count = 1),
                    n && (this.count = ve(this) + 2);
                }
                return (this.s += this.diff), this.count--, this.s;
            }
        }
        class dle {
            constructor(t) {
                (this.decoder = new lv(t)),
                    (this.str = Ea(this.decoder)),
                    (this.spos = 0);
            }
            read() {
                const t = this.spos + this.decoder.read(),
                    n = this.str.slice(this.spos, t);
                return (this.spos = t), n;
            }
        }
        const ule = crypto.getRandomValues.bind(crypto),
            d$ = () => ule(new Uint32Array(1))[0],
            hle = "10000000-1000-4000-8000" + -1e11,
            ple = () =>
                hle.replace(/[018]/g, (e) =>
                    (e ^ (d$() & (15 >> (e / 4)))).toString(16)
                ),
            Ps = Date.now,
            u$ = (e) => new Promise(e);
        Promise.all.bind(Promise);
        const h$ = (e) => (e === void 0 ? null : e);
        class fle {
            constructor() {
                this.map = new Map();
            }
            setItem(t, n) {
                this.map.set(t, n);
            }
            getItem(t) {
                return this.map.get(t);
            }
        }
        let p$ = new fle(),
            jS = !0;
        try {
            typeof localStorage < "u" &&
            localStorage &&
            ((p$ = localStorage), (jS = !1));
        } catch {}
        const f$ = p$,
            mle = (e) => jS || addEventListener("storage", e),
            gle = (e) => jS || removeEventListener("storage", e),
            vle = Object.assign,
            ble = Object.keys,
            yle = (e, t) => {
                for (const n in e) t(e[n], n);
            },
            wle = (e, t) => {
                const n = [];
                for (const r in e) n.push(t(e[r], r));
                return n;
            },
            cv = (e) => ble(e).length,
            xle = (e) => {
                for (const t in e) return !1;
                return !0;
            },
            Sle = (e, t) => {
                for (const n in e) if (!t(e[n], n)) return !1;
                return !0;
            },
            m$ = (e, t) => Object.prototype.hasOwnProperty.call(e, t),
            _le = (e, t) =>
                e === t ||
                (cv(e) === cv(t) &&
                    Sle(e, (n, r) => (n !== void 0 || m$(t, r)) && t[r] === n)),
            NS = (e, t, n = 0) => {
                try {
                    for (; n < e.length; n++) e[n](...t);
                } finally {
                    n < e.length && NS(e, t, n + 1);
                }
            },
            kle = (e) => e,
            Cle = (e, t) => e === t,
            wh = (e, t) => {
                if (e == null || t == null) return Cle(e, t);
                if (e.constructor !== t.constructor) return !1;
                if (e === t) return !0;
                switch (e.constructor) {
                    case ArrayBuffer:
                        (e = new Uint8Array(e)), (t = new Uint8Array(t));
                    case Uint8Array: {
                        if (e.byteLength !== t.byteLength) return !1;
                        for (let n = 0; n < e.length; n++)
                            if (e[n] !== t[n]) return !1;
                        break;
                    }
                    case Set: {
                        if (e.size !== t.size) return !1;
                        for (const n of e) if (!t.has(n)) return !1;
                        break;
                    }
                    case Map: {
                        if (e.size !== t.size) return !1;
                        for (const n of e.keys())
                            if (!t.has(n) || !wh(e.get(n), t.get(n))) return !1;
                        break;
                    }
                    case Object:
                        if (cv(e) !== cv(t)) return !1;
                        for (const n in e)
                            if (!m$(e, n) || !wh(e[n], t[n])) return !1;
                        break;
                    case Array:
                        if (e.length !== t.length) return !1;
                        for (let n = 0; n < e.length; n++)
                            if (!wh(e[n], t[n])) return !1;
                        break;
                    default:
                        return !1;
                }
                return !0;
            },
            Ele = (e, t) => t.includes(e);
        var g$ = {};
        const Is =
                typeof process < "u" &&
                process.release &&
                /node|io\.js/.test(process.release.name) &&
                Object.prototype.toString.call(
                    typeof process < "u" ? process : 0
                ) === "[object process]",
            v$ = typeof window < "u" && typeof document < "u" && !Is;
        let jo;
        const Ple = () => {
                if (jo === void 0)
                    if (Is) {
                        jo = lo();
                        const e = process.argv;
                        let t = null;
                        for (let n = 0; n < e.length; n++) {
                            const r = e[n];
                            r[0] === "-"
                                ? (t !== null && jo.set(t, ""), (t = r))
                                : t !== null && (jo.set(t, r), (t = null));
                        }
                        t !== null && jo.set(t, "");
                    } else
                        typeof location == "object"
                            ? ((jo = lo()),
                                (location.search || "?")
                                    .slice(1)
                                    .split("&")
                                    .forEach((e) => {
                                        if (e.length !== 0) {
                                            const [t, n] = e.split("=");
                                            jo.set(`--${n$(t, "-")}`, n),
                                                jo.set(`-${n$(t, "-")}`, n);
                                        }
                                    }))
                            : (jo = lo());
                return jo;
            },
            FS = (e) => Ple().has(e),
            BS = (e) => h$(Is ? g$[e.toUpperCase()] : f$.getItem(e));
        ((e) => FS("--" + e) || BS(e) !== null)("production");
        const b$ = Is && Ele(g$.FORCE_COLOR, ["true", "1", "2"]),
            Ile =
                !FS("no-colors") &&
                (!Is || process.stdout.isTTY || b$) &&
                (!Is ||
                    FS("color") ||
                    b$ ||
                    BS("COLORTERM") !== null ||
                    (BS("TERM") || "").includes("color")),
            y$ = (e) => new Uint8Array(e),
            Tle = (e, t, n) => new Uint8Array(e, t, n),
            $le = (e) => new Uint8Array(e),
            Ale = (e) => {
                let t = "";
                for (let n = 0; n < e.byteLength; n++) t += Kse(e[n]);
                return btoa(t);
            },
            Mle = (e) =>
                Buffer.from(e.buffer, e.byteOffset, e.byteLength).toString(
                    "base64"
                ),
            zle = (e) => {
                const t = atob(e),
                    n = y$(t.length);
                for (let r = 0; r < t.length; r++) n[r] = t.charCodeAt(r);
                return n;
            },
            Rle = (e) => {
                const t = Buffer.from(e, "base64");
                return Tle(t.buffer, t.byteOffset, t.byteLength);
            },
            Ole = v$ ? Ale : Mle,
            Dle = v$ ? zle : Rle,
            Lle = (e) => {
                const t = y$(e.byteLength);
                return t.set(e), t;
            };
        class jle {
            constructor(t, n) {
                (this.left = t), (this.right = n);
            }
        }
        const Pi = (e, t) => new jle(e, t);
        typeof DOMParser < "u" && new DOMParser();
        const Nle = (e) => jse(e, (t, n) => `${n}:${t};`).join(""),
            Ii = Symbol,
            w$ = Ii(),
            x$ = Ii(),
            Fle = Ii(),
            Ble = Ii(),
            Ule = Ii(),
            S$ = Ii(),
            Hle = Ii(),
            _$ = Ii(),
            Vle = Ii(),
            Kle = (e) => {
                const t = [];
                let n = 0;
                for (; n < e.length; n++) {
                    const r = e[n];
                    r.constructor === String ||
                    r.constructor === Number ||
                    (r.constructor === Object && t.push(JSON.stringify(r)));
                }
                return t;
            },
            Wle = {
                [w$]: Pi("font-weight", "bold"),
                [x$]: Pi("font-weight", "normal"),
                [Fle]: Pi("color", "blue"),
                [Ule]: Pi("color", "green"),
                [Ble]: Pi("color", "grey"),
                [S$]: Pi("color", "red"),
                [Hle]: Pi("color", "purple"),
                [_$]: Pi("color", "orange"),
                [Vle]: Pi("color", "black"),
            },
            Yle = Ile
                ? (e) => {
                    const t = [],
                        n = [],
                        r = lo();
                    let o = [],
                        i = 0;
                    for (; i < e.length; i++) {
                        const a = e[i],
                            s = Wle[a];
                        if (s !== void 0) r.set(s.left, s.right);
                        else if (
                            a.constructor === String ||
                            a.constructor === Number
                        ) {
                            const l = Nle(r);
                            i > 0 || l.length > 0
                                ? (t.push("%c" + a), n.push(l))
                                : t.push(a);
                        } else break;
                    }
                    for (
                        i > 0 && ((o = n), o.unshift(t.join("")));
                        i < e.length;
                        i++
                    ) {
                        const a = e[i];
                        a instanceof Symbol || o.push(a);
                    }
                    return o;
                }
                : Kle,
            Gle = (...e) => {
                console.log(...Yle(e)), Xle.forEach((t) => t.print(e));
            },
            Xle = _s(),
            k$ = (e) => ({
                [Symbol.iterator]() {
                    return this;
                },
                next: e,
            }),
            qle = (e, t) =>
                k$(() => {
                    let n;
                    do n = e.next();
                    while (!n.done && !t(n.value));
                    return n;
                }),
            US = (e, t) =>
                k$(() => {
                    const {done: n, value: r} = e.next();
                    return {done: n, value: n ? void 0 : t(r)};
                });
        class HS {
            constructor(t, n) {
                (this.clock = t), (this.len = n);
            }
        }
        class xh {
            constructor() {
                this.clients = new Map();
            }
        }
        const C$ = (e, t, n) =>
                t.clients.forEach((r, o) => {
                    const i = e.doc.store.clients.get(o);
                    for (let a = 0; a < r.length; a++) {
                        const s = r[a];
                        H$(e, i, s.clock, s.len, n);
                    }
                }),
            Zle = (e, t) => {
                let n = 0,
                    r = e.length - 1;
                for (; n <= r; ) {
                    const o = Ci((n + r) / 2),
                        i = e[o],
                        a = i.clock;
                    if (a <= t) {
                        if (t < a + i.len) return o;
                        n = o + 1;
                    } else r = o - 1;
                }
                return null;
            },
            E$ = (e, t) => {
                const n = e.clients.get(t.client);
                return n !== void 0 && Zle(n, t.clock) !== null;
            },
            VS = (e) => {
                e.clients.forEach((t) => {
                    t.sort((o, i) => o.clock - i.clock);
                    let n, r;
                    for (n = 1, r = 1; n < t.length; n++) {
                        const o = t[r - 1],
                            i = t[n];
                        o.clock + o.len >= i.clock
                            ? (o.len = ks(o.len, i.clock + i.len - o.clock))
                            : (r < n && (t[r] = i), r++);
                    }
                    t.length = r;
                });
            },
            Qle = (e) => {
                const t = new xh();
                for (let n = 0; n < e.length; n++)
                    e[n].clients.forEach((r, o) => {
                        if (!t.clients.has(o)) {
                            const i = r.slice();
                            for (let a = n + 1; a < e.length; a++)
                                Fse(i, e[a].clients.get(o) || []);
                            t.clients.set(o, i);
                        }
                    });
                return VS(t), t;
            },
            dv = (e, t, n, r) => {
                ki(e.clients, t, () => []).push(new HS(n, r));
            },
            Jle = () => new xh(),
            ece = (e) => {
                const t = Jle();
                return (
                    e.clients.forEach((n, r) => {
                        const o = [];
                        for (let i = 0; i < n.length; i++) {
                            const a = n[i];
                            if (a.deleted) {
                                const s = a.id.clock;
                                let l = a.length;
                                if (i + 1 < n.length)
                                    for (
                                        let c = n[i + 1];
                                        i + 1 < n.length && c.deleted;
                                        c = n[++i + 1]
                                    )
                                        l += c.length;
                                o.push(new HS(s, l));
                            }
                        }
                        o.length > 0 && t.clients.set(r, o);
                    }),
                        t
                );
            },
            Ac = (e, t) => {
                ue(e.restEncoder, t.clients.size),
                    _a(t.clients.entries())
                        .sort((n, r) => r[0] - n[0])
                        .forEach(([n, r]) => {
                            e.resetDsCurVal(), ue(e.restEncoder, n);
                            const o = r.length;
                            ue(e.restEncoder, o);
                            for (let i = 0; i < o; i++) {
                                const a = r[i];
                                e.writeDsClock(a.clock), e.writeDsLen(a.len);
                            }
                        });
            },
            KS = (e) => {
                const t = new xh(),
                    n = ve(e.restDecoder);
                for (let r = 0; r < n; r++) {
                    e.resetDsCurVal();
                    const o = ve(e.restDecoder),
                        i = ve(e.restDecoder);
                    if (i > 0) {
                        const a = ki(t.clients, o, () => []);
                        for (let s = 0; s < i; s++)
                            a.push(new HS(e.readDsClock(), e.readDsLen()));
                    }
                }
                return t;
            },
            P$ = (e, t, n) => {
                const r = new xh(),
                    o = ve(e.restDecoder);
                for (let i = 0; i < o; i++) {
                    e.resetDsCurVal();
                    const a = ve(e.restDecoder),
                        s = ve(e.restDecoder),
                        l = n.clients.get(a) || [],
                        c = Nt(n, a);
                    for (let d = 0; d < s; d++) {
                        const u = e.readDsClock(),
                            h = u + e.readDsLen();
                        if (u < c) {
                            c < h && dv(r, a, c, h - c);
                            let p = No(l, u),
                                m = l[p];
                            for (
                                !m.deleted &&
                                m.id.clock < u &&
                                (l.splice(p + 1, 0, Cv(t, m, u - m.id.clock)), p++);
                                p < l.length && ((m = l[p++]), m.id.clock < h);

                            )
                                m.deleted ||
                                (h < m.id.clock + m.length &&
                                l.splice(p, 0, Cv(t, m, h - m.id.clock)),
                                    m.delete(t));
                        } else dv(r, a, u, h - u);
                    }
                }
                if (r.clients.size > 0) {
                    const i = new Ts();
                    return ue(i.restEncoder, 0), Ac(i, r), i.toUint8Array();
                }
                return null;
            },
            I$ = d$;
        class Mc extends nv {
            constructor({
                            guid: t = ple(),
                            collectionid: n = null,
                            gc: r = !0,
                            gcFilter: o = () => !0,
                            meta: i = null,
                            autoLoad: a = !1,
                            shouldLoad: s = !0,
                        } = {}) {
                super(),
                    (this.gc = r),
                    (this.gcFilter = o),
                    (this.clientID = I$()),
                    (this.guid = t),
                    (this.collectionid = n),
                    (this.share = new Map()),
                    (this.store = new F$()),
                    (this._transaction = null),
                    (this._transactionCleanups = []),
                    (this.subdocs = new Set()),
                    (this._item = null),
                    (this.shouldLoad = s),
                    (this.autoLoad = a),
                    (this.meta = i),
                    (this.isLoaded = !1),
                    (this.isSynced = !1),
                    (this.whenLoaded = u$((c) => {
                        this.on("load", () => {
                            (this.isLoaded = !0), c(this);
                        });
                    }));
                const l = () =>
                    u$((c) => {
                        const d = (u) => {
                            (u === void 0 || u === !0) &&
                            (this.off("sync", d), c());
                        };
                        this.on("sync", d);
                    });
                this.on("sync", (c) => {
                    c === !1 && this.isSynced && (this.whenSynced = l()),
                        (this.isSynced = c === void 0 || c === !0),
                    this.isSynced && !this.isLoaded && this.emit("load", []);
                }),
                    (this.whenSynced = l());
            }
            load() {
                const t = this._item;
                t !== null &&
                !this.shouldLoad &&
                Je(
                    t.parent.doc,
                    (n) => {
                        n.subdocsLoaded.add(this);
                    },
                    null,
                    !0
                ),
                    (this.shouldLoad = !0);
            }
            getSubdocs() {
                return this.subdocs;
            }
            getSubdocGuids() {
                return new Set(_a(this.subdocs).map((t) => t.guid));
            }
            transact(t, n = null) {
                return Je(this, t, n);
            }
            get(t, n = Qt) {
                const r = ki(this.share, t, () => {
                        const i = new n();
                        return i._integrate(this, null), i;
                    }),
                    o = r.constructor;
                if (n !== Qt && o !== n)
                    if (o === Qt) {
                        const i = new n();
                        (i._map = r._map),
                            r._map.forEach((a) => {
                                for (; a !== null; a = a.left) a.parent = i;
                            }),
                            (i._start = r._start);
                        for (let a = i._start; a !== null; a = a.right)
                            a.parent = i;
                        return (
                            (i._length = r._length),
                                this.share.set(t, i),
                                i._integrate(this, null),
                                i
                        );
                    } else
                        throw new Error(
                            `Type with the name ${t} has already been defined with a different constructor`
                        );
                return r;
            }
            getArray(t = "") {
                return this.get(t, Dc);
            }
            getText(t = "") {
                return this.get(t, Nc);
            }
            getMap(t = "") {
                return this.get(t, Lc);
            }
            getXmlElement(t = "") {
                return this.get(t, Fc);
            }
            getXmlFragment(t = "") {
                return this.get(t, $s);
            }
            toJSON() {
                const t = {};
                return (
                    this.share.forEach((n, r) => {
                        t[r] = n.toJSON();
                    }),
                        t
                );
            }
            destroy() {
                _a(this.subdocs).forEach((n) => n.destroy());
                const t = this._item;
                if (t !== null) {
                    this._item = null;
                    const n = t.content;
                    (n.doc = new Mc({guid: this.guid, ...n.opts, shouldLoad: !1})),
                        (n.doc._item = t),
                        Je(
                            t.parent.doc,
                            (r) => {
                                const o = n.doc;
                                t.deleted || r.subdocsAdded.add(o),
                                    r.subdocsRemoved.add(this);
                            },
                            null,
                            !0
                        );
                }
                this.emit("destroyed", [!0]),
                    this.emit("destroy", [this]),
                    super.destroy();
            }
            on(t, n) {
                super.on(t, n);
            }
            off(t, n) {
                super.off(t, n);
            }
        }
        class T$ {
            constructor(t) {
                this.restDecoder = t;
            }
            resetDsCurVal() {}
            readDsClock() {
                return ve(this.restDecoder);
            }
            readDsLen() {
                return ve(this.restDecoder);
            }
        }
        class $$ extends T$ {
            readLeftID() {
                return Pe(ve(this.restDecoder), ve(this.restDecoder));
            }
            readRightID() {
                return Pe(ve(this.restDecoder), ve(this.restDecoder));
            }
            readClient() {
                return ve(this.restDecoder);
            }
            readInfo() {
                return $c(this.restDecoder);
            }
            readString() {
                return Ea(this.restDecoder);
            }
            readParentInfo() {
                return ve(this.restDecoder) === 1;
            }
            readTypeRef() {
                return ve(this.restDecoder);
            }
            readLen() {
                return ve(this.restDecoder);
            }
            readAny() {
                return yh(this.restDecoder);
            }
            readBuf() {
                return Lle(xn(this.restDecoder));
            }
            readJSON() {
                return JSON.parse(Ea(this.restDecoder));
            }
            readKey() {
                return Ea(this.restDecoder);
            }
        }
        class tce {
            constructor(t) {
                (this.dsCurrVal = 0), (this.restDecoder = t);
            }
            resetDsCurVal() {
                this.dsCurrVal = 0;
            }
            readDsClock() {
                return (this.dsCurrVal += ve(this.restDecoder)), this.dsCurrVal;
            }
            readDsLen() {
                const t = ve(this.restDecoder) + 1;
                return (this.dsCurrVal += t), t;
            }
        }
        class zc extends tce {
            constructor(t) {
                super(t),
                    (this.keys = []),
                    ve(t),
                    (this.keyClockDecoder = new LS(xn(t))),
                    (this.clientDecoder = new lv(xn(t))),
                    (this.leftClockDecoder = new LS(xn(t))),
                    (this.rightClockDecoder = new LS(xn(t))),
                    (this.infoDecoder = new c$(xn(t), $c)),
                    (this.stringDecoder = new dle(xn(t))),
                    (this.parentInfoDecoder = new c$(xn(t), $c)),
                    (this.typeRefDecoder = new lv(xn(t))),
                    (this.lenDecoder = new lv(xn(t)));
            }
            readLeftID() {
                return new Rc(
                    this.clientDecoder.read(),
                    this.leftClockDecoder.read()
                );
            }
            readRightID() {
                return new Rc(
                    this.clientDecoder.read(),
                    this.rightClockDecoder.read()
                );
            }
            readClient() {
                return this.clientDecoder.read();
            }
            readInfo() {
                return this.infoDecoder.read();
            }
            readString() {
                return this.stringDecoder.read();
            }
            readParentInfo() {
                return this.parentInfoDecoder.read() === 1;
            }
            readTypeRef() {
                return this.typeRefDecoder.read();
            }
            readLen() {
                return this.lenDecoder.read();
            }
            readAny() {
                return yh(this.restDecoder);
            }
            readBuf() {
                return xn(this.restDecoder);
            }
            readJSON() {
                return yh(this.restDecoder);
            }
            readKey() {
                const t = this.keyClockDecoder.read();
                if (t < this.keys.length) return this.keys[t];
                {
                    const n = this.stringDecoder.read();
                    return this.keys.push(n), n;
                }
            }
        }
        class A$ {
            constructor() {
                this.restEncoder = wn();
            }
            toUint8Array() {
                return mt(this.restEncoder);
            }
            resetDsCurVal() {}
            writeDsClock(t) {
                ue(this.restEncoder, t);
            }
            writeDsLen(t) {
                ue(this.restEncoder, t);
            }
        }
        class Sh extends A$ {
            writeLeftID(t) {
                ue(this.restEncoder, t.client), ue(this.restEncoder, t.clock);
            }
            writeRightID(t) {
                ue(this.restEncoder, t.client), ue(this.restEncoder, t.clock);
            }
            writeClient(t) {
                ue(this.restEncoder, t);
            }
            writeInfo(t) {
                $S(this.restEncoder, t);
            }
            writeString(t) {
                Es(this.restEncoder, t);
            }
            writeParentInfo(t) {
                ue(this.restEncoder, t ? 1 : 0);
            }
            writeTypeRef(t) {
                ue(this.restEncoder, t);
            }
            writeLen(t) {
                ue(this.restEncoder, t);
            }
            writeAny(t) {
                bh(this.restEncoder, t);
            }
            writeBuf(t) {
                kt(this.restEncoder, t);
            }
            writeJSON(t) {
                Es(this.restEncoder, JSON.stringify(t));
            }
            writeKey(t) {
                Es(this.restEncoder, t);
            }
        }
        class M$ {
            constructor() {
                (this.restEncoder = wn()), (this.dsCurrVal = 0);
            }
            toUint8Array() {
                return mt(this.restEncoder);
            }
            resetDsCurVal() {
                this.dsCurrVal = 0;
            }
            writeDsClock(t) {
                const n = t - this.dsCurrVal;
                (this.dsCurrVal = t), ue(this.restEncoder, n);
            }
            writeDsLen(t) {
                t === 0 && Lo(), ue(this.restEncoder, t - 1), (this.dsCurrVal += t);
            }
        }
        class Ts extends M$ {
            constructor() {
                super(),
                    (this.keyMap = new Map()),
                    (this.keyClock = 0),
                    (this.keyClockEncoder = new RS()),
                    (this.clientEncoder = new av()),
                    (this.leftClockEncoder = new RS()),
                    (this.rightClockEncoder = new RS()),
                    (this.infoEncoder = new o$($S)),
                    (this.stringEncoder = new ale()),
                    (this.parentInfoEncoder = new o$($S)),
                    (this.typeRefEncoder = new av()),
                    (this.lenEncoder = new av());
            }
            toUint8Array() {
                const t = wn();
                return (
                    ue(t, 0),
                        kt(t, this.keyClockEncoder.toUint8Array()),
                        kt(t, this.clientEncoder.toUint8Array()),
                        kt(t, this.leftClockEncoder.toUint8Array()),
                        kt(t, this.rightClockEncoder.toUint8Array()),
                        kt(t, mt(this.infoEncoder)),
                        kt(t, this.stringEncoder.toUint8Array()),
                        kt(t, mt(this.parentInfoEncoder)),
                        kt(t, this.typeRefEncoder.toUint8Array()),
                        kt(t, this.lenEncoder.toUint8Array()),
                        iv(t, mt(this.restEncoder)),
                        mt(t)
                );
            }
            writeLeftID(t) {
                this.clientEncoder.write(t.client),
                    this.leftClockEncoder.write(t.clock);
            }
            writeRightID(t) {
                this.clientEncoder.write(t.client),
                    this.rightClockEncoder.write(t.clock);
            }
            writeClient(t) {
                this.clientEncoder.write(t);
            }
            writeInfo(t) {
                this.infoEncoder.write(t);
            }
            writeString(t) {
                this.stringEncoder.write(t);
            }
            writeParentInfo(t) {
                this.parentInfoEncoder.write(t ? 1 : 0);
            }
            writeTypeRef(t) {
                this.typeRefEncoder.write(t);
            }
            writeLen(t) {
                this.lenEncoder.write(t);
            }
            writeAny(t) {
                bh(this.restEncoder, t);
            }
            writeBuf(t) {
                kt(this.restEncoder, t);
            }
            writeJSON(t) {
                bh(this.restEncoder, t);
            }
            writeKey(t) {
                const n = this.keyMap.get(t);
                n === void 0
                    ? (this.keyClockEncoder.write(this.keyClock++),
                        this.stringEncoder.write(t))
                    : this.keyClockEncoder.write(n);
            }
        }
        const nce = (e, t, n, r) => {
                r = ks(r, t[0].id.clock);
                const o = No(t, r);
                ue(e.restEncoder, t.length - o),
                    e.writeClient(n),
                    ue(e.restEncoder, r);
                const i = t[o];
                i.write(e, r - i.id.clock);
                for (let a = o + 1; a < t.length; a++) t[a].write(e, 0);
            },
            WS = (e, t, n) => {
                const r = new Map();
                n.forEach((o, i) => {
                    Nt(t, i) > o && r.set(i, o);
                }),
                    hv(t).forEach((o, i) => {
                        n.has(i) || r.set(i, 0);
                    }),
                    ue(e.restEncoder, r.size),
                    _a(r.entries())
                        .sort((o, i) => i[0] - o[0])
                        .forEach(([o, i]) => {
                            nce(e, t.clients.get(o), o, i);
                        });
            },
            rce = (e, t) => {
                const n = lo(),
                    r = ve(e.restDecoder);
                for (let o = 0; o < r; o++) {
                    const i = ve(e.restDecoder),
                        a = new Array(i),
                        s = e.readClient();
                    let l = ve(e.restDecoder);
                    n.set(s, {i: 0, refs: a});
                    for (let c = 0; c < i; c++) {
                        const d = e.readInfo();
                        switch (ov & d) {
                            case 0: {
                                const u = e.readLen();
                                (a[c] = new Mr(Pe(s, l), u)), (l += u);
                                break;
                            }
                            case 10: {
                                const u = ve(e.restDecoder);
                                (a[c] = new zr(Pe(s, l), u)), (l += u);
                                break;
                            }
                            default: {
                                const u = (d & (Ei | fr)) === 0,
                                    h = new Tt(
                                        Pe(s, l),
                                        null,
                                        (d & fr) === fr ? e.readLeftID() : null,
                                        null,
                                        (d & Ei) === Ei ? e.readRightID() : null,
                                        u
                                            ? e.readParentInfo()
                                                ? t.get(e.readString())
                                                : e.readLeftID()
                                            : null,
                                        u && (d & fh) === fh
                                            ? e.readString()
                                            : null,
                                        fA(e, d)
                                    );
                                (a[c] = h), (l += h.length);
                            }
                        }
                    }
                }
                return n;
            },
            oce = (e, t, n) => {
                const r = [];
                let o = _a(n.keys()).sort((p, m) => p - m);
                if (o.length === 0) return null;
                const i = () => {
                    if (o.length === 0) return null;
                    let p = n.get(o[o.length - 1]);
                    for (; p.refs.length === p.i; )
                        if ((o.pop(), o.length > 0)) p = n.get(o[o.length - 1]);
                        else return null;
                    return p;
                };
                let a = i();
                if (a === null) return null;
                const s = new F$(),
                    l = new Map(),
                    c = (p, m) => {
                        const f = l.get(p);
                        (f == null || f > m) && l.set(p, m);
                    };
                let d = a.refs[a.i++];
                const u = new Map(),
                    h = () => {
                        for (const p of r) {
                            const m = p.id.client,
                                f = n.get(m);
                            f
                                ? (f.i--,
                                    s.clients.set(m, f.refs.slice(f.i)),
                                    n.delete(m),
                                    (f.i = 0),
                                    (f.refs = []))
                                : s.clients.set(m, [p]),
                                (o = o.filter((g) => g !== m));
                        }
                        r.length = 0;
                    };
                for (;;) {
                    if (d.constructor !== zr) {
                        const m =
                            ki(u, d.id.client, () => Nt(t, d.id.client)) -
                            d.id.clock;
                        if (m < 0) r.push(d), c(d.id.client, d.id.clock - 1), h();
                        else {
                            const f = d.getMissing(e, t);
                            if (f !== null) {
                                r.push(d);
                                const g = n.get(f) || {refs: [], i: 0};
                                if (g.refs.length === g.i) c(f, Nt(t, f)), h();
                                else {
                                    d = g.refs[g.i++];
                                    continue;
                                }
                            } else
                                (m === 0 || m < d.length) &&
                                (d.integrate(e, m),
                                    u.set(d.id.client, d.id.clock + d.length));
                        }
                    }
                    if (r.length > 0) d = r.pop();
                    else if (a !== null && a.i < a.refs.length) d = a.refs[a.i++];
                    else {
                        if (((a = i()), a === null)) break;
                        d = a.refs[a.i++];
                    }
                }
                if (s.clients.size > 0) {
                    const p = new Ts();
                    return (
                        WS(p, s, new Map()),
                            ue(p.restEncoder, 0),
                            {missing: l, update: p.toUint8Array()}
                    );
                }
                return null;
            },
            ice = (e, t) => WS(e, t.doc.store, t.beforeState),
            ace = (e, t, n, r = new zc(e)) =>
                Je(
                    t,
                    (o) => {
                        o.local = !1;
                        let i = !1;
                        const a = o.doc,
                            s = a.store,
                            l = rce(r, a),
                            c = oce(o, s, l),
                            d = s.pendingStructs;
                        if (d) {
                            for (const [h, p] of d.missing)
                                if (p < Nt(s, h)) {
                                    i = !0;
                                    break;
                                }
                            if (c) {
                                for (const [h, p] of c.missing) {
                                    const m = d.missing.get(h);
                                    (m == null || m > p) && d.missing.set(h, p);
                                }
                                d.update = fv([d.update, c.update]);
                            }
                        } else s.pendingStructs = c;
                        const u = P$(r, o, s);
                        if (s.pendingDs) {
                            const h = new zc(Ca(s.pendingDs));
                            ve(h.restDecoder);
                            const p = P$(h, o, s);
                            u && p
                                ? (s.pendingDs = fv([u, p]))
                                : (s.pendingDs = u || p);
                        } else s.pendingDs = u;
                        if (i) {
                            const h = s.pendingStructs.update;
                            (s.pendingStructs = null), z$(o.doc, h);
                        }
                    },
                    n,
                    !1
                ),
            z$ = (e, t, n, r = zc) => {
                const o = Ca(t);
                ace(o, e, n, new r(o));
            },
            sce = (e, t, n) => z$(e, t, n, $$),
            lce = (e, t, n = new Map()) => {
                WS(e, t.store, n), Ac(e, ece(t.store));
            },
            cce = (e, t = new Uint8Array([0]), n = new Ts()) => {
                const r = R$(t);
                lce(n, e, r);
                const o = [n.toUint8Array()];
                if (
                    (e.store.pendingDs && o.push(e.store.pendingDs),
                    e.store.pendingStructs &&
                    o.push(kce(e.store.pendingStructs.update, t)),
                    o.length > 1)
                ) {
                    if (n.constructor === Sh)
                        return Sce(o.map((i, a) => (a === 0 ? i : Ece(i))));
                    if (n.constructor === Ts) return fv(o);
                }
                return o[0];
            },
            dce = (e, t) => cce(e, t, new Sh()),
            uce = (e) => {
                const t = new Map(),
                    n = ve(e.restDecoder);
                for (let r = 0; r < n; r++) {
                    const o = ve(e.restDecoder),
                        i = ve(e.restDecoder);
                    t.set(o, i);
                }
                return t;
            },
            R$ = (e) => uce(new T$(Ca(e))),
            O$ = (e, t) => (
                ue(e.restEncoder, t.size),
                    _a(t.entries())
                        .sort((n, r) => r[0] - n[0])
                        .forEach(([n, r]) => {
                            ue(e.restEncoder, n), ue(e.restEncoder, r);
                        }),
                    e
            ),
            hce = (e, t) => O$(e, hv(t.store)),
            pce = (e, t = new M$()) => (
                e instanceof Map ? O$(t, e) : hce(t, e), t.toUint8Array()
            ),
            fce = (e) => pce(e, new A$());
        class mce {
            constructor() {
                this.l = [];
            }
        }
        const D$ = () => new mce(),
            L$ = (e, t) => e.l.push(t),
            j$ = (e, t) => {
                const n = e.l,
                    r = n.length;
                (e.l = n.filter((o) => t !== o)),
                r === e.l.length &&
                console.error(
                    "[yjs] Tried to remove event handler that doesn't exist."
                );
            },
            N$ = (e, t, n) => NS(e.l, [t, n]);
        class Rc {
            constructor(t, n) {
                (this.client = t), (this.clock = n);
            }
        }
        const uv = (e, t) =>
                e === t ||
                (e !== null &&
                    t !== null &&
                    e.client === t.client &&
                    e.clock === t.clock),
            Pe = (e, t) => new Rc(e, t),
            gce = (e) => {
                for (const [t, n] of e.doc.share.entries()) if (n === e) return t;
                throw Lo();
            },
            Oc = (e, t) =>
                t === void 0
                    ? !e.deleted
                    : t.sv.has(e.id.client) &&
                    (t.sv.get(e.id.client) || 0) > e.id.clock &&
                    !E$(t.ds, e.id),
            YS = (e, t) => {
                const n = ki(e.meta, YS, _s),
                    r = e.doc.store;
                n.has(t) ||
                (t.sv.forEach((o, i) => {
                    o < Nt(r, i) && Pa(e, Pe(i, o));
                }),
                    C$(e, t.ds, (o) => {}),
                    n.add(t));
            };
        class F$ {
            constructor() {
                (this.clients = new Map()),
                    (this.pendingStructs = null),
                    (this.pendingDs = null);
            }
        }
        const hv = (e) => {
                const t = new Map();
                return (
                    e.clients.forEach((n, r) => {
                        const o = n[n.length - 1];
                        t.set(r, o.id.clock + o.length);
                    }),
                        t
                );
            },
            Nt = (e, t) => {
                const n = e.clients.get(t);
                if (n === void 0) return 0;
                const r = n[n.length - 1];
                return r.id.clock + r.length;
            },
            B$ = (e, t) => {
                let n = e.clients.get(t.id.client);
                if (n === void 0) (n = []), e.clients.set(t.id.client, n);
                else {
                    const r = n[n.length - 1];
                    if (r.id.clock + r.length !== t.id.clock) throw Lo();
                }
                n.push(t);
            },
            No = (e, t) => {
                let n = 0,
                    r = e.length - 1,
                    o = e[r],
                    i = o.id.clock;
                if (i === t) return r;
                let a = Ci((t / (i + o.length - 1)) * r);
                for (; n <= r; ) {
                    if (((o = e[a]), (i = o.id.clock), i <= t)) {
                        if (t < i + o.length) return a;
                        n = a + 1;
                    } else r = a - 1;
                    a = Ci((n + r) / 2);
                }
                throw Lo();
            },
            GS = (e, t) => {
                const n = e.clients.get(t.client);
                return n[No(n, t.clock)];
            },
            XS = (e, t, n) => {
                const r = No(t, n),
                    o = t[r];
                return o.id.clock < n && o instanceof Tt
                    ? (t.splice(r + 1, 0, Cv(e, o, n - o.id.clock)), r + 1)
                    : r;
            },
            Pa = (e, t) => {
                const n = e.doc.store.clients.get(t.client);
                return n[XS(e, n, t.clock)];
            },
            U$ = (e, t, n) => {
                const r = t.clients.get(n.client),
                    o = No(r, n.clock),
                    i = r[o];
                return (
                    n.clock !== i.id.clock + i.length - 1 &&
                    i.constructor !== Mr &&
                    r.splice(o + 1, 0, Cv(e, i, n.clock - i.id.clock + 1)),
                        i
                );
            },
            vce = (e, t, n) => {
                const r = e.clients.get(t.id.client);
                r[No(r, t.id.clock)] = n;
            },
            H$ = (e, t, n, r, o) => {
                if (r === 0) return;
                const i = n + r;
                let a = XS(e, t, n),
                    s;
                do (s = t[a++]), i < s.id.clock + s.length && XS(e, t, i), o(s);
                while (a < t.length && t[a].id.clock < i);
            };
        class bce {
            constructor(t, n, r) {
                (this.doc = t),
                    (this.deleteSet = new xh()),
                    (this.beforeState = hv(t.store)),
                    (this.afterState = new Map()),
                    (this.changed = new Map()),
                    (this.changedParentTypes = new Map()),
                    (this._mergeStructs = []),
                    (this.origin = n),
                    (this.meta = new Map()),
                    (this.local = r),
                    (this.subdocsAdded = new Set()),
                    (this.subdocsRemoved = new Set()),
                    (this.subdocsLoaded = new Set()),
                    (this._needFormattingCleanup = !1);
            }
        }
        const V$ = (e, t) =>
                t.deleteSet.clients.size === 0 &&
                !Nse(t.afterState, (n, r) => t.beforeState.get(r) !== n)
                    ? !1
                    : (VS(t.deleteSet), ice(e, t), Ac(e, t.deleteSet), !0),
            K$ = (e, t, n) => {
                const r = t._item;
                (r === null ||
                    (r.id.clock < (e.beforeState.get(r.id.client) || 0) &&
                        !r.deleted)) &&
                ki(e.changed, t, _s).add(n);
            },
            pv = (e, t) => {
                let n = e[t],
                    r = e[t - 1],
                    o = t;
                for (; o > 0; n = r, r = e[--o - 1]) {
                    if (
                        r.deleted === n.deleted &&
                        r.constructor === n.constructor &&
                        r.mergeWith(n)
                    ) {
                        n instanceof Tt &&
                        n.parentSub !== null &&
                        n.parent._map.get(n.parentSub) === n &&
                        n.parent._map.set(n.parentSub, r);
                        continue;
                    }
                    break;
                }
                const i = t - o;
                return i && e.splice(t + 1 - i, i), i;
            },
            yce = (e, t, n) => {
                for (const [r, o] of e.clients.entries()) {
                    const i = t.clients.get(r);
                    for (let a = o.length - 1; a >= 0; a--) {
                        const s = o[a],
                            l = s.clock + s.len;
                        for (
                            let c = No(i, s.clock), d = i[c];
                            c < i.length && d.id.clock < l;
                            d = i[++c]
                        ) {
                            const u = i[c];
                            if (s.clock + s.len <= u.id.clock) break;
                            u instanceof Tt &&
                            u.deleted &&
                            !u.keep &&
                            n(u) &&
                            u.gc(t, !1);
                        }
                    }
                }
            },
            wce = (e, t) => {
                e.clients.forEach((n, r) => {
                    const o = t.clients.get(r);
                    for (let i = n.length - 1; i >= 0; i--) {
                        const a = n[i],
                            s = CS(o.length - 1, 1 + No(o, a.clock + a.len - 1));
                        for (
                            let l = s, c = o[l];
                            l > 0 && c.id.clock >= a.clock;
                            c = o[l]
                        )
                            l -= 1 + pv(o, l);
                    }
                });
            },
            W$ = (e, t) => {
                if (t < e.length) {
                    const n = e[t],
                        r = n.doc,
                        o = r.store,
                        i = n.deleteSet,
                        a = n._mergeStructs;
                    try {
                        VS(i),
                            (n.afterState = hv(n.doc.store)),
                            r.emit("beforeObserverCalls", [n, r]);
                        const s = [];
                        n.changed.forEach((l, c) =>
                            s.push(() => {
                                (c._item === null || !c._item.deleted) &&
                                c._callObserver(n, l);
                            })
                        ),
                            s.push(() => {
                                n.changedParentTypes.forEach((l, c) => {
                                    c._dEH.l.length > 0 &&
                                    (c._item === null || !c._item.deleted) &&
                                    ((l = l.filter(
                                        (d) =>
                                            d.target._item === null ||
                                            !d.target._item.deleted
                                    )),
                                        l.forEach((d) => {
                                            (d.currentTarget = c), (d._path = null);
                                        }),
                                        l.sort(
                                            (d, u) => d.path.length - u.path.length
                                        ),
                                        N$(c._dEH, l, n));
                                });
                            }),
                            s.push(() => r.emit("afterTransaction", [n, r])),
                            NS(s, []),
                        n._needFormattingCleanup && Fce(n);
                    } finally {
                        r.gc && yce(i, o, r.gcFilter),
                            wce(i, o),
                            n.afterState.forEach((d, u) => {
                                const h = n.beforeState.get(u) || 0;
                                if (h !== d) {
                                    const p = o.clients.get(u),
                                        m = ks(No(p, h), 1);
                                    for (let f = p.length - 1; f >= m; )
                                        f -= 1 + pv(p, f);
                                }
                            });
                        for (let d = a.length - 1; d >= 0; d--) {
                            const {client: u, clock: h} = a[d].id,
                                p = o.clients.get(u),
                                m = No(p, h);
                            (m + 1 < p.length && pv(p, m + 1) > 1) ||
                            (m > 0 && pv(p, m));
                        }
                        if (
                            (!n.local &&
                            n.afterState.get(r.clientID) !==
                            n.beforeState.get(r.clientID) &&
                            (Gle(
                                _$,
                                w$,
                                "[yjs] ",
                                x$,
                                S$,
                                "Changed the client-id because another client seems to be using it."
                            ),
                                (r.clientID = I$())),
                                r.emit("afterTransactionCleanup", [n, r]),
                                r._observers.has("update"))
                        ) {
                            const d = new Sh();
                            V$(d, n) &&
                            r.emit("update", [
                                d.toUint8Array(),
                                n.origin,
                                r,
                                n,
                            ]);
                        }
                        if (r._observers.has("updateV2")) {
                            const d = new Ts();
                            V$(d, n) &&
                            r.emit("updateV2", [
                                d.toUint8Array(),
                                n.origin,
                                r,
                                n,
                            ]);
                        }
                        const {
                            subdocsAdded: s,
                            subdocsLoaded: l,
                            subdocsRemoved: c,
                        } = n;
                        (s.size > 0 || c.size > 0 || l.size > 0) &&
                        (s.forEach((d) => {
                            (d.clientID = r.clientID),
                            d.collectionid == null &&
                            (d.collectionid = r.collectionid),
                                r.subdocs.add(d);
                        }),
                            c.forEach((d) => r.subdocs.delete(d)),
                            r.emit("subdocs", [
                                {loaded: l, added: s, removed: c},
                                r,
                                n,
                            ]),
                            c.forEach((d) => d.destroy())),
                            e.length <= t + 1
                                ? ((r._transactionCleanups = []),
                                    r.emit("afterAllTransactions", [r, e]))
                                : W$(e, t + 1);
                    }
                }
            },
            Je = (e, t, n = null, r = !0) => {
                const o = e._transactionCleanups;
                let i = !1,
                    a = null;
                e._transaction === null &&
                ((i = !0),
                    (e._transaction = new bce(e, n, r)),
                    o.push(e._transaction),
                o.length === 1 && e.emit("beforeAllTransactions", [e]),
                    e.emit("beforeTransaction", [e._transaction, e]));
                try {
                    a = t(e._transaction);
                } finally {
                    if (i) {
                        const s = e._transaction === o[0];
                        (e._transaction = null), s && W$(o, 0);
                    }
                }
                return a;
            };
        function* xce(e) {
            const t = ve(e.restDecoder);
            for (let n = 0; n < t; n++) {
                const r = ve(e.restDecoder),
                    o = e.readClient();
                let i = ve(e.restDecoder);
                for (let a = 0; a < r; a++) {
                    const s = e.readInfo();
                    if (s === 10) {
                        const l = ve(e.restDecoder);
                        yield new zr(Pe(o, i), l), (i += l);
                    } else if (ov & s) {
                        const l = (s & (Ei | fr)) === 0,
                            c = new Tt(
                                Pe(o, i),
                                null,
                                (s & fr) === fr ? e.readLeftID() : null,
                                null,
                                (s & Ei) === Ei ? e.readRightID() : null,
                                l
                                    ? e.readParentInfo()
                                        ? e.readString()
                                        : e.readLeftID()
                                    : null,
                                l && (s & fh) === fh ? e.readString() : null,
                                fA(e, s)
                            );
                        yield c, (i += c.length);
                    } else {
                        const l = e.readLen();
                        yield new Mr(Pe(o, i), l), (i += l);
                    }
                }
            }
        }
        class qS {
            constructor(t, n) {
                (this.gen = xce(t)),
                    (this.curr = null),
                    (this.done = !1),
                    (this.filterSkips = n),
                    this.next();
            }
            next() {
                do this.curr = this.gen.next().value || null;
                while (
                    this.filterSkips &&
                    this.curr !== null &&
                    this.curr.constructor === zr
                    );
                return this.curr;
            }
        }
        class ZS {
            constructor(t) {
                (this.currClient = 0),
                    (this.startClock = 0),
                    (this.written = 0),
                    (this.encoder = t),
                    (this.clientStructs = []);
            }
        }
        const Sce = (e) => fv(e, $$, Sh),
            _ce = (e, t) => {
                if (e.constructor === Mr) {
                    const {client: n, clock: r} = e.id;
                    return new Mr(Pe(n, r + t), e.length - t);
                } else if (e.constructor === zr) {
                    const {client: n, clock: r} = e.id;
                    return new zr(Pe(n, r + t), e.length - t);
                } else {
                    const n = e,
                        {client: r, clock: o} = n.id;
                    return new Tt(
                        Pe(r, o + t),
                        null,
                        Pe(r, o + t - 1),
                        null,
                        n.rightOrigin,
                        n.parent,
                        n.parentSub,
                        n.content.splice(t)
                    );
                }
            },
            fv = (e, t = zc, n = Ts) => {
                if (e.length === 1) return e[0];
                const r = e.map((d) => new t(Ca(d)));
                let o = r.map((d) => new qS(d, !0)),
                    i = null;
                const a = new n(),
                    s = new ZS(a);
                for (
                    ;
                    (o = o.filter((h) => h.curr !== null)),
                        o.sort((h, p) => {
                            if (h.curr.id.client === p.curr.id.client) {
                                const m = h.curr.id.clock - p.curr.id.clock;
                                return m === 0
                                    ? h.curr.constructor === p.curr.constructor
                                        ? 0
                                        : h.curr.constructor === zr
                                            ? 1
                                            : -1
                                    : m;
                            } else return p.curr.id.client - h.curr.id.client;
                        }),
                    o.length !== 0;

                ) {
                    const d = o[0],
                        u = d.curr.id.client;
                    if (i !== null) {
                        let h = d.curr,
                            p = !1;
                        for (
                            ;
                            h !== null &&
                            h.id.clock + h.length <=
                            i.struct.id.clock + i.struct.length &&
                            h.id.client >= i.struct.id.client;

                        )
                            (h = d.next()), (p = !0);
                        if (
                            h === null ||
                            h.id.client !== u ||
                            (p && h.id.clock > i.struct.id.clock + i.struct.length)
                        )
                            continue;
                        if (u !== i.struct.id.client)
                            Ia(s, i.struct, i.offset),
                                (i = {struct: h, offset: 0}),
                                d.next();
                        else if (i.struct.id.clock + i.struct.length < h.id.clock)
                            if (i.struct.constructor === zr)
                                i.struct.length =
                                    h.id.clock + h.length - i.struct.id.clock;
                            else {
                                Ia(s, i.struct, i.offset);
                                const m =
                                    h.id.clock -
                                    i.struct.id.clock -
                                    i.struct.length;
                                i = {
                                    struct: new zr(
                                        Pe(u, i.struct.id.clock + i.struct.length),
                                        m
                                    ),
                                    offset: 0,
                                };
                            }
                        else {
                            const m =
                                i.struct.id.clock + i.struct.length - h.id.clock;
                            m > 0 &&
                            (i.struct.constructor === zr
                                ? (i.struct.length -= m)
                                : (h = _ce(h, m))),
                            i.struct.mergeWith(h) ||
                            (Ia(s, i.struct, i.offset),
                                (i = {struct: h, offset: 0}),
                                d.next());
                        }
                    } else (i = {struct: d.curr, offset: 0}), d.next();
                    for (
                        let h = d.curr;
                        h !== null &&
                        h.id.client === u &&
                        h.id.clock === i.struct.id.clock + i.struct.length &&
                        h.constructor !== zr;
                        h = d.next()
                    )
                        Ia(s, i.struct, i.offset), (i = {struct: h, offset: 0});
                }
                i !== null && (Ia(s, i.struct, i.offset), (i = null)), QS(s);
                const l = r.map((d) => KS(d)),
                    c = Qle(l);
                return Ac(a, c), a.toUint8Array();
            },
            kce = (e, t, n = zc, r = Ts) => {
                const o = R$(t),
                    i = new r(),
                    a = new ZS(i),
                    s = new n(Ca(e)),
                    l = new qS(s, !1);
                for (; l.curr; ) {
                    const d = l.curr,
                        u = d.id.client,
                        h = o.get(u) || 0;
                    if (l.curr.constructor === zr) {
                        l.next();
                        continue;
                    }
                    if (d.id.clock + d.length > h)
                        for (
                            Ia(a, d, ks(h - d.id.clock, 0)), l.next();
                            l.curr && l.curr.id.client === u;

                        )
                            Ia(a, l.curr, 0), l.next();
                    else
                        for (
                            ;
                            l.curr &&
                            l.curr.id.client === u &&
                            l.curr.id.clock + l.curr.length <= h;

                        )
                            l.next();
                }
                QS(a);
                const c = KS(s);
                return Ac(i, c), i.toUint8Array();
            },
            Y$ = (e) => {
                e.written > 0 &&
                (e.clientStructs.push({
                    written: e.written,
                    restEncoder: mt(e.encoder.restEncoder),
                }),
                    (e.encoder.restEncoder = wn()),
                    (e.written = 0));
            },
            Ia = (e, t, n) => {
                e.written > 0 && e.currClient !== t.id.client && Y$(e),
                e.written === 0 &&
                ((e.currClient = t.id.client),
                    e.encoder.writeClient(t.id.client),
                    ue(e.encoder.restEncoder, t.id.clock + n)),
                    t.write(e.encoder, n),
                    e.written++;
            },
            QS = (e) => {
                Y$(e);
                const t = e.encoder.restEncoder;
                ue(t, e.clientStructs.length);
                for (let n = 0; n < e.clientStructs.length; n++) {
                    const r = e.clientStructs[n];
                    ue(t, r.written), iv(t, r.restEncoder);
                }
            },
            Cce = (e, t, n, r) => {
                const o = new n(Ca(e)),
                    i = new qS(o, !1),
                    a = new r(),
                    s = new ZS(a);
                for (let c = i.curr; c !== null; c = i.next()) Ia(s, t(c), 0);
                QS(s);
                const l = KS(o);
                return Ac(a, l), a.toUint8Array();
            },
            Ece = (e) => Cce(e, kle, zc, Sh),
            G$ = "You must not compute changes after the event-handler fired.";
        class mv {
            constructor(t, n) {
                (this.target = t),
                    (this.currentTarget = t),
                    (this.transaction = n),
                    (this._changes = null),
                    (this._keys = null),
                    (this._delta = null),
                    (this._path = null);
            }
            get path() {
                return (
                    this._path ||
                    (this._path = Pce(this.currentTarget, this.target))
                );
            }
            deletes(t) {
                return E$(this.transaction.deleteSet, t.id);
            }
            get keys() {
                if (this._keys === null) {
                    if (this.transaction.doc._transactionCleanups.length === 0)
                        throw ka(G$);
                    const t = new Map(),
                        n = this.target;
                    this.transaction.changed.get(n).forEach((o) => {
                        if (o !== null) {
                            const i = n._map.get(o);
                            let a, s;
                            if (this.adds(i)) {
                                let l = i.left;
                                for (; l !== null && this.adds(l); ) l = l.left;
                                if (this.deletes(i))
                                    if (l !== null && this.deletes(l))
                                        (a = "delete"),
                                            (s = kS(l.content.getContent()));
                                    else return;
                                else
                                    l !== null && this.deletes(l)
                                        ? ((a = "update"),
                                            (s = kS(l.content.getContent())))
                                        : ((a = "add"), (s = void 0));
                            } else if (this.deletes(i))
                                (a = "delete"), (s = kS(i.content.getContent()));
                            else return;
                            t.set(o, {action: a, oldValue: s});
                        }
                    }),
                        (this._keys = t);
                }
                return this._keys;
            }
            get delta() {
                return this.changes.delta;
            }
            adds(t) {
                return (
                    t.id.clock >=
                    (this.transaction.beforeState.get(t.id.client) || 0)
                );
            }
            get changes() {
                let t = this._changes;
                if (t === null) {
                    if (this.transaction.doc._transactionCleanups.length === 0)
                        throw ka(G$);
                    const n = this.target,
                        r = _s(),
                        o = _s(),
                        i = [];
                    if (
                        ((t = {added: r, deleted: o, delta: i, keys: this.keys}),
                            this.transaction.changed.get(n).has(null))
                    ) {
                        let s = null;
                        const l = () => {
                            s && i.push(s);
                        };
                        for (let c = n._start; c !== null; c = c.right)
                            c.deleted
                                ? this.deletes(c) &&
                                !this.adds(c) &&
                                ((s === null || s.delete === void 0) &&
                                (l(), (s = {delete: 0})),
                                    (s.delete += c.length),
                                    o.add(c))
                                : this.adds(c)
                                    ? ((s === null || s.insert === void 0) &&
                                    (l(), (s = {insert: []})),
                                        (s.insert = s.insert.concat(
                                            c.content.getContent()
                                        )),
                                        r.add(c))
                                    : ((s === null || s.retain === void 0) &&
                                    (l(), (s = {retain: 0})),
                                        (s.retain += c.length));
                        s !== null && s.retain === void 0 && l();
                    }
                    this._changes = t;
                }
                return t;
            }
        }
        const Pce = (e, t) => {
                const n = [];
                for (; t._item !== null && t !== e; ) {
                    if (t._item.parentSub !== null) n.unshift(t._item.parentSub);
                    else {
                        let r = 0,
                            o = t._item.parent._start;
                        for (; o !== t._item && o !== null; )
                            o.deleted || r++, (o = o.right);
                        n.unshift(r);
                    }
                    t = t._item.parent;
                }
                return n;
            },
            X$ = 80;
        let JS = 0;
        class Ice {
            constructor(t, n) {
                (t.marker = !0),
                    (this.p = t),
                    (this.index = n),
                    (this.timestamp = JS++);
            }
        }
        const Tce = (e) => {
                e.timestamp = JS++;
            },
            q$ = (e, t, n) => {
                (e.p.marker = !1),
                    (e.p = t),
                    (t.marker = !0),
                    (e.index = n),
                    (e.timestamp = JS++);
            },
            $ce = (e, t, n) => {
                if (e.length >= X$) {
                    const r = e.reduce((o, i) =>
                        o.timestamp < i.timestamp ? o : i
                    );
                    return q$(r, t, n), r;
                } else {
                    const r = new Ice(t, n);
                    return e.push(r), r;
                }
            },
            gv = (e, t) => {
                if (e._start === null || t === 0 || e._searchMarker === null)
                    return null;
                const n =
                    e._searchMarker.length === 0
                        ? null
                        : e._searchMarker.reduce((i, a) =>
                            rv(t - i.index) < rv(t - a.index) ? i : a
                        );
                let r = e._start,
                    o = 0;
                for (
                    n !== null && ((r = n.p), (o = n.index), Tce(n));
                    r.right !== null && o < t;

                ) {
                    if (!r.deleted && r.countable) {
                        if (t < o + r.length) break;
                        o += r.length;
                    }
                    r = r.right;
                }
                for (; r.left !== null && o > t; )
                    (r = r.left), !r.deleted && r.countable && (o -= r.length);
                for (
                    ;
                    r.left !== null &&
                    r.left.id.client === r.id.client &&
                    r.left.id.clock + r.left.length === r.id.clock;

                )
                    (r = r.left), !r.deleted && r.countable && (o -= r.length);
                return n !== null && rv(n.index - o) < r.parent.length / X$
                    ? (q$(n, r, o), n)
                    : $ce(e._searchMarker, r, o);
            },
            _h = (e, t, n) => {
                for (let r = e.length - 1; r >= 0; r--) {
                    const o = e[r];
                    if (n > 0) {
                        let i = o.p;
                        for (i.marker = !1; i && (i.deleted || !i.countable); )
                            (i = i.left),
                            i &&
                            !i.deleted &&
                            i.countable &&
                            (o.index -= i.length);
                        if (i === null || i.marker === !0) {
                            e.splice(r, 1);
                            continue;
                        }
                        (o.p = i), (i.marker = !0);
                    }
                    (t < o.index || (n > 0 && t === o.index)) &&
                    (o.index = ks(t, o.index + n));
                }
            },
            vv = (e, t, n) => {
                const r = e,
                    o = t.changedParentTypes;
                for (; ki(o, e, () => []).push(n), e._item !== null; )
                    e = e._item.parent;
                N$(r._eH, n, t);
            };
        class Qt {
            constructor() {
                (this._item = null),
                    (this._map = new Map()),
                    (this._start = null),
                    (this.doc = null),
                    (this._length = 0),
                    (this._eH = D$()),
                    (this._dEH = D$()),
                    (this._searchMarker = null);
            }
            get parent() {
                return this._item ? this._item.parent : null;
            }
            _integrate(t, n) {
                (this.doc = t), (this._item = n);
            }
            _copy() {
                throw Do();
            }
            clone() {
                throw Do();
            }
            _write(t) {}
            get _first() {
                let t = this._start;
                for (; t !== null && t.deleted; ) t = t.right;
                return t;
            }
            _callObserver(t, n) {
                !t.local && this._searchMarker && (this._searchMarker.length = 0);
            }
            observe(t) {
                L$(this._eH, t);
            }
            observeDeep(t) {
                L$(this._dEH, t);
            }
            unobserve(t) {
                j$(this._eH, t);
            }
            unobserveDeep(t) {
                j$(this._dEH, t);
            }
            toJSON() {}
        }
        const Z$ = (e, t, n) => {
                t < 0 && (t = e._length + t), n < 0 && (n = e._length + n);
                let r = n - t;
                const o = [];
                let i = e._start;
                for (; i !== null && r > 0; ) {
                    if (i.countable && !i.deleted) {
                        const a = i.content.getContent();
                        if (a.length <= t) t -= a.length;
                        else {
                            for (let s = t; s < a.length && r > 0; s++)
                                o.push(a[s]), r--;
                            t = 0;
                        }
                    }
                    i = i.right;
                }
                return o;
            },
            Q$ = (e) => {
                const t = [];
                let n = e._start;
                for (; n !== null; ) {
                    if (n.countable && !n.deleted) {
                        const r = n.content.getContent();
                        for (let o = 0; o < r.length; o++) t.push(r[o]);
                    }
                    n = n.right;
                }
                return t;
            },
            kh = (e, t) => {
                let n = 0,
                    r = e._start;
                for (; r !== null; ) {
                    if (r.countable && !r.deleted) {
                        const o = r.content.getContent();
                        for (let i = 0; i < o.length; i++) t(o[i], n++, e);
                    }
                    r = r.right;
                }
            },
            J$ = (e, t) => {
                const n = [];
                return (
                    kh(e, (r, o) => {
                        n.push(t(r, o, e));
                    }),
                        n
                );
            },
            Ace = (e) => {
                let t = e._start,
                    n = null,
                    r = 0;
                return {
                    [Symbol.iterator]() {
                        return this;
                    },
                    next: () => {
                        if (n === null) {
                            for (; t !== null && t.deleted; ) t = t.right;
                            if (t === null) return {done: !0, value: void 0};
                            (n = t.content.getContent()), (r = 0), (t = t.right);
                        }
                        const o = n[r++];
                        return n.length <= r && (n = null), {done: !1, value: o};
                    },
                };
            },
            eA = (e, t) => {
                const n = gv(e, t);
                let r = e._start;
                for (
                    n !== null && ((r = n.p), (t -= n.index));
                    r !== null;
                    r = r.right
                )
                    if (!r.deleted && r.countable) {
                        if (t < r.length) return r.content.getContent()[t];
                        t -= r.length;
                    }
            },
            bv = (e, t, n, r) => {
                let o = n;
                const i = e.doc,
                    a = i.clientID,
                    s = i.store,
                    l = n === null ? t._start : n.right;
                let c = [];
                const d = () => {
                    c.length > 0 &&
                    ((o = new Tt(
                        Pe(a, Nt(s, a)),
                        o,
                        o && o.lastId,
                        l,
                        l && l.id,
                        t,
                        null,
                        new Ms(c)
                    )),
                        o.integrate(e, 0),
                        (c = []));
                };
                r.forEach((u) => {
                    if (u === null) c.push(u);
                    else
                        switch (u.constructor) {
                            case Number:
                            case Object:
                            case Boolean:
                            case Array:
                            case String:
                                c.push(u);
                                break;
                            default:
                                switch ((d(), u.constructor)) {
                                    case Uint8Array:
                                    case ArrayBuffer:
                                        (o = new Tt(
                                            Pe(a, Nt(s, a)),
                                            o,
                                            o && o.lastId,
                                            l,
                                            l && l.id,
                                            t,
                                            null,
                                            new Ch(new Uint8Array(u))
                                        )),
                                            o.integrate(e, 0);
                                        break;
                                    case Mc:
                                        (o = new Tt(
                                            Pe(a, Nt(s, a)),
                                            o,
                                            o && o.lastId,
                                            l,
                                            l && l.id,
                                            t,
                                            null,
                                            new Ph(u)
                                        )),
                                            o.integrate(e, 0);
                                        break;
                                    default:
                                        if (u instanceof Qt)
                                            (o = new Tt(
                                                Pe(a, Nt(s, a)),
                                                o,
                                                o && o.lastId,
                                                l,
                                                l && l.id,
                                                t,
                                                null,
                                                new Ti(u)
                                            )),
                                                o.integrate(e, 0);
                                        else
                                            throw new Error(
                                                "Unexpected content type in insert operation"
                                            );
                                }
                        }
                }),
                    d();
            },
            tA = () => ka("Length exceeded!"),
            nA = (e, t, n, r) => {
                if (n > t._length) throw tA();
                if (n === 0)
                    return (
                        t._searchMarker && _h(t._searchMarker, n, r.length),
                            bv(e, t, null, r)
                    );
                const o = n,
                    i = gv(t, n);
                let a = t._start;
                for (
                    i !== null &&
                    ((a = i.p),
                        (n -= i.index),
                    n === 0 &&
                    ((a = a.prev),
                        (n += a && a.countable && !a.deleted ? a.length : 0)));
                    a !== null;
                    a = a.right
                )
                    if (!a.deleted && a.countable) {
                        if (n <= a.length) {
                            n < a.length && Pa(e, Pe(a.id.client, a.id.clock + n));
                            break;
                        }
                        n -= a.length;
                    }
                return (
                    t._searchMarker && _h(t._searchMarker, o, r.length),
                        bv(e, t, a, r)
                );
            },
            Mce = (e, t, n) => {
                let o = (t._searchMarker || []).reduce(
                    (i, a) => (a.index > i.index ? a : i),
                    {index: 0, p: t._start}
                ).p;
                if (o) for (; o.right; ) o = o.right;
                return bv(e, t, o, n);
            },
            rA = (e, t, n, r) => {
                if (r === 0) return;
                const o = n,
                    i = r,
                    a = gv(t, n);
                let s = t._start;
                for (
                    a !== null && ((s = a.p), (n -= a.index));
                    s !== null && n > 0;
                    s = s.right
                )
                    !s.deleted &&
                    s.countable &&
                    (n < s.length && Pa(e, Pe(s.id.client, s.id.clock + n)),
                        (n -= s.length));
                for (; r > 0 && s !== null; )
                    s.deleted ||
                    (r < s.length && Pa(e, Pe(s.id.client, s.id.clock + r)),
                        s.delete(e),
                        (r -= s.length)),
                        (s = s.right);
                if (r > 0) throw tA();
                t._searchMarker && _h(t._searchMarker, o, -i + r);
            },
            yv = (e, t, n) => {
                const r = t._map.get(n);
                r !== void 0 && r.delete(e);
            },
            e2 = (e, t, n, r) => {
                const o = t._map.get(n) || null,
                    i = e.doc,
                    a = i.clientID;
                let s;
                if (r == null) s = new Ms([r]);
                else
                    switch (r.constructor) {
                        case Number:
                        case Object:
                        case Boolean:
                        case Array:
                        case String:
                            s = new Ms([r]);
                            break;
                        case Uint8Array:
                            s = new Ch(r);
                            break;
                        case Mc:
                            s = new Ph(r);
                            break;
                        default:
                            if (r instanceof Qt) s = new Ti(r);
                            else throw new Error("Unexpected content type");
                    }
                new Tt(
                    Pe(a, Nt(i.store, a)),
                    o,
                    o && o.lastId,
                    null,
                    null,
                    t,
                    n,
                    s
                ).integrate(e, 0);
            },
            t2 = (e, t) => {
                const n = e._map.get(t);
                return n !== void 0 && !n.deleted
                    ? n.content.getContent()[n.length - 1]
                    : void 0;
            },
            oA = (e) => {
                const t = {};
                return (
                    e._map.forEach((n, r) => {
                        n.deleted || (t[r] = n.content.getContent()[n.length - 1]);
                    }),
                        t
                );
            },
            iA = (e, t) => {
                const n = e._map.get(t);
                return n !== void 0 && !n.deleted;
            },
            zce = (e, t) => {
                const n = {};
                return (
                    e._map.forEach((r, o) => {
                        let i = r;
                        for (
                            ;
                            i !== null &&
                            (!t.sv.has(i.id.client) ||
                                i.id.clock >= (t.sv.get(i.id.client) || 0));

                        )
                            i = i.left;
                        i !== null &&
                        Oc(i, t) &&
                        (n[o] = i.content.getContent()[i.length - 1]);
                    }),
                        n
                );
            },
            wv = (e) => qle(e.entries(), (t) => !t[1].deleted);
        class Rce extends mv {
            constructor(t, n) {
                super(t, n), (this._transaction = n);
            }
        }
        class Dc extends Qt {
            constructor() {
                super(), (this._prelimContent = []), (this._searchMarker = []);
            }
            static from(t) {
                const n = new Dc();
                return n.push(t), n;
            }
            _integrate(t, n) {
                super._integrate(t, n),
                    this.insert(0, this._prelimContent),
                    (this._prelimContent = null);
            }
            _copy() {
                return new Dc();
            }
            clone() {
                const t = new Dc();
                return (
                    t.insert(
                        0,
                        this.toArray().map((n) => (n instanceof Qt ? n.clone() : n))
                    ),
                        t
                );
            }
            get length() {
                return this._prelimContent === null
                    ? this._length
                    : this._prelimContent.length;
            }
            _callObserver(t, n) {
                super._callObserver(t, n), vv(this, t, new Rce(this, t));
            }
            insert(t, n) {
                this.doc !== null
                    ? Je(this.doc, (r) => {
                        nA(r, this, t, n);
                    })
                    : this._prelimContent.splice(t, 0, ...n);
            }
            push(t) {
                this.doc !== null
                    ? Je(this.doc, (n) => {
                        Mce(n, this, t);
                    })
                    : this._prelimContent.push(...t);
            }
            unshift(t) {
                this.insert(0, t);
            }
            delete(t, n = 1) {
                this.doc !== null
                    ? Je(this.doc, (r) => {
                        rA(r, this, t, n);
                    })
                    : this._prelimContent.splice(t, n);
            }
            get(t) {
                return eA(this, t);
            }
            toArray() {
                return Q$(this);
            }
            slice(t = 0, n = this.length) {
                return Z$(this, t, n);
            }
            toJSON() {
                return this.map((t) => (t instanceof Qt ? t.toJSON() : t));
            }
            map(t) {
                return J$(this, t);
            }
            forEach(t) {
                kh(this, t);
            }
            [Symbol.iterator]() {
                return Ace(this);
            }
            _write(t) {
                t.writeTypeRef(ode);
            }
        }
        const Oce = (e) => new Dc();
        class Dce extends mv {
            constructor(t, n, r) {
                super(t, n), (this.keysChanged = r);
            }
        }
        class Lc extends Qt {
            constructor(t) {
                super(),
                    (this._prelimContent = null),
                    t === void 0
                        ? (this._prelimContent = new Map())
                        : (this._prelimContent = new Map(t));
            }
            _integrate(t, n) {
                super._integrate(t, n),
                    this._prelimContent.forEach((r, o) => {
                        this.set(o, r);
                    }),
                    (this._prelimContent = null);
            }
            _copy() {
                return new Lc();
            }
            clone() {
                const t = new Lc();
                return (
                    this.forEach((n, r) => {
                        t.set(r, n instanceof Qt ? n.clone() : n);
                    }),
                        t
                );
            }
            _callObserver(t, n) {
                vv(this, t, new Dce(this, t, n));
            }
            toJSON() {
                const t = {};
                return (
                    this._map.forEach((n, r) => {
                        if (!n.deleted) {
                            const o = n.content.getContent()[n.length - 1];
                            t[r] = o instanceof Qt ? o.toJSON() : o;
                        }
                    }),
                        t
                );
            }
            get size() {
                return [...wv(this._map)].length;
            }
            keys() {
                return US(wv(this._map), (t) => t[0]);
            }
            values() {
                return US(
                    wv(this._map),
                    (t) => t[1].content.getContent()[t[1].length - 1]
                );
            }
            entries() {
                return US(wv(this._map), (t) => [
                    t[0],
                    t[1].content.getContent()[t[1].length - 1],
                ]);
            }
            forEach(t) {
                this._map.forEach((n, r) => {
                    n.deleted || t(n.content.getContent()[n.length - 1], r, this);
                });
            }
            [Symbol.iterator]() {
                return this.entries();
            }
            delete(t) {
                this.doc !== null
                    ? Je(this.doc, (n) => {
                        yv(n, this, t);
                    })
                    : this._prelimContent.delete(t);
            }
            set(t, n) {
                return (
                    this.doc !== null
                        ? Je(this.doc, (r) => {
                            e2(r, this, t, n);
                        })
                        : this._prelimContent.set(t, n),
                        n
                );
            }
            get(t) {
                return t2(this, t);
            }
            has(t) {
                return iA(this, t);
            }
            clear() {
                this.doc !== null
                    ? Je(this.doc, (t) => {
                        this.forEach(function (n, r, o) {
                            yv(t, o, r);
                        });
                    })
                    : this._prelimContent.clear();
            }
            _write(t) {
                t.writeTypeRef(ide);
            }
        }
        const Lce = (e) => new Lc(),
            Ta = (e, t) =>
                e === t ||
                (typeof e == "object" &&
                    typeof t == "object" &&
                    e &&
                    t &&
                    _le(e, t));
        class n2 {
            constructor(t, n, r, o) {
                (this.left = t),
                    (this.right = n),
                    (this.index = r),
                    (this.currentAttributes = o);
            }
            forward() {
                switch (
                    (this.right === null && Lo(), this.right.content.constructor)
                    ) {
                    case It:
                        this.right.deleted ||
                        jc(this.currentAttributes, this.right.content);
                        break;
                    default:
                        this.right.deleted || (this.index += this.right.length);
                        break;
                }
                (this.left = this.right), (this.right = this.right.right);
            }
        }
        const aA = (e, t, n) => {
                for (; t.right !== null && n > 0; ) {
                    switch (t.right.content.constructor) {
                        case It:
                            t.right.deleted ||
                            jc(t.currentAttributes, t.right.content);
                            break;
                        default:
                            t.right.deleted ||
                            (n < t.right.length &&
                            Pa(
                                e,
                                Pe(t.right.id.client, t.right.id.clock + n)
                            ),
                                (t.index += t.right.length),
                                (n -= t.right.length));
                            break;
                    }
                    (t.left = t.right), (t.right = t.right.right);
                }
                return t;
            },
            xv = (e, t, n, r) => {
                const o = new Map(),
                    i = r ? gv(t, n) : null;
                if (i) {
                    const a = new n2(i.p.left, i.p, i.index, o);
                    return aA(e, a, n - i.index);
                } else {
                    const a = new n2(null, t._start, 0, o);
                    return aA(e, a, n);
                }
            },
            sA = (e, t, n, r) => {
                for (
                    ;
                    n.right !== null &&
                    (n.right.deleted === !0 ||
                        (n.right.content.constructor === It &&
                            Ta(r.get(n.right.content.key), n.right.content.value)));

                )
                    n.right.deleted || r.delete(n.right.content.key), n.forward();
                const o = e.doc,
                    i = o.clientID;
                r.forEach((a, s) => {
                    const l = n.left,
                        c = n.right,
                        d = new Tt(
                            Pe(i, Nt(o.store, i)),
                            l,
                            l && l.lastId,
                            c,
                            c && c.id,
                            t,
                            null,
                            new It(s, a)
                        );
                    d.integrate(e, 0), (n.right = d), n.forward();
                });
            },
            jc = (e, t) => {
                const {key: n, value: r} = t;
                r === null ? e.delete(n) : e.set(n, r);
            },
            lA = (e, t) => {
                for (; e.right !== null; ) {
                    if (
                        !(
                            e.right.deleted ||
                            (e.right.content.constructor === It &&
                                Ta(
                                    t[e.right.content.key] || null,
                                    e.right.content.value
                                ))
                        )
                    )
                        break;
                    e.forward();
                }
            },
            cA = (e, t, n, r) => {
                const o = e.doc,
                    i = o.clientID,
                    a = new Map();
                for (const s in r) {
                    const l = r[s],
                        c = n.currentAttributes.get(s) || null;
                    if (!Ta(c, l)) {
                        a.set(s, c);
                        const {left: d, right: u} = n;
                        (n.right = new Tt(
                            Pe(i, Nt(o.store, i)),
                            d,
                            d && d.lastId,
                            u,
                            u && u.id,
                            t,
                            null,
                            new It(s, l)
                        )),
                            n.right.integrate(e, 0),
                            n.forward();
                    }
                }
                return a;
            },
            r2 = (e, t, n, r, o) => {
                n.currentAttributes.forEach((h, p) => {
                    o[p] === void 0 && (o[p] = null);
                });
                const i = e.doc,
                    a = i.clientID;
                lA(n, o);
                const s = cA(e, t, n, o),
                    l =
                        r.constructor === String
                            ? new Fo(r)
                            : r instanceof Qt
                                ? new Ti(r)
                                : new As(r);
                let {left: c, right: d, index: u} = n;
                t._searchMarker && _h(t._searchMarker, n.index, l.getLength()),
                    (d = new Tt(
                        Pe(a, Nt(i.store, a)),
                        c,
                        c && c.lastId,
                        d,
                        d && d.id,
                        t,
                        null,
                        l
                    )),
                    d.integrate(e, 0),
                    (n.right = d),
                    (n.index = u),
                    n.forward(),
                    sA(e, t, n, s);
            },
            dA = (e, t, n, r, o) => {
                const i = e.doc,
                    a = i.clientID;
                lA(n, o);
                const s = cA(e, t, n, o);
                e: for (
                    ;
                    n.right !== null &&
                    (r > 0 ||
                        (s.size > 0 &&
                            (n.right.deleted ||
                                n.right.content.constructor === It)));

                ) {
                    if (!n.right.deleted)
                        switch (n.right.content.constructor) {
                            case It: {
                                const {key: l, value: c} = n.right.content,
                                    d = o[l];
                                if (d !== void 0) {
                                    if (Ta(d, c)) s.delete(l);
                                    else {
                                        if (r === 0) break e;
                                        s.set(l, c);
                                    }
                                    n.right.delete(e);
                                } else n.currentAttributes.set(l, c);
                                break;
                            }
                            default:
                                r < n.right.length &&
                                Pa(
                                    e,
                                    Pe(n.right.id.client, n.right.id.clock + r)
                                ),
                                    (r -= n.right.length);
                                break;
                        }
                    n.forward();
                }
                if (r > 0) {
                    let l = "";
                    for (; r > 0; r--)
                        l += `
`;
                    (n.right = new Tt(
                        Pe(a, Nt(i.store, a)),
                        n.left,
                        n.left && n.left.lastId,
                        n.right,
                        n.right && n.right.id,
                        t,
                        null,
                        new Fo(l)
                    )),
                        n.right.integrate(e, 0),
                        n.forward();
                }
                sA(e, t, n, s);
            },
            uA = (e, t, n, r, o) => {
                let i = t;
                const a = lo();
                for (; i && (!i.countable || i.deleted); ) {
                    if (!i.deleted && i.content.constructor === It) {
                        const c = i.content;
                        a.set(c.key, c);
                    }
                    i = i.right;
                }
                let s = 0,
                    l = !1;
                for (; t !== i; ) {
                    if ((n === t && (l = !0), !t.deleted)) {
                        const c = t.content;
                        switch (c.constructor) {
                            case It: {
                                const {key: d, value: u} = c,
                                    h = r.get(d) || null;
                                (a.get(d) !== c || h === u) &&
                                (t.delete(e),
                                    s++,
                                !l &&
                                (o.get(d) || null) === u &&
                                h !== u &&
                                (h === null ? o.delete(d) : o.set(d, h))),
                                !l && !t.deleted && jc(o, c);
                                break;
                            }
                        }
                    }
                    t = t.right;
                }
                return s;
            },
            jce = (e, t) => {
                for (; t && t.right && (t.right.deleted || !t.right.countable); )
                    t = t.right;
                const n = new Set();
                for (; t && (t.deleted || !t.countable); ) {
                    if (!t.deleted && t.content.constructor === It) {
                        const r = t.content.key;
                        n.has(r) ? t.delete(e) : n.add(r);
                    }
                    t = t.left;
                }
            },
            Nce = (e) => {
                let t = 0;
                return (
                    Je(e.doc, (n) => {
                        let r = e._start,
                            o = e._start,
                            i = lo();
                        const a = _S(i);
                        for (; o; ) {
                            if (o.deleted === !1)
                                switch (o.content.constructor) {
                                    case It:
                                        jc(a, o.content);
                                        break;
                                    default:
                                        (t += uA(n, r, o, i, a)),
                                            (i = _S(a)),
                                            (r = o);
                                        break;
                                }
                            o = o.right;
                        }
                    }),
                        t
                );
            },
            Fce = (e) => {
                const t = new Set(),
                    n = e.doc;
                for (const [r, o] of e.afterState.entries()) {
                    const i = e.beforeState.get(r) || 0;
                    o !== i &&
                    H$(e, n.store.clients.get(r), i, o, (a) => {
                        !a.deleted &&
                        a.content.constructor === It &&
                        a.constructor !== Mr &&
                        t.add(a.parent);
                    });
                }
                Je(n, (r) => {
                    C$(e, e.deleteSet, (o) => {
                        if (
                            o instanceof Mr ||
                            !o.parent._hasFormatting ||
                            t.has(o.parent)
                        )
                            return;
                        const i = o.parent;
                        o.content.constructor === It ? t.add(i) : jce(r, o);
                    });
                    for (const o of t) Nce(o);
                });
            },
            hA = (e, t, n) => {
                const r = n,
                    o = _S(t.currentAttributes),
                    i = t.right;
                for (; n > 0 && t.right !== null; ) {
                    if (t.right.deleted === !1)
                        switch (t.right.content.constructor) {
                            case Ti:
                            case As:
                            case Fo:
                                n < t.right.length &&
                                Pa(
                                    e,
                                    Pe(t.right.id.client, t.right.id.clock + n)
                                ),
                                    (n -= t.right.length),
                                    t.right.delete(e);
                                break;
                        }
                    t.forward();
                }
                i && uA(e, i, t.right, o, t.currentAttributes);
                const a = (t.left || t.right).parent;
                return a._searchMarker && _h(a._searchMarker, t.index, -r + n), t;
            };
        class Bce extends mv {
            constructor(t, n, r) {
                super(t, n),
                    (this.childListChanged = !1),
                    (this.keysChanged = new Set()),
                    r.forEach((o) => {
                        o === null
                            ? (this.childListChanged = !0)
                            : this.keysChanged.add(o);
                    });
            }
            get changes() {
                if (this._changes === null) {
                    const t = {
                        keys: this.keys,
                        delta: this.delta,
                        added: new Set(),
                        deleted: new Set(),
                    };
                    this._changes = t;
                }
                return this._changes;
            }
            get delta() {
                if (this._delta === null) {
                    const t = this.target.doc,
                        n = [];
                    Je(t, (r) => {
                        const o = new Map(),
                            i = new Map();
                        let a = this.target._start,
                            s = null;
                        const l = {};
                        let c = "",
                            d = 0,
                            u = 0;
                        const h = () => {
                            if (s !== null) {
                                let p = null;
                                switch (s) {
                                    case "delete":
                                        u > 0 && (p = {delete: u}), (u = 0);
                                        break;
                                    case "insert":
                                        (typeof c == "object" || c.length > 0) &&
                                        ((p = {insert: c}),
                                        o.size > 0 &&
                                        ((p.attributes = {}),
                                            o.forEach((m, f) => {
                                                m !== null &&
                                                (p.attributes[f] = m);
                                            }))),
                                            (c = "");
                                        break;
                                    case "retain":
                                        d > 0 &&
                                        ((p = {retain: d}),
                                        xle(l) || (p.attributes = vle({}, l))),
                                            (d = 0);
                                        break;
                                }
                                p && n.push(p), (s = null);
                            }
                        };
                        for (; a !== null; ) {
                            switch (a.content.constructor) {
                                case Ti:
                                case As:
                                    this.adds(a)
                                        ? this.deletes(a) ||
                                        (h(),
                                            (s = "insert"),
                                            (c = a.content.getContent()[0]),
                                            h())
                                        : this.deletes(a)
                                            ? (s !== "delete" && (h(), (s = "delete")),
                                                (u += 1))
                                            : a.deleted ||
                                            (s !== "retain" && (h(), (s = "retain")),
                                                (d += 1));
                                    break;
                                case Fo:
                                    this.adds(a)
                                        ? this.deletes(a) ||
                                        (s !== "insert" && (h(), (s = "insert")),
                                            (c += a.content.str))
                                        : this.deletes(a)
                                            ? (s !== "delete" && (h(), (s = "delete")),
                                                (u += a.length))
                                            : a.deleted ||
                                            (s !== "retain" && (h(), (s = "retain")),
                                                (d += a.length));
                                    break;
                                case It: {
                                    const {key: p, value: m} = a.content;
                                    if (this.adds(a)) {
                                        if (!this.deletes(a)) {
                                            const f = o.get(p) || null;
                                            Ta(f, m)
                                                ? m !== null && a.delete(r)
                                                : (s === "retain" && h(),
                                                    Ta(m, i.get(p) || null)
                                                        ? delete l[p]
                                                        : (l[p] = m));
                                        }
                                    } else if (this.deletes(a)) {
                                        i.set(p, m);
                                        const f = o.get(p) || null;
                                        Ta(f, m) ||
                                        (s === "retain" && h(), (l[p] = f));
                                    } else if (!a.deleted) {
                                        i.set(p, m);
                                        const f = l[p];
                                        f !== void 0 &&
                                        (Ta(f, m)
                                            ? f !== null && a.delete(r)
                                            : (s === "retain" && h(),
                                                m === null
                                                    ? delete l[p]
                                                    : (l[p] = m)));
                                    }
                                    a.deleted ||
                                    (s === "insert" && h(), jc(o, a.content));
                                    break;
                                }
                            }
                            a = a.right;
                        }
                        for (h(); n.length > 0; ) {
                            const p = n[n.length - 1];
                            if (p.retain !== void 0 && p.attributes === void 0)
                                n.pop();
                            else break;
                        }
                    }),
                        (this._delta = n);
                }
                return this._delta;
            }
        }
        class Nc extends Qt {
            constructor(t) {
                super(),
                    (this._pending = t !== void 0 ? [() => this.insert(0, t)] : []),
                    (this._searchMarker = []),
                    (this._hasFormatting = !1);
            }
            get length() {
                return this._length;
            }
            _integrate(t, n) {
                super._integrate(t, n);
                try {
                    this._pending.forEach((r) => r());
                } catch (r) {
                    console.error(r);
                }
                this._pending = null;
            }
            _copy() {
                return new Nc();
            }
            clone() {
                const t = new Nc();
                return t.applyDelta(this.toDelta()), t;
            }
            _callObserver(t, n) {
                super._callObserver(t, n);
                const r = new Bce(this, t, n);
                vv(this, t, r),
                !t.local &&
                this._hasFormatting &&
                (t._needFormattingCleanup = !0);
            }
            toString() {
                let t = "",
                    n = this._start;
                for (; n !== null; )
                    !n.deleted &&
                    n.countable &&
                    n.content.constructor === Fo &&
                    (t += n.content.str),
                        (n = n.right);
                return t;
            }
            toJSON() {
                return this.toString();
            }
            applyDelta(t, {sanitize: n = !0} = {}) {
                this.doc !== null
                    ? Je(this.doc, (r) => {
                        const o = new n2(null, this._start, 0, new Map());
                        for (let i = 0; i < t.length; i++) {
                            const a = t[i];
                            if (a.insert !== void 0) {
                                const s =
                                    !n &&
                                    typeof a.insert == "string" &&
                                    i === t.length - 1 &&
                                    o.right === null &&
                                    a.insert.slice(-1) ===
                                    `
`
                                        ? a.insert.slice(0, -1)
                                        : a.insert;
                                (typeof s != "string" || s.length > 0) &&
                                r2(r, this, o, s, a.attributes || {});
                            } else
                                a.retain !== void 0
                                    ? dA(r, this, o, a.retain, a.attributes || {})
                                    : a.delete !== void 0 && hA(r, o, a.delete);
                        }
                    })
                    : this._pending.push(() => this.applyDelta(t));
            }
            toDelta(t, n, r) {
                const o = [],
                    i = new Map(),
                    a = this.doc;
                let s = "",
                    l = this._start;
                function c() {
                    if (s.length > 0) {
                        const u = {};
                        let h = !1;
                        i.forEach((m, f) => {
                            (h = !0), (u[f] = m);
                        });
                        const p = {insert: s};
                        h && (p.attributes = u), o.push(p), (s = "");
                    }
                }
                const d = () => {
                    for (; l !== null; ) {
                        if (Oc(l, t) || (n !== void 0 && Oc(l, n)))
                            switch (l.content.constructor) {
                                case Fo: {
                                    const u = i.get("ychange");
                                    t !== void 0 && !Oc(l, t)
                                        ? (u === void 0 ||
                                            u.user !== l.id.client ||
                                            u.type !== "removed") &&
                                        (c(),
                                            i.set(
                                                "ychange",
                                                r
                                                    ? r("removed", l.id)
                                                    : {type: "removed"}
                                            ))
                                        : n !== void 0 && !Oc(l, n)
                                            ? (u === void 0 ||
                                                u.user !== l.id.client ||
                                                u.type !== "added") &&
                                            (c(),
                                                i.set(
                                                    "ychange",
                                                    r ? r("added", l.id) : {type: "added"}
                                                ))
                                            : u !== void 0 &&
                                            (c(), i.delete("ychange")),
                                        (s += l.content.str);
                                    break;
                                }
                                case Ti:
                                case As: {
                                    c();
                                    const u = {insert: l.content.getContent()[0]};
                                    if (i.size > 0) {
                                        const h = {};
                                        (u.attributes = h),
                                            i.forEach((p, m) => {
                                                h[m] = p;
                                            });
                                    }
                                    o.push(u);
                                    break;
                                }
                                case It:
                                    Oc(l, t) && (c(), jc(i, l.content));
                                    break;
                            }
                        l = l.right;
                    }
                    c();
                };
                return (
                    t || n
                        ? Je(
                            a,
                            (u) => {
                                t && YS(u, t), n && YS(u, n), d();
                            },
                            "cleanup"
                        )
                        : d(),
                        o
                );
            }
            insert(t, n, r) {
                if (n.length <= 0) return;
                const o = this.doc;
                o !== null
                    ? Je(o, (i) => {
                        const a = xv(i, this, t, !r);
                        r ||
                        ((r = {}),
                            a.currentAttributes.forEach((s, l) => {
                                r[l] = s;
                            })),
                            r2(i, this, a, n, r);
                    })
                    : this._pending.push(() => this.insert(t, n, r));
            }
            insertEmbed(t, n, r) {
                const o = this.doc;
                o !== null
                    ? Je(o, (i) => {
                        const a = xv(i, this, t, !r);
                        r2(i, this, a, n, r || {});
                    })
                    : this._pending.push(() => this.insertEmbed(t, n, r || {}));
            }
            delete(t, n) {
                if (n === 0) return;
                const r = this.doc;
                r !== null
                    ? Je(r, (o) => {
                        hA(o, xv(o, this, t, !0), n);
                    })
                    : this._pending.push(() => this.delete(t, n));
            }
            format(t, n, r) {
                if (n === 0) return;
                const o = this.doc;
                o !== null
                    ? Je(o, (i) => {
                        const a = xv(i, this, t, !1);
                        a.right !== null && dA(i, this, a, n, r);
                    })
                    : this._pending.push(() => this.format(t, n, r));
            }
            removeAttribute(t) {
                this.doc !== null
                    ? Je(this.doc, (n) => {
                        yv(n, this, t);
                    })
                    : this._pending.push(() => this.removeAttribute(t));
            }
            setAttribute(t, n) {
                this.doc !== null
                    ? Je(this.doc, (r) => {
                        e2(r, this, t, n);
                    })
                    : this._pending.push(() => this.setAttribute(t, n));
            }
            getAttribute(t) {
                return t2(this, t);
            }
            getAttributes() {
                return oA(this);
            }
            _write(t) {
                t.writeTypeRef(ade);
            }
        }
        const Uce = (e) => new Nc();
        class o2 {
            constructor(t, n = () => !0) {
                (this._filter = n),
                    (this._root = t),
                    (this._currentNode = t._start),
                    (this._firstCall = !0);
            }
            [Symbol.iterator]() {
                return this;
            }
            next() {
                let t = this._currentNode,
                    n = t && t.content && t.content.type;
                if (
                    t !== null &&
                    (!this._firstCall || t.deleted || !this._filter(n))
                )
                    do
                        if (
                            ((n = t.content.type),
                            !t.deleted &&
                            (n.constructor === Fc || n.constructor === $s) &&
                            n._start !== null)
                        )
                            t = n._start;
                        else
                            for (; t !== null; )
                                if (t.right !== null) {
                                    t = t.right;
                                    break;
                                } else
                                    t.parent === this._root
                                        ? (t = null)
                                        : (t = t.parent._item);
                    while (
                        t !== null &&
                        (t.deleted || !this._filter(t.content.type))
                        );
                return (
                    (this._firstCall = !1),
                        t === null
                            ? {value: void 0, done: !0}
                            : ((this._currentNode = t),
                                {value: t.content.type, done: !1})
                );
            }
        }
        class $s extends Qt {
            constructor() {
                super(), (this._prelimContent = []);
            }
            get firstChild() {
                const t = this._first;
                return t ? t.content.getContent()[0] : null;
            }
            _integrate(t, n) {
                super._integrate(t, n),
                    this.insert(0, this._prelimContent),
                    (this._prelimContent = null);
            }
            _copy() {
                return new $s();
            }
            clone() {
                const t = new $s();
                return (
                    t.insert(
                        0,
                        this.toArray().map((n) => (n instanceof Qt ? n.clone() : n))
                    ),
                        t
                );
            }
            get length() {
                return this._prelimContent === null
                    ? this._length
                    : this._prelimContent.length;
            }
            createTreeWalker(t) {
                return new o2(this, t);
            }
            querySelector(t) {
                t = t.toUpperCase();
                const r = new o2(
                    this,
                    (o) => o.nodeName && o.nodeName.toUpperCase() === t
                ).next();
                return r.done ? null : r.value;
            }
            querySelectorAll(t) {
                return (
                    (t = t.toUpperCase()),
                        _a(
                            new o2(
                                this,
                                (n) => n.nodeName && n.nodeName.toUpperCase() === t
                            )
                        )
                );
            }
            _callObserver(t, n) {
                vv(this, t, new Kce(this, n, t));
            }
            toString() {
                return J$(this, (t) => t.toString()).join("");
            }
            toJSON() {
                return this.toString();
            }
            toDOM(t = document, n = {}, r) {
                const o = t.createDocumentFragment();
                return (
                    r !== void 0 && r._createAssociation(o, this),
                        kh(this, (i) => {
                            o.insertBefore(i.toDOM(t, n, r), null);
                        }),
                        o
                );
            }
            insert(t, n) {
                this.doc !== null
                    ? Je(this.doc, (r) => {
                        nA(r, this, t, n);
                    })
                    : this._prelimContent.splice(t, 0, ...n);
            }
            insertAfter(t, n) {
                if (this.doc !== null)
                    Je(this.doc, (r) => {
                        const o = t && t instanceof Qt ? t._item : t;
                        bv(r, this, o, n);
                    });
                else {
                    const r = this._prelimContent,
                        o = t === null ? 0 : r.findIndex((i) => i === t) + 1;
                    if (o === 0 && t !== null) throw ka("Reference item not found");
                    r.splice(o, 0, ...n);
                }
            }
            delete(t, n = 1) {
                this.doc !== null
                    ? Je(this.doc, (r) => {
                        rA(r, this, t, n);
                    })
                    : this._prelimContent.splice(t, n);
            }
            toArray() {
                return Q$(this);
            }
            push(t) {
                this.insert(this.length, t);
            }
            unshift(t) {
                this.insert(0, t);
            }
            get(t) {
                return eA(this, t);
            }
            slice(t = 0, n = this.length) {
                return Z$(this, t, n);
            }
            forEach(t) {
                kh(this, t);
            }
            _write(t) {
                t.writeTypeRef(lde);
            }
        }
        const Hce = (e) => new $s();
        class Fc extends $s {
            constructor(t = "UNDEFINED") {
                super(), (this.nodeName = t), (this._prelimAttrs = new Map());
            }
            get nextSibling() {
                const t = this._item ? this._item.next : null;
                return t ? t.content.type : null;
            }
            get prevSibling() {
                const t = this._item ? this._item.prev : null;
                return t ? t.content.type : null;
            }
            _integrate(t, n) {
                super._integrate(t, n),
                    this._prelimAttrs.forEach((r, o) => {
                        this.setAttribute(o, r);
                    }),
                    (this._prelimAttrs = null);
            }
            _copy() {
                return new Fc(this.nodeName);
            }
            clone() {
                const t = new Fc(this.nodeName),
                    n = this.getAttributes();
                return (
                    yle(n, (r, o) => {
                        typeof r == "string" && t.setAttribute(o, r);
                    }),
                        t.insert(
                            0,
                            this.toArray().map((r) => (r instanceof Qt ? r.clone() : r))
                        ),
                        t
                );
            }
            toString() {
                const t = this.getAttributes(),
                    n = [],
                    r = [];
                for (const s in t) r.push(s);
                r.sort();
                const o = r.length;
                for (let s = 0; s < o; s++) {
                    const l = r[s];
                    n.push(l + '="' + t[l] + '"');
                }
                const i = this.nodeName.toLocaleLowerCase(),
                    a = n.length > 0 ? " " + n.join(" ") : "";
                return `<${i}${a}>${super.toString()}</${i}>`;
            }
            removeAttribute(t) {
                this.doc !== null
                    ? Je(this.doc, (n) => {
                        yv(n, this, t);
                    })
                    : this._prelimAttrs.delete(t);
            }
            setAttribute(t, n) {
                this.doc !== null
                    ? Je(this.doc, (r) => {
                        e2(r, this, t, n);
                    })
                    : this._prelimAttrs.set(t, n);
            }
            getAttribute(t) {
                return t2(this, t);
            }
            hasAttribute(t) {
                return iA(this, t);
            }
            getAttributes(t) {
                return t ? zce(this, t) : oA(this);
            }
            toDOM(t = document, n = {}, r) {
                const o = t.createElement(this.nodeName),
                    i = this.getAttributes();
                for (const a in i) {
                    const s = i[a];
                    typeof s == "string" && o.setAttribute(a, s);
                }
                return (
                    kh(this, (a) => {
                        o.appendChild(a.toDOM(t, n, r));
                    }),
                    r !== void 0 && r._createAssociation(o, this),
                        o
                );
            }
            _write(t) {
                t.writeTypeRef(sde), t.writeKey(this.nodeName);
            }
        }
        const Vce = (e) => new Fc(e.readKey());
        class Kce extends mv {
            constructor(t, n, r) {
                super(t, r),
                    (this.childListChanged = !1),
                    (this.attributesChanged = new Set()),
                    n.forEach((o) => {
                        o === null
                            ? (this.childListChanged = !0)
                            : this.attributesChanged.add(o);
                    });
            }
        }
        class Sv extends Lc {
            constructor(t) {
                super(), (this.hookName = t);
            }
            _copy() {
                return new Sv(this.hookName);
            }
            clone() {
                const t = new Sv(this.hookName);
                return (
                    this.forEach((n, r) => {
                        t.set(r, n);
                    }),
                        t
                );
            }
            toDOM(t = document, n = {}, r) {
                const o = n[this.hookName];
                let i;
                return (
                    o !== void 0
                        ? (i = o.createDom(this))
                        : (i = document.createElement(this.hookName)),
                        i.setAttribute("data-yjs-hook", this.hookName),
                    r !== void 0 && r._createAssociation(i, this),
                        i
                );
            }
            _write(t) {
                t.writeTypeRef(cde), t.writeKey(this.hookName);
            }
        }
        const Wce = (e) => new Sv(e.readKey());
        class _v extends Nc {
            get nextSibling() {
                const t = this._item ? this._item.next : null;
                return t ? t.content.type : null;
            }
            get prevSibling() {
                const t = this._item ? this._item.prev : null;
                return t ? t.content.type : null;
            }
            _copy() {
                return new _v();
            }
            clone() {
                const t = new _v();
                return t.applyDelta(this.toDelta()), t;
            }
            toDOM(t = document, n, r) {
                const o = t.createTextNode(this.toString());
                return r !== void 0 && r._createAssociation(o, this), o;
            }
            toString() {
                return this.toDelta()
                    .map((t) => {
                        const n = [];
                        for (const o in t.attributes) {
                            const i = [];
                            for (const a in t.attributes[o])
                                i.push({key: a, value: t.attributes[o][a]});
                            i.sort((a, s) => (a.key < s.key ? -1 : 1)),
                                n.push({nodeName: o, attrs: i});
                        }
                        n.sort((o, i) => (o.nodeName < i.nodeName ? -1 : 1));
                        let r = "";
                        for (let o = 0; o < n.length; o++) {
                            const i = n[o];
                            r += `<${i.nodeName}`;
                            for (let a = 0; a < i.attrs.length; a++) {
                                const s = i.attrs[a];
                                r += ` ${s.key}="${s.value}"`;
                            }
                            r += ">";
                        }
                        r += t.insert;
                        for (let o = n.length - 1; o >= 0; o--)
                            r += `</${n[o].nodeName}>`;
                        return r;
                    })
                    .join("");
            }
            toJSON() {
                return this.toString();
            }
            _write(t) {
                t.writeTypeRef(dde);
            }
        }
        const Yce = (e) => new _v();
        class i2 {
            constructor(t, n) {
                (this.id = t), (this.length = n);
            }
            get deleted() {
                throw Do();
            }
            mergeWith(t) {
                return !1;
            }
            write(t, n, r) {
                throw Do();
            }
            integrate(t, n) {
                throw Do();
            }
        }
        const Gce = 0;
        class Mr extends i2 {
            get deleted() {
                return !0;
            }
            delete() {}
            mergeWith(t) {
                return this.constructor !== t.constructor
                    ? !1
                    : ((this.length += t.length), !0);
            }
            integrate(t, n) {
                n > 0 && ((this.id.clock += n), (this.length -= n)),
                    B$(t.doc.store, this);
            }
            write(t, n) {
                t.writeInfo(Gce), t.writeLen(this.length - n);
            }
            getMissing(t, n) {
                return null;
            }
        }
        class Ch {
            constructor(t) {
                this.content = t;
            }
            getLength() {
                return 1;
            }
            getContent() {
                return [this.content];
            }
            isCountable() {
                return !0;
            }
            copy() {
                return new Ch(this.content);
            }
            splice(t) {
                throw Do();
            }
            mergeWith(t) {
                return !1;
            }
            integrate(t, n) {}
            delete(t) {}
            gc(t) {}
            write(t, n) {
                t.writeBuf(this.content);
            }
            getRef() {
                return 3;
            }
        }
        const Xce = (e) => new Ch(e.readBuf());
        class Eh {
            constructor(t) {
                this.len = t;
            }
            getLength() {
                return this.len;
            }
            getContent() {
                return [];
            }
            isCountable() {
                return !1;
            }
            copy() {
                return new Eh(this.len);
            }
            splice(t) {
                const n = new Eh(this.len - t);
                return (this.len = t), n;
            }
            mergeWith(t) {
                return (this.len += t.len), !0;
            }
            integrate(t, n) {
                dv(t.deleteSet, n.id.client, n.id.clock, this.len), n.markDeleted();
            }
            delete(t) {}
            gc(t) {}
            write(t, n) {
                t.writeLen(this.len - n);
            }
            getRef() {
                return 1;
            }
        }
        const qce = (e) => new Eh(e.readLen()),
            pA = (e, t) =>
                new Mc({
                    guid: e,
                    ...t,
                    shouldLoad: t.shouldLoad || t.autoLoad || !1,
                });
        class Ph {
            constructor(t) {
                t._item &&
                console.error(
                    "This document was already integrated as a sub-document. You should create a second instance instead with the same guid."
                ),
                    (this.doc = t);
                const n = {};
                (this.opts = n),
                t.gc || (n.gc = !1),
                t.autoLoad && (n.autoLoad = !0),
                t.meta !== null && (n.meta = t.meta);
            }
            getLength() {
                return 1;
            }
            getContent() {
                return [this.doc];
            }
            isCountable() {
                return !0;
            }
            copy() {
                return new Ph(pA(this.doc.guid, this.opts));
            }
            splice(t) {
                throw Do();
            }
            mergeWith(t) {
                return !1;
            }
            integrate(t, n) {
                (this.doc._item = n),
                    t.subdocsAdded.add(this.doc),
                this.doc.shouldLoad && t.subdocsLoaded.add(this.doc);
            }
            delete(t) {
                t.subdocsAdded.has(this.doc)
                    ? t.subdocsAdded.delete(this.doc)
                    : t.subdocsRemoved.add(this.doc);
            }
            gc(t) {}
            write(t, n) {
                t.writeString(this.doc.guid), t.writeAny(this.opts);
            }
            getRef() {
                return 9;
            }
        }
        const Zce = (e) => new Ph(pA(e.readString(), e.readAny()));
        class As {
            constructor(t) {
                this.embed = t;
            }
            getLength() {
                return 1;
            }
            getContent() {
                return [this.embed];
            }
            isCountable() {
                return !0;
            }
            copy() {
                return new As(this.embed);
            }
            splice(t) {
                throw Do();
            }
            mergeWith(t) {
                return !1;
            }
            integrate(t, n) {}
            delete(t) {}
            gc(t) {}
            write(t, n) {
                t.writeJSON(this.embed);
            }
            getRef() {
                return 5;
            }
        }
        const Qce = (e) => new As(e.readJSON());
        class It {
            constructor(t, n) {
                (this.key = t), (this.value = n);
            }
            getLength() {
                return 1;
            }
            getContent() {
                return [];
            }
            isCountable() {
                return !1;
            }
            copy() {
                return new It(this.key, this.value);
            }
            splice(t) {
                throw Do();
            }
            mergeWith(t) {
                return !1;
            }
            integrate(t, n) {
                const r = n.parent;
                (r._searchMarker = null), (r._hasFormatting = !0);
            }
            delete(t) {}
            gc(t) {}
            write(t, n) {
                t.writeKey(this.key), t.writeJSON(this.value);
            }
            getRef() {
                return 6;
            }
        }
        const Jce = (e) => new It(e.readKey(), e.readJSON());
        class kv {
            constructor(t) {
                this.arr = t;
            }
            getLength() {
                return this.arr.length;
            }
            getContent() {
                return this.arr;
            }
            isCountable() {
                return !0;
            }
            copy() {
                return new kv(this.arr);
            }
            splice(t) {
                const n = new kv(this.arr.slice(t));
                return (this.arr = this.arr.slice(0, t)), n;
            }
            mergeWith(t) {
                return (this.arr = this.arr.concat(t.arr)), !0;
            }
            integrate(t, n) {}
            delete(t) {}
            gc(t) {}
            write(t, n) {
                const r = this.arr.length;
                t.writeLen(r - n);
                for (let o = n; o < r; o++) {
                    const i = this.arr[o];
                    t.writeString(i === void 0 ? "undefined" : JSON.stringify(i));
                }
            }
            getRef() {
                return 2;
            }
        }
        const ede = (e) => {
            const t = e.readLen(),
                n = [];
            for (let r = 0; r < t; r++) {
                const o = e.readString();
                o === "undefined" ? n.push(void 0) : n.push(JSON.parse(o));
            }
            return new kv(n);
        };
        class Ms {
            constructor(t) {
                this.arr = t;
            }
            getLength() {
                return this.arr.length;
            }
            getContent() {
                return this.arr;
            }
            isCountable() {
                return !0;
            }
            copy() {
                return new Ms(this.arr);
            }
            splice(t) {
                const n = new Ms(this.arr.slice(t));
                return (this.arr = this.arr.slice(0, t)), n;
            }
            mergeWith(t) {
                return (this.arr = this.arr.concat(t.arr)), !0;
            }
            integrate(t, n) {}
            delete(t) {}
            gc(t) {}
            write(t, n) {
                const r = this.arr.length;
                t.writeLen(r - n);
                for (let o = n; o < r; o++) {
                    const i = this.arr[o];
                    t.writeAny(i);
                }
            }
            getRef() {
                return 8;
            }
        }
        const tde = (e) => {
            const t = e.readLen(),
                n = [];
            for (let r = 0; r < t; r++) n.push(e.readAny());
            return new Ms(n);
        };
        class Fo {
            constructor(t) {
                this.str = t;
            }
            getLength() {
                return this.str.length;
            }
            getContent() {
                return this.str.split("");
            }
            isCountable() {
                return !0;
            }
            copy() {
                return new Fo(this.str);
            }
            splice(t) {
                const n = new Fo(this.str.slice(t));
                this.str = this.str.slice(0, t);
                const r = this.str.charCodeAt(t - 1);
                return (
                    r >= 55296 &&
                    r <= 56319 &&
                    ((this.str = this.str.slice(0, t - 1) + "�"),
                        (n.str = "�" + n.str.slice(1))),
                        n
                );
            }
            mergeWith(t) {
                return (this.str += t.str), !0;
            }
            integrate(t, n) {}
            delete(t) {}
            gc(t) {}
            write(t, n) {
                t.writeString(n === 0 ? this.str : this.str.slice(n));
            }
            getRef() {
                return 4;
            }
        }
        const nde = (e) => new Fo(e.readString()),
            rde = [Oce, Lce, Uce, Vce, Hce, Wce, Yce],
            ode = 0,
            ide = 1,
            ade = 2,
            sde = 3,
            lde = 4,
            cde = 5,
            dde = 6;
        class Ti {
            constructor(t) {
                this.type = t;
            }
            getLength() {
                return 1;
            }
            getContent() {
                return [this.type];
            }
            isCountable() {
                return !0;
            }
            copy() {
                return new Ti(this.type._copy());
            }
            splice(t) {
                throw Do();
            }
            mergeWith(t) {
                return !1;
            }
            integrate(t, n) {
                this.type._integrate(t.doc, n);
            }
            delete(t) {
                let n = this.type._start;
                for (; n !== null; )
                    n.deleted
                        ? n.id.clock < (t.beforeState.get(n.id.client) || 0) &&
                        t._mergeStructs.push(n)
                        : n.delete(t),
                        (n = n.right);
                this.type._map.forEach((r) => {
                    r.deleted
                        ? r.id.clock < (t.beforeState.get(r.id.client) || 0) &&
                        t._mergeStructs.push(r)
                        : r.delete(t);
                }),
                    t.changed.delete(this.type);
            }
            gc(t) {
                let n = this.type._start;
                for (; n !== null; ) n.gc(t, !0), (n = n.right);
                (this.type._start = null),
                    this.type._map.forEach((r) => {
                        for (; r !== null; ) r.gc(t, !0), (r = r.left);
                    }),
                    (this.type._map = new Map());
            }
            write(t, n) {
                this.type._write(t);
            }
            getRef() {
                return 7;
            }
        }
        const ude = (e) => new Ti(rde[e.readTypeRef()](e)),
            Cv = (e, t, n) => {
                const {client: r, clock: o} = t.id,
                    i = new Tt(
                        Pe(r, o + n),
                        t,
                        Pe(r, o + n - 1),
                        t.right,
                        t.rightOrigin,
                        t.parent,
                        t.parentSub,
                        t.content.splice(n)
                    );
                return (
                    t.deleted && i.markDeleted(),
                    t.keep && (i.keep = !0),
                    t.redone !== null &&
                    (i.redone = Pe(t.redone.client, t.redone.clock + n)),
                        (t.right = i),
                    i.right !== null && (i.right.left = i),
                        e._mergeStructs.push(i),
                    i.parentSub !== null &&
                    i.right === null &&
                    i.parent._map.set(i.parentSub, i),
                        (t.length = n),
                        i
                );
            };
        class Tt extends i2 {
            constructor(t, n, r, o, i, a, s, l) {
                super(t, l.getLength()),
                    (this.origin = r),
                    (this.left = n),
                    (this.right = o),
                    (this.rightOrigin = i),
                    (this.parent = a),
                    (this.parentSub = s),
                    (this.redone = null),
                    (this.content = l),
                    (this.info = this.content.isCountable() ? e$ : 0);
            }
            set marker(t) {
                (this.info & PS) > 0 !== t && (this.info ^= PS);
            }
            get marker() {
                return (this.info & PS) > 0;
            }
            get keep() {
                return (this.info & JT) > 0;
            }
            set keep(t) {
                this.keep !== t && (this.info ^= JT);
            }
            get countable() {
                return (this.info & e$) > 0;
            }
            get deleted() {
                return (this.info & ES) > 0;
            }
            set deleted(t) {
                this.deleted !== t && (this.info ^= ES);
            }
            markDeleted() {
                this.info |= ES;
            }
            getMissing(t, n) {
                if (
                    this.origin &&
                    this.origin.client !== this.id.client &&
                    this.origin.clock >= Nt(n, this.origin.client)
                )
                    return this.origin.client;
                if (
                    this.rightOrigin &&
                    this.rightOrigin.client !== this.id.client &&
                    this.rightOrigin.clock >= Nt(n, this.rightOrigin.client)
                )
                    return this.rightOrigin.client;
                if (
                    this.parent &&
                    this.parent.constructor === Rc &&
                    this.id.client !== this.parent.client &&
                    this.parent.clock >= Nt(n, this.parent.client)
                )
                    return this.parent.client;
                if (
                    (this.origin &&
                    ((this.left = U$(t, n, this.origin)),
                        (this.origin = this.left.lastId)),
                    this.rightOrigin &&
                    ((this.right = Pa(t, this.rightOrigin)),
                        (this.rightOrigin = this.right.id)),
                    (this.left && this.left.constructor === Mr) ||
                    (this.right && this.right.constructor === Mr))
                )
                    this.parent = null;
                else if (!this.parent)
                    this.left &&
                    this.left.constructor === Tt &&
                    ((this.parent = this.left.parent),
                        (this.parentSub = this.left.parentSub)),
                    this.right &&
                    this.right.constructor === Tt &&
                    ((this.parent = this.right.parent),
                        (this.parentSub = this.right.parentSub));
                else if (this.parent.constructor === Rc) {
                    const r = GS(n, this.parent);
                    r.constructor === Mr
                        ? (this.parent = null)
                        : (this.parent = r.content.type);
                }
                return null;
            }
            integrate(t, n) {
                if (
                    (n > 0 &&
                    ((this.id.clock += n),
                        (this.left = U$(
                            t,
                            t.doc.store,
                            Pe(this.id.client, this.id.clock - 1)
                        )),
                        (this.origin = this.left.lastId),
                        (this.content = this.content.splice(n)),
                        (this.length -= n)),
                        this.parent)
                ) {
                    if (
                        (!this.left && (!this.right || this.right.left !== null)) ||
                        (this.left && this.left.right !== this.right)
                    ) {
                        let r = this.left,
                            o;
                        if (r !== null) o = r.right;
                        else if (this.parentSub !== null)
                            for (
                                o = this.parent._map.get(this.parentSub) || null;
                                o !== null && o.left !== null;

                            )
                                o = o.left;
                        else o = this.parent._start;
                        const i = new Set(),
                            a = new Set();
                        for (; o !== null && o !== this.right; ) {
                            if ((a.add(o), i.add(o), uv(this.origin, o.origin))) {
                                if (o.id.client < this.id.client)
                                    (r = o), i.clear();
                                else if (uv(this.rightOrigin, o.rightOrigin)) break;
                            } else if (
                                o.origin !== null &&
                                a.has(GS(t.doc.store, o.origin))
                            )
                                i.has(GS(t.doc.store, o.origin)) ||
                                ((r = o), i.clear());
                            else break;
                            o = o.right;
                        }
                        this.left = r;
                    }
                    if (this.left !== null) {
                        const r = this.left.right;
                        (this.right = r), (this.left.right = this);
                    } else {
                        let r;
                        if (this.parentSub !== null)
                            for (
                                r = this.parent._map.get(this.parentSub) || null;
                                r !== null && r.left !== null;

                            )
                                r = r.left;
                        else (r = this.parent._start), (this.parent._start = this);
                        this.right = r;
                    }
                    this.right !== null
                        ? (this.right.left = this)
                        : this.parentSub !== null &&
                        (this.parent._map.set(this.parentSub, this),
                        this.left !== null && this.left.delete(t)),
                    this.parentSub === null &&
                    this.countable &&
                    !this.deleted &&
                    (this.parent._length += this.length),
                        B$(t.doc.store, this),
                        this.content.integrate(t, this),
                        K$(t, this.parent, this.parentSub),
                    ((this.parent._item !== null &&
                            this.parent._item.deleted) ||
                        (this.parentSub !== null && this.right !== null)) &&
                    this.delete(t);
                } else new Mr(this.id, this.length).integrate(t, 0);
            }
            get next() {
                let t = this.right;
                for (; t !== null && t.deleted; ) t = t.right;
                return t;
            }
            get prev() {
                let t = this.left;
                for (; t !== null && t.deleted; ) t = t.left;
                return t;
            }
            get lastId() {
                return this.length === 1
                    ? this.id
                    : Pe(this.id.client, this.id.clock + this.length - 1);
            }
            mergeWith(t) {
                if (
                    this.constructor === t.constructor &&
                    uv(t.origin, this.lastId) &&
                    this.right === t &&
                    uv(this.rightOrigin, t.rightOrigin) &&
                    this.id.client === t.id.client &&
                    this.id.clock + this.length === t.id.clock &&
                    this.deleted === t.deleted &&
                    this.redone === null &&
                    t.redone === null &&
                    this.content.constructor === t.content.constructor &&
                    this.content.mergeWith(t.content)
                ) {
                    const n = this.parent._searchMarker;
                    return (
                        n &&
                        n.forEach((r) => {
                            r.p === t &&
                            ((r.p = this),
                            !this.deleted &&
                            this.countable &&
                            (r.index -= this.length));
                        }),
                        t.keep && (this.keep = !0),
                            (this.right = t.right),
                        this.right !== null && (this.right.left = this),
                            (this.length += t.length),
                            !0
                    );
                }
                return !1;
            }
            delete(t) {
                if (!this.deleted) {
                    const n = this.parent;
                    this.countable &&
                    this.parentSub === null &&
                    (n._length -= this.length),
                        this.markDeleted(),
                        dv(t.deleteSet, this.id.client, this.id.clock, this.length),
                        K$(t, n, this.parentSub),
                        this.content.delete(t);
                }
            }
            gc(t, n) {
                if (!this.deleted) throw Lo();
                this.content.gc(t),
                    n
                        ? vce(t, this, new Mr(this.id, this.length))
                        : (this.content = new Eh(this.length));
            }
            write(t, n) {
                const r =
                        n > 0
                            ? Pe(this.id.client, this.id.clock + n - 1)
                            : this.origin,
                    o = this.rightOrigin,
                    i = this.parentSub,
                    a =
                        (this.content.getRef() & ov) |
                        (r === null ? 0 : fr) |
                        (o === null ? 0 : Ei) |
                        (i === null ? 0 : fh);
                if (
                    (t.writeInfo(a),
                    r !== null && t.writeLeftID(r),
                    o !== null && t.writeRightID(o),
                    r === null && o === null)
                ) {
                    const s = this.parent;
                    if (s._item !== void 0) {
                        const l = s._item;
                        if (l === null) {
                            const c = gce(s);
                            t.writeParentInfo(!0), t.writeString(c);
                        } else t.writeParentInfo(!1), t.writeLeftID(l.id);
                    } else
                        s.constructor === String
                            ? (t.writeParentInfo(!0), t.writeString(s))
                            : s.constructor === Rc
                                ? (t.writeParentInfo(!1), t.writeLeftID(s))
                                : Lo();
                    i !== null && t.writeString(i);
                }
                this.content.write(t, n);
            }
        }
        const fA = (e, t) => hde[t & ov](e),
            hde = [
                () => {
                    Lo();
                },
                qce,
                ede,
                Xce,
                nde,
                Qce,
                Jce,
                ude,
                tde,
                Zce,
                () => {
                    Lo();
                },
            ],
            pde = 10;
        class zr extends i2 {
            get deleted() {
                return !0;
            }
            delete() {}
            mergeWith(t) {
                return this.constructor !== t.constructor
                    ? !1
                    : ((this.length += t.length), !0);
            }
            integrate(t, n) {
                Lo();
            }
            write(t, n) {
                t.writeInfo(pde), ue(t.restEncoder, this.length - n);
            }
            getMissing(t, n) {
                return null;
            }
        }
        const mA =
                typeof globalThis < "u"
                    ? globalThis
                    : typeof window < "u"
                        ? window
                        : typeof global < "u"
                            ? global
                            : {},
            gA = "__ $YJS$ __";
        mA[gA] === !0 &&
        console.error(
            "Yjs was already imported. This breaks constructor checks and will lead to issues! - https://github.com/yjs/yjs/issues/438"
        ),
            (mA[gA] = !0);
        class fde extends nv {
            constructor(t) {
                super(),
                    (this.yarray = t),
                    (this.doc = t.doc),
                    (this.map = new Map());
                {
                    const n = t.toArray();
                    this.doc.transact(() => {
                        for (let r = n.length - 1; r >= 0; r--) {
                            const o = n[r];
                            this.map.has(o.key)
                                ? t.delete(r)
                                : this.map.set(o.key, o);
                        }
                    });
                }
                t.observe((n, r) => {
                    const o = new Map(),
                        i = Array.from(n.changes.added);
                    n.changes.deleted.forEach((c) => {
                        c.content.getContent().forEach((d) => {
                            this.map.get(d.key) === d &&
                            (this.map.delete(d.key),
                                o.set(d.key, {action: "delete", oldValue: d.val}));
                        });
                    });
                    const a = new Map();
                    i.map((c) => c.content.getContent())
                        .flat()
                        .forEach((c) => {
                            a.set(c.key, c);
                        });
                    const s = new Set(),
                        l = t.toArray();
                    this.doc.transact((c) => {
                        for (
                            let d = l.length - 1;
                            d >= 0 && (a.size > 0 || s.size > 0);
                            d--
                        ) {
                            const u = l[d];
                            if (s.has(u.key)) s.delete(u.key), t.delete(d, 1);
                            else if (a.get(u.key) === u) {
                                const h = this.map.get(u.key);
                                if (h)
                                    s.add(u.key),
                                        o.set(u.key, {
                                            action: "update",
                                            oldValue: h.val,
                                            newValue: u.val,
                                        });
                                else {
                                    const p = o.get(u.key);
                                    p && p.action === "delete"
                                        ? o.set(u.key, {
                                            action: "update",
                                            newValue: u.val,
                                            oldValue: p.oldValue,
                                        })
                                        : o.set(u.key, {
                                            action: "add",
                                            newValue: u.val,
                                        });
                                }
                                a.delete(u.key), this.map.set(u.key, u);
                            } else a.has(u.key) && (s.add(u.key), a.delete(u.key));
                        }
                    }),
                    o.size > 0 && this.emit("change", [o, r]);
                });
            }
            set(t, n) {
                this.doc.transact((r) => {
                    this.map.has(t) && this.delete(t),
                        this.yarray.push([{key: t, val: n}]);
                });
            }
            delete(t) {
                let n = 0;
                for (const r of this.yarray) {
                    if (r.key === t) {
                        this.yarray.delete(n);
                        break;
                    }
                    n++;
                }
            }
            get(t) {
                const n = this.map.get(t);
                return n && n.val;
            }
            has(t) {
                return this.map.has(t);
            }
        }
        const vA = new Map();
        class mde {
            constructor(t) {
                (this.room = t),
                    (this.onmessage = null),
                    (this._onChange = (n) =>
                        n.key === t &&
                        this.onmessage !== null &&
                        this.onmessage({data: Dle(n.newValue || "")})),
                    mle(this._onChange);
            }
            postMessage(t) {
                f$.setItem(this.room, Ole($le(t)));
            }
            close() {
                gle(this._onChange);
            }
        }
        const gde = typeof BroadcastChannel > "u" ? mde : BroadcastChannel,
            a2 = (e) =>
                ki(vA, e, () => {
                    const t = _s(),
                        n = new gde(e);
                    return (
                        (n.onmessage = (r) =>
                            t.forEach((o) => o(r.data, "broadcastchannel"))),
                            {bc: n, subs: t}
                    );
                }),
            vde = (e, t) => (a2(e).subs.add(t), t),
            bde = (e, t) => {
                const n = a2(e),
                    r = n.subs.delete(t);
                return r && n.subs.size === 0 && (n.bc.close(), vA.delete(e)), r;
            },
            Bc = (e, t, n = null) => {
                const r = a2(e);
                r.bc.postMessage(t), r.subs.forEach((o) => o(t, n));
            },
            bA = 0,
            s2 = 1,
            yA = 2,
            l2 = (e, t) => {
                ue(e, bA);
                const n = fce(t);
                kt(e, n);
            },
            wA = (e, t, n) => {
                ue(e, s2), kt(e, dce(t, n));
            },
            yde = (e, t, n) => wA(t, n, xn(e)),
            xA = (e, t, n) => {
                try {
                    sce(t, xn(e), n);
                } catch (r) {
                    console.error("Caught error while handling a Yjs update", r);
                }
            },
            wde = (e, t) => {
                ue(e, yA), kt(e, t);
            },
            xde = xA,
            Sde = (e, t, n, r) => {
                const o = ve(e);
                switch (o) {
                    case bA:
                        yde(e, t, n);
                        break;
                    case s2:
                        xA(e, n, r);
                        break;
                    case yA:
                        xde(e, n, r);
                        break;
                    default:
                        throw new Error("Unknown message type");
                }
                return o;
            },
            _de = 0,
            kde = (e, t, n) => {
                switch (ve(e)) {
                    case _de:
                        n(t, Ea(e));
                }
            },
            c2 = 3e4;
        class Cde extends nv {
            constructor(t) {
                super(),
                    (this.doc = t),
                    (this.clientID = t.clientID),
                    (this.states = new Map()),
                    (this.meta = new Map()),
                    (this._checkInterval = setInterval(() => {
                        const n = Ps();
                        this.getLocalState() !== null &&
                        c2 / 2 <=
                        n - this.meta.get(this.clientID).lastUpdated &&
                        this.setLocalState(this.getLocalState());
                        const r = [];
                        this.meta.forEach((o, i) => {
                            i !== this.clientID &&
                            c2 <= n - o.lastUpdated &&
                            this.states.has(i) &&
                            r.push(i);
                        }),
                        r.length > 0 && d2(this, r, "timeout");
                    }, Ci(c2 / 10))),
                    t.on("destroy", () => {
                        this.destroy();
                    }),
                    this.setLocalState({});
            }
            destroy() {
                this.emit("destroy", [this]),
                    this.setLocalState(null),
                    super.destroy(),
                    clearInterval(this._checkInterval);
            }
            getLocalState() {
                return this.states.get(this.clientID) || null;
            }
            setLocalState(t) {
                const n = this.clientID,
                    r = this.meta.get(n),
                    o = r === void 0 ? 0 : r.clock + 1,
                    i = this.states.get(n);
                t === null ? this.states.delete(n) : this.states.set(n, t),
                    this.meta.set(n, {clock: o, lastUpdated: Ps()});
                const a = [],
                    s = [],
                    l = [],
                    c = [];
                t === null
                    ? c.push(n)
                    : i == null
                        ? t != null && a.push(n)
                        : (s.push(n), wh(i, t) || l.push(n)),
                (a.length > 0 || l.length > 0 || c.length > 0) &&
                this.emit("change", [
                    {added: a, updated: l, removed: c},
                    "local",
                ]),
                    this.emit("update", [
                        {added: a, updated: s, removed: c},
                        "local",
                    ]);
            }
            setLocalStateField(t, n) {
                const r = this.getLocalState();
                r !== null && this.setLocalState({...r, [t]: n});
            }
            getStates() {
                return this.states;
            }
        }
        const d2 = (e, t, n) => {
                const r = [];
                for (let o = 0; o < t.length; o++) {
                    const i = t[o];
                    if (e.states.has(i)) {
                        if ((e.states.delete(i), i === e.clientID)) {
                            const a = e.meta.get(i);
                            e.meta.set(i, {clock: a.clock + 1, lastUpdated: Ps()});
                        }
                        r.push(i);
                    }
                }
                r.length > 0 &&
                (e.emit("change", [{added: [], updated: [], removed: r}, n]),
                    e.emit("update", [{added: [], updated: [], removed: r}, n]));
            },
            Ih = (e, t, n = e.states) => {
                const r = t.length,
                    o = wn();
                ue(o, r);
                for (let i = 0; i < r; i++) {
                    const a = t[i],
                        s = n.get(a) || null,
                        l = e.meta.get(a).clock;
                    ue(o, a), ue(o, l), Es(o, JSON.stringify(s));
                }
                return mt(o);
            },
            Ede = (e, t, n) => {
                const r = Ca(t),
                    o = Ps(),
                    i = [],
                    a = [],
                    s = [],
                    l = [],
                    c = ve(r);
                for (let d = 0; d < c; d++) {
                    const u = ve(r);
                    let h = ve(r);
                    const p = JSON.parse(Ea(r)),
                        m = e.meta.get(u),
                        f = e.states.get(u),
                        g = m === void 0 ? 0 : m.clock;
                    (g < h || (g === h && p === null && e.states.has(u))) &&
                    (p === null
                        ? u === e.clientID && e.getLocalState() != null
                            ? h++
                            : e.states.delete(u)
                        : e.states.set(u, p),
                        e.meta.set(u, {clock: h, lastUpdated: o}),
                        m === void 0 && p !== null
                            ? i.push(u)
                            : m !== void 0 && p === null
                                ? l.push(u)
                                : p !== null && (wh(p, f) || s.push(u), a.push(u)));
                }
                (i.length > 0 || s.length > 0 || l.length > 0) &&
                e.emit("change", [{added: i, updated: s, removed: l}, n]),
                (i.length > 0 || a.length > 0 || l.length > 0) &&
                e.emit("update", [{added: i, updated: a, removed: l}, n]);
            },
            Pde = (e) =>
                wle(
                    e,
                    (t, n) => `${encodeURIComponent(n)}=${encodeURIComponent(t)}`
                ).join("&"),
            zs = 0,
            SA = 3,
            Uc = 1,
            Ide = 2,
            Th = [];
        (Th[zs] = (e, t, n, r, o) => {
            ue(e, zs);
            const i = Sde(t, e, n.doc, n);
            r && i === s2 && !n.synced && (n.synced = !0);
        }),
            (Th[SA] = (e, t, n, r, o) => {
                ue(e, Uc),
                    kt(
                        e,
                        Ih(n.awareness, Array.from(n.awareness.getStates().keys()))
                    );
            }),
            (Th[Uc] = (e, t, n, r, o) => {
                Ede(n.awareness, xn(t), n);
            }),
            (Th[Ide] = (e, t, n, r, o) => {
                kde(t, n.doc, (i, a) => Tde(n, a));
            });
        const _A = 3e4,
            Tde = (e, t) =>
                console.warn(`Permission denied to access ${e.url}.
${t}`),
            kA = (e, t, n) => {
                const r = Ca(t),
                    o = wn(),
                    i = ve(r),
                    a = e.messageHandlers[i];
                return (
                    a
                        ? a(o, r, e, n, i)
                        : console.error("Unable to compute message"),
                        o
                );
            },
            CA = (e) => {
                if (e.shouldConnect && e.ws === null) {
                    const t = new e._WS(e.url);
                    (t.binaryType = "arraybuffer"),
                        (e.ws = t),
                        (e.wsconnecting = !0),
                        (e.wsconnected = !1),
                        (e.synced = !1),
                        (t.onmessage = (n) => {
                            e.wsLastMessageReceived = Ps();
                            const r = kA(e, new Uint8Array(n.data), !0);
                            TS(r) > 1 && t.send(mt(r));
                        }),
                        (t.onerror = (n) => {
                            e.emit("connection-error", [n, e]);
                        }),
                        (t.onclose = (n) => {
                            e.emit("connection-close", [n, e]),
                                (e.ws = null),
                                (e.wsconnecting = !1),
                                e.wsconnected
                                    ? ((e.wsconnected = !1),
                                        (e.synced = !1),
                                        d2(
                                            e.awareness,
                                            Array.from(
                                                e.awareness.getStates().keys()
                                            ).filter((r) => r !== e.doc.clientID),
                                            e
                                        ),
                                        e.emit("status", [{status: "disconnected"}]))
                                    : e.wsUnsuccessfulReconnects++,
                                setTimeout(
                                    CA,
                                    CS(
                                        Use(2, e.wsUnsuccessfulReconnects) * 100,
                                        e.maxBackoffTime
                                    ),
                                    e
                                );
                        }),
                        (t.onopen = () => {
                            (e.wsLastMessageReceived = Ps()),
                                (e.wsconnecting = !1),
                                (e.wsconnected = !0),
                                (e.wsUnsuccessfulReconnects = 0),
                                e.emit("status", [{status: "connected"}]);
                            const n = wn();
                            if (
                                (ue(n, zs),
                                    l2(n, e.doc),
                                    t.send(mt(n)),
                                e.awareness.getLocalState() !== null)
                            ) {
                                const r = wn();
                                ue(r, Uc),
                                    kt(r, Ih(e.awareness, [e.doc.clientID])),
                                    t.send(mt(r));
                            }
                        }),
                        e.emit("status", [{status: "connecting"}]);
                }
            },
            u2 = (e, t) => {
                const n = e.ws;
                e.wsconnected && n && n.readyState === n.OPEN && n.send(t),
                e.bcconnected && Bc(e.bcChannel, t, e);
            };
        class $de extends nv {
            constructor(
                t,
                n,
                r,
                {
                    connect: o = !0,
                    awareness: i = new Cde(r),
                    params: a = {},
                    WebSocketPolyfill: s = WebSocket,
                    resyncInterval: l = -1,
                    maxBackoffTime: c = 2500,
                    disableBc: d = !1,
                } = {}
            ) {
                for (super(); t[t.length - 1] === "/"; )
                    t = t.slice(0, t.length - 1);
                const u = Pde(a);
                (this.maxBackoffTime = c),
                    (this.bcChannel = t + "/" + n),
                    (this.url = t + "/" + n + (u.length === 0 ? "" : "?" + u)),
                    (this.roomname = n),
                    (this.doc = r),
                    (this._WS = s),
                    (this.awareness = i),
                    (this.wsconnected = !1),
                    (this.wsconnecting = !1),
                    (this.bcconnected = !1),
                    (this.disableBc = d),
                    (this.wsUnsuccessfulReconnects = 0),
                    (this.messageHandlers = Th.slice()),
                    (this._synced = !1),
                    (this.ws = null),
                    (this.wsLastMessageReceived = 0),
                    (this.shouldConnect = o),
                    (this._resyncInterval = 0),
                l > 0 &&
                (this._resyncInterval = setInterval(() => {
                    if (this.ws && this.ws.readyState === WebSocket.OPEN) {
                        const h = wn();
                        ue(h, zs), l2(h, r), this.ws.send(mt(h));
                    }
                }, l)),
                    (this._bcSubscriber = (h, p) => {
                        if (p !== this) {
                            const m = kA(this, new Uint8Array(h), !1);
                            TS(m) > 1 && Bc(this.bcChannel, mt(m), this);
                        }
                    }),
                    (this._updateHandler = (h, p) => {
                        if (p !== this) {
                            const m = wn();
                            ue(m, zs), wde(m, h), u2(this, mt(m));
                        }
                    }),
                    this.doc.on("update", this._updateHandler),
                    (this._awarenessUpdateHandler = (
                        {added: h, updated: p, removed: m},
                        f
                    ) => {
                        const g = h.concat(p).concat(m),
                            b = wn();
                        ue(b, Uc), kt(b, Ih(i, g)), u2(this, mt(b));
                    }),
                    (this._exitHandler = () => {
                        d2(this.awareness, [r.clientID], "app closed");
                    }),
                Is &&
                typeof process < "u" &&
                process.on("exit", this._exitHandler),
                    i.on("update", this._awarenessUpdateHandler),
                    (this._checkInterval = setInterval(() => {
                        this.wsconnected &&
                        _A < Ps() - this.wsLastMessageReceived &&
                        this.ws.close();
                    }, _A / 10)),
                o && this.connect();
            }
            get synced() {
                return this._synced;
            }
            set synced(t) {
                this._synced !== t &&
                ((this._synced = t),
                    this.emit("synced", [t]),
                    this.emit("sync", [t]));
            }
            destroy() {
                this._resyncInterval !== 0 && clearInterval(this._resyncInterval),
                    clearInterval(this._checkInterval),
                    this.disconnect(),
                typeof process < "u" && process.off("exit", this._exitHandler),
                    this.awareness.off("update", this._awarenessUpdateHandler),
                    this.doc.off("update", this._updateHandler),
                    super.destroy();
            }
            connectBc() {
                if (this.disableBc) return;
                this.bcconnected ||
                (vde(this.bcChannel, this._bcSubscriber),
                    (this.bcconnected = !0));
                const t = wn();
                ue(t, zs), l2(t, this.doc), Bc(this.bcChannel, mt(t), this);
                const n = wn();
                ue(n, zs), wA(n, this.doc), Bc(this.bcChannel, mt(n), this);
                const r = wn();
                ue(r, SA), Bc(this.bcChannel, mt(r), this);
                const o = wn();
                ue(o, Uc),
                    kt(o, Ih(this.awareness, [this.doc.clientID])),
                    Bc(this.bcChannel, mt(o), this);
            }
            disconnectBc() {
                const t = wn();
                ue(t, Uc),
                    kt(t, Ih(this.awareness, [this.doc.clientID], new Map())),
                    u2(this, mt(t)),
                this.bcconnected &&
                (bde(this.bcChannel, this._bcSubscriber),
                    (this.bcconnected = !1));
            }
            disconnect() {
                (this.shouldConnect = !1),
                    this.disconnectBc(),
                this.ws !== null && this.ws.close();
            }
            connect() {
                (this.shouldConnect = !0),
                !this.wsconnected &&
                this.ws === null &&
                (CA(this), this.connectBc());
            }
        }
        const Ade = {
                store: {
                    "document:document": {
                        gridSize: 10,
                        name: "",
                        meta: {},
                        id: "document:document",
                        typeName: "document",
                    },
                    "pointer:pointer": {
                        id: "pointer:pointer",
                        typeName: "pointer",
                        x: 0,
                        y: 0,
                        lastActivityTimestamp: 0,
                        meta: {},
                    },
                    "page:page": {
                        meta: {},
                        id: "page:page",
                        name: "Page 1",
                        index: "a1",
                        typeName: "page",
                    },
                    "camera:page:page": {
                        x: 0,
                        y: 0,
                        z: 1,
                        meta: {},
                        id: "camera:page:page",
                        typeName: "camera",
                    },
                    "instance_page_state:page:page": {
                        editingShapeId: null,
                        croppingShapeId: null,
                        selectedShapeIds: [],
                        hoveredShapeId: null,
                        erasingShapeIds: [],
                        hintingShapeIds: [],
                        focusedGroupId: null,
                        meta: {},
                        id: "instance_page_state:page:page",
                        pageId: "page:page",
                        typeName: "instance_page_state",
                    },
                    "instance:instance": {
                        followingUserId: null,
                        opacityForNextShape: 1,
                        stylesForNextShape: {},
                        brush: null,
                        scribble: null,
                        cursor: {type: "default", rotation: 0},
                        isFocusMode: !1,
                        exportBackground: !0,
                        isDebugMode: !1,
                        isToolLocked: !1,
                        screenBounds: {x: 0, y: 0, w: 720, h: 400},
                        zoomBrush: null,
                        isGridMode: !1,
                        isPenMode: !1,
                        chatMessage: "",
                        isChatting: !1,
                        highlightedUserIds: [],
                        canMoveCamera: !0,
                        isFocused: !0,
                        devicePixelRatio: 2,
                        isCoarsePointer: !1,
                        isHoveringCanvas: !1,
                        openMenus: [],
                        isChangingStyle: !1,
                        isReadonly: !1,
                        meta: {},
                        id: "instance:instance",
                        currentPageId: "page:page",
                        typeName: "instance",
                    },
                },
                schema: {
                    schemaVersion: 1,
                    storeVersion: 4,
                    recordVersions: {
                        asset: {
                            version: 1,
                            subTypeKey: "type",
                            subTypeVersions: {image: 2, video: 2, bookmark: 0},
                        },
                        camera: {version: 1},
                        document: {version: 2},
                        instance: {version: 21},
                        instance_page_state: {version: 5},
                        page: {version: 1},
                        shape: {
                            version: 3,
                            subTypeKey: "type",
                            subTypeVersions: {
                                group: 0,
                                text: 1,
                                bookmark: 1,
                                draw: 1,
                                geo: 7,
                                note: 4,
                                line: 1,
                                frame: 0,
                                arrow: 1,
                                highlight: 0,
                                embed: 4,
                                image: 2,
                                video: 1,
                            },
                        },
                        instance_presence: {version: 5},
                        pointer: {version: 1},
                    },
                },
            },
            Mde =
                ((UM = document.getElementById("username")) == null
                    ? void 0
                    : UM.innerHTML) || "Anonymous";
        (HM = document.getElementById("role")) != null && HM.innerHTML;
        const zde =
                ((VM = document.getElementById("allread")) == null
                    ? void 0
                    : VM.innerHTML) || "false",
            Rde =
                ((KM = document.getElementById("roomfull")) == null
                    ? void 0
                    : KM.innerHTML) || "The room is full",
            Ode =
                ((WM = document.getElementById("alreadyaccessed")) == null
                    ? void 0
                    : WM.innerHTML) ||
                "You have already accessed this room from another window.",
            Dde =
                ((YM = document.getElementById("websocket_error")) == null
                    ? void 0
                    : YM.innerHTML) || "The websocket server is not available";
        function Lde({
                         roomId: e = "wb-room-0",
                         hostUrl: t = "",
                         setActiveUsers: n = () => {},
                         shapeUtils: r = [],
                         updatedPerm: o,
                         setUpdatedPerm: i = () => {},
                         clientRole: a = "",
                     }) {
            const [s] = y.useState(() => {
                    const b = SE({shapeUtils: [...CI, ...r]});
                    return b.loadSnapshot(Ade), b;
                }),
                [l, c] = y.useState({status: "loading"}),
                d = y.useRef(new Map()).current;
            let u = !0;
            const {
                yDoc: h,
                yStore: p,
                room: m,
            } = y.useMemo(() => {
                const b = new Mc({gc: !0}),
                    x = b.getArray(`tl_${e}`),
                    S = new fde(x);
                return {yDoc: b, yStore: S, room: new $de(t, e, b, {connect: !0})};
            }, [t, e]);
            y.useMemo(
                () => `session-${Math.random().toString(36).substr(2, 9)}`,
                []
            ),
                y.useEffect(() => {
                    c({status: "loading"});
                    const b =
                        sessionStorage.getItem("tabId") ||
                        `tab-${Math.random().toString(36).substr(2, 9)}`;
                    sessionStorage.setItem("tabId", b);
                    const x = JSON.parse(
                        localStorage.getItem("tlActiveConnections") || "{}"
                    );
                    if (x[e]) {
                        if (x[e] !== b) {
                            m.off("status", () => {}),
                                m.off("connection-close", (P) => {}),
                                setTimeout(() => {
                                    document.querySelector(
                                        ".tl-loading"
                                    ).innerHTML = Ode;
                                }, 1e3),
                                m.disconnect();
                            return;
                        }
                    } else
                        (x[e] = b),
                            localStorage.setItem(
                                "tlActiveConnections",
                                JSON.stringify(x)
                            );
                    m.on("connection-close", (P) => {
                        P.code === 4e3
                            ? ((u = !1),
                                (document.querySelector(".tl-loading").innerHTML =
                                    Rde),
                                m.off("status", C),
                                m.off("connection-close", (I) => {}),
                                m.disconnect())
                            : (document.querySelector(".tl-loading").innerHTML =
                                Dde);
                    });
                    const S = [];
                    function _() {
                        S.push(
                            s.listen(
                                function ({changes: O}) {
                                    h.transact(() => {
                                        Object.values(O.added).forEach((F) => {
                                            p.set(F.id, F);
                                        }),
                                            Object.values(O.updated).forEach(
                                                ([F, K]) => {
                                                    p.set(K.id, K);
                                                }
                                            ),
                                            Object.values(O.removed).forEach(
                                                (F) => {
                                                    p.delete(F.id);
                                                }
                                            );
                                    });
                                },
                                {source: "user", scope: "document"}
                            )
                        );
                        const P = (z, O) => {
                            if (O.local) return;
                            const F = [],
                                K = [];
                            z.forEach((V, B) => {
                                switch (V.action) {
                                    case "add":
                                    case "update": {
                                        const H = p.get(B);
                                        K.push(H);
                                        break;
                                    }
                                    case "delete": {
                                        F.push(B);
                                        break;
                                    }
                                }
                            }),
                                s.mergeRemoteChanges(() => {
                                    F.length && s.remove(F), K.length && s.put(K);
                                });
                        };
                        p.on("change", P), S.push(() => p.off("change", P));
                        const I = m.awareness.clientID.toString();
                        let $ = "";
                        localStorage.getItem("userID")
                            ? ($ = localStorage.getItem("userID"))
                            : (($ = I), localStorage.setItem("userID", $)),
                            N4({id: I});
                        const T = Q("userPreferences", () => {
                                const z = vu();
                                return {
                                    id: z.id,
                                    color: z.color ?? ir.color,
                                    name: Mde,
                                };
                            }),
                            R = Gd.createId(I),
                            D = qD(T, R)(s);
                        m.awareness.setLocalStateField("presence", D.get()),
                            f({
                                id: T.get().id,
                                name: T.get().name,
                                color: T.get().color,
                                permissions: {
                                    write: a == "admin" || zde == "false",
                                    admin: a == "admin",
                                },
                                clientId: m.awareness.clientID,
                            }),
                            S.push(
                                xl("when presence changes", () => {
                                    const z = D.get();
                                    requestAnimationFrame(() => {
                                        m.awareness.setLocalStateField(
                                            "presence",
                                            z
                                        );
                                    });
                                })
                            );
                        const j = (z) => {
                            const O = m.awareness.getStates(),
                                F = [],
                                K = [];
                            for (const B of z.added) {
                                const H = O.get(B);
                                H != null &&
                                H.presence &&
                                H.presence.id !== R &&
                                K.push(H.presence);
                            }
                            for (const B of z.updated) {
                                const H = O.get(B);
                                H != null &&
                                H.presence &&
                                H.presence.id !== R &&
                                K.push(H.presence);
                            }
                            for (const B of z.removed)
                                F.push(Gd.createId(B.toString()));
                            const V = [];
                            d.forEach((B, H) => {
                                O.has(H) || V.push(H);
                            }),
                                s.mergeRemoteChanges(() => {
                                    F.length && s.remove(F),
                                    K.length && s.put(K),
                                    V.length && V.forEach((B) => g(B));
                                });
                        };
                        m.awareness.on("update", j),
                            S.push(() => m.awareness.off("update", j)),
                            p.yarray.length
                                ? _r(() => {
                                    s.clear();
                                    const z = p.yarray
                                        .toJSON()
                                        .map(({val: O}) => O);
                                    s.put(z);
                                })
                                : h.transact(() => {
                                    for (const z of s.allRecords())
                                        p.set(z.id, z);
                                }),
                            c({
                                store: s,
                                status: "synced-remote",
                                connectionStatus: "online",
                            });
                    }
                    let k = !1;
                    function C({status: P}) {
                        if (u) {
                            if (P === "disconnected") {
                                c({
                                    store: s,
                                    status: "synced-remote",
                                    connectionStatus: "offline",
                                });
                                return;
                            }
                            m.off("synced", _),
                            P === "connected" &&
                            (k && vu(),
                                (k = !0),
                                m.on("synced", _),
                                S.push(() => m.off("synced", _)));
                        } else
                            S.push(() => m.off("status", C)),
                                c({
                                    store: s,
                                    status: "synced-remote",
                                    connectionStatus: "offline",
                                });
                    }
                    return (
                        m.on("status", C),
                            S.push(() => m.off("status", C)),
                            () => {
                                S.forEach((P) => P()), (S.length = 0);
                            }
                    );
                }, [m, h, s, p]),
                y.useEffect(() => {}, [u]),
                y.useEffect(() => {
                    const b = (x) => {
                        const S =
                                sessionStorage.getItem("tabId") ||
                                `tab-${Math.random().toString(36).substr(2, 9)}`,
                            _ = JSON.parse(
                                localStorage.getItem("tlActiveConnections") || "{}"
                            );
                        _[e] === S &&
                        (delete _[e],
                            localStorage.setItem(
                                "tlActiveConnections",
                                JSON.stringify(_)
                            )),
                            g(m.awareness.clientID);
                    };
                    return (
                        window.addEventListener("beforeunload", b),
                            () => {
                                window.removeEventListener("beforeunload", b);
                            }
                    );
                }, []);
            const f = y.useCallback(
                    (b) => {
                        const x = h.getArray("users");
                        if (d.has(b.clientId)) {
                            const S = d.get(b.clientId);
                            S.id !== b.id || (S.name, b.name);
                        } else
                            d.set(b.clientId, b),
                                h.transact(() => {
                                    x.push([b]);
                                });
                    },
                    [h]
                ),
                g = y.useCallback(
                    (b) => {
                        const x = h.getArray("users"),
                            S = x.toArray().findIndex((_) => _.clientId === b);
                        S !== -1 && (x.delete(S, 1), d.delete(b));
                    },
                    [h]
                );
            return (
                y.useEffect(() => {
                    const b = h.getArray("users"),
                        x = () => {
                            const S = h
                                .getArray("users")
                                .toArray()
                                .map((_) => _);
                            n(S);
                        };
                    return (
                        b.observe(x),
                            () => {
                                b.unobserve(x);
                            }
                    );
                }, [m.awareness]),
                    y.useEffect(() => {
                        if (o) {
                            const b = h.getArray("users"),
                                x = b.toJSON().findIndex((_) => _.id === o.userId),
                                S = b.get(x);
                            b.delete(x, 1),
                                (S.permissions.write = o.permissions.write),
                                b.insert(x, [S]),
                                i(void 0);
                        }
                    }, [o]),
                    l
            );
        }
        function Bo(e) {
            return Object.keys(e);
        }
        function h2(e) {
            return e && typeof e == "object" && !Array.isArray(e);
        }
        function p2(e, t) {
            const n = {...e},
                r = t;
            return (
                h2(e) &&
                h2(t) &&
                Object.keys(t).forEach((o) => {
                    h2(r[o]) && o in e
                        ? (n[o] = p2(n[o], r[o]))
                        : (n[o] = r[o]);
                }),
                    n
            );
        }
        function jde(e) {
            return e.replace(/[A-Z]/g, (t) => `-${t.toLowerCase()}`);
        }
        function Nde(e) {
            var t;
            return typeof e != "string" || !e.includes("var(--mantine-scale)")
                ? e
                : (t = e.match(/^calc\((.*?)\)$/)) == null
                    ? void 0
                    : t[1].split("*")[0].trim();
        }
        function Fde(e) {
            const t = Nde(e);
            return typeof t == "number"
                ? t
                : typeof t == "string"
                    ? t.includes("calc") || t.includes("var")
                        ? t
                        : t.includes("px")
                            ? Number(t.replace("px", ""))
                            : t.includes("rem")
                                ? Number(t.replace("rem", "")) * 16
                                : t.includes("em")
                                    ? Number(t.replace("em", "")) * 16
                                    : Number(t)
                    : NaN;
        }
        function f2(e) {
            return `calc(${e} * var(--mantine-scale))`;
        }
        function EA(e, {shouldScale: t = !1} = {}) {
            function n(r) {
                if (r === 0 || r === "0") return `0${e}`;
                if (typeof r == "number") {
                    const o = `${r / 16}${e}`;
                    return t ? f2(o) : o;
                }
                if (typeof r == "string") {
                    if (
                        r.startsWith("calc(") ||
                        r.startsWith("var(") ||
                        r.startsWith("clamp(")
                    )
                        return r;
                    if (r.includes(" "))
                        return r
                            .split(" ")
                            .map((i) => n(i))
                            .join(" ");
                    if (r.includes(e)) return t ? f2(r) : r;
                    const o = r.replace("px", "");
                    if (!Number.isNaN(Number(o))) {
                        const i = `${Number(o) / 16}${e}`;
                        return t ? f2(i) : i;
                    }
                }
                return r;
            }
            return n;
        }
        const q = EA("rem", {shouldScale: !0}),
            PA = EA("em");
        function m2(e) {
            return Object.keys(e).reduce(
                (t, n) => (e[n] !== void 0 && (t[n] = e[n]), t),
                {}
            );
        }
        function IA(e) {
            return typeof e == "number"
                ? !0
                : typeof e == "string"
                    ? e.startsWith("calc(") ||
                    e.startsWith("var(") ||
                    (e.includes(" ") && e.trim() !== "")
                        ? !0
                        : /[0-9]/.test(e.trim().replace("-", "")[0])
                    : !1;
        }
        function Ev(e) {
            return Array.isArray(e) || e === null
                ? !1
                : typeof e == "object"
                    ? e.type !== N.Fragment
                    : !1;
        }
        function $h(e) {
            const t = y.createContext(null);
            return [
                ({children: o, value: i}) =>
                    N.createElement(t.Provider, {value: i}, o),
                () => {
                    const o = y.useContext(t);
                    if (o === null) throw new Error(e);
                    return o;
                },
            ];
        }
        function Pv(e, t) {
            let n = e;
            for (; (n = n.parentElement) && !n.matches(t); );
            return n;
        }
        function Bde(e, t, n) {
            for (let r = e - 1; r >= 0; r -= 1) if (!t[r].disabled) return r;
            if (n) {
                for (let r = t.length - 1; r > -1; r -= 1)
                    if (!t[r].disabled) return r;
            }
            return e;
        }
        function Ude(e, t, n) {
            for (let r = e + 1; r < t.length; r += 1) if (!t[r].disabled) return r;
            if (n) {
                for (let r = 0; r < t.length; r += 1) if (!t[r].disabled) return r;
            }
            return e;
        }
        function Hde(e, t, n) {
            return Pv(e, n) === Pv(t, n);
        }
        function Vde({
                         parentSelector: e,
                         siblingSelector: t,
                         onKeyDown: n,
                         loop: r = !0,
                         activateOnFocus: o = !1,
                         dir: i = "rtl",
                         orientation: a,
                     }) {
            return (s) => {
                var m;
                n == null || n(s);
                const l = Array.from(
                        ((m = Pv(s.currentTarget, e)) == null
                            ? void 0
                            : m.querySelectorAll(t)) || []
                    ).filter((f) => Hde(s.currentTarget, f, e)),
                    c = l.findIndex((f) => s.currentTarget === f),
                    d = Ude(c, l, r),
                    u = Bde(c, l, r),
                    h = i === "rtl" ? u : d,
                    p = i === "rtl" ? d : u;
                switch (s.key) {
                    case "ArrowRight": {
                        a === "horizontal" &&
                        (s.stopPropagation(),
                            s.preventDefault(),
                            l[h].focus(),
                        o && l[h].click());
                        break;
                    }
                    case "ArrowLeft": {
                        a === "horizontal" &&
                        (s.stopPropagation(),
                            s.preventDefault(),
                            l[p].focus(),
                        o && l[p].click());
                        break;
                    }
                    case "ArrowUp": {
                        a === "vertical" &&
                        (s.stopPropagation(),
                            s.preventDefault(),
                            l[u].focus(),
                        o && l[u].click());
                        break;
                    }
                    case "ArrowDown": {
                        a === "vertical" &&
                        (s.stopPropagation(),
                            s.preventDefault(),
                            l[d].focus(),
                        o && l[d].click());
                        break;
                    }
                    case "Home": {
                        s.stopPropagation(),
                            s.preventDefault(),
                        !l[0].disabled && l[0].focus();
                        break;
                    }
                    case "End": {
                        s.stopPropagation(), s.preventDefault();
                        const f = l.length - 1;
                        !l[f].disabled && l[f].focus();
                        break;
                    }
                }
            };
        }
        const Kde = {app: 100, modal: 200, popover: 300, overlay: 400, max: 9999};
        function Wde(e) {
            return Kde[e];
        }
        const Yde = () => {};
        function Gde(e, t = {active: !0}) {
            return typeof e != "function" || !t.active
                ? t.onKeyDown || Yde
                : (n) => {
                    var r;
                    n.key === "Escape" &&
                    (e(n), (r = t.onTrigger) == null || r.call(t));
                };
        }
        function Iv(e, t = "size", n = !0) {
            if (e !== void 0) return IA(e) ? (n ? q(e) : e) : `var(--${t}-${e})`;
        }
        function Xde(e) {
            return Iv(e, "mantine-spacing");
        }
        function TA(e) {
            return e === void 0
                ? "var(--mantine-radius-default)"
                : Iv(e, "mantine-radius");
        }
        function qde(e) {
            if (e) return Iv(e, "mantine-shadow", !1);
        }
        function mr(e, t) {
            return (n) => {
                e == null || e(n), t == null || t(n);
            };
        }
        function Zde(e, t, n) {
            var r;
            return n
                ? Array.from(
                    ((r = Pv(n, t)) == null ? void 0 : r.querySelectorAll(e)) ||
                    []
                ).findIndex((o) => o === n)
                : null;
        }
        function Qde() {
            const [e, t] = y.useState(-1);
            return [e, {setHovered: t, resetHovered: () => t(-1)}];
        }
        function $A() {
            return `mantine-${Math.random().toString(36).slice(2, 11)}`;
        }
        function Rs(e) {
            const t = y.useRef(e);
            return (
                y.useEffect(() => {
                    t.current = e;
                }),
                    y.useMemo(
                        () =>
                            (...n) => {
                                var r;
                                return (r = t.current) == null
                                    ? void 0
                                    : r.call(t, ...n);
                            },
                        []
                    )
            );
        }
        function Tv(e, t) {
            const n = Rs(e),
                r = y.useRef(0);
            return (
                y.useEffect(() => () => window.clearTimeout(r.current), []),
                    y.useCallback(() => {
                        window.clearTimeout(r.current),
                            (r.current = window.setTimeout(n, t));
                    }, [n, t])
            );
        }
        const AA = ["mousedown", "touchstart"];
        function Jde(e, t, n) {
            const r = y.useRef();
            return (
                y.useEffect(() => {
                    const o = (i) => {
                        const {target: a} = i ?? {};
                        if (Array.isArray(n)) {
                            const s =
                                (a == null
                                    ? void 0
                                    : a.hasAttribute(
                                        "data-ignore-outside-clicks"
                                    )) ||
                                (!document.body.contains(a) &&
                                    a.tagName !== "HTML");
                            n.every((c) => !!c && !i.composedPath().includes(c)) &&
                            !s &&
                            e();
                        } else r.current && !r.current.contains(a) && e();
                    };
                    return (
                        (t || AA).forEach((i) => document.addEventListener(i, o)),
                            () => {
                                (t || AA).forEach((i) =>
                                    document.removeEventListener(i, o)
                                );
                            }
                    );
                }, [r, e, n]),
                    r
            );
        }
        function eue(e, t) {
            try {
                return (
                    e.addEventListener("change", t),
                        () => e.removeEventListener("change", t)
                );
            } catch {
                return e.addListener(t), () => e.removeListener(t);
            }
        }
        function tue(e, t) {
            return typeof t == "boolean"
                ? t
                : typeof window < "u" && "matchMedia" in window
                    ? window.matchMedia(e).matches
                    : !1;
        }
        function nue(
            e,
            t,
            {getInitialValueInEffect: n} = {getInitialValueInEffect: !0}
        ) {
            const [r, o] = y.useState(n ? t : tue(e)),
                i = y.useRef();
            return (
                y.useEffect(() => {
                    if ("matchMedia" in window)
                        return (
                            (i.current = window.matchMedia(e)),
                                o(i.current.matches),
                                eue(i.current, (a) => o(a.matches))
                        );
                }, [e]),
                    r
            );
        }
        const Ah = typeof document < "u" ? y.useLayoutEffect : y.useEffect;
        function Os(e, t) {
            const n = y.useRef(!1);
            y.useEffect(
                () => () => {
                    n.current = !1;
                },
                []
            ),
                y.useEffect(() => {
                    if (n.current) return e();
                    n.current = !0;
                }, t);
        }
        function rue({opened: e, shouldReturnFocus: t = !0}) {
            const n = y.useRef(),
                r = () => {
                    var o;
                    n.current &&
                    "focus" in n.current &&
                    typeof n.current.focus == "function" &&
                    ((o = n.current) == null || o.focus({preventScroll: !0}));
                };
            return (
                Os(() => {
                    let o = -1;
                    const i = (a) => {
                        a.key === "Tab" && window.clearTimeout(o);
                    };
                    return (
                        document.addEventListener("keydown", i),
                            e
                                ? (n.current = document.activeElement)
                                : t && (o = window.setTimeout(r, 10)),
                            () => {
                                window.clearTimeout(o),
                                    document.removeEventListener("keydown", i);
                            }
                    );
                }, [e, t]),
                    r
            );
        }
        function oue(e, t = "body > :not(script)") {
            const n = $A(),
                r = Array.from(document.querySelectorAll(t)).map((o) => {
                    var l;
                    if (
                        ((l = o == null ? void 0 : o.shadowRoot) != null &&
                            l.contains(e)) ||
                        o.contains(e)
                    )
                        return;
                    const i = o.getAttribute("aria-hidden"),
                        a = o.getAttribute("data-hidden"),
                        s = o.getAttribute("data-focus-id");
                    return (
                        o.setAttribute("data-focus-id", n),
                            i === null || i === "false"
                                ? o.setAttribute("aria-hidden", "true")
                                : !a && !s && o.setAttribute("data-hidden", i),
                            {node: o, ariaHidden: a || null}
                    );
                });
            return () => {
                r.forEach((o) => {
                    !o ||
                    n !== o.node.getAttribute("data-focus-id") ||
                    (o.ariaHidden === null
                        ? o.node.removeAttribute("aria-hidden")
                        : o.node.setAttribute("aria-hidden", o.ariaHidden),
                        o.node.removeAttribute("data-focus-id"),
                        o.node.removeAttribute("data-hidden"));
                });
            };
        }
        const iue = /input|select|textarea|button|object/,
            MA = "a, input, select, textarea, button, object, [tabindex]";
        function aue(e) {
            return e.style.display === "none";
        }
        function sue(e) {
            if (
                e.getAttribute("aria-hidden") ||
                e.getAttribute("hidden") ||
                e.getAttribute("type") === "hidden"
            )
                return !1;
            let n = e;
            for (; n && !(n === document.body || n.nodeType === 11); ) {
                if (aue(n)) return !1;
                n = n.parentNode;
            }
            return !0;
        }
        function zA(e) {
            let t = e.getAttribute("tabindex");
            return t === null && (t = void 0), parseInt(t, 10);
        }
        function g2(e) {
            const t = e.nodeName.toLowerCase(),
                n = !Number.isNaN(zA(e));
            return (
                ((iue.test(t) && !e.disabled) ||
                    (e instanceof HTMLAnchorElement && e.href) ||
                    n) &&
                sue(e)
            );
        }
        function RA(e) {
            const t = zA(e);
            return (Number.isNaN(t) || t >= 0) && g2(e);
        }
        function lue(e) {
            return Array.from(e.querySelectorAll(MA)).filter(RA);
        }
        function cue(e, t) {
            const n = lue(e);
            if (!n.length) {
                t.preventDefault();
                return;
            }
            const r = n[t.shiftKey ? 0 : n.length - 1],
                o = e.getRootNode();
            let i = r === o.activeElement || e === o.activeElement;
            const a = o.activeElement;
            if (
                (a.tagName === "INPUT" &&
                a.getAttribute("type") === "radio" &&
                (i = n
                    .filter(
                        (d) =>
                            d.getAttribute("type") === "radio" &&
                            d.getAttribute("name") === a.getAttribute("name")
                    )
                    .includes(r)),
                    !i)
            )
                return;
            t.preventDefault();
            const l = n[t.shiftKey ? n.length - 1 : 0];
            l && l.focus();
        }
        function due(e = !0) {
            const t = y.useRef(),
                n = y.useRef(null),
                r = (i) => {
                    let a = i.querySelector("[data-autofocus]");
                    if (!a) {
                        const s = Array.from(i.querySelectorAll(MA));
                        (a = s.find(RA) || s.find(g2) || null),
                        !a && g2(i) && (a = i);
                    }
                    a && a.focus({preventScroll: !0});
                },
                o = y.useCallback(
                    (i) => {
                        if (e) {
                            if (i === null) {
                                n.current && (n.current(), (n.current = null));
                                return;
                            }
                            (n.current = oue(i)),
                            t.current !== i &&
                            (i
                                ? (setTimeout(() => {
                                    i.getRootNode() && r(i);
                                }),
                                    (t.current = i))
                                : (t.current = null));
                        }
                    },
                    [e]
                );
            return (
                y.useEffect(() => {
                    if (!e) return;
                    t.current && setTimeout(() => r(t.current));
                    const i = (a) => {
                        a.key === "Tab" && t.current && cue(t.current, a);
                    };
                    return (
                        document.addEventListener("keydown", i),
                            () => {
                                document.removeEventListener("keydown", i),
                                n.current && n.current();
                            }
                    );
                }, [e]),
                    o
            );
        }
        const uue = N.useId || (() => {});
        function hue() {
            const e = uue();
            return e ? `mantine-${e.replace(/:/g, "")}` : "";
        }
        function pue(e) {
            const t = hue(),
                [n, r] = y.useState(t);
            return (
                Ah(() => {
                    r($A());
                }, []),
                    typeof e == "string" ? e : typeof window > "u" ? t : n
            );
        }
        function OA(e, t) {
            typeof e == "function"
                ? e(t)
                : typeof e == "object" &&
                e !== null &&
                "current" in e &&
                (e.current = t);
        }
        function fue(...e) {
            return (t) => {
                e.forEach((n) => OA(n, t));
            };
        }
        function co(...e) {
            return y.useCallback(fue(...e), e);
        }
        function DA({
                        value: e,
                        defaultValue: t,
                        finalValue: n,
                        onChange: r = () => {},
                    }) {
            const [o, i] = y.useState(t !== void 0 ? t : n),
                a = (s, ...l) => {
                    i(s), r == null || r(s, ...l);
                };
            return e !== void 0 ? [e, r, !0] : [o, a, !1];
        }
        function mue(e, t) {
            return nue("(prefers-reduced-motion: reduce)", e, t);
        }
        function gue(e = !1, t) {
            const {onOpen: n, onClose: r} = t || {},
                [o, i] = y.useState(e),
                a = y.useCallback(() => {
                    i((c) => c || (n == null || n(), !0));
                }, [n]),
                s = y.useCallback(() => {
                    i((c) => c && (r == null || r(), !1));
                }, [r]),
                l = y.useCallback(() => {
                    o ? s() : a();
                }, [s, a, o]);
            return [o, {open: a, close: s, toggle: l}];
        }
        function wme(e) {
            return e;
        }
        function LA(e) {
            var t,
                n,
                r = "";
            if (typeof e == "string" || typeof e == "number") r += e;
            else if (typeof e == "object")
                if (Array.isArray(e))
                    for (t = 0; t < e.length; t++)
                        e[t] && (n = LA(e[t])) && (r && (r += " "), (r += n));
                else for (t in e) e[t] && (r && (r += " "), (r += t));
            return r;
        }
        function Mh() {
            for (var e, t, n = 0, r = ""; n < arguments.length; )
                (e = arguments[n++]) && (t = LA(e)) && (r && (r += " "), (r += t));
            return r;
        }
        const vue = {};
        function bue(e) {
            const t = {};
            return (
                e.forEach((n) => {
                    Object.entries(n).forEach(([r, o]) => {
                        t[r] ? (t[r] = Mh(t[r], o)) : (t[r] = o);
                    });
                }),
                    t
            );
        }
        function $v({theme: e, classNames: t, props: n, stylesCtx: r}) {
            const i = (Array.isArray(t) ? t : [t]).map((a) =>
                typeof a == "function" ? a(e, n, r) : a || vue
            );
            return bue(i);
        }
        function Av({theme: e, styles: t, props: n, stylesCtx: r}) {
            return (Array.isArray(t) ? t : [t]).reduce(
                (i, a) =>
                    typeof a == "function" ? {...i, ...a(e, n, r)} : {...i, ...a},
                {}
            );
        }
        const jA = y.createContext(null);
        function v2() {
            const e = y.useContext(jA);
            if (!e)
                throw new Error(
                    "[@mantine/core] MantineProvider was not found in tree"
                );
            return e;
        }
        function yue() {
            return v2().cssVariablesResolver;
        }
        function wue() {
            return v2().classNamesPrefix;
        }
        function b2() {
            return v2().getStyleNonce;
        }
        function xue(e) {
            return /^#?([0-9A-F]{3}){1,2}([0-9A-F]{2})?$/i.test(e);
        }
        function Sue(e) {
            let t = e.replace("#", "");
            if (t.length === 3) {
                const a = t.split("");
                t = [a[0], a[0], a[1], a[1], a[2], a[2]].join("");
            }
            if (t.length === 8) {
                const a = parseInt(t.slice(6, 8), 16) / 255;
                return {
                    r: parseInt(t.slice(0, 2), 16),
                    g: parseInt(t.slice(2, 4), 16),
                    b: parseInt(t.slice(4, 6), 16),
                    a,
                };
            }
            const n = parseInt(t, 16),
                r = (n >> 16) & 255,
                o = (n >> 8) & 255,
                i = n & 255;
            return {r, g: o, b: i, a: 1};
        }
        function _ue(e) {
            const [t, n, r, o] = e
                .replace(/[^0-9,./]/g, "")
                .split(/[/,]/)
                .map(Number);
            return {r: t, g: n, b: r, a: o || 1};
        }
        function kue(e) {
            const t =
                    /^hsla?\(\s*(\d+)\s*,\s*(\d+%)\s*,\s*(\d+%)\s*(,\s*(0?\.\d+|\d+(\.\d+)?))?\s*\)$/i,
                n = e.match(t);
            if (!n) return {r: 0, g: 0, b: 0, a: 1};
            const r = parseInt(n[1], 10),
                o = parseInt(n[2], 10) / 100,
                i = parseInt(n[3], 10) / 100,
                a = n[5] ? parseFloat(n[5]) : void 0,
                s = (1 - Math.abs(2 * i - 1)) * o,
                l = r / 60,
                c = s * (1 - Math.abs((l % 2) - 1)),
                d = i - s / 2;
            let u, h, p;
            return (
                l >= 0 && l < 1
                    ? ((u = s), (h = c), (p = 0))
                    : l >= 1 && l < 2
                        ? ((u = c), (h = s), (p = 0))
                        : l >= 2 && l < 3
                            ? ((u = 0), (h = s), (p = c))
                            : l >= 3 && l < 4
                                ? ((u = 0), (h = c), (p = s))
                                : l >= 4 && l < 5
                                    ? ((u = c), (h = 0), (p = s))
                                    : ((u = s), (h = 0), (p = c)),
                    {
                        r: Math.round((u + d) * 255),
                        g: Math.round((h + d) * 255),
                        b: Math.round((p + d) * 255),
                        a: a || 1,
                    }
            );
        }
        function y2(e) {
            return xue(e)
                ? Sue(e)
                : e.startsWith("rgb")
                    ? _ue(e)
                    : e.startsWith("hsl")
                        ? kue(e)
                        : {r: 0, g: 0, b: 0, a: 1};
        }
        function Mv(e, t) {
            if (e.startsWith("var("))
                return `color-mix(in srgb, ${e}, black ${t * 100}%)`;
            const {r: n, g: r, b: o, a: i} = y2(e),
                a = 1 - t,
                s = (l) => Math.round(l * a);
            return `rgba(${s(n)}, ${s(r)}, ${s(o)}, ${i})`;
        }
        function zv(e, t) {
            return typeof e.primaryShade == "number"
                ? e.primaryShade
                : t === "dark"
                    ? e.primaryShade.dark
                    : e.primaryShade.light;
        }
        function w2(e) {
            return e <= 0.03928 ? e / 12.92 : ((e + 0.055) / 1.055) ** 2.4;
        }
        function Cue(e) {
            const t = e.match(/oklch\((.*?)%\s/);
            return t ? parseFloat(t[1]) : null;
        }
        function Eue(e) {
            if (e.startsWith("oklch(")) return (Cue(e) || 0) / 100;
            const {r: t, g: n, b: r} = y2(e),
                o = t / 255,
                i = n / 255,
                a = r / 255,
                s = w2(o),
                l = w2(i),
                c = w2(a);
            return 0.2126 * s + 0.7152 * l + 0.0722 * c;
        }
        function zh(e, t = 0.179) {
            return e.startsWith("var(") ? !1 : Eue(e) > t;
        }
        function Hc({color: e, theme: t, colorScheme: n}) {
            if (typeof e != "string")
                throw new Error(
                    `[@mantine/core] Failed to parse color. Expected color to be a string, instead got ${typeof e}`
                );
            if (e === "bright")
                return {
                    color: e,
                    value: n === "dark" ? t.white : t.black,
                    shade: void 0,
                    isThemeColor: !1,
                    isLight: zh(
                        n === "dark" ? t.white : t.black,
                        t.luminanceThreshold
                    ),
                    variable: "--mantine-color-bright",
                };
            if (e === "dimmed")
                return {
                    color: e,
                    value: n === "dark" ? t.colors.dark[2] : t.colors.gray[7],
                    shade: void 0,
                    isThemeColor: !1,
                    isLight: zh(
                        n === "dark" ? t.colors.dark[2] : t.colors.gray[6],
                        t.luminanceThreshold
                    ),
                    variable: "--mantine-color-dimmed",
                };
            if (e === "white" || e === "black")
                return {
                    color: e,
                    value: e === "white" ? t.white : t.black,
                    shade: void 0,
                    isThemeColor: !1,
                    isLight: zh(
                        e === "white" ? t.white : t.black,
                        t.luminanceThreshold
                    ),
                    variable: `--mantine-color-${e}`,
                };
            const [r, o] = e.split("."),
                i = o ? Number(o) : void 0,
                a = r in t.colors;
            if (a) {
                const s =
                    i !== void 0
                        ? t.colors[r][i]
                        : t.colors[r][zv(t, n || "light")];
                return {
                    color: r,
                    value: s,
                    shade: i,
                    isThemeColor: a,
                    isLight: zh(s, t.luminanceThreshold),
                    variable: o
                        ? `--mantine-color-${r}-${i}`
                        : `--mantine-color-${r}-filled`,
                };
            }
            return {
                color: e,
                value: e,
                isThemeColor: a,
                isLight: zh(e, t.luminanceThreshold),
                shade: i,
                variable: void 0,
            };
        }
        function NA(e, t) {
            const n = Hc({color: e || t.primaryColor, theme: t});
            return n.variable ? `var(${n.variable})` : e;
        }
        function FA(e, t) {
            const n = {
                    from: (e == null ? void 0 : e.from) || t.defaultGradient.from,
                    to: (e == null ? void 0 : e.to) || t.defaultGradient.to,
                    deg: (e == null ? void 0 : e.deg) || t.defaultGradient.deg || 0,
                },
                r = NA(n.from, t),
                o = NA(n.to, t);
            return `linear-gradient(${n.deg}deg, ${r} 0%, ${o} 100%)`;
        }
        function Gn(e, t) {
            if (typeof e != "string" || t > 1 || t < 0) return "rgba(0, 0, 0, 1)";
            if (e.startsWith("var(")) {
                const i = (1 - t) * 100;
                return `color-mix(in srgb, ${e}, transparent ${i}%)`;
            }
            if (e.startsWith("oklch"))
                return e.includes("/")
                    ? e.replace(/\/\s*[\d.]+\s*\)/, `/ ${t})`)
                    : e.replace(")", ` / ${t})`);
            const {r: n, g: r, b: o} = y2(e);
            return `rgba(${n}, ${r}, ${o}, ${t})`;
        }
        const Pue = ({
                         color: e,
                         theme: t,
                         variant: n,
                         gradient: r,
                         autoContrast: o,
                     }) => {
                const i = Hc({color: e, theme: t}),
                    a = typeof o == "boolean" ? o : t.autoContrast;
                if (n === "filled") {
                    const s =
                        a && i.isLight
                            ? "var(--mantine-color-black)"
                            : "var(--mantine-color-white)";
                    return i.isThemeColor
                        ? i.shade === void 0
                            ? {
                                background: `var(--mantine-color-${e}-filled)`,
                                hover: `var(--mantine-color-${e}-filled-hover)`,
                                color: s,
                                border: `${q(1)} solid transparent`,
                            }
                            : {
                                background: `var(--mantine-color-${i.color}-${i.shade})`,
                                hover: `var(--mantine-color-${i.color}-${
                                    i.shade === 9 ? 8 : i.shade + 1
                                })`,
                                color: s,
                                border: `${q(1)} solid transparent`,
                            }
                        : {
                            background: e,
                            hover: Mv(e, 0.1),
                            color: s,
                            border: `${q(1)} solid transparent`,
                        };
                }
                if (n === "light") {
                    if (i.isThemeColor) {
                        if (i.shade === void 0)
                            return {
                                background: `var(--mantine-color-${e}-light)`,
                                hover: `var(--mantine-color-${e}-light-hover)`,
                                color: `var(--mantine-color-${e}-light-color)`,
                                border: `${q(1)} solid transparent`,
                            };
                        const s = t.colors[i.color][i.shade];
                        return {
                            background: Gn(s, 0.1),
                            hover: Gn(s, 0.12),
                            color: `var(--mantine-color-${i.color}-${Math.min(
                                i.shade,
                                6
                            )})`,
                            border: `${q(1)} solid transparent`,
                        };
                    }
                    return {
                        background: Gn(e, 0.1),
                        hover: Gn(e, 0.12),
                        color: e,
                        border: `${q(1)} solid transparent`,
                    };
                }
                if (n === "outline")
                    return i.isThemeColor
                        ? i.shade === void 0
                            ? {
                                background: "transparent",
                                hover: `var(--mantine-color-${e}-outline-hover)`,
                                color: `var(--mantine-color-${e}-outline)`,
                                border: `${q(
                                    1
                                )} solid var(--mantine-color-${e}-outline)`,
                            }
                            : {
                                background: "transparent",
                                hover: Gn(t.colors[i.color][i.shade], 0.05),
                                color: `var(--mantine-color-${i.color}-${i.shade})`,
                                border: `${q(1)} solid var(--mantine-color-${
                                    i.color
                                }-${i.shade})`,
                            }
                        : {
                            background: "transparent",
                            hover: Gn(e, 0.05),
                            color: e,
                            border: `${q(1)} solid ${e}`,
                        };
                if (n === "subtle") {
                    if (i.isThemeColor) {
                        if (i.shade === void 0)
                            return {
                                background: "transparent",
                                hover: `var(--mantine-color-${e}-light-hover)`,
                                color: `var(--mantine-color-${e}-light-color)`,
                                border: `${q(1)} solid transparent`,
                            };
                        const s = t.colors[i.color][i.shade];
                        return {
                            background: "transparent",
                            hover: Gn(s, 0.12),
                            color: `var(--mantine-color-${i.color}-${Math.min(
                                i.shade,
                                6
                            )})`,
                            border: `${q(1)} solid transparent`,
                        };
                    }
                    return {
                        background: "transparent",
                        hover: Gn(e, 0.12),
                        color: e,
                        border: `${q(1)} solid transparent`,
                    };
                }
                return n === "transparent"
                    ? i.isThemeColor
                        ? i.shade === void 0
                            ? {
                                background: "transparent",
                                hover: "transparent",
                                color: `var(--mantine-color-${e}-light-color)`,
                                border: `${q(1)} solid transparent`,
                            }
                            : {
                                background: "transparent",
                                hover: "transparent",
                                color: `var(--mantine-color-${i.color}-${Math.min(
                                    i.shade,
                                    6
                                )})`,
                                border: `${q(1)} solid transparent`,
                            }
                        : {
                            background: "transparent",
                            hover: "transparent",
                            color: e,
                            border: `${q(1)} solid transparent`,
                        }
                    : n === "white"
                        ? i.isThemeColor
                            ? i.shade === void 0
                                ? {
                                    background: "var(--mantine-color-white)",
                                    hover: Mv(t.white, 0.01),
                                    color: `var(--mantine-color-${e}-filled)`,
                                    border: `${q(1)} solid transparent`,
                                }
                                : {
                                    background: "var(--mantine-color-white)",
                                    hover: Mv(t.white, 0.01),
                                    color: `var(--mantine-color-${i.color}-${i.shade})`,
                                    border: `${q(1)} solid transparent`,
                                }
                            : {
                                background: "var(--mantine-color-white)",
                                hover: Mv(t.white, 0.01),
                                color: e,
                                border: `${q(1)} solid transparent`,
                            }
                        : n === "gradient"
                            ? {
                                background: FA(r, t),
                                hover: FA(r, t),
                                color: "var(--mantine-color-white)",
                                border: "none",
                            }
                            : n === "default"
                                ? {
                                    background: "var(--mantine-color-default)",
                                    hover: "var(--mantine-color-default-hover)",
                                    color: "var(--mantine-color-default-color)",
                                    border: `${q(
                                        1
                                    )} solid var(--mantine-color-default-border)`,
                                }
                                : {};
            },
            Iue = {
                dark: [
                    "#C9C9C9",
                    "#b8b8b8",
                    "#828282",
                    "#696969",
                    "#424242",
                    "#3b3b3b",
                    "#2e2e2e",
                    "#242424",
                    "#1f1f1f",
                    "#141414",
                ],
                gray: [
                    "#f8f9fa",
                    "#f1f3f5",
                    "#e9ecef",
                    "#dee2e6",
                    "#ced4da",
                    "#adb5bd",
                    "#868e96",
                    "#495057",
                    "#343a40",
                    "#212529",
                ],
                red: [
                    "#fff5f5",
                    "#ffe3e3",
                    "#ffc9c9",
                    "#ffa8a8",
                    "#ff8787",
                    "#ff6b6b",
                    "#fa5252",
                    "#f03e3e",
                    "#e03131",
                    "#c92a2a",
                ],
                pink: [
                    "#fff0f6",
                    "#ffdeeb",
                    "#fcc2d7",
                    "#faa2c1",
                    "#f783ac",
                    "#f06595",
                    "#e64980",
                    "#d6336c",
                    "#c2255c",
                    "#a61e4d",
                ],
                grape: [
                    "#f8f0fc",
                    "#f3d9fa",
                    "#eebefa",
                    "#e599f7",
                    "#da77f2",
                    "#cc5de8",
                    "#be4bdb",
                    "#ae3ec9",
                    "#9c36b5",
                    "#862e9c",
                ],
                violet: [
                    "#f3f0ff",
                    "#e5dbff",
                    "#d0bfff",
                    "#b197fc",
                    "#9775fa",
                    "#845ef7",
                    "#7950f2",
                    "#7048e8",
                    "#6741d9",
                    "#5f3dc4",
                ],
                indigo: [
                    "#edf2ff",
                    "#dbe4ff",
                    "#bac8ff",
                    "#91a7ff",
                    "#748ffc",
                    "#5c7cfa",
                    "#4c6ef5",
                    "#4263eb",
                    "#3b5bdb",
                    "#364fc7",
                ],
                blue: [
                    "#e7f5ff",
                    "#d0ebff",
                    "#a5d8ff",
                    "#74c0fc",
                    "#4dabf7",
                    "#339af0",
                    "#228be6",
                    "#1c7ed6",
                    "#1971c2",
                    "#1864ab",
                ],
                cyan: [
                    "#e3fafc",
                    "#c5f6fa",
                    "#99e9f2",
                    "#66d9e8",
                    "#3bc9db",
                    "#22b8cf",
                    "#15aabf",
                    "#1098ad",
                    "#0c8599",
                    "#0b7285",
                ],
                teal: [
                    "#e6fcf5",
                    "#c3fae8",
                    "#96f2d7",
                    "#63e6be",
                    "#38d9a9",
                    "#20c997",
                    "#12b886",
                    "#0ca678",
                    "#099268",
                    "#087f5b",
                ],
                green: [
                    "#ebfbee",
                    "#d3f9d8",
                    "#b2f2bb",
                    "#8ce99a",
                    "#69db7c",
                    "#51cf66",
                    "#40c057",
                    "#37b24d",
                    "#2f9e44",
                    "#2b8a3e",
                ],
                lime: [
                    "#f4fce3",
                    "#e9fac8",
                    "#d8f5a2",
                    "#c0eb75",
                    "#a9e34b",
                    "#94d82d",
                    "#82c91e",
                    "#74b816",
                    "#66a80f",
                    "#5c940d",
                ],
                yellow: [
                    "#fff9db",
                    "#fff3bf",
                    "#ffec99",
                    "#ffe066",
                    "#ffd43b",
                    "#fcc419",
                    "#fab005",
                    "#f59f00",
                    "#f08c00",
                    "#e67700",
                ],
                orange: [
                    "#fff4e6",
                    "#ffe8cc",
                    "#ffd8a8",
                    "#ffc078",
                    "#ffa94d",
                    "#ff922b",
                    "#fd7e14",
                    "#f76707",
                    "#e8590c",
                    "#d9480f",
                ],
            },
            BA =
                "-apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica, Arial, sans-serif, Apple Color Emoji, Segoe UI Emoji",
            x2 = {
                scale: 1,
                fontSmoothing: !0,
                focusRing: "auto",
                white: "#fff",
                black: "#000",
                colors: Iue,
                primaryShade: {light: 6, dark: 8},
                primaryColor: "blue",
                variantColorResolver: Pue,
                autoContrast: !1,
                luminanceThreshold: 0.3,
                fontFamily: BA,
                fontFamilyMonospace:
                    "ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace",
                respectReducedMotion: !1,
                cursorType: "default",
                defaultGradient: {from: "blue", to: "cyan", deg: 45},
                defaultRadius: "sm",
                activeClassName: "mantine-active",
                focusClassName: "",
                headings: {
                    fontFamily: BA,
                    fontWeight: "700",
                    textWrap: "wrap",
                    sizes: {
                        h1: {fontSize: q(34), lineHeight: "1.3"},
                        h2: {fontSize: q(26), lineHeight: "1.35"},
                        h3: {fontSize: q(22), lineHeight: "1.4"},
                        h4: {fontSize: q(18), lineHeight: "1.45"},
                        h5: {fontSize: q(16), lineHeight: "1.5"},
                        h6: {fontSize: q(14), lineHeight: "1.5"},
                    },
                },
                fontSizes: {xs: q(12), sm: q(14), md: q(16), lg: q(18), xl: q(20)},
                lineHeights: {
                    xs: "1.4",
                    sm: "1.45",
                    md: "1.55",
                    lg: "1.6",
                    xl: "1.65",
                },
                radius: {xs: q(2), sm: q(4), md: q(8), lg: q(16), xl: q(32)},
                spacing: {xs: q(10), sm: q(12), md: q(16), lg: q(20), xl: q(32)},
                breakpoints: {
                    xs: "36em",
                    sm: "48em",
                    md: "62em",
                    lg: "75em",
                    xl: "88em",
                },
                shadows: {
                    xs: `0 ${q(1)} ${q(3)} rgba(0, 0, 0, 0.05), 0 ${q(1)} ${q(
                        2
                    )} rgba(0, 0, 0, 0.1)`,
                    sm: `0 ${q(1)} ${q(
                        3
                    )} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${q(10)} ${q(
                        15
                    )} ${q(-5)}, rgba(0, 0, 0, 0.04) 0 ${q(7)} ${q(7)} ${q(-5)}`,
                    md: `0 ${q(1)} ${q(
                        3
                    )} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${q(20)} ${q(
                        25
                    )} ${q(-5)}, rgba(0, 0, 0, 0.04) 0 ${q(10)} ${q(10)} ${q(-5)}`,
                    lg: `0 ${q(1)} ${q(
                        3
                    )} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${q(28)} ${q(
                        23
                    )} ${q(-7)}, rgba(0, 0, 0, 0.04) 0 ${q(12)} ${q(12)} ${q(-7)}`,
                    xl: `0 ${q(1)} ${q(
                        3
                    )} rgba(0, 0, 0, 0.05), rgba(0, 0, 0, 0.05) 0 ${q(36)} ${q(
                        28
                    )} ${q(-7)}, rgba(0, 0, 0, 0.04) 0 ${q(17)} ${q(17)} ${q(-7)}`,
                },
                other: {},
                components: {},
            };
        function UA(e) {
            return e === "auto" || e === "dark" || e === "light";
        }
        function Tue({key: e = "mantine-color-scheme-value"} = {}) {
            let t;
            return {
                get: (n) => {
                    if (typeof window > "u") return n;
                    try {
                        const r = window.localStorage.getItem(e);
                        return UA(r) ? r : n;
                    } catch {
                        return n;
                    }
                },
                set: (n) => {
                    try {
                        window.localStorage.setItem(e, n);
                    } catch (r) {
                        console.warn(
                            "[@mantine/core] Local storage color scheme manager was unable to save color scheme.",
                            r
                        );
                    }
                },
                subscribe: (n) => {
                    (t = (r) => {
                        r.storageArea === window.localStorage &&
                        r.key === e &&
                        UA(r.newValue) &&
                        n(r.newValue);
                    }),
                        window.addEventListener("storage", t);
                },
                unsubscribe: () => {
                    window.removeEventListener("storage", t);
                },
                clear: () => {
                    window.localStorage.removeItem(e);
                },
            };
        }
        const $ue =
                "[@mantine/core] MantineProvider: Invalid theme.primaryColor, it accepts only key of theme.colors, learn more – https://mantine.dev/theming/colors/#primary-color",
            HA =
                "[@mantine/core] MantineProvider: Invalid theme.primaryShade, it accepts only 0-9 integers or an object { light: 0-9, dark: 0-9 }";
        function S2(e) {
            return e < 0 || e > 9 ? !1 : parseInt(e.toString(), 10) === e;
        }
        function VA(e) {
            if (!(e.primaryColor in e.colors)) throw new Error($ue);
            if (
                typeof e.primaryShade == "object" &&
                (!S2(e.primaryShade.dark) || !S2(e.primaryShade.light))
            )
                throw new Error(HA);
            if (typeof e.primaryShade == "number" && !S2(e.primaryShade))
                throw new Error(HA);
        }
        function Aue(e, t) {
            var r;
            if (!t) return VA(e), e;
            const n = p2(e, t);
            return (
                t.fontFamily &&
                !((r = t.headings) != null && r.fontFamily) &&
                (n.headings.fontFamily = t.fontFamily),
                    VA(n),
                    n
            );
        }
        const _2 = y.createContext(null),
            Mue = () => y.useContext(_2) || x2;
        function $a() {
            const e = y.useContext(_2);
            if (!e)
                throw new Error(
                    "@mantine/core: MantineProvider was not found in component tree, make sure you have it in your app"
                );
            return e;
        }
        function KA({theme: e, children: t, inherit: n = !0}) {
            const r = Mue(),
                o = y.useMemo(() => Aue(n ? r : x2, e), [e, r, n]);
            return N.createElement(_2.Provider, {value: o}, t);
        }
        KA.displayName = "@mantine/core/MantineThemeProvider";
        function zue() {
            const e = $a(),
                t = b2(),
                n = Bo(e.breakpoints).reduce((r, o) => {
                    const i = e.breakpoints[o].includes("px"),
                        a = Fde(e.breakpoints[o]),
                        s = i ? `${a - 0.1}px` : PA(a - 0.1),
                        l = i ? `${a}px` : PA(a);
                    return `${r}@media (max-width: ${s}) {.mantine-visible-from-${o} {display: none !important;}}@media (min-width: ${l}) {.mantine-hidden-from-${o} {display: none !important;}}`;
                }, "");
            return N.createElement("style", {
                "data-mantine-styles": "classes",
                nonce: t == null ? void 0 : t(),
                dangerouslySetInnerHTML: {__html: n},
            });
        }
        function k2(e) {
            return Object.entries(e)
                .map(([t, n]) => `${t}: ${n};`)
                .join("");
        }
        function C2(e, t) {
            return (Array.isArray(e) ? e : [e]).reduce((r, o) => `${o}{${r}}`, t);
        }
        function Rue(e, t) {
            const n = k2(e.variables),
                r = n ? C2(t, n) : "",
                o = k2(e.dark),
                i = o ? C2(`${t}[data-mantine-color-scheme="dark"]`, o) : "",
                a = k2(e.light),
                s = a ? C2(`${t}[data-mantine-color-scheme="light"]`, a) : "";
            return `${r}${i}${s}`;
        }
        function Oue({color: e, theme: t, autoContrast: n = !0}) {
            return (typeof n == "boolean" ? n : t.autoContrast) &&
            Hc({color: e || t.primaryColor, theme: t}).isLight
                ? "var(--mantine-color-black)"
                : "var(--mantine-color-white)";
        }
        function WA(e, t) {
            return Oue({
                color: e.colors[e.primaryColor][zv(e, t)],
                theme: e,
                autoContrast: null,
            });
        }
        function Vc(e, t, n) {
            Bo(t).forEach((r) => Object.assign(e, {[`--mantine-${n}-${r}`]: t[r]}));
        }
        const YA = (e) => {
            const t = zv(e, "dark"),
                n = zv(e, "light"),
                r =
                    e.defaultRadius in e.radius
                        ? e.radius[e.defaultRadius]
                        : q(e.defaultRadius),
                o = {
                    variables: {
                        "--mantine-scale": e.scale.toString(),
                        "--mantine-cursor-type": e.cursorType,
                        "--mantine-webkit-font-smoothing": e.fontSmoothing
                            ? "antialiased"
                            : "unset",
                        "--mantine-color-scheme": "light dark",
                        "--mantine-moz-font-smoothing": e.fontSmoothing
                            ? "grayscale"
                            : "unset",
                        "--mantine-color-white": e.white,
                        "--mantine-color-black": e.black,
                        "--mantine-line-height": e.lineHeights.md,
                        "--mantine-font-family": e.fontFamily,
                        "--mantine-font-family-monospace": e.fontFamilyMonospace,
                        "--mantine-font-family-headings": e.headings.fontFamily,
                        "--mantine-heading-font-weight": e.headings.fontWeight,
                        "--mantine-heading-text-wrap": e.headings.textWrap,
                        "--mantine-radius-default": r,
                        "--mantine-primary-color-filled": `var(--mantine-color-${e.primaryColor}-filled)`,
                        "--mantine-primary-color-filled-hover": `var(--mantine-color-${e.primaryColor}-filled-hover)`,
                        "--mantine-primary-color-light": `var(--mantine-color-${e.primaryColor}-light)`,
                        "--mantine-primary-color-light-hover": `var(--mantine-color-${e.primaryColor}-light-hover)`,
                        "--mantine-primary-color-light-color": `var(--mantine-color-${e.primaryColor}-light-color)`,
                    },
                    light: {
                        "--mantine-primary-color-contrast": WA(e, "light"),
                        "--mantine-color-bright": "var(--mantine-color-black)",
                        "--mantine-color-text": e.black,
                        "--mantine-color-body": e.white,
                        "--mantine-color-error": "var(--mantine-color-red-6)",
                        "--mantine-color-placeholder":
                            "var(--mantine-color-gray-5)",
                        "--mantine-color-anchor": `var(--mantine-color-${e.primaryColor}-${n})`,
                        "--mantine-color-default": "var(--mantine-color-white)",
                        "--mantine-color-default-hover":
                            "var(--mantine-color-gray-0)",
                        "--mantine-color-default-color":
                            "var(--mantine-color-black)",
                        "--mantine-color-default-border":
                            "var(--mantine-color-gray-4)",
                    },
                    dark: {
                        "--mantine-primary-color-contrast": WA(e, "dark"),
                        "--mantine-color-bright": "var(--mantine-color-white)",
                        "--mantine-color-text": "var(--mantine-color-dark-0)",
                        "--mantine-color-body": "var(--mantine-color-dark-7)",
                        "--mantine-color-error": "var(--mantine-color-red-8)",
                        "--mantine-color-placeholder":
                            "var(--mantine-color-dark-3)",
                        "--mantine-color-anchor": `var(--mantine-color-${e.primaryColor}-4)`,
                        "--mantine-color-default": "var(--mantine-color-dark-6)",
                        "--mantine-color-default-hover":
                            "var(--mantine-color-dark-5)",
                        "--mantine-color-default-color":
                            "var(--mantine-color-white)",
                        "--mantine-color-default-border":
                            "var(--mantine-color-dark-4)",
                    },
                };
            Vc(o.variables, e.breakpoints, "breakpoint"),
                Vc(o.variables, e.spacing, "spacing"),
                Vc(o.variables, e.fontSizes, "font-size"),
                Vc(o.variables, e.lineHeights, "line-height"),
                Vc(o.variables, e.shadows, "shadow"),
                Vc(o.variables, e.radius, "radius"),
                e.colors[e.primaryColor].forEach((a, s) => {
                    o.variables[
                        `--mantine-primary-color-${s}`
                        ] = `var(--mantine-color-${e.primaryColor}-${s})`;
                }),
                Bo(e.colors).forEach((a) => {
                    e.colors[a].forEach((c, d) => {
                        o.variables[`--mantine-color-${a}-${d}`] = c;
                    });
                    const s = `var(--mantine-color-${a}-${n === 9 ? 8 : n + 1})`,
                        l = `var(--mantine-color-${a}-${t === 9 ? 8 : t + 1})`;
                    (o.light["--mantine-color-dimmed"] =
                        "var(--mantine-color-gray-6)"),
                        (o.light[
                            `--mantine-color-${a}-text`
                            ] = `var(--mantine-color-${a}-filled)`),
                        (o.light[
                            `--mantine-color-${a}-filled`
                            ] = `var(--mantine-color-${a}-${n})`),
                        (o.light[`--mantine-color-${a}-filled-hover`] = s),
                        (o.light[`--mantine-color-${a}-light`] = Gn(
                            e.colors[a][n],
                            0.1
                        )),
                        (o.light[`--mantine-color-${a}-light-hover`] = Gn(
                            e.colors[a][n],
                            0.12
                        )),
                        (o.light[
                            `--mantine-color-${a}-light-color`
                            ] = `var(--mantine-color-${a}-${n})`),
                        (o.light[
                            `--mantine-color-${a}-outline`
                            ] = `var(--mantine-color-${a}-${n})`),
                        (o.light[`--mantine-color-${a}-outline-hover`] = Gn(
                            e.colors[a][n],
                            0.05
                        )),
                        (o.dark["--mantine-color-dimmed"] =
                            "var(--mantine-color-dark-2)"),
                        (o.dark[
                            `--mantine-color-${a}-text`
                            ] = `var(--mantine-color-${a}-4)`),
                        (o.dark[
                            `--mantine-color-${a}-filled`
                            ] = `var(--mantine-color-${a}-${t})`),
                        (o.dark[`--mantine-color-${a}-filled-hover`] = l),
                        (o.dark[`--mantine-color-${a}-light`] = Gn(
                            e.colors[a][Math.max(0, t - 2)],
                            0.15
                        )),
                        (o.dark[`--mantine-color-${a}-light-hover`] = Gn(
                            e.colors[a][Math.max(0, t - 2)],
                            0.2
                        )),
                        (o.dark[
                            `--mantine-color-${a}-light-color`
                            ] = `var(--mantine-color-${a}-${Math.max(t - 5, 0)})`),
                        (o.dark[
                            `--mantine-color-${a}-outline`
                            ] = `var(--mantine-color-${a}-${Math.max(t - 4, 0)})`),
                        (o.dark[`--mantine-color-${a}-outline-hover`] = Gn(
                            e.colors[a][Math.max(t - 4, 0)],
                            0.05
                        ));
                });
            const i = e.headings.sizes;
            return (
                Bo(i).forEach((a) => {
                    (o.variables[`--mantine-${a}-font-size`] = i[a].fontSize),
                        (o.variables[`--mantine-${a}-line-height`] =
                            i[a].lineHeight),
                        (o.variables[`--mantine-${a}-font-weight`] =
                            i[a].fontWeight || e.headings.fontWeight);
                }),
                    o
            );
        };
        function Due({theme: e, generator: t}) {
            const n = YA(e),
                r = t == null ? void 0 : t(e);
            return r ? p2(n, r) : n;
        }
        const E2 = YA(x2);
        function Lue(e) {
            const t = {variables: {}, light: {}, dark: {}};
            return (
                Bo(e.variables).forEach((n) => {
                    E2.variables[n] !== e.variables[n] &&
                    (t.variables[n] = e.variables[n]);
                }),
                    Bo(e.light).forEach((n) => {
                        E2.light[n] !== e.light[n] && (t.light[n] = e.light[n]);
                    }),
                    Bo(e.dark).forEach((n) => {
                        E2.dark[n] !== e.dark[n] && (t.dark[n] = e.dark[n]);
                    }),
                    t
            );
        }
        function jue(e) {
            return `
  ${e}[data-mantine-color-scheme="dark"] { --mantine-color-scheme: dark; }
  ${e}[data-mantine-color-scheme="light"] { --mantine-color-scheme: light; }
`;
        }
        function GA({cssVariablesSelector: e}) {
            const t = $a(),
                n = b2(),
                r = yue(),
                o = Due({theme: t, generator: r}),
                i = e === ":root",
                a = i ? Lue(o) : o,
                s = Rue(a, e);
            return s
                ? N.createElement("style", {
                    "data-mantine-styles": !0,
                    nonce: n == null ? void 0 : n(),
                    dangerouslySetInnerHTML: {__html: `${s}${i ? "" : jue(e)}`},
                })
                : null;
        }
        GA.displayName = "@mantine/CssVariables";
        function Nue() {
            const e = console.error;
            console.error = (...t) => {
                (t.length > 1 &&
                    typeof t[0] == "string" &&
                    t[0]
                        .toLowerCase()
                        .includes("extra attributes from the server") &&
                    typeof t[1] == "string" &&
                    t[1].toLowerCase().includes("data-mantine-color-scheme")) ||
                e(...t);
            };
        }
        function Kc(e, t) {
            var r;
            const n =
                e !== "auto"
                    ? e
                    : window.matchMedia("(prefers-color-scheme: dark)").matches
                        ? "dark"
                        : "light";
            (r = t()) == null || r.setAttribute("data-mantine-color-scheme", n);
        }
        function Fue({
                         manager: e,
                         defaultColorScheme: t,
                         getRootElement: n,
                         forceColorScheme: r,
                     }) {
            const o = y.useRef(),
                [i, a] = y.useState(() => e.get(t)),
                s = r || i,
                l = y.useCallback(
                    (d) => {
                        r || (Kc(d, n), a(d), e.set(d));
                    },
                    [e.set, s, r]
                ),
                c = y.useCallback(() => {
                    a(t), Kc(t, n), e.clear();
                }, [e.clear, t]);
            return (
                y.useEffect(
                    () => (e.subscribe(l), e.unsubscribe),
                    [e.subscribe, e.unsubscribe]
                ),
                    Ah(() => {
                        Kc(e.get(t), n);
                    }, []),
                    y.useEffect(() => {
                        var u;
                        if (r) return Kc(r, n), () => {};
                        r === void 0 && Kc(i, n),
                            (o.current = window.matchMedia(
                                "(prefers-color-scheme: dark)"
                            ));
                        const d = (h) => {
                            i === "auto" && Kc(h.matches ? "dark" : "light", n);
                        };
                        return (
                            (u = o.current) == null || u.addEventListener("change", d),
                                () => {
                                    var h;
                                    return (h = o.current) == null
                                        ? void 0
                                        : h.removeEventListener("change", d);
                                }
                        );
                    }, [i, r]),
                    {colorScheme: s, setColorScheme: l, clearColorScheme: c}
            );
        }
        function Bue({respectReducedMotion: e, getRootElement: t}) {
            Ah(() => {
                var n;
                e &&
                ((n = t()) == null ||
                    n.setAttribute("data-respect-reduced-motion", "true"));
            }, [e]);
        }
        Nue();
        function XA({
                        theme: e,
                        children: t,
                        getStyleNonce: n,
                        withCssVariables: r = !0,
                        cssVariablesSelector: o = ":root",
                        classNamesPrefix: i = "mantine",
                        colorSchemeManager: a = Tue(),
                        defaultColorScheme: s = "light",
                        getRootElement: l = () => document.documentElement,
                        cssVariablesResolver: c,
                        forceColorScheme: d,
                    }) {
            const {
                colorScheme: u,
                setColorScheme: h,
                clearColorScheme: p,
            } = Fue({
                defaultColorScheme: s,
                forceColorScheme: d,
                manager: a,
                getRootElement: l,
            });
            return (
                Bue({
                    respectReducedMotion:
                        (e == null ? void 0 : e.respectReducedMotion) || !1,
                    getRootElement: l,
                }),
                    N.createElement(
                        jA.Provider,
                        {
                            value: {
                                colorSchemeManager: a,
                                colorScheme: u,
                                setColorScheme: h,
                                clearColorScheme: p,
                                getRootElement: l,
                                classNamesPrefix: i,
                                getStyleNonce: n,
                                cssVariablesResolver: c,
                                cssVariablesSelector: o,
                            },
                        },
                        N.createElement(
                            KA,
                            {theme: e},
                            r && N.createElement(GA, {cssVariablesSelector: o}),
                            N.createElement(zue, null),
                            t
                        )
                    )
            );
        }
        XA.displayName = "@mantine/core/MantineProvider";
        function Uue({classNames: e, styles: t, props: n, stylesCtx: r}) {
            const o = $a();
            return {
                resolvedClassNames: $v({
                    theme: o,
                    classNames: e,
                    props: n,
                    stylesCtx: r || void 0,
                }),
                resolvedStyles: Av({
                    theme: o,
                    styles: t,
                    props: n,
                    stylesCtx: r || void 0,
                }),
            };
        }
        const Hue = {
            always: "mantine-focus-always",
            auto: "mantine-focus-auto",
            never: "mantine-focus-never",
        };
        function Vue({theme: e, options: t, unstyled: n}) {
            return Mh(
                (t == null ? void 0 : t.focusable) &&
                !n &&
                (e.focusClassName || Hue[e.focusRing]),
                (t == null ? void 0 : t.active) && !n && e.activeClassName
            );
        }
        function Kue({selector: e, stylesCtx: t, options: n, props: r, theme: o}) {
            return $v({
                theme: o,
                classNames: n == null ? void 0 : n.classNames,
                props: (n == null ? void 0 : n.props) || r,
                stylesCtx: t,
            })[e];
        }
        function Wue({
                         selector: e,
                         stylesCtx: t,
                         theme: n,
                         classNames: r,
                         props: o,
                     }) {
            return $v({theme: n, classNames: r, props: o, stylesCtx: t})[e];
        }
        function Yue({rootSelector: e, selector: t, className: n}) {
            return e === t ? n : void 0;
        }
        function Gue({selector: e, classes: t, unstyled: n}) {
            return n ? void 0 : t[e];
        }
        function Xue({
                         themeName: e,
                         classNamesPrefix: t,
                         selector: n,
                         withStaticClass: r,
                     }) {
            return r === !1 ? [] : e.map((o) => `${t}-${o}-${n}`);
        }
        function que({
                         themeName: e,
                         theme: t,
                         selector: n,
                         props: r,
                         stylesCtx: o,
                     }) {
            return e.map((i) => {
                var a, s;
                return (s = $v({
                    theme: t,
                    classNames:
                        (a = t.components[i]) == null ? void 0 : a.classNames,
                    props: r,
                    stylesCtx: o,
                })) == null
                    ? void 0
                    : s[n];
            });
        }
        function Zue({options: e, classes: t, selector: n, unstyled: r}) {
            return e != null && e.variant && !r ? t[`${n}--${e.variant}`] : void 0;
        }
        function Que({
                         theme: e,
                         options: t,
                         themeName: n,
                         selector: r,
                         classNamesPrefix: o,
                         classNames: i,
                         classes: a,
                         unstyled: s,
                         className: l,
                         rootSelector: c,
                         props: d,
                         stylesCtx: u,
                     }) {
            return Mh(
                Vue({theme: e, options: t, unstyled: s}),
                que({theme: e, themeName: n, selector: r, props: d, stylesCtx: u}),
                Zue({options: t, classes: a, selector: r, unstyled: s}),
                Wue({selector: r, stylesCtx: u, theme: e, classNames: i, props: d}),
                Kue({selector: r, stylesCtx: u, options: t, props: d, theme: e}),
                Yue({rootSelector: c, selector: r, className: l}),
                Gue({selector: r, classes: a, unstyled: s}),
                Xue({
                    themeName: n,
                    classNamesPrefix: o,
                    selector: r,
                    withStaticClass: t == null ? void 0 : t.withStaticClass,
                }),
                t == null ? void 0 : t.className
            );
        }
        function Jue({
                         theme: e,
                         themeName: t,
                         props: n,
                         stylesCtx: r,
                         selector: o,
                     }) {
            return t
                .map((i) => {
                    var a;
                    return Av({
                        theme: e,
                        styles: (a = e.components[i]) == null ? void 0 : a.styles,
                        props: n,
                        stylesCtx: r,
                    })[o];
                })
                .reduce((i, a) => ({...i, ...a}), {});
        }
        function P2({style: e, theme: t}) {
            return Array.isArray(e)
                ? [...e].reduce((n, r) => ({...n, ...P2({style: r, theme: t})}), {})
                : typeof e == "function"
                    ? e(t)
                    : e ?? {};
        }
        function ehe(e) {
            return e.reduce(
                (t, n) => (
                    n &&
                    Object.keys(n).forEach((r) => {
                        t[r] = {...t[r], ...m2(n[r])};
                    }),
                        t
                ),
                {}
            );
        }
        function the({
                         vars: e,
                         varsResolver: t,
                         theme: n,
                         props: r,
                         stylesCtx: o,
                         selector: i,
                         themeName: a,
                     }) {
            var s;
            return (s = ehe([
                t == null ? void 0 : t(n, r, o),
                ...a.map((l) => {
                    var c, d, u;
                    return (u =
                        (d = (c = n.components) == null ? void 0 : c[l]) == null
                            ? void 0
                            : d.vars) == null
                        ? void 0
                        : u.call(d, n, r, o);
                }),
                e == null ? void 0 : e(n, r, o),
            ])) == null
                ? void 0
                : s[i];
        }
        function nhe({
                         theme: e,
                         themeName: t,
                         selector: n,
                         options: r,
                         props: o,
                         stylesCtx: i,
                         rootSelector: a,
                         styles: s,
                         style: l,
                         vars: c,
                         varsResolver: d,
                     }) {
            return {
                ...Jue({
                    theme: e,
                    themeName: t,
                    props: o,
                    stylesCtx: i,
                    selector: n,
                }),
                ...Av({theme: e, styles: s, props: o, stylesCtx: i})[n],
                ...Av({
                    theme: e,
                    styles: r == null ? void 0 : r.styles,
                    props: (r == null ? void 0 : r.props) || o,
                    stylesCtx: i,
                })[n],
                ...the({
                    theme: e,
                    props: o,
                    stylesCtx: i,
                    vars: c,
                    varsResolver: d,
                    selector: n,
                    themeName: t,
                }),
                ...(a === n ? P2({style: l, theme: e}) : null),
                ...P2({style: r == null ? void 0 : r.style, theme: e}),
            };
        }
        function Wc({
                        name: e,
                        classes: t,
                        props: n,
                        stylesCtx: r,
                        className: o,
                        style: i,
                        rootSelector: a = "root",
                        unstyled: s,
                        classNames: l,
                        styles: c,
                        vars: d,
                        varsResolver: u,
                    }) {
            const h = $a(),
                p = wue(),
                m = (Array.isArray(e) ? e : [e]).filter((f) => f);
            return (f, g) => ({
                className: Que({
                    theme: h,
                    options: g,
                    themeName: m,
                    selector: f,
                    classNamesPrefix: p,
                    classNames: l,
                    classes: t,
                    unstyled: s,
                    className: o,
                    rootSelector: a,
                    props: n,
                    stylesCtx: r,
                }),
                style: nhe({
                    theme: h,
                    themeName: m,
                    selector: f,
                    options: g,
                    props: n,
                    stylesCtx: r,
                    rootSelector: a,
                    styles: c,
                    style: i,
                    vars: d,
                    varsResolver: u,
                }),
            });
        }
        function $t(e, t, n) {
            var a;
            const r = $a(),
                o = (a = r.components[e]) == null ? void 0 : a.defaultProps,
                i = typeof o == "function" ? o(r) : o;
            return {...t, ...i, ...m2(n)};
        }
        function qA(e) {
            return Bo(e)
                .reduce(
                    (t, n) => (e[n] !== void 0 ? `${t}${jde(n)}:${e[n]};` : t),
                    ""
                )
                .trim();
        }
        function rhe({selector: e, styles: t, media: n}) {
            const r = t ? qA(t) : "",
                o = Array.isArray(n)
                    ? n.map((i) => `@media${i.query}{${e}{${qA(i.styles)}}}`)
                    : [];
            return `${r ? `${e}{${r}}` : ""}${o.join("")}`.trim();
        }
        function ohe({selector: e, styles: t, media: n}) {
            const r = b2();
            return N.createElement("style", {
                "data-mantine-styles": "inline",
                nonce: r == null ? void 0 : r(),
                dangerouslySetInnerHTML: {
                    __html: rhe({selector: e, styles: t, media: n}),
                },
            });
        }
        function ihe(e) {
            const {
                m: t,
                mx: n,
                my: r,
                mt: o,
                mb: i,
                ml: a,
                mr: s,
                p: l,
                px: c,
                py: d,
                pt: u,
                pb: h,
                pl: p,
                pr: m,
                bg: f,
                c: g,
                opacity: b,
                ff: x,
                fz: S,
                fw: _,
                lts: k,
                ta: C,
                lh: P,
                fs: I,
                tt: $,
                td: T,
                w: R,
                miw: D,
                maw: j,
                h: z,
                mih: O,
                mah: F,
                bgsz: K,
                bgp: V,
                bgr: B,
                bga: H,
                pos: G,
                top: ee,
                left: fe,
                bottom: Se,
                right: te,
                inset: ye,
                display: Ae,
                flex: We,
                hiddenFrom: _e,
                visibleFrom: tt,
                lightHidden: Me,
                darkHidden: Jt,
                ...je
            } = e;
            return {
                styleProps: m2({
                    m: t,
                    mx: n,
                    my: r,
                    mt: o,
                    mb: i,
                    ml: a,
                    mr: s,
                    p: l,
                    px: c,
                    py: d,
                    pt: u,
                    pb: h,
                    pl: p,
                    pr: m,
                    bg: f,
                    c: g,
                    opacity: b,
                    ff: x,
                    fz: S,
                    fw: _,
                    lts: k,
                    ta: C,
                    lh: P,
                    fs: I,
                    tt: $,
                    td: T,
                    w: R,
                    miw: D,
                    maw: j,
                    h: z,
                    mih: O,
                    mah: F,
                    bgsz: K,
                    bgp: V,
                    bgr: B,
                    bga: H,
                    pos: G,
                    top: ee,
                    left: fe,
                    bottom: Se,
                    right: te,
                    inset: ye,
                    display: Ae,
                    flex: We,
                    hiddenFrom: _e,
                    visibleFrom: tt,
                    lightHidden: Me,
                    darkHidden: Jt,
                }),
                rest: je,
            };
        }
        const ahe = {
            m: {type: "spacing", property: "margin"},
            mt: {type: "spacing", property: "marginTop"},
            mb: {type: "spacing", property: "marginBottom"},
            ml: {type: "spacing", property: "marginLeft"},
            mr: {type: "spacing", property: "marginRight"},
            mx: {type: "spacing", property: ["marginRight", "marginLeft"]},
            my: {type: "spacing", property: ["marginTop", "marginBottom"]},
            p: {type: "spacing", property: "padding"},
            pt: {type: "spacing", property: "paddingTop"},
            pb: {type: "spacing", property: "paddingBottom"},
            pl: {type: "spacing", property: "paddingLeft"},
            pr: {type: "spacing", property: "paddingRight"},
            px: {type: "spacing", property: ["paddingRight", "paddingLeft"]},
            py: {type: "spacing", property: ["paddingTop", "paddingBottom"]},
            bg: {type: "color", property: "background"},
            c: {type: "textColor", property: "color"},
            opacity: {type: "identity", property: "opacity"},
            ff: {type: "fontFamily", property: "fontFamily"},
            fz: {type: "fontSize", property: "fontSize"},
            fw: {type: "identity", property: "fontWeight"},
            lts: {type: "size", property: "letterSpacing"},
            ta: {type: "identity", property: "textAlign"},
            lh: {type: "lineHeight", property: "lineHeight"},
            fs: {type: "identity", property: "fontStyle"},
            tt: {type: "identity", property: "textTransform"},
            td: {type: "identity", property: "textDecoration"},
            w: {type: "spacing", property: "width"},
            miw: {type: "spacing", property: "minWidth"},
            maw: {type: "spacing", property: "maxWidth"},
            h: {type: "spacing", property: "height"},
            mih: {type: "spacing", property: "minHeight"},
            mah: {type: "spacing", property: "maxHeight"},
            bgsz: {type: "size", property: "backgroundSize"},
            bgp: {type: "identity", property: "backgroundPosition"},
            bgr: {type: "identity", property: "backgroundRepeat"},
            bga: {type: "identity", property: "backgroundAttachment"},
            pos: {type: "identity", property: "position"},
            top: {type: "identity", property: "top"},
            left: {type: "size", property: "left"},
            bottom: {type: "size", property: "bottom"},
            right: {type: "size", property: "right"},
            inset: {type: "size", property: "inset"},
            display: {type: "identity", property: "display"},
            flex: {type: "identity", property: "flex"},
        };
        function ZA(e, t) {
            const n = Hc({color: e, theme: t});
            return n.color === "dimmed"
                ? "var(--mantine-color-dimmed)"
                : n.color === "bright"
                    ? "var(--mantine-color-bright)"
                    : n.variable
                        ? `var(${n.variable})`
                        : n.color;
        }
        function she(e, t) {
            const n = Hc({color: e, theme: t});
            return n.isThemeColor && n.shade === void 0
                ? `var(--mantine-color-${n.color}-text)`
                : ZA(e, t);
        }
        const QA = {
            text: "var(--mantine-font-family)",
            mono: "var(--mantine-font-family-monospace)",
            heading: "var(--mantine-font-family-headings)",
        };
        function lhe(e) {
            return typeof e == "string" && e in QA ? QA[e] : e;
        }
        function che(e, t) {
            return typeof e == "string" && e in t.fontSizes
                ? `var(--mantine-font-size-${e})`
                : typeof e == "number" || typeof e == "string"
                    ? q(e)
                    : e;
        }
        function dhe(e) {
            return e;
        }
        function uhe(e, t) {
            return typeof e == "string" && e in t.lineHeights
                ? `var(--mantine-line-height-${e})`
                : e;
        }
        function hhe(e) {
            return typeof e == "number" ? q(e) : e;
        }
        function phe(e, t) {
            if (typeof e == "number") return q(e);
            if (typeof e == "string") {
                const n = e.replace("-", "");
                if (!(n in t.spacing)) return q(e);
                const r = `--mantine-spacing-${n}`;
                return e.startsWith("-") ? `calc(var(${r}) * -1)` : `var(${r})`;
            }
            return e;
        }
        const I2 = {
            color: ZA,
            textColor: she,
            fontSize: che,
            spacing: phe,
            identity: dhe,
            size: hhe,
            lineHeight: uhe,
            fontFamily: lhe,
        };
        function JA(e) {
            return e.replace("(min-width: ", "").replace("em)", "");
        }
        function fhe({media: e, ...t}) {
            const r = Object.keys(e)
                .sort((o, i) => Number(JA(o)) - Number(JA(i)))
                .map((o) => ({query: o, styles: e[o]}));
            return {...t, media: r};
        }
        function mhe(e) {
            if (typeof e != "object" || e === null) return !1;
            const t = Object.keys(e);
            return !(t.length === 1 && t[0] === "base");
        }
        function ghe(e) {
            return typeof e == "object" && e !== null
                ? "base" in e
                    ? e.base
                    : void 0
                : e;
        }
        function vhe(e) {
            return typeof e == "object" && e !== null
                ? Bo(e).filter((t) => t !== "base")
                : [];
        }
        function bhe(e, t) {
            return typeof e == "object" && e !== null && t in e ? e[t] : e;
        }
        function yhe({styleProps: e, data: t, theme: n}) {
            return fhe(
                Bo(e).reduce(
                    (r, o) => {
                        if (o === "hiddenFrom" || o === "visibleFrom") return r;
                        const i = t[o],
                            a = Array.isArray(i.property)
                                ? i.property
                                : [i.property],
                            s = ghe(e[o]);
                        if (!mhe(e[o]))
                            return (
                                a.forEach((c) => {
                                    r.inlineStyles[c] = I2[i.type](s, n);
                                }),
                                    r
                            );
                        r.hasResponsiveStyles = !0;
                        const l = vhe(e[o]);
                        return (
                            a.forEach((c) => {
                                s && (r.styles[c] = I2[i.type](s, n)),
                                    l.forEach((d) => {
                                        const u = `(min-width: ${n.breakpoints[d]})`;
                                        r.media[u] = {
                                            ...r.media[u],
                                            [c]: I2[i.type](bhe(e[o], d), n),
                                        };
                                    });
                            }),
                                r
                        );
                    },
                    {
                        hasResponsiveStyles: !1,
                        styles: {},
                        inlineStyles: {},
                        media: {},
                    }
                )
            );
        }
        function whe() {
            return `__m__-${y.useId().replace(/:/g, "")}`;
        }
        function xme(e) {
            return e;
        }
        function eM(e) {
            return e.startsWith("data-") ? e : `data-${e}`;
        }
        function xhe(e) {
            return Object.keys(e).reduce((t, n) => {
                const r = e[n];
                return (
                    r === void 0 ||
                    r === "" ||
                    r === !1 ||
                    r === null ||
                    (t[eM(n)] = e[n]),
                        t
                );
            }, {});
        }
        function tM(e) {
            return e
                ? typeof e == "string"
                    ? {[eM(e)]: !0}
                    : Array.isArray(e)
                        ? [...e].reduce((t, n) => ({...t, ...tM(n)}), {})
                        : xhe(e)
                : null;
        }
        function T2(e, t) {
            return Array.isArray(e)
                ? [...e].reduce((n, r) => ({...n, ...T2(r, t)}), {})
                : typeof e == "function"
                    ? e(t)
                    : e ?? {};
        }
        function She({theme: e, style: t, vars: n, styleProps: r}) {
            const o = T2(t, e),
                i = T2(n, e);
            return {...o, ...i, ...r};
        }
        const nM = y.forwardRef(
            (
                {
                    component: e,
                    style: t,
                    __vars: n,
                    className: r,
                    variant: o,
                    mod: i,
                    size: a,
                    hiddenFrom: s,
                    visibleFrom: l,
                    lightHidden: c,
                    darkHidden: d,
                    renderRoot: u,
                    ...h
                },
                p
            ) => {
                const m = $a(),
                    f = e || "div",
                    {styleProps: g, rest: b} = ihe(h),
                    x = whe(),
                    S = yhe({styleProps: g, theme: m, data: ahe}),
                    _ = {
                        ref: p,
                        style: She({
                            theme: m,
                            style: t,
                            vars: n,
                            styleProps: S.inlineStyles,
                        }),
                        className: Mh(r, {
                            [x]: S.hasResponsiveStyles,
                            "mantine-light-hidden": c,
                            "mantine-dark-hidden": d,
                            [`mantine-hidden-from-${s}`]: s,
                            [`mantine-visible-from-${l}`]: l,
                        }),
                        "data-variant": o,
                        "data-size": IA(a) ? void 0 : a || void 0,
                        ...tM(i),
                        ...b,
                    };
                return N.createElement(
                    N.Fragment,
                    null,
                    S.hasResponsiveStyles &&
                    N.createElement(ohe, {
                        selector: `.${x}`,
                        styles: S.styles,
                        media: S.media,
                    }),
                    typeof u == "function" ? u(_) : N.createElement(f, {..._})
                );
            }
        );
        nM.displayName = "@mantine/core/Box";
        const Uo = nM;
        function rM(e) {
            return e;
        }
        function Aa(e) {
            const t = y.forwardRef(e);
            return (t.extend = rM), t;
        }
        function $2(e) {
            const t = y.forwardRef(e);
            return (t.extend = rM), t;
        }
        const _he = y.createContext({
            dir: "ltr",
            toggleDirection: () => {},
            setDirection: () => {},
        });
        function Rv() {
            return y.useContext(_he);
        }
        const [khe, Rr] = $h("ScrollArea.Root component was not found in tree");
        function Yc(e, t) {
            const n = Rs(t);
            Ah(() => {
                let r = 0;
                if (e) {
                    const o = new ResizeObserver(() => {
                        cancelAnimationFrame(r),
                            (r = window.requestAnimationFrame(n));
                    });
                    return (
                        o.observe(e),
                            () => {
                                window.cancelAnimationFrame(r), o.unobserve(e);
                            }
                    );
                }
            }, [e, n]);
        }
        const Che = N.forwardRef((e, t) => {
                const {style: n, ...r} = e,
                    o = Rr(),
                    [i, a] = N.useState(0),
                    [s, l] = N.useState(0),
                    c = !!(i && s);
                return (
                    Yc(o.scrollbarX, () => {
                        var u;
                        const d =
                            ((u = o.scrollbarX) == null
                                ? void 0
                                : u.offsetHeight) || 0;
                        o.onCornerHeightChange(d), l(d);
                    }),
                        Yc(o.scrollbarY, () => {
                            var u;
                            const d =
                                ((u = o.scrollbarY) == null ? void 0 : u.offsetWidth) ||
                                0;
                            o.onCornerWidthChange(d), a(d);
                        }),
                        c
                            ? N.createElement("div", {
                                ...r,
                                ref: t,
                                style: {...n, width: i, height: s},
                            })
                            : null
                );
            }),
            Ehe = N.forwardRef((e, t) => {
                const n = Rr(),
                    r = !!(n.scrollbarX && n.scrollbarY);
                return n.type !== "scroll" && r
                    ? N.createElement(Che, {...e, ref: t})
                    : null;
            }),
            Phe = {scrollHideDelay: 1e3, type: "hover"},
            oM = y.forwardRef((e, t) => {
                const n = $t("ScrollAreaRoot", Phe, e),
                    {type: r, scrollHideDelay: o, scrollbars: i, ...a} = n,
                    [s, l] = y.useState(null),
                    [c, d] = y.useState(null),
                    [u, h] = y.useState(null),
                    [p, m] = y.useState(null),
                    [f, g] = y.useState(null),
                    [b, x] = y.useState(0),
                    [S, _] = y.useState(0),
                    [k, C] = y.useState(!1),
                    [P, I] = y.useState(!1),
                    $ = co(t, (T) => l(T));
                return N.createElement(
                    khe,
                    {
                        value: {
                            type: r,
                            scrollHideDelay: o,
                            scrollArea: s,
                            viewport: c,
                            onViewportChange: d,
                            content: u,
                            onContentChange: h,
                            scrollbarX: p,
                            onScrollbarXChange: m,
                            scrollbarXEnabled: k,
                            onScrollbarXEnabledChange: C,
                            scrollbarY: f,
                            onScrollbarYChange: g,
                            scrollbarYEnabled: P,
                            onScrollbarYEnabledChange: I,
                            onCornerWidthChange: x,
                            onCornerHeightChange: _,
                        },
                    },
                    N.createElement(Uo, {
                        ...a,
                        ref: $,
                        __vars: {
                            "--sa-corner-width": i !== "xy" ? "0px" : `${b}px`,
                            "--sa-corner-height": i !== "xy" ? "0px" : `${S}px`,
                        },
                    })
                );
            });
        oM.displayName = "@mantine/core/ScrollAreaRoot";
        function iM(e, t) {
            const n = e / t;
            return Number.isNaN(n) ? 0 : n;
        }
        function Ov(e) {
            const t = iM(e.viewport, e.content),
                n = e.scrollbar.paddingStart + e.scrollbar.paddingEnd,
                r = (e.scrollbar.size - n) * t;
            return Math.max(r, 18);
        }
        function aM(e, t) {
            return (n) => {
                if (e[0] === e[1] || t[0] === t[1]) return t[0];
                const r = (t[1] - t[0]) / (e[1] - e[0]);
                return t[0] + r * (n - e[0]);
            };
        }
        function Ihe(e, [t, n]) {
            return Math.min(n, Math.max(t, e));
        }
        function sM(e, t, n = "ltr") {
            const r = Ov(t),
                o = t.scrollbar.paddingStart + t.scrollbar.paddingEnd,
                i = t.scrollbar.size - o,
                a = t.content - t.viewport,
                s = i - r,
                l = n === "ltr" ? [0, a] : [a * -1, 0],
                c = Ihe(e, l);
            return aM([0, a], [0, s])(c);
        }
        function The(e, t, n, r = "ltr") {
            const o = Ov(n),
                i = o / 2,
                a = t || i,
                s = o - a,
                l = n.scrollbar.paddingStart + a,
                c = n.scrollbar.size - n.scrollbar.paddingEnd - s,
                d = n.content - n.viewport,
                u = r === "ltr" ? [0, d] : [d * -1, 0];
            return aM([l, c], u)(e);
        }
        function lM(e, t) {
            return e > 0 && e < t;
        }
        function Dv(e) {
            return e ? parseInt(e, 10) : 0;
        }
        function Ds(e, t, {checkForDefaultPrevented: n = !0} = {}) {
            return (r) => {
                e == null || e(r),
                (n === !1 || !r.defaultPrevented) && (t == null || t(r));
            };
        }
        const [$he, cM] = $h("ScrollAreaScrollbar was not found in tree"),
            dM = y.forwardRef((e, t) => {
                const {
                        sizes: n,
                        hasThumb: r,
                        onThumbChange: o,
                        onThumbPointerUp: i,
                        onThumbPointerDown: a,
                        onThumbPositionChange: s,
                        onDragScroll: l,
                        onWheelScroll: c,
                        onResize: d,
                        ...u
                    } = e,
                    h = Rr(),
                    [p, m] = N.useState(null),
                    f = co(t, (I) => m(I)),
                    g = N.useRef(null),
                    b = N.useRef(""),
                    {viewport: x} = h,
                    S = n.content - n.viewport,
                    _ = Rs(c),
                    k = Rs(s),
                    C = Tv(d, 10),
                    P = (I) => {
                        if (g.current) {
                            const $ = I.clientX - g.current.left,
                                T = I.clientY - g.current.top;
                            l({x: $, y: T});
                        }
                    };
                return (
                    y.useEffect(() => {
                        const I = ($) => {
                            const T = $.target;
                            (p == null ? void 0 : p.contains(T)) && _($, S);
                        };
                        return (
                            document.addEventListener("wheel", I, {passive: !1}),
                                () =>
                                    document.removeEventListener("wheel", I, {
                                        passive: !1,
                                    })
                        );
                    }, [x, p, S, _]),
                        y.useEffect(k, [n, k]),
                        Yc(p, C),
                        Yc(h.content, C),
                        N.createElement(
                            $he,
                            {
                                value: {
                                    scrollbar: p,
                                    hasThumb: r,
                                    onThumbChange: Rs(o),
                                    onThumbPointerUp: Rs(i),
                                    onThumbPositionChange: k,
                                    onThumbPointerDown: Rs(a),
                                },
                            },
                            N.createElement("div", {
                                ...u,
                                ref: f,
                                style: {position: "absolute", ...u.style},
                                onPointerDown: Ds(e.onPointerDown, (I) => {
                                    I.button === 0 &&
                                    (I.target.setPointerCapture(I.pointerId),
                                        (g.current = p.getBoundingClientRect()),
                                        (b.current =
                                            document.body.style.webkitUserSelect),
                                        (document.body.style.webkitUserSelect = "none"),
                                        P(I));
                                }),
                                onPointerMove: Ds(e.onPointerMove, P),
                                onPointerUp: Ds(e.onPointerUp, (I) => {
                                    const $ = I.target;
                                    $.hasPointerCapture(I.pointerId) &&
                                    $.releasePointerCapture(I.pointerId),
                                        (document.body.style.webkitUserSelect =
                                            b.current),
                                        (g.current = null);
                                }),
                            })
                        )
                );
            }),
            Ahe = y.forwardRef((e, t) => {
                const {sizes: n, onSizesChange: r, style: o, ...i} = e,
                    a = Rr(),
                    [s, l] = y.useState(),
                    c = y.useRef(null),
                    d = co(t, c, a.onScrollbarXChange);
                return (
                    y.useEffect(() => {
                        c.current && l(getComputedStyle(c.current));
                    }, [c]),
                        N.createElement(dM, {
                            "data-orientation": "horizontal",
                            ...i,
                            ref: d,
                            sizes: n,
                            style: {...o, "--sa-thumb-width": `${Ov(n)}px`},
                            onThumbPointerDown: (u) => e.onThumbPointerDown(u.x),
                            onDragScroll: (u) => e.onDragScroll(u.x),
                            onWheelScroll: (u, h) => {
                                if (a.viewport) {
                                    const p = a.viewport.scrollLeft + u.deltaX;
                                    e.onWheelScroll(p), lM(p, h) && u.preventDefault();
                                }
                            },
                            onResize: () => {
                                c.current &&
                                a.viewport &&
                                s &&
                                r({
                                    content: a.viewport.scrollWidth,
                                    viewport: a.viewport.offsetWidth,
                                    scrollbar: {
                                        size: c.current.clientWidth,
                                        paddingStart: Dv(s.paddingLeft),
                                        paddingEnd: Dv(s.paddingRight),
                                    },
                                });
                            },
                        })
                );
            }),
            Mhe = y.forwardRef((e, t) => {
                const {sizes: n, onSizesChange: r, style: o, ...i} = e,
                    a = Rr(),
                    [s, l] = N.useState(),
                    c = y.useRef(null),
                    d = co(t, c, a.onScrollbarYChange);
                return (
                    y.useEffect(() => {
                        c.current && l(getComputedStyle(c.current));
                    }, [c]),
                        N.createElement(dM, {
                            ...i,
                            "data-orientation": "vertical",
                            ref: d,
                            sizes: n,
                            style: {"--sa-thumb-height": `${Ov(n)}px`, ...o},
                            onThumbPointerDown: (u) => e.onThumbPointerDown(u.y),
                            onDragScroll: (u) => e.onDragScroll(u.y),
                            onWheelScroll: (u, h) => {
                                if (a.viewport) {
                                    const p = a.viewport.scrollTop + u.deltaY;
                                    e.onWheelScroll(p), lM(p, h) && u.preventDefault();
                                }
                            },
                            onResize: () => {
                                c.current &&
                                a.viewport &&
                                s &&
                                r({
                                    content: a.viewport.scrollHeight,
                                    viewport: a.viewport.offsetHeight,
                                    scrollbar: {
                                        size: c.current.clientHeight,
                                        paddingStart: Dv(s.paddingTop),
                                        paddingEnd: Dv(s.paddingBottom),
                                    },
                                });
                            },
                        })
                );
            }),
            A2 = y.forwardRef((e, t) => {
                const {orientation: n = "vertical", ...r} = e,
                    {dir: o} = Rv(),
                    i = Rr(),
                    a = y.useRef(null),
                    s = y.useRef(0),
                    [l, c] = y.useState({
                        content: 0,
                        viewport: 0,
                        scrollbar: {size: 0, paddingStart: 0, paddingEnd: 0},
                    }),
                    d = iM(l.viewport, l.content),
                    u = {
                        ...r,
                        sizes: l,
                        onSizesChange: c,
                        hasThumb: d > 0 && d < 1,
                        onThumbChange: (p) => {
                            a.current = p;
                        },
                        onThumbPointerUp: () => {
                            s.current = 0;
                        },
                        onThumbPointerDown: (p) => {
                            s.current = p;
                        },
                    },
                    h = (p, m) => The(p, s.current, l, m);
                return n === "horizontal"
                    ? N.createElement(Ahe, {
                        ...u,
                        ref: t,
                        onThumbPositionChange: () => {
                            if (i.viewport && a.current) {
                                const p = i.viewport.scrollLeft,
                                    m = sM(p, l, o);
                                a.current.style.transform = `translate3d(${m}px, 0, 0)`;
                            }
                        },
                        onWheelScroll: (p) => {
                            i.viewport && (i.viewport.scrollLeft = p);
                        },
                        onDragScroll: (p) => {
                            i.viewport && (i.viewport.scrollLeft = h(p, o));
                        },
                    })
                    : n === "vertical"
                        ? N.createElement(Mhe, {
                            ...u,
                            ref: t,
                            onThumbPositionChange: () => {
                                if (i.viewport && a.current) {
                                    const p = i.viewport.scrollTop,
                                        m = sM(p, l);
                                    a.current.style.transform = `translate3d(0, ${m}px, 0)`;
                                }
                            },
                            onWheelScroll: (p) => {
                                i.viewport && (i.viewport.scrollTop = p);
                            },
                            onDragScroll: (p) => {
                                i.viewport && (i.viewport.scrollTop = h(p));
                            },
                        })
                        : null;
            }),
            uM = y.forwardRef((e, t) => {
                const n = Rr(),
                    {forceMount: r, ...o} = e,
                    [i, a] = y.useState(!1),
                    s = e.orientation === "horizontal",
                    l = Tv(() => {
                        if (n.viewport) {
                            const c =
                                    n.viewport.offsetWidth < n.viewport.scrollWidth,
                                d =
                                    n.viewport.offsetHeight <
                                    n.viewport.scrollHeight;
                            a(s ? c : d);
                        }
                    }, 10);
                return (
                    Yc(n.viewport, l),
                        Yc(n.content, l),
                        r || i
                            ? N.createElement(A2, {
                                "data-state": i ? "visible" : "hidden",
                                ...o,
                                ref: t,
                            })
                            : null
                );
            }),
            zhe = y.forwardRef((e, t) => {
                const {forceMount: n, ...r} = e,
                    o = Rr(),
                    [i, a] = y.useState(!1);
                return (
                    y.useEffect(() => {
                        const {scrollArea: s} = o;
                        let l = 0;
                        if (s) {
                            const c = () => {
                                    window.clearTimeout(l), a(!0);
                                },
                                d = () => {
                                    l = window.setTimeout(
                                        () => a(!1),
                                        o.scrollHideDelay
                                    );
                                };
                            return (
                                s.addEventListener("pointerenter", c),
                                    s.addEventListener("pointerleave", d),
                                    () => {
                                        window.clearTimeout(l),
                                            s.removeEventListener("pointerenter", c),
                                            s.removeEventListener("pointerleave", d);
                                    }
                            );
                        }
                    }, [o.scrollArea, o.scrollHideDelay]),
                        n || i
                            ? N.createElement(uM, {
                                "data-state": i ? "visible" : "hidden",
                                ...r,
                                ref: t,
                            })
                            : null
                );
            }),
            Rhe = y.forwardRef((e, t) => {
                const {forceMount: n, ...r} = e,
                    o = Rr(),
                    i = e.orientation === "horizontal",
                    [a, s] = y.useState("hidden"),
                    l = Tv(() => s("idle"), 100);
                return (
                    y.useEffect(() => {
                        if (a === "idle") {
                            const c = window.setTimeout(
                                () => s("hidden"),
                                o.scrollHideDelay
                            );
                            return () => window.clearTimeout(c);
                        }
                    }, [a, o.scrollHideDelay]),
                        y.useEffect(() => {
                            const {viewport: c} = o,
                                d = i ? "scrollLeft" : "scrollTop";
                            if (c) {
                                let u = c[d];
                                const h = () => {
                                    const p = c[d];
                                    u !== p && (s("scrolling"), l()), (u = p);
                                };
                                return (
                                    c.addEventListener("scroll", h),
                                        () => c.removeEventListener("scroll", h)
                                );
                            }
                        }, [o.viewport, i, l]),
                        n || a !== "hidden"
                            ? N.createElement(A2, {
                                "data-state": a === "hidden" ? "hidden" : "visible",
                                ...r,
                                ref: t,
                                onPointerEnter: Ds(e.onPointerEnter, () =>
                                    s("interacting")
                                ),
                                onPointerLeave: Ds(e.onPointerLeave, () => s("idle")),
                            })
                            : null
                );
            }),
            hM = N.forwardRef((e, t) => {
                const {forceMount: n, ...r} = e,
                    o = Rr(),
                    {onScrollbarXEnabledChange: i, onScrollbarYEnabledChange: a} =
                        o,
                    s = e.orientation === "horizontal";
                return (
                    N.useEffect(
                        () => (
                            s ? i(!0) : a(!0),
                                () => {
                                    s ? i(!1) : a(!1);
                                }
                        ),
                        [s, i, a]
                    ),
                        o.type === "hover"
                            ? N.createElement(zhe, {...r, ref: t, forceMount: n})
                            : o.type === "scroll"
                                ? N.createElement(Rhe, {...r, ref: t, forceMount: n})
                                : o.type === "auto"
                                    ? N.createElement(uM, {...r, ref: t, forceMount: n})
                                    : o.type === "always"
                                        ? N.createElement(A2, {...r, ref: t})
                                        : null
                );
            });
        function Ohe(e, t = () => {}) {
            let n = {left: e.scrollLeft, top: e.scrollTop},
                r = 0;
            return (
                (function o() {
                    const i = {left: e.scrollLeft, top: e.scrollTop},
                        a = n.left !== i.left,
                        s = n.top !== i.top;
                    (a || s) && t(), (n = i), (r = window.requestAnimationFrame(o));
                })(),
                    () => window.cancelAnimationFrame(r)
            );
        }
        const Dhe = y.forwardRef((e, t) => {
                const {style: n, ...r} = e,
                    o = Rr(),
                    i = cM(),
                    {onThumbPositionChange: a} = i,
                    s = co(t, (d) => i.onThumbChange(d)),
                    l = y.useRef(),
                    c = Tv(() => {
                        l.current && (l.current(), (l.current = void 0));
                    }, 100);
                return (
                    y.useEffect(() => {
                        const {viewport: d} = o;
                        if (d) {
                            const u = () => {
                                if ((c(), !l.current)) {
                                    const h = Ohe(d, a);
                                    (l.current = h), a();
                                }
                            };
                            return (
                                a(),
                                    d.addEventListener("scroll", u),
                                    () => d.removeEventListener("scroll", u)
                            );
                        }
                    }, [o.viewport, c, a]),
                        N.createElement("div", {
                            "data-state": i.hasThumb ? "visible" : "hidden",
                            ...r,
                            ref: s,
                            style: {
                                width: "var(--sa-thumb-width)",
                                height: "var(--sa-thumb-height)",
                                ...n,
                            },
                            onPointerDownCapture: Ds(e.onPointerDownCapture, (d) => {
                                const h = d.target.getBoundingClientRect(),
                                    p = d.clientX - h.left,
                                    m = d.clientY - h.top;
                                i.onThumbPointerDown({x: p, y: m});
                            }),
                            onPointerUp: Ds(e.onPointerUp, i.onThumbPointerUp),
                        })
                );
            }),
            pM = N.forwardRef((e, t) => {
                const {forceMount: n, ...r} = e,
                    o = cM();
                return n || o.hasThumb
                    ? N.createElement(Dhe, {ref: t, ...r})
                    : null;
            }),
            fM = y.forwardRef(({children: e, style: t, ...n}, r) => {
                const o = Rr(),
                    i = co(r, o.onViewportChange);
                return N.createElement(
                    Uo,
                    {
                        ...n,
                        ref: i,
                        style: {
                            overflowX: o.scrollbarXEnabled ? "scroll" : "hidden",
                            overflowY: o.scrollbarYEnabled ? "scroll" : "hidden",
                            ...t,
                        },
                    },
                    N.createElement(
                        "div",
                        {
                            style: {minWidth: "100%", display: "table"},
                            ref: o.onContentChange,
                        },
                        e
                    )
                );
            });
        fM.displayName = "@mantine/core/ScrollAreaViewport";
        var M2 = {
            root: "m-d57069b5",
            viewport: "m-c0783ff9",
            viewportInner: "m-f8f631dd",
            scrollbar: "m-c44ba933",
            thumb: "m-d8b5e363",
            corner: "m-21657268",
        };
        const mM = {scrollHideDelay: 1e3, type: "hover", scrollbars: "xy"},
            Lhe = (e, {scrollbarSize: t}) => ({
                root: {"--scrollarea-scrollbar-size": q(t)},
            }),
            Rh = Aa((e, t) => {
                const n = $t("ScrollArea", mM, e),
                    {
                        classNames: r,
                        className: o,
                        style: i,
                        styles: a,
                        unstyled: s,
                        scrollbarSize: l,
                        vars: c,
                        type: d,
                        scrollHideDelay: u,
                        viewportProps: h,
                        viewportRef: p,
                        onScrollPositionChange: m,
                        children: f,
                        offsetScrollbars: g,
                        scrollbars: b,
                        ...x
                    } = n,
                    [S, _] = y.useState(!1),
                    k = Wc({
                        name: "ScrollArea",
                        props: n,
                        classes: M2,
                        className: o,
                        style: i,
                        classNames: r,
                        styles: a,
                        unstyled: s,
                        vars: c,
                        varsResolver: Lhe,
                    });
                return N.createElement(
                    oM,
                    {
                        type: d === "never" ? "always" : d,
                        scrollHideDelay: u,
                        ref: t,
                        scrollbars: b,
                        ...k("root"),
                        ...x,
                    },
                    N.createElement(
                        fM,
                        {
                            ...h,
                            ...k("viewport", {style: h == null ? void 0 : h.style}),
                            ref: p,
                            "data-offset-scrollbars": g === !0 ? "xy" : g || void 0,
                            "data-scrollbars": b || void 0,
                            onScroll:
                                typeof m == "function"
                                    ? ({currentTarget: C}) =>
                                        m({x: C.scrollLeft, y: C.scrollTop})
                                    : void 0,
                        },
                        f
                    ),
                    (b === "xy" || b === "x") &&
                    N.createElement(
                        hM,
                        {
                            ...k("scrollbar"),
                            orientation: "horizontal",
                            "data-hidden": d === "never" || void 0,
                            forceMount: !0,
                            onMouseEnter: () => _(!0),
                            onMouseLeave: () => _(!1),
                        },
                        N.createElement(pM, {...k("thumb")})
                    ),
                    (b === "xy" || b === "y") &&
                    N.createElement(
                        hM,
                        {
                            ...k("scrollbar"),
                            orientation: "vertical",
                            "data-hidden": d === "never" || void 0,
                            forceMount: !0,
                            onMouseEnter: () => _(!0),
                            onMouseLeave: () => _(!1),
                        },
                        N.createElement(pM, {...k("thumb")})
                    ),
                    N.createElement(Ehe, {
                        ...k("corner"),
                        "data-hovered": S || void 0,
                        "data-hidden": d === "never" || void 0,
                    })
                );
            });
        Rh.displayName = "@mantine/core/ScrollArea";
        const z2 = Aa((e, t) => {
            const {
                children: n,
                classNames: r,
                styles: o,
                scrollbarSize: i,
                scrollHideDelay: a,
                type: s,
                dir: l,
                offsetScrollbars: c,
                viewportRef: d,
                onScrollPositionChange: u,
                unstyled: h,
                variant: p,
                viewportProps: m,
                scrollbars: f,
                style: g,
                vars: b,
                ...x
            } = $t("ScrollAreaAutosize", mM, e);
            return N.createElement(
                Uo,
                {...x, ref: t, style: [{display: "flex", overflow: "auto"}, g]},
                N.createElement(
                    Uo,
                    {style: {display: "flex", flexDirection: "column", flex: 1}},
                    N.createElement(
                        Rh,
                        {
                            classNames: r,
                            styles: o,
                            scrollHideDelay: a,
                            scrollbarSize: i,
                            type: s,
                            dir: l,
                            offsetScrollbars: c,
                            viewportRef: d,
                            onScrollPositionChange: u,
                            unstyled: h,
                            variant: p,
                            viewportProps: m,
                            vars: b,
                            scrollbars: f,
                        },
                        n
                    )
                )
            );
        });
        (Rh.classes = M2),
            (z2.displayName = "@mantine/core/ScrollAreaAutosize"),
            (z2.classes = M2),
            (Rh.Autosize = z2);
        var gM = {root: "m-87cf2631"};
        const jhe = {__staticSelector: "UnstyledButton"},
            R2 = $2((e, t) => {
                const n = $t("UnstyledButton", jhe, e),
                    {
                        className: r,
                        component: o = "button",
                        __staticSelector: i,
                        unstyled: a,
                        classNames: s,
                        styles: l,
                        style: c,
                        ...d
                    } = n,
                    u = Wc({
                        name: i,
                        props: n,
                        classes: gM,
                        className: r,
                        style: c,
                        classNames: s,
                        styles: l,
                        unstyled: a,
                    });
                return N.createElement(Uo, {
                    ...u("root", {focusable: !0}),
                    component: o,
                    ref: t,
                    type: o === "button" ? "button" : void 0,
                    ...d,
                });
            });
        (R2.classes = gM), (R2.displayName = "@mantine/core/UnstyledButton");
        var vM = typeof document < "u" ? y.useLayoutEffect : y.useEffect;
        let O2 = !1,
            Nhe = 0;
        const bM = () => "floating-ui-" + Nhe++;
        function Fhe() {
            const [e, t] = y.useState(() => (O2 ? bM() : void 0));
            return (
                vM(() => {
                    e == null && t(bM());
                }, []),
                    y.useEffect(() => {
                        O2 || (O2 = !0);
                    }, []),
                    e
            );
        }
        const Bhe = t0.useId || Fhe;
        function Uhe() {
            const e = new Map();
            return {
                emit(t, n) {
                    var r;
                    (r = e.get(t)) == null || r.forEach((o) => o(n));
                },
                on(t, n) {
                    e.set(t, [...(e.get(t) || []), n]);
                },
                off(t, n) {
                    var r;
                    e.set(
                        t,
                        ((r = e.get(t)) == null
                            ? void 0
                            : r.filter((o) => o !== n)) || []
                    );
                },
            };
        }
        const Hhe = y.createContext(null),
            Vhe = () => y.useContext(Hhe);
        function Khe(e) {
            return (e == null ? void 0 : e.ownerDocument) || document;
        }
        function Whe(e) {
            return Khe(e).defaultView || window;
        }
        function Lv(e) {
            return e ? e instanceof Element || e instanceof Whe(e).Element : !1;
        }
        const Yhe = t0.useInsertionEffect || ((e) => e());
        function Ghe(e) {
            const t = y.useRef(() => {});
            return (
                Yhe(() => {
                    t.current = e;
                }),
                    y.useCallback(function () {
                        for (
                            var n = arguments.length, r = new Array(n), o = 0;
                            o < n;
                            o++
                        )
                            r[o] = arguments[o];
                        return t.current == null ? void 0 : t.current(...r);
                    }, [])
            );
        }
        function Xhe(e) {
            var t;
            e === void 0 && (e = {});
            const {open: n = !1, onOpenChange: r, nodeId: o} = e,
                [i, a] = y.useState(null),
                s = ((t = e.elements) == null ? void 0 : t.reference) || i,
                l = o9(e),
                c = Vhe(),
                d = Ghe((_, k) => {
                    _ && (h.current.openEvent = k), r == null || r(_, k);
                }),
                u = y.useRef(null),
                h = y.useRef({}),
                p = y.useState(() => Uhe())[0],
                m = Bhe(),
                f = y.useCallback(
                    (_) => {
                        const k = Lv(_)
                            ? {
                                getBoundingClientRect: () =>
                                    _.getBoundingClientRect(),
                                contextElement: _,
                            }
                            : _;
                        l.refs.setReference(k);
                    },
                    [l.refs]
                ),
                g = y.useCallback(
                    (_) => {
                        (Lv(_) || _ === null) && ((u.current = _), a(_)),
                        (Lv(l.refs.reference.current) ||
                            l.refs.reference.current === null ||
                            (_ !== null && !Lv(_))) &&
                        l.refs.setReference(_);
                    },
                    [l.refs]
                ),
                b = y.useMemo(
                    () => ({
                        ...l.refs,
                        setReference: g,
                        setPositionReference: f,
                        domReference: u,
                    }),
                    [l.refs, g, f]
                ),
                x = y.useMemo(
                    () => ({...l.elements, domReference: s}),
                    [l.elements, s]
                ),
                S = y.useMemo(
                    () => ({
                        ...l,
                        refs: b,
                        elements: x,
                        dataRef: h,
                        nodeId: o,
                        floatingId: m,
                        events: p,
                        open: n,
                        onOpenChange: d,
                    }),
                    [l, o, m, p, n, d, b, x]
                );
            return (
                vM(() => {
                    const _ =
                        c == null
                            ? void 0
                            : c.nodesRef.current.find((k) => k.id === o);
                    _ && (_.context = S);
                }),
                    y.useMemo(
                        () => ({...l, context: S, refs: b, elements: x}),
                        [l, b, x, S]
                    )
            );
        }
        function qhe(e, t) {
            if (e === "rtl" && (t.includes("right") || t.includes("left"))) {
                const [n, r] = t.split("-"),
                    o = n === "right" ? "left" : "right";
                return r === void 0 ? o : `${o}-${r}`;
            }
            return t;
        }
        function yM(e, t, n, r) {
            return e === "center" || r === "center"
                ? {top: t}
                : e === "end"
                    ? {bottom: n}
                    : e === "start"
                        ? {top: n}
                        : {};
        }
        function wM(e, t, n, r, o) {
            return e === "center" || r === "center"
                ? {left: t}
                : e === "end"
                    ? {[o === "ltr" ? "right" : "left"]: n}
                    : e === "start"
                        ? {[o === "ltr" ? "left" : "right"]: n}
                        : {};
        }
        const Zhe = {
            bottom: "borderTopLeftRadius",
            left: "borderTopRightRadius",
            right: "borderBottomLeftRadius",
            top: "borderBottomRightRadius",
        };
        function Qhe({
                         position: e,
                         arrowSize: t,
                         arrowOffset: n,
                         arrowRadius: r,
                         arrowPosition: o,
                         arrowX: i,
                         arrowY: a,
                         dir: s,
                     }) {
            const [l, c = "center"] = e.split("-"),
                d = {
                    width: q(t),
                    height: q(t),
                    transform: "rotate(45deg)",
                    position: "absolute",
                    [Zhe[l]]: q(r),
                },
                u = q(-t / 2);
            return l === "left"
                ? {
                    ...d,
                    ...yM(c, a, n, o),
                    right: u,
                    borderLeftColor: "transparent",
                    borderBottomColor: "transparent",
                }
                : l === "right"
                    ? {
                        ...d,
                        ...yM(c, a, n, o),
                        left: u,
                        borderRightColor: "transparent",
                        borderTopColor: "transparent",
                    }
                    : l === "top"
                        ? {
                            ...d,
                            ...wM(c, i, n, o, s),
                            bottom: u,
                            borderTopColor: "transparent",
                            borderLeftColor: "transparent",
                        }
                        : l === "bottom"
                            ? {
                                ...d,
                                ...wM(c, i, n, o, s),
                                top: u,
                                borderBottomColor: "transparent",
                                borderRightColor: "transparent",
                            }
                            : {};
        }
        const xM = y.forwardRef(
            (
                {
                    position: e,
                    arrowSize: t,
                    arrowOffset: n,
                    arrowRadius: r,
                    arrowPosition: o,
                    visible: i,
                    arrowX: a,
                    arrowY: s,
                    style: l,
                    ...c
                },
                d
            ) => {
                const {dir: u} = Rv();
                return i
                    ? N.createElement("div", {
                        ...c,
                        ref: d,
                        style: {
                            ...l,
                            ...Qhe({
                                position: e,
                                arrowSize: t,
                                arrowOffset: n,
                                arrowRadius: r,
                                arrowPosition: o,
                                dir: u,
                                arrowX: a,
                                arrowY: s,
                            }),
                        },
                    })
                    : null;
            }
        );
        xM.displayName = "@mantine/core/FloatingArrow";
        const [Jhe, SM] = $h("Popover component was not found in the tree");
        function _M({children: e, active: t = !0, refProp: n = "ref"}) {
            const r = due(t),
                o = co(r, e == null ? void 0 : e.ref);
            return Ev(e) ? y.cloneElement(e, {[n]: o}) : e;
        }
        _M.displayName = "@mantine/core/FocusTrap";
        function epe(e) {
            const t = document.createElement("div");
            return (
                t.setAttribute("data-portal", "true"),
                typeof e.className == "string" &&
                t.classList.add(...e.className.split(" ").filter(Boolean)),
                typeof e.style == "object" && Object.assign(t.style, e.style),
                typeof e.id == "string" && t.setAttribute("id", e.id),
                    t
            );
        }
        const tpe = {},
            kM = y.forwardRef((e, t) => {
                const {children: n, target: r, ...o} = $t("Portal", tpe, e),
                    [i, a] = y.useState(!1),
                    s = y.useRef(null);
                return (
                    Ah(
                        () => (
                            a(!0),
                                (s.current = r
                                    ? typeof r == "string"
                                        ? document.querySelector(r)
                                        : r
                                    : epe(o)),
                                OA(t, s.current),
                            !r && s.current && document.body.appendChild(s.current),
                                () => {
                                    !r &&
                                    s.current &&
                                    document.body.removeChild(s.current);
                                }
                        ),
                        [r]
                    ),
                        !i || !s.current
                            ? null
                            : Za.createPortal(
                                N.createElement(N.Fragment, null, n),
                                s.current
                            )
                );
            });
        kM.displayName = "@mantine/core/Portal";
        function CM({withinPortal: e = !0, children: t, ...n}) {
            return e
                ? N.createElement(kM, {...n}, t)
                : N.createElement(N.Fragment, null, t);
        }
        CM.displayName = "@mantine/core/OptionalPortal";
        const Oh = (e) => ({
                in: {opacity: 1, transform: "scale(1)"},
                out: {
                    opacity: 0,
                    transform: `scale(.9) translateY(${q(
                        e === "bottom" ? 10 : -10
                    )})`,
                },
                transitionProperty: "transform, opacity",
            }),
            jv = {
                fade: {
                    in: {opacity: 1},
                    out: {opacity: 0},
                    transitionProperty: "opacity",
                },
                scale: {
                    in: {opacity: 1, transform: "scale(1)"},
                    out: {opacity: 0, transform: "scale(0)"},
                    common: {transformOrigin: "top"},
                    transitionProperty: "transform, opacity",
                },
                "scale-y": {
                    in: {opacity: 1, transform: "scaleY(1)"},
                    out: {opacity: 0, transform: "scaleY(0)"},
                    common: {transformOrigin: "top"},
                    transitionProperty: "transform, opacity",
                },
                "scale-x": {
                    in: {opacity: 1, transform: "scaleX(1)"},
                    out: {opacity: 0, transform: "scaleX(0)"},
                    common: {transformOrigin: "left"},
                    transitionProperty: "transform, opacity",
                },
                "skew-up": {
                    in: {opacity: 1, transform: "translateY(0) skew(0deg, 0deg)"},
                    out: {
                        opacity: 0,
                        transform: `translateY(${q(-20)}) skew(-10deg, -5deg)`,
                    },
                    common: {transformOrigin: "top"},
                    transitionProperty: "transform, opacity",
                },
                "skew-down": {
                    in: {opacity: 1, transform: "translateY(0) skew(0deg, 0deg)"},
                    out: {
                        opacity: 0,
                        transform: `translateY(${q(20)}) skew(-10deg, -5deg)`,
                    },
                    common: {transformOrigin: "bottom"},
                    transitionProperty: "transform, opacity",
                },
                "rotate-left": {
                    in: {opacity: 1, transform: "translateY(0) rotate(0deg)"},
                    out: {
                        opacity: 0,
                        transform: `translateY(${q(20)}) rotate(-5deg)`,
                    },
                    common: {transformOrigin: "bottom"},
                    transitionProperty: "transform, opacity",
                },
                "rotate-right": {
                    in: {opacity: 1, transform: "translateY(0) rotate(0deg)"},
                    out: {
                        opacity: 0,
                        transform: `translateY(${q(20)}) rotate(5deg)`,
                    },
                    common: {transformOrigin: "top"},
                    transitionProperty: "transform, opacity",
                },
                "slide-down": {
                    in: {opacity: 1, transform: "translateY(0)"},
                    out: {opacity: 0, transform: "translateY(-100%)"},
                    common: {transformOrigin: "top"},
                    transitionProperty: "transform, opacity",
                },
                "slide-up": {
                    in: {opacity: 1, transform: "translateY(0)"},
                    out: {opacity: 0, transform: "translateY(100%)"},
                    common: {transformOrigin: "bottom"},
                    transitionProperty: "transform, opacity",
                },
                "slide-left": {
                    in: {opacity: 1, transform: "translateX(0)"},
                    out: {opacity: 0, transform: "translateX(100%)"},
                    common: {transformOrigin: "left"},
                    transitionProperty: "transform, opacity",
                },
                "slide-right": {
                    in: {opacity: 1, transform: "translateX(0)"},
                    out: {opacity: 0, transform: "translateX(-100%)"},
                    common: {transformOrigin: "right"},
                    transitionProperty: "transform, opacity",
                },
                pop: {...Oh("bottom"), common: {transformOrigin: "center center"}},
                "pop-bottom-left": {
                    ...Oh("bottom"),
                    common: {transformOrigin: "bottom left"},
                },
                "pop-bottom-right": {
                    ...Oh("bottom"),
                    common: {transformOrigin: "bottom right"},
                },
                "pop-top-left": {
                    ...Oh("top"),
                    common: {transformOrigin: "top left"},
                },
                "pop-top-right": {
                    ...Oh("top"),
                    common: {transformOrigin: "top right"},
                },
            },
            EM = {
                entering: "in",
                entered: "in",
                exiting: "out",
                exited: "out",
                "pre-exiting": "out",
                "pre-entering": "out",
            };
        function npe({transition: e, state: t, duration: n, timingFunction: r}) {
            const o = {transitionDuration: `${n}ms`, transitionTimingFunction: r};
            return typeof e == "string"
                ? e in jv
                    ? {
                        transitionProperty: jv[e].transitionProperty,
                        ...o,
                        ...jv[e].common,
                        ...jv[e][EM[t]],
                    }
                    : {}
                : {
                    transitionProperty: e.transitionProperty,
                    ...o,
                    ...e.common,
                    ...e[EM[t]],
                };
        }
        function rpe({
                         duration: e,
                         exitDuration: t,
                         timingFunction: n,
                         mounted: r,
                         onEnter: o,
                         onExit: i,
                         onEntered: a,
                         onExited: s,
                     }) {
            const l = $a(),
                c = mue(),
                d = l.respectReducedMotion ? c : !1,
                [u, h] = y.useState(d ? 0 : e),
                [p, m] = y.useState(r ? "entered" : "exited"),
                f = y.useRef(-1),
                g = (b) => {
                    const x = b ? o : i,
                        S = b ? a : s;
                    m(b ? "pre-entering" : "pre-exiting"),
                        window.clearTimeout(f.current);
                    const _ = d ? 0 : b ? e : t;
                    if ((h(_), _ === 0))
                        typeof x == "function" && x(),
                        typeof S == "function" && S(),
                            m(b ? "entered" : "exited");
                    else {
                        const k = window.setTimeout(() => {
                            typeof x == "function" && x(),
                                m(b ? "entering" : "exiting");
                        }, 10);
                        f.current = window.setTimeout(() => {
                            window.clearTimeout(k),
                            typeof S == "function" && S(),
                                m(b ? "entered" : "exited");
                        }, _);
                    }
                };
            return (
                Os(() => {
                    g(r);
                }, [r]),
                    y.useEffect(() => () => window.clearTimeout(f.current), []),
                    {
                        transitionDuration: u,
                        transitionStatus: p,
                        transitionTimingFunction: n || "ease",
                    }
            );
        }
        function PM({
                        keepMounted: e,
                        transition: t = "fade",
                        duration: n = 250,
                        exitDuration: r = n,
                        mounted: o,
                        children: i,
                        timingFunction: a = "ease",
                        onExit: s,
                        onEntered: l,
                        onEnter: c,
                        onExited: d,
                    }) {
            const {
                transitionDuration: u,
                transitionStatus: h,
                transitionTimingFunction: p,
            } = rpe({
                mounted: o,
                exitDuration: r,
                duration: n,
                timingFunction: a,
                onExit: s,
                onEntered: l,
                onEnter: c,
                onExited: d,
            });
            return u === 0
                ? o
                    ? N.createElement(N.Fragment, null, i({}))
                    : e
                        ? i({display: "none"})
                        : null
                : h === "exited"
                    ? e
                        ? i({display: "none"})
                        : null
                    : N.createElement(
                        N.Fragment,
                        null,
                        i(
                            npe({
                                transition: t,
                                duration: u,
                                state: h,
                                timingFunction: p,
                            })
                        )
                    );
        }
        PM.displayName = "@mantine/core/Transition";
        var IM = {dropdown: "m-38a85659", arrow: "m-a31dc6c1"};
        const ope = {},
            D2 = Aa((e, t) => {
                var g, b, x, S;
                const n = $t("PopoverDropdown", ope, e),
                    {
                        className: r,
                        style: o,
                        vars: i,
                        children: a,
                        onKeyDownCapture: s,
                        variant: l,
                        classNames: c,
                        styles: d,
                        ...u
                    } = n,
                    h = SM(),
                    p = rue({opened: h.opened, shouldReturnFocus: h.returnFocus}),
                    m = h.withRoles
                        ? {
                            "aria-labelledby": h.getTargetId(),
                            id: h.getDropdownId(),
                            role: "dialog",
                            tabIndex: -1,
                        }
                        : {},
                    f = co(t, h.floating);
                return h.disabled
                    ? null
                    : N.createElement(
                        CM,
                        {...h.portalProps, withinPortal: h.withinPortal},
                        N.createElement(
                            PM,
                            {
                                mounted: h.opened,
                                ...h.transitionProps,
                                transition:
                                    ((g = h.transitionProps) == null
                                        ? void 0
                                        : g.transition) || "fade",
                                duration:
                                    ((b = h.transitionProps) == null
                                        ? void 0
                                        : b.duration) ?? 150,
                                keepMounted: h.keepMounted,
                                exitDuration:
                                    typeof ((x = h.transitionProps) == null
                                        ? void 0
                                        : x.exitDuration) == "number"
                                        ? h.transitionProps.exitDuration
                                        : (S = h.transitionProps) == null
                                            ? void 0
                                            : S.duration,
                            },
                            (_) =>
                                N.createElement(
                                    _M,
                                    {active: h.trapFocus},
                                    N.createElement(
                                        Uo,
                                        {
                                            ...m,
                                            ...u,
                                            variant: l,
                                            ref: f,
                                            onKeyDownCapture: Gde(h.onClose, {
                                                active: h.closeOnEscape,
                                                onTrigger: p,
                                                onKeyDown: s,
                                            }),
                                            "data-position": h.placement,
                                            ...h.getStyles("dropdown", {
                                                className: r,
                                                props: n,
                                                classNames: c,
                                                styles: d,
                                                style: [
                                                    {
                                                        ..._,
                                                        zIndex: h.zIndex,
                                                        top: h.y ?? 0,
                                                        left: h.x ?? 0,
                                                        width:
                                                            h.width === "target"
                                                                ? void 0
                                                                : q(h.width),
                                                    },
                                                    o,
                                                ],
                                            }),
                                        },
                                        a,
                                        N.createElement(xM, {
                                            ref: h.arrowRef,
                                            arrowX: h.arrowX,
                                            arrowY: h.arrowY,
                                            visible: h.withArrow,
                                            position: h.placement,
                                            arrowSize: h.arrowSize,
                                            arrowRadius: h.arrowRadius,
                                            arrowOffset: h.arrowOffset,
                                            arrowPosition: h.arrowPosition,
                                            ...h.getStyles("arrow", {
                                                props: n,
                                                classNames: c,
                                                styles: d,
                                            }),
                                        })
                                    )
                                )
                        )
                    );
            });
        (D2.classes = IM), (D2.displayName = "@mantine/core/PopoverDropdown");
        const ipe = {refProp: "ref", popupType: "dialog"},
            TM = Aa((e, t) => {
                const {
                    children: n,
                    refProp: r,
                    popupType: o,
                    ...i
                } = $t("PopoverTarget", ipe, e);
                if (!Ev(n))
                    throw new Error(
                        "Popover.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported"
                    );
                const a = i,
                    s = SM(),
                    l = co(s.reference, n.ref, t),
                    c = s.withRoles
                        ? {
                            "aria-haspopup": o,
                            "aria-expanded": s.opened,
                            "aria-controls": s.getDropdownId(),
                            id: s.getTargetId(),
                        }
                        : {};
                return y.cloneElement(n, {
                    ...a,
                    ...c,
                    ...s.targetProps,
                    className: Mh(
                        s.targetProps.className,
                        a.className,
                        n.props.className
                    ),
                    [r]: l,
                    ...(s.controlled ? null : {onClick: s.onToggle}),
                });
            });
        TM.displayName = "@mantine/core/PopoverTarget";
        function ape({
                         opened: e,
                         floating: t,
                         position: n,
                         positionDependencies: r,
                     }) {
            const [o, i] = y.useState(0);
            y.useEffect(() => {
                if (t.refs.reference.current && t.refs.floating.current)
                    return G7(
                        t.refs.reference.current,
                        t.refs.floating.current,
                        t.update
                    );
            }, [t.refs.reference.current, t.refs.floating.current, e, o, n]),
                Os(() => {
                    t.update();
                }, r),
                Os(() => {
                    i((a) => a + 1);
                }, [e]);
        }
        function spe(e, t) {
            var r, o, i, a;
            const n = [D7(e.offset)];
            return (
                (r = e.middlewares) != null &&
                r.shift &&
                n.push(X7({limiter: J7()})),
                (o = e.middlewares) != null && o.flip && n.push(q7()),
                (i = e.middlewares) != null && i.inline && n.push(Ere()),
                    n.push(e9({element: e.arrowRef, padding: e.arrowOffset})),
                (((a = e.middlewares) != null && a.size) || e.width === "target") &&
                n.push(
                    Z7({
                        apply({
                                  rects: s,
                                  availableWidth: l,
                                  availableHeight: c,
                              }) {
                            var h, p;
                            const u =
                                ((h = t().refs.floating.current) == null
                                    ? void 0
                                    : h.style) ?? {};
                            (p = e.middlewares) != null &&
                            p.size &&
                            Object.assign(u, {
                                maxWidth: `${l}px`,
                                maxHeight: `${c}px`,
                            }),
                            e.width === "target" &&
                            Object.assign(u, {
                                width: `${s.reference.width}px`,
                            });
                        },
                    })
                ),
                    n
            );
        }
        function lpe(e) {
            const [t, n] = DA({
                    value: e.opened,
                    defaultValue: e.defaultOpened,
                    finalValue: !1,
                    onChange: e.onChange,
                }),
                r = () => {
                    var a;
                    t && ((a = e.onClose) == null || a.call(e), n(!1));
                },
                o = () => {
                    var a, s;
                    t
                        ? ((a = e.onClose) == null || a.call(e), n(!1))
                        : ((s = e.onOpen) == null || s.call(e), n(!0));
                },
                i = Xhe({placement: e.position, middleware: spe(e, () => i)});
            return (
                ape({
                    opened: e.opened,
                    position: e.position,
                    positionDependencies: e.positionDependencies || [],
                    floating: i,
                }),
                    Os(() => {
                        var a;
                        (a = e.onPositionChange) == null || a.call(e, i.placement);
                    }, [i.placement]),
                    Os(() => {
                        var a, s;
                        e.opened
                            ? (s = e.onOpen) == null || s.call(e)
                            : (a = e.onClose) == null || a.call(e);
                    }, [e.opened]),
                    {
                        floating: i,
                        controlled: typeof e.opened == "boolean",
                        opened: t,
                        onClose: r,
                        onToggle: o,
                    }
            );
        }
        const cpe = {
                position: "bottom",
                offset: 8,
                positionDependencies: [],
                transitionProps: {transition: "fade", duration: 150},
                middlewares: {flip: !0, shift: !0, inline: !1},
                arrowSize: 7,
                arrowOffset: 5,
                arrowRadius: 0,
                arrowPosition: "side",
                closeOnClickOutside: !0,
                withinPortal: !0,
                closeOnEscape: !0,
                trapFocus: !1,
                withRoles: !0,
                returnFocus: !1,
                clickOutsideEvents: ["mousedown", "touchstart"],
                zIndex: Wde("popover"),
                __staticSelector: "Popover",
                width: "max-content",
            },
            dpe = (e, {radius: t, shadow: n}) => ({
                dropdown: {
                    "--popover-radius": t === void 0 ? void 0 : TA(t),
                    "--popover-shadow": qde(n),
                },
            });
        function Ho(e) {
            var wt, Or, Ma, Xc, qc, $i;
            const t = $t("Popover", cpe, e),
                {
                    children: n,
                    position: r,
                    offset: o,
                    onPositionChange: i,
                    positionDependencies: a,
                    opened: s,
                    transitionProps: l,
                    width: c,
                    middlewares: d,
                    withArrow: u,
                    arrowSize: h,
                    arrowOffset: p,
                    arrowRadius: m,
                    arrowPosition: f,
                    unstyled: g,
                    classNames: b,
                    styles: x,
                    closeOnClickOutside: S,
                    withinPortal: _,
                    portalProps: k,
                    closeOnEscape: C,
                    clickOutsideEvents: P,
                    trapFocus: I,
                    onClose: $,
                    onOpen: T,
                    onChange: R,
                    zIndex: D,
                    radius: j,
                    shadow: z,
                    id: O,
                    defaultOpened: F,
                    __staticSelector: K,
                    withRoles: V,
                    disabled: B,
                    returnFocus: H,
                    variant: G,
                    keepMounted: ee,
                    vars: fe,
                    ...Se
                } = t,
                te = Wc({
                    name: K,
                    props: t,
                    classes: IM,
                    classNames: b,
                    styles: x,
                    unstyled: g,
                    rootSelector: "dropdown",
                    vars: fe,
                    varsResolver: dpe,
                }),
                ye = y.useRef(null),
                [Ae, We] = y.useState(null),
                [_e, tt] = y.useState(null),
                {dir: Me} = Rv(),
                Jt = pue(O),
                je = lpe({
                    middlewares: d,
                    width: c,
                    position: qhe(Me, r),
                    offset: typeof o == "number" ? o + (u ? h / 2 : 0) : o,
                    arrowRef: ye,
                    arrowOffset: p,
                    onPositionChange: i,
                    positionDependencies: a,
                    opened: s,
                    defaultOpened: F,
                    onChange: R,
                    onOpen: T,
                    onClose: $,
                });
            Jde(() => S && je.onClose(), P, [Ae, _e]);
            const _n = y.useCallback(
                    (Ns) => {
                        We(Ns), je.floating.refs.setReference(Ns);
                    },
                    [je.floating.refs.setReference]
                ),
                it = y.useCallback(
                    (Ns) => {
                        tt(Ns), je.floating.refs.setFloating(Ns);
                    },
                    [je.floating.refs.setFloating]
                );
            return N.createElement(
                Jhe,
                {
                    value: {
                        returnFocus: H,
                        disabled: B,
                        controlled: je.controlled,
                        reference: _n,
                        floating: it,
                        x: je.floating.x,
                        y: je.floating.y,
                        arrowX:
                            (Ma =
                                (Or =
                                    (wt = je.floating) == null
                                        ? void 0
                                        : wt.middlewareData) == null
                                    ? void 0
                                    : Or.arrow) == null
                                ? void 0
                                : Ma.x,
                        arrowY:
                            ($i =
                                (qc =
                                    (Xc = je.floating) == null
                                        ? void 0
                                        : Xc.middlewareData) == null
                                    ? void 0
                                    : qc.arrow) == null
                                ? void 0
                                : $i.y,
                        opened: je.opened,
                        arrowRef: ye,
                        transitionProps: l,
                        width: c,
                        withArrow: u,
                        arrowSize: h,
                        arrowOffset: p,
                        arrowRadius: m,
                        arrowPosition: f,
                        placement: je.floating.placement,
                        trapFocus: I,
                        withinPortal: _,
                        portalProps: k,
                        zIndex: D,
                        radius: j,
                        shadow: z,
                        closeOnEscape: C,
                        onClose: je.onClose,
                        onToggle: je.onToggle,
                        getTargetId: () => `${Jt}-target`,
                        getDropdownId: () => `${Jt}-dropdown`,
                        withRoles: V,
                        targetProps: Se,
                        __staticSelector: K,
                        classNames: b,
                        styles: x,
                        unstyled: g,
                        variant: G,
                        keepMounted: ee,
                        getStyles: te,
                    },
                },
                n
            );
        }
        (Ho.Target = TM),
            (Ho.Dropdown = D2),
            (Ho.displayName = "@mantine/core/Popover"),
            (Ho.extend = (e) => e);
        const $M = y.createContext(null),
            upe = $M.Provider;
        function hpe() {
            return {withinGroup: !!y.useContext($M)};
        }
        var Nv = {
            group: "m-11def92b",
            root: "m-f85678b6",
            image: "m-11f8ac07",
            placeholder: "m-104cd71f",
        };
        const ppe = {},
            fpe = (e, {spacing: t}) => ({group: {"--ag-spacing": Xde(t)}}),
            L2 = Aa((e, t) => {
                const n = $t("AvatarGroup", ppe, e),
                    {
                        classNames: r,
                        className: o,
                        style: i,
                        styles: a,
                        unstyled: s,
                        vars: l,
                        spacing: c,
                        ...d
                    } = n,
                    u = Wc({
                        name: "AvatarGroup",
                        classes: Nv,
                        props: n,
                        className: o,
                        style: i,
                        classNames: r,
                        styles: a,
                        unstyled: s,
                        vars: l,
                        varsResolver: fpe,
                        rootSelector: "group",
                    });
                return N.createElement(
                    upe,
                    {value: !0},
                    N.createElement(Uo, {ref: t, ...u("group"), ...d})
                );
            });
        (L2.classes = Nv), (L2.displayName = "@mantine/core/AvatarGroup");
        function mpe(e) {
            return N.createElement(
                "svg",
                {
                    ...e,
                    "data-avatar-placeholder-icon": !0,
                    viewBox: "0 0 15 15",
                    fill: "none",
                    xmlns: "http://www.w3.org/2000/svg",
                },
                N.createElement("path", {
                    d: "M0.877014 7.49988C0.877014 3.84219 3.84216 0.877045 7.49985 0.877045C11.1575 0.877045 14.1227 3.84219 14.1227 7.49988C14.1227 11.1575 11.1575 14.1227 7.49985 14.1227C3.84216 14.1227 0.877014 11.1575 0.877014 7.49988ZM7.49985 1.82704C4.36683 1.82704 1.82701 4.36686 1.82701 7.49988C1.82701 8.97196 2.38774 10.3131 3.30727 11.3213C4.19074 9.94119 5.73818 9.02499 7.50023 9.02499C9.26206 9.02499 10.8093 9.94097 11.6929 11.3208C12.6121 10.3127 13.1727 8.97172 13.1727 7.49988C13.1727 4.36686 10.6328 1.82704 7.49985 1.82704ZM10.9818 11.9787C10.2839 10.7795 8.9857 9.97499 7.50023 9.97499C6.01458 9.97499 4.71624 10.7797 4.01845 11.9791C4.97952 12.7272 6.18765 13.1727 7.49985 13.1727C8.81227 13.1727 10.0206 12.727 10.9818 11.9787ZM5.14999 6.50487C5.14999 5.207 6.20212 4.15487 7.49999 4.15487C8.79786 4.15487 9.84999 5.207 9.84999 6.50487C9.84999 7.80274 8.79786 8.85487 7.49999 8.85487C6.20212 8.85487 5.14999 7.80274 5.14999 6.50487ZM7.49999 5.10487C6.72679 5.10487 6.09999 5.73167 6.09999 6.50487C6.09999 7.27807 6.72679 7.90487 7.49999 7.90487C8.27319 7.90487 8.89999 7.27807 8.89999 6.50487C8.89999 5.73167 8.27319 5.10487 7.49999 5.10487Z",
                    fill: "currentColor",
                    fillRule: "evenodd",
                    clipRule: "evenodd",
                })
            );
        }
        const gpe = {},
            vpe = (
                e,
                {
                    size: t,
                    radius: n,
                    variant: r,
                    gradient: o,
                    color: i,
                    autoContrast: a,
                }
            ) => {
                const s = e.variantColorResolver({
                    color: i || "gray",
                    theme: e,
                    gradient: o,
                    variant: r || "light",
                    autoContrast: a,
                });
                return {
                    root: {
                        "--avatar-size": Iv(t, "avatar-size"),
                        "--avatar-radius": n === void 0 ? void 0 : TA(n),
                        "--avatar-bg": i || r ? s.background : void 0,
                        "--avatar-color": i || r ? s.color : void 0,
                        "--avatar-bd": i || r ? s.border : void 0,
                    },
                };
            },
            Ls = $2((e, t) => {
                const n = $t("Avatar", gpe, e),
                    {
                        classNames: r,
                        className: o,
                        style: i,
                        styles: a,
                        unstyled: s,
                        vars: l,
                        src: c,
                        alt: d,
                        radius: u,
                        color: h,
                        gradient: p,
                        imageProps: m,
                        children: f,
                        autoContrast: g,
                        mod: b,
                        ...x
                    } = n,
                    S = hpe(),
                    [_, k] = y.useState(!c),
                    C = Wc({
                        name: "Avatar",
                        props: n,
                        classes: Nv,
                        className: o,
                        style: i,
                        classNames: r,
                        styles: a,
                        unstyled: s,
                        vars: l,
                        varsResolver: vpe,
                    });
                return (
                    y.useEffect(() => k(!c), [c]),
                        N.createElement(
                            Uo,
                            {
                                ...C("root"),
                                mod: [{"within-group": S.withinGroup}, b],
                                ref: t,
                                ...x,
                            },
                            _
                                ? N.createElement(
                                    "span",
                                    {...C("placeholder"), title: d},
                                    f || N.createElement(mpe, null)
                                )
                                : N.createElement("img", {
                                    ...m,
                                    ...C("image"),
                                    src: c,
                                    alt: d,
                                    onError: (P) => {
                                        var I;
                                        k(!0),
                                        (I = m == null ? void 0 : m.onError) ==
                                        null || I.call(m, P);
                                    },
                                })
                        )
                );
            });
        (Ls.classes = Nv),
            (Ls.displayName = "@mantine/core/Avatar"),
            (Ls.Group = L2);
        function AM({open: e, close: t, openDelay: n, closeDelay: r}) {
            const o = y.useRef(-1),
                i = y.useRef(-1),
                a = () => {
                    window.clearTimeout(o.current), window.clearTimeout(i.current);
                },
                s = () => {
                    a(),
                        n === 0 || n === void 0
                            ? e()
                            : (o.current = window.setTimeout(e, n));
                },
                l = () => {
                    a(),
                        r === 0 || r === void 0
                            ? t()
                            : (i.current = window.setTimeout(t, r));
                };
            return y.useEffect(() => a, []), {openDropdown: s, closeDropdown: l};
        }
        const [bpe, MM] = $h("HoverCard component was not found in the tree"),
            ype = {};
        function zM(e) {
            const {
                    children: t,
                    onMouseEnter: n,
                    onMouseLeave: r,
                    ...o
                } = $t("HoverCardDropdown", ype, e),
                i = MM(),
                a = mr(n, i.openDropdown),
                s = mr(r, i.closeDropdown);
            return N.createElement(
                Ho.Dropdown,
                {onMouseEnter: a, onMouseLeave: s, ...o},
                t
            );
        }
        zM.displayName = "@mantine/core/HoverCardDropdown";
        const wpe = {refProp: "ref"},
            RM = y.forwardRef((e, t) => {
                const {
                    children: n,
                    refProp: r,
                    eventPropsWrapperName: o,
                    ...i
                } = $t("HoverCardTarget", wpe, e);
                if (!Ev(n))
                    throw new Error(
                        "HoverCard.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported"
                    );
                const a = MM(),
                    s = mr(n.props.onMouseEnter, a.openDropdown),
                    l = mr(n.props.onMouseLeave, a.closeDropdown),
                    c = {onMouseEnter: s, onMouseLeave: l};
                return N.createElement(
                    Ho.Target,
                    {refProp: r, ref: t, ...i},
                    y.cloneElement(n, o ? {[o]: c} : c)
                );
            });
        RM.displayName = "@mantine/core/HoverCardTarget";
        const xpe = {openDelay: 0, closeDelay: 150, initiallyOpened: !1};
        function js(e) {
            const {
                    children: t,
                    onOpen: n,
                    onClose: r,
                    openDelay: o,
                    closeDelay: i,
                    initiallyOpened: a,
                    ...s
                } = $t("HoverCard", xpe, e),
                [l, {open: c, close: d}] = gue(a, {onClose: r, onOpen: n}),
                {openDropdown: u, closeDropdown: h} = AM({
                    open: c,
                    close: d,
                    openDelay: o,
                    closeDelay: i,
                });
            return N.createElement(
                bpe,
                {value: {openDropdown: u, closeDropdown: h}},
                N.createElement(
                    Ho,
                    {...s, opened: l, __staticSelector: "HoverCard"},
                    t
                )
            );
        }
        (js.displayName = "@mantine/core/HoverCard"),
            (js.Target = RM),
            (js.Dropdown = zM),
            (js.extend = (e) => e);
        const [Spe, Dh] = $h("Menu component was not found in the tree");
        var Gc = {
            dropdown: "m-dc9b7c9f",
            label: "m-9bfac126",
            divider: "m-efdf90cb",
            item: "m-99ac2aa1",
            itemLabel: "m-5476e0d3",
            itemSection: "m-8b75e504",
        };
        const _pe = {},
            j2 = Aa((e, t) => {
                const {
                        classNames: n,
                        className: r,
                        style: o,
                        styles: i,
                        vars: a,
                        ...s
                    } = $t("MenuDivider", _pe, e),
                    l = Dh();
                return N.createElement(Uo, {
                    ref: t,
                    ...l.getStyles("divider", {
                        className: r,
                        style: o,
                        styles: i,
                        classNames: n,
                    }),
                    ...s,
                });
            });
        (j2.classes = Gc), (j2.displayName = "@mantine/core/MenuDivider");
        const kpe = {},
            N2 = Aa((e, t) => {
                const {
                        classNames: n,
                        className: r,
                        style: o,
                        styles: i,
                        vars: a,
                        onMouseEnter: s,
                        onMouseLeave: l,
                        children: c,
                        ...d
                    } = $t("MenuDropdown", kpe, e),
                    u = y.useRef(null),
                    h = Dh(),
                    p = (g) => {
                        var b, x;
                        (g.key === "ArrowUp" || g.key === "ArrowDown") &&
                        (g.preventDefault(),
                        (x =
                            (b = u.current) == null
                                ? void 0
                                : b.querySelectorAll(
                                    "[data-menu-item]:not(:disabled)"
                                )[0]) == null || x.focus());
                    },
                    m = mr(
                        s,
                        () =>
                            (h.trigger === "hover" ||
                                h.trigger === "click-hover") &&
                            h.openDropdown()
                    ),
                    f = mr(
                        l,
                        () =>
                            (h.trigger === "hover" ||
                                h.trigger === "click-hover") &&
                            h.closeDropdown()
                    );
                return N.createElement(
                    Ho.Dropdown,
                    {
                        ...d,
                        onMouseEnter: m,
                        onMouseLeave: f,
                        role: "menu",
                        "aria-orientation": "vertical",
                        ref: co(t, u),
                        ...h.getStyles("dropdown", {
                            className: r,
                            style: o,
                            styles: i,
                            classNames: n,
                            withStaticClass: !1,
                        }),
                        tabIndex: -1,
                        "data-menu-dropdown": !0,
                        onKeyDown: p,
                    },
                    N.createElement("div", {tabIndex: -1, "data-autofocus": !0}),
                    c
                );
            });
        (N2.classes = Gc), (N2.displayName = "@mantine/core/MenuDropdown");
        const Cpe = {},
            F2 = $2((e, t) => {
                const {
                        classNames: n,
                        className: r,
                        style: o,
                        styles: i,
                        vars: a,
                        color: s,
                        closeMenuOnClick: l,
                        leftSection: c,
                        rightSection: d,
                        children: u,
                        disabled: h,
                        ...p
                    } = $t("MenuItem", Cpe, e),
                    m = Dh(),
                    f = $a(),
                    {dir: g} = Rv(),
                    b = y.useRef(),
                    x = m.getItemIndex(b.current),
                    S = p,
                    _ = mr(S.onMouseLeave, () => m.setHovered(-1)),
                    k = mr(S.onMouseEnter, () =>
                        m.setHovered(m.getItemIndex(b.current))
                    ),
                    C = mr(S.onClick, () => {
                        typeof l == "boolean"
                            ? l && m.closeDropdownImmediately()
                            : m.closeOnItemClick && m.closeDropdownImmediately();
                    }),
                    P = mr(S.onFocus, () =>
                        m.setHovered(m.getItemIndex(b.current))
                    ),
                    I = s
                        ? f.variantColorResolver({
                            color: s,
                            theme: f,
                            variant: "light",
                        })
                        : void 0,
                    $ = s ? Hc({color: s, theme: f}) : null;
                return N.createElement(
                    R2,
                    {
                        ...p,
                        unstyled: m.unstyled,
                        tabIndex: m.menuItemTabIndex,
                        onFocus: P,
                        ...m.getStyles("item", {
                            className: r,
                            style: o,
                            styles: i,
                            classNames: n,
                        }),
                        ref: co(b, t),
                        role: "menuitem",
                        disabled: h,
                        "data-menu-item": !0,
                        "data-disabled": h || void 0,
                        "data-hovered": m.hovered === x ? !0 : void 0,
                        onMouseEnter: k,
                        onMouseLeave: _,
                        onClick: C,
                        onKeyDown: Vde({
                            siblingSelector: "[data-menu-item]",
                            parentSelector: "[data-menu-dropdown]",
                            activateOnFocus: !1,
                            loop: m.loop,
                            dir: g,
                            orientation: "vertical",
                            onKeyDown: S.onKeydown,
                        }),
                        __vars: {
                            "--menu-item-color":
                                $ != null &&
                                $.isThemeColor &&
                                ($ == null ? void 0 : $.shade) === void 0
                                    ? `var(--mantine-color-${$.color}-6)`
                                    : I == null
                                        ? void 0
                                        : I.color,
                            "--menu-item-hover": I == null ? void 0 : I.hover,
                        },
                    },
                    c &&
                    N.createElement(
                        "div",
                        {
                            ...m.getStyles("itemSection", {
                                styles: i,
                                classNames: n,
                            }),
                            "data-position": "left",
                        },
                        c
                    ),
                    u &&
                    N.createElement(
                        "div",
                        {
                            ...m.getStyles("itemLabel", {
                                styles: i,
                                classNames: n,
                            }),
                        },
                        u
                    ),
                    d &&
                    N.createElement(
                        "div",
                        {
                            ...m.getStyles("itemSection", {
                                styles: i,
                                classNames: n,
                            }),
                            "data-position": "right",
                        },
                        d
                    )
                );
            });
        (F2.classes = Gc), (F2.displayName = "@mantine/core/MenuItem");
        const Epe = {},
            B2 = Aa((e, t) => {
                const {
                        classNames: n,
                        className: r,
                        style: o,
                        styles: i,
                        vars: a,
                        ...s
                    } = $t("MenuLabel", Epe, e),
                    l = Dh();
                return N.createElement(Uo, {
                    ref: t,
                    ...l.getStyles("label", {
                        className: r,
                        style: o,
                        styles: i,
                        classNames: n,
                    }),
                    ...s,
                });
            });
        (B2.classes = Gc), (B2.displayName = "@mantine/core/MenuLabel");
        const Ppe = {refProp: "ref"},
            OM = y.forwardRef((e, t) => {
                const {children: n, refProp: r, ...o} = $t("MenuTarget", Ppe, e);
                if (!Ev(n))
                    throw new Error(
                        "Menu.Target component children should be an element or a component that accepts ref. Fragments, strings, numbers and other primitive values are not supported"
                    );
                const i = Dh(),
                    a = mr(n.props.onClick, () => {
                        i.trigger === "click"
                            ? i.toggleDropdown()
                            : i.trigger === "click-hover" &&
                            (i.setOpenedViaClick(!0),
                            i.opened || i.openDropdown());
                    }),
                    s = mr(
                        n.props.onMouseEnter,
                        () =>
                            (i.trigger === "hover" ||
                                i.trigger === "click-hover") &&
                            i.openDropdown()
                    ),
                    l = mr(n.props.onMouseLeave, () => {
                        (i.trigger === "hover" ||
                            (i.trigger === "click-hover" && !i.openedViaClick)) &&
                        i.closeDropdown();
                    });
                return N.createElement(
                    Ho.Target,
                    {refProp: r, popupType: "menu", ref: t, ...o},
                    y.cloneElement(n, {
                        onClick: a,
                        onMouseEnter: s,
                        onMouseLeave: l,
                        "data-expanded": i.opened ? !0 : void 0,
                    })
                );
            });
        OM.displayName = "@mantine/core/MenuTarget";
        const Ipe = {
            trapFocus: !0,
            closeOnItemClick: !0,
            clickOutsideEvents: ["mousedown", "touchstart", "keydown"],
            loop: !0,
            trigger: "click",
            openDelay: 0,
            closeDelay: 100,
            menuItemTabIndex: -1,
        };
        function Sn(e) {
            const t = $t("Menu", Ipe, e),
                {
                    children: n,
                    onOpen: r,
                    onClose: o,
                    opened: i,
                    defaultOpened: a,
                    trapFocus: s,
                    onChange: l,
                    closeOnItemClick: c,
                    loop: d,
                    closeOnEscape: u,
                    trigger: h,
                    openDelay: p,
                    closeDelay: m,
                    classNames: f,
                    styles: g,
                    unstyled: b,
                    variant: x,
                    vars: S,
                    menuItemTabIndex: _,
                    keepMounted: k,
                    ...C
                } = t,
                P = Wc({
                    name: "Menu",
                    classes: Gc,
                    props: t,
                    classNames: f,
                    styles: g,
                    unstyled: b,
                }),
                [I, {setHovered: $, resetHovered: T}] = Qde(),
                [R, D] = DA({
                    value: i,
                    defaultValue: a,
                    finalValue: !1,
                    onChange: l,
                }),
                [j, z] = y.useState(!1),
                O = () => {
                    D(!1), z(!1), R && (o == null || o());
                },
                F = () => {
                    D(!0), !R && (r == null || r());
                },
                K = () => {
                    R ? O() : F();
                },
                {openDropdown: V, closeDropdown: B} = AM({
                    open: F,
                    close: O,
                    closeDelay: m,
                    openDelay: p,
                }),
                H = (fe) => Zde("[data-menu-item]", "[data-menu-dropdown]", fe),
                {resolvedClassNames: G, resolvedStyles: ee} = Uue({
                    classNames: f,
                    styles: g,
                    props: t,
                });
            return (
                Os(() => {
                    T();
                }, [R]),
                    N.createElement(
                        Spe,
                        {
                            value: {
                                getStyles: P,
                                opened: R,
                                toggleDropdown: K,
                                getItemIndex: H,
                                hovered: I,
                                setHovered: $,
                                openedViaClick: j,
                                setOpenedViaClick: z,
                                closeOnItemClick: c,
                                closeDropdown: h === "click" ? O : B,
                                openDropdown: h === "click" ? F : V,
                                closeDropdownImmediately: O,
                                loop: d,
                                trigger: h,
                                unstyled: b,
                                menuItemTabIndex: _,
                            },
                        },
                        N.createElement(
                            Ho,
                            {
                                ...C,
                                opened: R,
                                onChange: K,
                                defaultOpened: a,
                                trapFocus: k ? !1 : s,
                                closeOnEscape: u,
                                __staticSelector: "Menu",
                                classNames: G,
                                styles: ee,
                                unstyled: b,
                                variant: x,
                                keepMounted: k,
                            },
                            n
                        )
                    )
            );
        }
        (Sn.extend = (e) => e),
            (Sn.classes = Gc),
            (Sn.displayName = "@mantine/core/Menu"),
            (Sn.Item = F2),
            (Sn.Label = B2),
            (Sn.Dropdown = N2),
            (Sn.Target = OM),
            (Sn.Divider = j2);
        var DM = {
                color: void 0,
                size: void 0,
                className: void 0,
                style: void 0,
                attr: void 0,
            },
            LM = N.createContext && N.createContext(DM),
            Tpe = ["attr", "size", "title"];
        function $pe(e, t) {
            if (e == null) return {};
            var n = Ape(e, t),
                r,
                o;
            if (Object.getOwnPropertySymbols) {
                var i = Object.getOwnPropertySymbols(e);
                for (o = 0; o < i.length; o++)
                    (r = i[o]),
                    !(t.indexOf(r) >= 0) &&
                    Object.prototype.propertyIsEnumerable.call(e, r) &&
                    (n[r] = e[r]);
            }
            return n;
        }
        function Ape(e, t) {
            if (e == null) return {};
            var n = {},
                r = Object.keys(e),
                o,
                i;
            for (i = 0; i < r.length; i++)
                (o = r[i]), !(t.indexOf(o) >= 0) && (n[o] = e[o]);
            return n;
        }
        function Fv() {
            return (
                (Fv = Object.assign
                    ? Object.assign.bind()
                    : function (e) {
                        for (var t = 1; t < arguments.length; t++) {
                            var n = arguments[t];
                            for (var r in n)
                                Object.prototype.hasOwnProperty.call(n, r) &&
                                (e[r] = n[r]);
                        }
                        return e;
                    }),
                    Fv.apply(this, arguments)
            );
        }
        function jM(e, t) {
            var n = Object.keys(e);
            if (Object.getOwnPropertySymbols) {
                var r = Object.getOwnPropertySymbols(e);
                t &&
                (r = r.filter(function (o) {
                    return Object.getOwnPropertyDescriptor(e, o).enumerable;
                })),
                    n.push.apply(n, r);
            }
            return n;
        }
        function Bv(e) {
            for (var t = 1; t < arguments.length; t++) {
                var n = arguments[t] != null ? arguments[t] : {};
                t % 2
                    ? jM(Object(n), !0).forEach(function (r) {
                        Mpe(e, r, n[r]);
                    })
                    : Object.getOwnPropertyDescriptors
                        ? Object.defineProperties(
                            e,
                            Object.getOwnPropertyDescriptors(n)
                        )
                        : jM(Object(n)).forEach(function (r) {
                            Object.defineProperty(
                                e,
                                r,
                                Object.getOwnPropertyDescriptor(n, r)
                            );
                        });
            }
            return e;
        }
        function Mpe(e, t, n) {
            return (
                (t = zpe(t)),
                    t in e
                        ? Object.defineProperty(e, t, {
                            value: n,
                            enumerable: !0,
                            configurable: !0,
                            writable: !0,
                        })
                        : (e[t] = n),
                    e
            );
        }
        function zpe(e) {
            var t = Rpe(e, "string");
            return typeof t == "symbol" ? t : String(t);
        }
        function Rpe(e, t) {
            if (typeof e != "object" || e === null) return e;
            var n = e[Symbol.toPrimitive];
            if (n !== void 0) {
                var r = n.call(e, t || "default");
                if (typeof r != "object") return r;
                throw new TypeError("@@toPrimitive must return a primitive value.");
            }
            return (t === "string" ? String : Number)(e);
        }
        function NM(e) {
            return (
                e &&
                e.map((t, n) =>
                    N.createElement(t.tag, Bv({key: n}, t.attr), NM(t.child))
                )
            );
        }
        function U2(e) {
            return (t) =>
                N.createElement(Ope, Fv({attr: Bv({}, e.attr)}, t), NM(e.child));
        }
        function Ope(e) {
            var t = (n) => {
                var {attr: r, size: o, title: i} = e,
                    a = $pe(e, Tpe),
                    s = o || n.size || "1em",
                    l;
                return (
                    n.className && (l = n.className),
                    e.className && (l = (l ? l + " " : "") + e.className),
                        N.createElement(
                            "svg",
                            Fv(
                                {
                                    stroke: "currentColor",
                                    fill: "currentColor",
                                    strokeWidth: "0",
                                },
                                n.attr,
                                r,
                                a,
                                {
                                    className: l,
                                    style: Bv(
                                        Bv({color: e.color || n.color}, n.style),
                                        e.style
                                    ),
                                    height: s,
                                    width: s,
                                    xmlns: "http://www.w3.org/2000/svg",
                                }
                            ),
                            i && N.createElement("title", null, i),
                            e.children
                        )
                );
            };
            return LM !== void 0
                ? N.createElement(LM.Consumer, null, (n) => t(n))
                : t(DM);
        }
        function Dpe(e) {
            return U2({
                tag: "svg",
                attr: {viewBox: "0 0 640 512"},
                child: [
                    {
                        tag: "path",
                        attr: {
                            d: "M633.8 458.1L362.3 248.3C412.1 230.7 448 183.8 448 128 448 57.3 390.7 0 320 0c-67.1 0-121.5 51.8-126.9 117.4L45.5 3.4C38.5-2 28.5-.8 23 6.2L3.4 31.4c-5.4 7-4.2 17 2.8 22.4l588.4 454.7c7 5.4 17 4.2 22.5-2.8l19.6-25.3c5.4-6.8 4.1-16.9-2.9-22.3zM96 422.4V464c0 26.5 21.5 48 48 48h350.2L207.4 290.3C144.2 301.3 96 356 96 422.4z",
                        },
                        child: [],
                    },
                ],
            })(e);
        }
        function FM(e) {
            return U2({
                tag: "svg",
                attr: {viewBox: "0 0 1024 1024"},
                child: [
                    {
                        tag: "path",
                        attr: {
                            d: "M942.2 486.2C847.4 286.5 704.1 186 512 186c-192.2 0-335.4 100.5-430.2 300.3a60.3 60.3 0 0 0 0 51.5C176.6 737.5 319.9 838 512 838c192.2 0 335.4-100.5 430.2-300.3 7.7-16.2 7.7-35 0-51.5zM512 766c-161.3 0-279.4-81.8-362.7-254C232.6 339.8 350.7 258 512 258c161.3 0 279.4 81.8 362.7 254C791.5 684.2 673.4 766 512 766zm-4-430c-97.2 0-176 78.8-176 176s78.8 176 176 176 176-78.8 176-176-78.8-176-176-176zm0 288c-61.9 0-112-50.1-112-112s50.1-112 112-112 112 50.1 112 112-50.1 112-112 112z",
                        },
                        child: [],
                    },
                ],
            })(e);
        }
        function BM(e) {
            return U2({
                tag: "svg",
                attr: {viewBox: "0 0 256 256", fill: "currentColor"},
                child: [
                    {
                        tag: "path",
                        attr: {
                            d: "M224,32c0,32.81-31.64,67.43-58.64,91.05A84.39,84.39,0,0,0,133,90.64C156.57,63.64,191.19,32,224,32Z",
                            opacity: "0.2",
                        },
                        child: [],
                    },
                    {
                        tag: "path",
                        attr: {
                            d: "M232,32a8,8,0,0,0-8-8c-44.08,0-89.31,49.71-114.43,82.63A60,60,0,0,0,32,164c0,30.88-19.54,44.73-20.47,45.37A8,8,0,0,0,16,224H92a60,60,0,0,0,57.37-77.57C182.3,121.31,232,76.08,232,32ZM92,208H34.63C41.38,198.41,48,183.92,48,164a44,44,0,1,1,44,44Zm32.42-94.45q5.14-6.66,10.09-12.55A76.23,76.23,0,0,1,155,121.49q-5.9,4.94-12.55,10.09A60.54,60.54,0,0,0,124.42,113.55Zm42.7-2.68a92.57,92.57,0,0,0-22-22c31.78-34.53,55.75-45,69.9-47.91C212.17,55.12,201.65,79.09,167.12,110.87Z",
                        },
                        child: [],
                    },
                ],
            })(e);
        }
        const Lpe = ({activeUsers: e, setPermission: t, userID: n}) => {
                const r = (a, s) => {
                        t(a, s);
                    },
                    [o, i] = y.useState(!1);
                return (
                    y.useEffect(() => {
                        e &&
                        (e == null ||
                            e.map((a) => {
                                a.id === n &&
                                a.permissions.admin == !0 &&
                                i(!0);
                            }));
                    }, [e]),
                        v.jsx(v.Fragment, {
                            children: v.jsxs(js, {
                                width: 250,
                                shadow: "lg",
                                withArrow: !0,
                                openDelay: 200,
                                closeDelay: 400,
                                position: "right-start",
                                radius: "lg",
                                arrowPosition: "center",
                                transitionProps: {
                                    duration: 200,
                                    transition: "pop-top-right",
                                },
                                children: [
                                    v.jsx(js.Target, {
                                        children: v.jsx("div", {
                                            className: "users-avatar",
                                            children: v.jsxs(Ls.Group, {
                                                children: [
                                                    e == null
                                                        ? void 0
                                                        : e.slice(0, 3).map((a) =>
                                                            v.jsx(
                                                                Ls,
                                                                {
                                                                    color: a.color,
                                                                    radius: "xl",
                                                                    className:
                                                                        "avatar",
                                                                    children: a.name
                                                                        ? a.name
                                                                            .split(
                                                                                " "
                                                                            )
                                                                            .map(
                                                                                (
                                                                                    s
                                                                                ) =>
                                                                                    s.charAt(
                                                                                        0
                                                                                    )
                                                                            )
                                                                            .join(
                                                                                ""
                                                                            )
                                                                        : "",
                                                                },
                                                                a.id
                                                            )
                                                        ),
                                                    (e == null
                                                        ? void 0
                                                        : e.slice(3, e.length).length) >
                                                    0 &&
                                                    v.jsxs(Ls, {
                                                        children: [
                                                            "+",
                                                            e == null
                                                                ? void 0
                                                                : e.slice(
                                                                    3,
                                                                    e.length
                                                                ).length,
                                                        ],
                                                    }),
                                                ],
                                            }),
                                        }),
                                    }),
                                    v.jsx(js.Dropdown, {
                                        children: v.jsx("div", {
                                            className: "user-list",
                                            children:
                                                e == null
                                                    ? void 0
                                                    : e.map((a) =>
                                                        v.jsx(
                                                            Sn,
                                                            {
                                                                shadow: "md",
                                                                width: 200,
                                                                position:
                                                                    "bottom-end",
                                                                withArrow: !0,
                                                                children: v.jsxs(
                                                                    Rh.Autosize,
                                                                    {
                                                                        mah: 500,
                                                                        children: [
                                                                            v.jsx(
                                                                                Sn.Target,
                                                                                {
                                                                                    children:
                                                                                        v.jsxs(
                                                                                            "div",
                                                                                            {
                                                                                                className:
                                                                                                    "user",
                                                                                                children:
                                                                                                    [
                                                                                                        v.jsxs(
                                                                                                            "div",
                                                                                                            {
                                                                                                                className:
                                                                                                                    "flex gap-2 items-center",
                                                                                                                children:
                                                                                                                    [
                                                                                                                        v.jsx(
                                                                                                                            Ls,
                                                                                                                            {
                                                                                                                                color: a.color,
                                                                                                                                radius: "xl",
                                                                                                                                size: "sm",
                                                                                                                                className:
                                                                                                                                    "avatar",
                                                                                                                                children:
                                                                                                                                    a.name
                                                                                                                                        ? a.name
                                                                                                                                            .split(
                                                                                                                                                " "
                                                                                                                                            )
                                                                                                                                            .map(
                                                                                                                                                (
                                                                                                                                                    s
                                                                                                                                                ) =>
                                                                                                                                                    s.charAt(
                                                                                                                                                        0
                                                                                                                                                    )
                                                                                                                                            )
                                                                                                                                            .join(
                                                                                                                                                ""
                                                                                                                                            )
                                                                                                                                        : "",
                                                                                                                            },
                                                                                                                            a.id
                                                                                                                        ),
                                                                                                                        a.name,
                                                                                                                    ],
                                                                                                            }
                                                                                                        ),
                                                                                                        v.jsx(
                                                                                                            "div",
                                                                                                            {
                                                                                                                className:
                                                                                                                    "flex justify-between",
                                                                                                                children:
                                                                                                                    a
                                                                                                                        .permissions
                                                                                                                        .write
                                                                                                                        ? v.jsx(
                                                                                                                            BM,
                                                                                                                            {
                                                                                                                                size: 20,
                                                                                                                                className:
                                                                                                                                    "permission-icon",
                                                                                                                            }
                                                                                                                        )
                                                                                                                        : v.jsx(
                                                                                                                            FM,
                                                                                                                            {
                                                                                                                                size: 20,
                                                                                                                                className:
                                                                                                                                    "permission-icon",
                                                                                                                            }
                                                                                                                        ),
                                                                                                            }
                                                                                                        ),
                                                                                                    ],
                                                                                            }
                                                                                        ),
                                                                                }
                                                                            ),
                                                                            o &&
                                                                            a.id !==
                                                                            n &&
                                                                            !a
                                                                                .permissions
                                                                                .admin
                                                                                ? v.jsxs(
                                                                                    Sn.Dropdown,
                                                                                    {
                                                                                        children:
                                                                                            [
                                                                                                v.jsx(
                                                                                                    Sn.Label,
                                                                                                    {
                                                                                                        children:
                                                                                                            "Permissions",
                                                                                                    }
                                                                                                ),
                                                                                                v.jsx(
                                                                                                    Sn.Item,
                                                                                                    {
                                                                                                        onClick:
                                                                                                            () => {
                                                                                                                let s =
                                                                                                                    {
                                                                                                                        ...a.permissions,
                                                                                                                    };
                                                                                                                r(
                                                                                                                    a.id,
                                                                                                                    {
                                                                                                                        ...s,
                                                                                                                        write: !a
                                                                                                                            .permissions
                                                                                                                            .write,
                                                                                                                    }
                                                                                                                );
                                                                                                            },
                                                                                                        leftSection:
                                                                                                            a
                                                                                                                .permissions
                                                                                                                .write
                                                                                                                ? v.jsx(
                                                                                                                    FM,
                                                                                                                    {}
                                                                                                                )
                                                                                                                : v.jsx(
                                                                                                                    BM,
                                                                                                                    {}
                                                                                                                ),
                                                                                                        children:
                                                                                                            a
                                                                                                                .permissions
                                                                                                                .write
                                                                                                                ? "Only read"
                                                                                                                : "Allow write",
                                                                                                    }
                                                                                                ),
                                                                                                v.jsx(
                                                                                                    Sn.Divider,
                                                                                                    {}
                                                                                                ),
                                                                                                v.jsx(
                                                                                                    Sn.Label,
                                                                                                    {
                                                                                                        children:
                                                                                                            "Moderation",
                                                                                                    }
                                                                                                ),
                                                                                                v.jsx(
                                                                                                    Sn.Item,
                                                                                                    {
                                                                                                        color: "red",
                                                                                                        leftSection:
                                                                                                            v.jsx(
                                                                                                                Dpe,
                                                                                                                {
                                                                                                                    style: {
                                                                                                                        width: q(
                                                                                                                            14
                                                                                                                        ),
                                                                                                                        height: q(
                                                                                                                            14
                                                                                                                        ),
                                                                                                                    },
                                                                                                                }
                                                                                                            ),
                                                                                                        children:
                                                                                                            "Kick this user",
                                                                                                    }
                                                                                                ),
                                                                                            ],
                                                                                    }
                                                                                )
                                                                                : null,
                                                                        ],
                                                                    }
                                                                ),
                                                            },
                                                            a.id
                                                        )
                                                    ),
                                        }),
                                    }),
                                ],
                            }),
                        })
                );
            },
            jpe =
                ((GM = document.getElementById("roomid")) == null
                    ? void 0
                    : GM.innerHTML) || "wb-room-0";
        (XM = document.getElementById("username")) != null && XM.innerHTML;
        const Npe =
                ((qM = document.getElementById("role")) == null
                    ? void 0
                    : qM.innerHTML) || "user",
            H2 =
                ((ZM = document.getElementById("websocketurl")) == null
                    ? void 0
                    : ZM.innerHTML) || "",
            Fpe =
                ((QM = document.getElementById("websocket_error")) == null
                    ? void 0
                    : QM.innerHTML) || "The websocket server is not available";
        function Bpe() {
            const [e, t] = y.useState([]),
                [n, r] = y.useState();
            if (!H2.startsWith("wss://") && !H2.startsWith("ws://"))
                return (
                    console.error("Invalid websocket URL"),
                        v.jsx("div", {children: Fpe})
                );
            const o = Lde({
                    roomId: jpe,
                    hostUrl: H2,
                    activeUsers: e,
                    setActiveUsers: t,
                    updatedPerm: n,
                    setUpdatedPerm: r,
                    clientRole: Npe,
                }),
                i = (a, s) => {
                    r({userId: a, permissions: s});
                };
            return v.jsxs("div", {
                className: "whiteboard-container",
                children: [
                    v.jsx("div", {
                        className: "tldraw__editor",
                        children: v.jsx(Ose, {
                            autoFocus: !0,
                            store: o,
                            shareZone: v.jsx(Upe, {users: e, setPermission: i}),
                            embeds: [],
                        }),
                    }),
                    v.jsx("div", {className: "right-panel"}),
                ],
            });
        }
        const Upe = ze(({users: e, setPermission: t}) => {
            const n = W();
            return (
                y.useEffect(() => {
                    e &&
                    e.length > 0 &&
                    e.forEach((r) => {
                        r.id === vu().id &&
                        n.updateInstanceState({
                            isReadonly: !r.permissions.write,
                        });
                    });
                }, [e]),
                    n.user,
                    v.jsx("div", {
                        style: {pointerEvents: "all", display: "flex"},
                        children: v.jsx(Lpe, {
                            activeUsers: e,
                            setPermission: t,
                            userID: vu().id,
                        }),
                    })
            );
        });
        n0.createRoot(document.getElementById("root")).render(
            v.jsx(N.StrictMode, {children: v.jsx(XA, {children: v.jsx(Bpe, {})})})
        );
    })();

}, 100);